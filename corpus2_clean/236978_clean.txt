building client library consumes collection openstack api service know time go service added want come clean neat way structuring client library minimize development time future new service avoid duplication far thought two solution num implement userland scratch service us underlying http client every api operation concrete concrete encapsulates logic standard application everything exists concrete advantage straightforward obvious new contributor disadvantage writing slow risk duplicating boilerplate num implement kind service description layer similar lighter written json description document would act similar google discovery api api resource defined using json schema http operation defined parameter uris verb type expected status code etc authentication also defined advantage take less time write avoids duplication form explicit contract useful end user documentation disadvantage quite meta like difficult understand newcomer number popular client library use kind schema pattern trying weigh positive negative leaning towards using schema think save time developing avoid duplication openstack apis seem also moving towards json schema strong reason relying schema bad idea client library userland better approach