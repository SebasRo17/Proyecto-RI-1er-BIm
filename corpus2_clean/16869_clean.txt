recently came across set problem would solved easily within object oriented approach first attempted solve mean found complexity code growing fast individual function used mixture style overall feel organization code de facto procedural looked final code saw would written much faster cleaner java realized oo needed basically needed reuse behavior decrease coupling component know number attempt implementing oo extension mathematica however none imo simple none looked natural look feel mathematica could missed otoh also know mathematica powerful metaprogramming capability make possible implement core oo extension rather easily since oo broad paradigm requirement restrict problem desired oo extension idiomatic programming feel natural experienced mathematica user particular go well immutable mathematica expression least possible problem concerning interoperability mathematica garbage collection related problem etc support instantiation inheritance polymorphism inheritance mean reuse behavior method rather state field reuse much mathematica core construct possible limit thing done little possible compared programming technique trick used mathematica possible least minimally convenient syntax thing like method call implementation simple sense introduce many exterior construct tostring toexpression cycle needless manipulation context creation new symbol strictly necessary etc much worried efficiency since intended purpose extension help larger scale code organization certain class task used million light weight object many previous question similar topic two rather separate topic often mixed together one concern mutable struct like data structure possible implementation mathematica oo proper clarify bit much interested former topic rather interested dynamic aspect behavior reuse way conveniently package code organize larger project much efficient mutable data structure word subject matter object orientation bring table larger mathematica project make mathematica question core oo extension line mathematica code