building web traffic web server receive http request forward two backend server choose best response need parse original requestor clarify proxy several backends request forwarded backends one response returned need handle least num thousand request per second num single server together colleague built several version result node j library go num thousand request per second num go net library num erlang l library num clojure num none even close requirement according e g single query web framework benchmark might roughly equivalent room improvement big question try next technical detail server handle least num single server standard hardware request post message json encoded body num num kb response similar size request need parsed passed along response least one specific json field need parsed request strict timeout num num m depending url backend take longer server forget use remaining backend valid response received time server respond num content testing detail simplicity let u say request coming haproxy server front apache ab load tester appropriate amazon ec2 use multiple core efficiently reference let u say c3 instance backend server reside different machine possibly two separate server needed ideally load tester also another machine important ensure neither load tester backends bottleneck simple load testing one backends directly verifying give much better result result testing server returning constant node j library num go net library num erlang l library num clojure number num day ago asked question like service go answer allowed go num optimization increased number 12k although sure result hold general case instance returning constant response parsing json response really sure result reasonable getting much better result framework tried according web framework benchmark c based c server page multiple framework king game come given effort required set build test service new framework want sure getting dead end benchmark really equivalent problem hard get number kind proxy like traffic clarify possibly reach goal since haproxy forward num single core using num core c3 instance anything remotely resembling linearity within realm possibility reach num two forward request writing multicore web server c plan except last option though question interpreted broad stackoverflow eager editor reformulate clear straightforward question built read anything similar peak performance number instance proxy server http traffic even though would forward request one backend please detail language library framework many request per second obtained single server