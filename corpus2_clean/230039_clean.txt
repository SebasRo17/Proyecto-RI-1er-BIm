interested solving several unrelated problem using generic graph search technique fiddling around came following design problem implement generic problem interface initial state several method take state move new state move example state state move check state problem specific detail one place generic algorithm pas around state move generic token really care using problem instance evaluate property problem also consequently stateless state immutable make behaviour easy reason fine good dynamic duck system javascript migrating idea static strict system issue immediate problem token could really anything array object map string whatever javascript care algorithm passed around black box problem assumed given token case first natural solution token implement empty state move interface already problem state structure need extend wrap structure basically fine next problem token implementation specific every time given problem need cast actually lot casting strike red flag seems like bad certainly unpleasant approach avoid casting briefly considered something involving ton template state move seemed like headache might even fix problem proper standard way accomplish stricter system bad pattern use bad pattern overall insight would appreciated also using static strict language novel tool sort thing love hear