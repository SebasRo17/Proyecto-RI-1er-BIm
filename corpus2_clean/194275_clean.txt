developing long running branch defined living longer one release accepted practice keeping branch current origin keeping history relatively clean prior merging back example consider origin branch topic branch following history graph num f num h num j num b c e g k num release num num release num num hotfix num num hotfix num branch merging master periodically keep topic branch date many small commits b k like squash rebase concerned squash commits change hash merged commits master create problem others merge branch back master release num rebase topic branch expect graph would look like f h j b k k contains squashed commits b k including merged change master f h merge back master wondering likely conflict f h graph look like f h j l b k deleted longer used like keep history branched rebasing b onto j would lose information probably solve problem graph would look like f h j k valid concern commonly accepted practice keep one feature branch current origin keeping relatively clean history note example simplified actually hundred commits branch point head topic branch num many could squashed existence