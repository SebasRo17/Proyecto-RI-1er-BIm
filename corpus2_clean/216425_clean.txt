might overly vague anyway really looking specific answer rather general design principle direction towards resource deal problem like one first large scale application would like right brief explanation basic problem write application handle large library meta easily modify meta fly robust respect crashing efficient sorta like design parameter itunes although sometimes itunes performs poorly would like want read detail skip rest long explanation specifically writing program creates library image file meta file list tag may may apply image program need able add new image new tag assign tag image detect duplicate image operating program contains image viewer tagging operation idea given image viewed library tag t1 t2 t3 image boolean flag tag depending whether user tagged image open viewer however prior viewed viewer image would tag t1 t2 t3 instead would dirty flag indicating unknown whether tag program introduce new tag time would automatically set image dirty respect new tag program must fast must easily able pull list image without certain tag well image dirty respect tag crash safe suddenly crash tagging information done session lost though perhaps okay loose finally work lot image num num fairly experienced programmer never tried write program demanding need never worked database respect meta storage seem design choice choice num meta v centralized meta individual meta separate meta file image way soon change meta image written hard disk without rewrite information image centralized meta single file hold meta every file would probably require meta writes interval opposed every change benefit could keep centralized list image given tag ect making task pulling image given tag efficient