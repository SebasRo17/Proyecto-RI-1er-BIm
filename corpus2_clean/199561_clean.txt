currently considering whether make sense benefit worth added introduce message based pattern request response domain driven design service oriented architecture mvc app di potentially used mvc wcf window service etc basically mvc controller us injected service turn us injected repository save update delete object application service domain service application service might use multiple domain service e g save something send email item saved considering example use case something saved email sent could useful present potential error user save succeeded email able sent please try num minute contact support etc v generic save email succeed message based pattern request response object seems fine theory least response object e g couple inherited field could useful public abstract public bool success get set public message get set could extend viewmodel result property finally controller could decide whether show e g message update view etc seems nice simple case simply saving item clear save succeeded failed also seem overkill creating passing extra object maybe need id boolean seems make pattern redundant thing need transfer controller service repository back request part could possible ignore worry returning meaningful result hard estimate whether could num num num num system could useful many case could use well many useful better approach issue found pattern useful scenario portrayed worth extra coding simple case case