past couple year worked two project first one used agile methodology much developer driven change quick rapid quality high becuase new system emphasis group ownership project knowledge sharing knowledge transfer new staff etc conducted walking someone system staff member project knew enough project project thought successful one regret amount documentation probably inadequate long term bunch user story short term spec relevant sprint bunch master spec outlining business process long term would keep date tech spec onenote page user logins link test server etc problem keeping balance putting enough would helpful much one want read burden maintain think ever found balance master spec probably generic useful someone want understand system second project completely opposite old system big use waterfall methodology project much tester driven probably much documentation thousand page hundred word document duplication everywhere eg document similar introduction text big emphasis keeping mammoth documentation perfect creating simple change system requires identifying document affected making minor change document thing level probably neccessary eg found doco day file save dialog ie documented emphasis correct readable short half dozen business analyst job consists keeping documentation date actual analysis think project bad practice would optimal somewhere two balance probably depends system well decide much documentation need also structure maintaining become cost benefit edit hi sorry mentioned answer came along able check primarily focused non technical business requirement consumed developer audience may include ba manager tester stakeholder etc