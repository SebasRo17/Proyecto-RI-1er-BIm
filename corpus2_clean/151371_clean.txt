project creating abstraction layer apis purpose layer make multi platform easier also simplify apis feature set need also providing functionality implementation unique platform moment implemented defining abstract method creates object implement interface abstract interface define capability abstraction layer implementation layer course arbitrary pov view application done first api creating chain subclass add specific functionality feature apis expose become less generic example would probably demonstrate better interface seen application interface byte getsomedata interface get interface get public abstract one two layer created library public byte getsomedata public get public get public partial implementation override one dostuff one seen essentially trying two inheritance chain course simulate second version interface thing though like using interface seems wrong mind interface defines contract implement interface able used interface used clearly case interface used allow layer masquerade something else without application needing access definition technique would allow define comprehensive intuitive collection object abstraction layer implementation remains independent language c