spare time designing cm order learn actual software design architecture etc going solid principle already notice idea like mvc dry kiss pretty much fall right place said still problem deciding one two implementation best choice come single responsibility principle implementation num user getname getpassword getemail etc usermanager create read update delete session start stop login logout register idea behind implementation user based action separated different class creating possible case aptly named ravioli following srp tee almost literally thought bit much came next implementation userview extends view return html login screen return html inline login bar return html logout button return html register page etc needed usermodel extends datamodel implement implement new method yet outside interface method figured anything special go moment crud operation handled datamodel method implemented interface usercontrol extends control implement icontrol login logout register user extends dataobject getname getpassword getemail etc obviously still organized still single responsibility user manipulate pas usermodel save database user rendering user see handled userview method user action one space usercontrol plus automated stuff required cm keep user logged ensure stay personally think anything wrong implementation either personal feeling feel effectively correct decide one would easier maintain extend life go despite leaning towards implementation num guy opinion one better basic otherwise nuance principle missed either design