currently situation choice using box relational mapper rolling legacy application asp net sql server layer business layer unfortunately mashed together system particularly complicated term access read large group num num inter related table manipulates memory save back table summary format opportunity refactoring looking candidate technology use seperate properly structure access whatever technology decide would like poco object domain model persistence ignorant abstraction layer allow u unit test domain model object mocked underlying datasource obviously lot stuff already term pattern framework etc personally pushing using ef conjunction ado net unit testable repository generator poco entity generator satisfies requirement easily bundled inside repo unitofwork pattern db structure reasonably mature already undergone refactor making daily change model however others group suggesting architecting rolling l completely scratch custom datamappers datacontexts repository interface everywhere dependency injection overkill create concrete object custom linq underlying query translation custom caching implementation custom implementation list go frank strike madness argument thrown well least control oh used l2s ef previous project nothing headache although used production found issue far manageable uber experienced devs architect word wisdom might help steer product away seems like going complete disaster help think benefit gained dodging ef issue lost quickly attempting invent wheel