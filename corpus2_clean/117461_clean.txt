guideline deciding assembly dll often see two school thought num every grouping class belongs dll e g repository service dtos infrastructure etc num everything single dll separated via namespaces folder e g core dll additional namespaces e g core repository core service core dto etc work lump everything single assembly called business folder real separation business object logic even class lumped businessobjects folder without care thing used one core folder utility utility folder access infrastructure folder get idea new module working want need separate access layer think rudimentary repository implementation want throw businessobjects folder num class time concerned creating new library since everyone used stuffing single library folder namespace could work however