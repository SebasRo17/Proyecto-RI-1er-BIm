working right involves processing user request request requires going approval request made one record created database recording request entail ticket created placed approver work queue typical request approving involves step num request processed usually resulting table getting updated num change recorded history table record auditing num request marked approved approver approval auditing num ticket removed work queue num original requester sent email telling request approved single kick step sequentially within transaction part sequence really matter email really essential problem class least num dependency reality closer num stumped reduce number dependency come workflow like thought grouping item together logical grouping see much point creating unnecessary layer like anyway also thought kind observer pattern net event higher could listen event instantiate needed class kick however higher would dependent class right back situation way able think reducing number dependency either artificial grouping class make layer problem neither seem ideal wonder missing something help using ninject asp net mvc access ioc container dependencyresolver wondering solution sort combination using listener event ioc container