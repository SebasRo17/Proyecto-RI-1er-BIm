application consisting number module module hierarchy furthermore let also assume module tree class class top using class make simple a1 bottom may depend parameter b1 a1 creating using instance a1 therefore pas dependency needed instance a1 create dependency operation b1 dependency additionally dependency a1 higher go dependency add toplevel need know dependency unless created lower level mean a1 program dependent current temperature pas toplevel pass next arrives bottom a1 make state explicit also mean method class take many parameter variable temperature may change application running way avoid passing way tree without giving away explicit state would guy handle constant temperature constant never change program running give u option avoid passing always argument could see someone using global configuration singleton make harder test right could also pas temperature configuration would mean b1 receive example temperature parameter get configuration pass b1 b2 b1 need b2 need temperature good approach pro con