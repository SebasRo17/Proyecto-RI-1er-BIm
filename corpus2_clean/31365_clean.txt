wondering neat way solve following problem mathematica v provided binarized image call black pixel obstacle vice versa whichever convenient way automatically generate closed curve fixed perimeter length target amount enclosed area vice versa fixed enclosed area target perimeter length avoids obstacle well edge image fun example image perhaps automatically generated inkblot enter image description j answer make inkblot calling black pixel obstacle case fantastic idea effort thus far consist mostly placing random polytope surface image making sure point come within distance polytope edge first import process image follows img import img binarize colorseparate img define polygon poli use distance function wolfram demonstration check distance center every dark pixel polygon least threshold amount distance function dis b p module pz az bz z b norm p pz az bz map first last p b z pz az bz az z norm p norm p b b z b norm im z b example usage would following p poli f map dis p partition poli c first sort f last last minimum distance p poli approach inelegant say least difficult time coming good procedure randomly generate polygon perimeter area constraint determine efficient way sweep polygon across image