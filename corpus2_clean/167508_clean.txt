please feel question big deserve attention tl dr downvote ask closing based problem num num book thomas cormen et al introduction algorithm come real world problem best solution come one solution approximately best good enough interested first statement would like develop mi understanding question ask real world problem exact solution work opposed real world problem good enough solution ok difference exact good enough solution consider physic problem example simulation flow medium make computer simulation happen assumption made deriving mathematical model otherwise model becomes least complex unsolvable virtually particle universe influence fluid flow particle equal form medium much one located light year away mathematical model need solved exact solution rarely found unless mathematical model simple enough wich probably mean model close reality take approximate numerical hour coding day verification come program algorithm solution model algorithm give result close real problem degree good enough worth noting difference exact solution algorithm exact computation result considering real world problem real world computation machine believe physical problem solution calculation taken exact universal physical constant represented approximately computer number represented limited precision least limited amount memory available computing machine imagine plenty problem good enough good degree solution work like train scheduling automated trading satellite orbit calculation health care expert system case exact solution derived due constraint computation time limitation computer memory due nature problem googled question like guy suggests kind mathematical problem need exact solution little note originally question taken book introduction algorithm term solution mean algorithm program case give exact answer probably theoretical interest would like narrow question real world practical problem best exact solution algorithm program good enough suboptimal call solution want clarify understanding good enough best solution good enough every good enough solution best exact fastest etc one asking kind problem solution considered good enough unless solution best problem like breaking cryptographic cipher exact solution matter practice practice process deciphering without knowing secret take reasonable amount time returning original question problem good enough fast enough solution practical need instant crack though desired quality best understood sense exact fastest requiring least memory minimal possible network traffic etc still want question theoretical possible sense may example computer x limited resource r amount best solution problem p one take available input size n problem finding particular solution p computer x well good enough formulation question came conclusion live world required programming solution practical purpose good enough rare case like shuttle maneuvering good one could find problem require best solution problem practical interest solved unsolved provide example exist proof problem exist