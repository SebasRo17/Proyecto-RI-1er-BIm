like find guy handle following situation hierarchy call h1 polymorphic supposed accept argument form hierarchy h2 following way higher h1 higher h2 argument accepts b b b c c c writing mention two protocol class method check much common request parameter specific concrete argument transaction language scala problem language agnostic first glance look like trait def check transaction common println transaction well protected def transaction extends override protected def transaction list result specific extends override protected def transaction list result specific course compile liskov substitution principle violated let try one trait def check transaction def check transaction extends def check transaction docheck transaction def check transaction docheck transaction private def transaction list result specific private def transaction list result specific private def docheck transaction common println transaction well compile well reason docheck accepts strict precondition thing came work following extends def check transaction docheck transaction transaction def check transaction docheck transaction transaction private def transaction list result specific private def transaction list result specific private def docheck transaction list common println well like check method belong split class