asked audit php application framework router model pure php shared function html cs j mixed together discovered numerous place sql injection would easily possible problem application xss vulnerability rampant inline cs copy pasted everywhere biggest sometimes escape input using prepared query even mysql real escape mind using addslashes often though query look exactly like pasted column name changed user mysql query select profile profile id request profile id developer question claimed unable hack application tried found mod security enabled resulting http num obvious sql injection attack believe sophisticated workarounds mod security time chase claim conceptual matter practical one since application easily hacked internal auditor agreed problem emphasized conceptual nature issue also use conceptual practical argument defend inline cs j absence organization xss vulnerability massive amount repetition client rightly perhaps want go away launch product site work log need thing visibly functional slow sql injection would indeed hard given mod security talk conceptual v practical rhetorically brilliant considering client understand web application security worry succeeded making sound like angry many way problem politics technology loss developer want tell toss whole project start new team face strong defense team built client really need ship product position harsh even fix sql injection xss problem ever endorse release unmaintainable tangle spaghetti edit role project security expert web developer generalist client initially asked load test app make recommendation scalability gotten far yet first read home page saw inline cs table based layout sort crazy j requested copy found unholy mess described even abstract html header footer every php file slightly different pasted version app store personal information process store credit card