consider complex extensive software component example multi language text rendering engine ipc framework scheduler handle multiple time zone module full complexity caused need stay backwards compatible etc requires lot knowledge detail maintain extend component without introducing bug every change also often helpful know bug history receiving new bug report moreover requires thorough knowledge component design able maintain consistency future extension good know rationale behind past design decision might try document kind knowledge would require lot time effort would rapidly become outdated hence untrustworthy worse everybody would still need keep written documentation mind seems component best someone depth knowledge one cannot thoroughly know keep produced whole group people without excessive communication learning overhead wonder whether practice collective ownership allows expert seems would require kind weak ownership succeed without massive amount duplicate work