need come custom recursive locking mechanism pattern distributed system c essentially multi node system node exclusive write permission n number piece state state also available read form least one node writes update must atomic across node update eventually become consistent thru background replication process queue etc atomic update looking pattern sample efficiently allow mark locked writes distribute commit rollback etc since system high level concurrency assuming need able stack lock either timeout unrolled lock released transaction messaging piece focus question provided extra context said feel free articulate message think would needed like vague sample envisioning although open new idea aside implementing whole new product thing write work thing thinking using extension method might look something like public static ithing instance todo add aquisition wait retry recursion count timeout support etc todo disallow read lock request thing already write locked todo throw exception aquisition fails instance lock public static ithing instance instance lock none clarify couple detail communication tcp ip using binary request response protocol intermediary technology queue database central master node case locking arrangement defined initiator lock partner request form timeout govern behaviour anyone suggestion