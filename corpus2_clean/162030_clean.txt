always worked imperative language like pascal c c production environment experience debugger language turbo pascal turbo c gdb ddd visual studio eclipse debugger imperative language normally allows set break point statement execute program next break point encountered execute program one statement time option entering call skipping following statement program execution paused one examine current state program e inspect content stack see current nesting call inspect local variable actual parameter global variable since never worked functional programming language production environment trying figure debugger language would look like example debugger walk program statement like imperative language one set break point language lazy evaluation like haskell sequence call different eager language make big difference trying understand call stack variable since state imagine debugger show binding current scope e local global variable changing step program summarizing general common feature functional language debugger clearly distinguish imperative language debugger