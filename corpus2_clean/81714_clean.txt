many people believe small function people believe lambda contain small fragment often overlooked advantage lambda however using encapsulate behavior would otherwise make available entire advantage maintain proper encapsulation regardless count possible disadvantage using anonymous function lot line overlooking following actual example specific argument matching highly dependent behavior defined following imho follows single responsibility principle moving private would result called within summary get first found matching generic parameter generic optional e g dictionary full generic known e g dictionary operator likely performant still work correctly summary param source source extension param param check param return first found matching complete generic matching found return public static source used compare argument see whether match func bool argument zip argument tuple create item1 specified item1 item2 traverse across interface find matching interface source let select firstordefault else traverse across base type basetype source basetype basetype typeof basetype basetype basetype raw generic compare argument basetype basetype break basetype basetype basetype