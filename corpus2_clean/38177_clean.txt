update multiple optimization suggested member ssch simon wood aggregate yielded x code speedup optimization incorporated example code thank much improvement welcome needless say particular nxn matrix argument n speedup achieved principle exploiting gray code structure delta permutationlist however would come cost substantially increased code complexity generally larger round error research bosonsampling example desirable compute matrix permanent fastest feasible algorithm appended mathematica code us glynn formula compute complex valued matrix permanent code computes permanent x matrix m ghz macbook pro laptop question asked speed gain achieved numerical computation complex valued matrix permanent matrix interest typically dimension x x speed execution repeated permanent evaluation fixed matrix dimension sole figure merit suggestion improvement cheerfully adopted code follows beginpackage permanentcode permanent usage permanent marg list matrixq computed glynn formula algorithm requires operation dimension matrix arg argument numeric compiled c code executed argument non numeric permanent symbolic message issued permanent calculated symbolically implementation note glynn formula simplified view speed simplicity negligible cost formal efficiency brief algorithm implemented sequence blas compatible call built mathematica blas function present algorithm fully exploit gray code structure permutation list delta permutationlist url url permanent symbolic advisory permanent argument non numeric cross matrix permanent symbolic delta permutationlist usage list gray code permutation saved memory use permanent glynn formula classicalpermanent usage classicalpermanent computes matrix permanent slowly expansion index permutation begin private classicalpermanent marg block rowlist colperms rowlist table marg length colperms rowlist permutation map mapthread marg rowlist time colperms plus delta permutationlist delta permutationlist integer conserve memory purging irrelevant downvalues rule may exist arbitrarily large argument pattern matched undefine applied delta permutationlist downvalues replaceall holdpattern delta permutationlist releasehold select integerq map delta permutationlist define return requested delta permutationlist delta permutationlist delta permutationlist idiom pipe hold delta permutationlist conserve memory deleting downvalue immediately delta permutationlist reflect downvalue gray code order map join rest join map join rest reverse permanent numeric evaluation marg list matrixq marg numericq compiledglynnalgorithm delta permutationlist marg length marg total total marg length compiledglynnalgorithm compile integer complex apply time compilationtarget c runtimeattributes listable parallelization true permanent symbolic evaluation marg list matrixq marg matrixq marg numericq marg length message permanent symbolic true map apply time marg delta permutationlist marg length total total marg length end endpackage code validate benchmark nperm table doublestruckcapitalc j nperm j nperm permanent classicalpermanent expand print validated nperm cross nperm symbolic permanent print error nperm cross nperm symbolic permanent nperm table doublestruckcapitalc j nperm j nperm permanent classicalpermanent expand print validated nperm cross nperm symbolic permanent print error nperm cross nperm symbolic permanent nperm nperm randomvariate normaldistribution randomvariate normaldistribution sqrt permanent classicalpermanent sqrt conjugate ab machineprecision print validated nperm cross nperm compiled numeric permanent print error nperm cross nperm compiled numeric permanent nperm nperm randomvariate normaldistribution randomvariate normaldistribution sqrt permanent classicalpermanent sqrt conjugate ab machineprecision print validated nperm cross nperm compiled numeric permanent print error nperm cross nperm compiled numeric permanent print print first permanent evaluation nperm randomvariate normaldistribution randomvariate normaldistribution sqrt first call store gray code array permanent absolutetiming first round print benchmark permanent nperm cross nperm took m nperm print print second permanent evaluation nperm randomvariate normaldistribution randomvariate normaldistribution sqrt second call run fast permanent permanent absolutetiming first round print benchmark permanent nperm cross nperm took m nperm print print large permanent cross evaluation randomvariate normaldistribution randomvariate normaldistribution sqrt permanent absolutetiming first round print benchmark permanent cross took permanent absolutetiming first round print benchmark permanent cross took result validating benchmarking validated cross symbolic permanent validated cross symbolic permanent validated cross compiled numeric permanent validated cross compiled numeric permanent first permanent evaluation benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m second permanent evaluation benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m benchmark permanent cross took m large permanent cross evaluation benchmark permanent cross took benchmark permanent cross took note initial evaluation slower subsequent evaluation initial evaluation creates gray code table retained subsequent use