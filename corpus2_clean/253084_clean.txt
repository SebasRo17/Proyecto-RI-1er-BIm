reading introduction algorithm 3rd ed really enjoying material however difficulty implementing practical situation theory implementing internals structure rather design good interface make structure useful storing real opposed key specifically told c trust programmer philosophy know much trust much trust example many structure implemented linked structure similar node key satellite pointer node d ex typedef struct key node prev node next node q1 extent encapsulating implementation structure structure b inserted deleted structure hidden clearly expose node intention someone alters key there possibility prev next altered thus destroying structure similar risk exists expose structure someone mess around root q2 key stored accessed compared presumably key depend satellite go approach decoupled key would happen user update forgets update key worse update key remove d something like binary tree us comparison could design interface accept accept pointer satellite make structure generalized impact speed alternatively would needed structure like hash need concrete key could accept pointer relatively new c designing software unclear good software designed use real world