say might tad controversial nature disheartened today ask interview major tech firm internship position asked lot typical algorithm oriented interview question given background consider strong algorithm also got good grade graduate level algorithm stuff involving np completeness beyond approximation randomized algorithm unfortunately flunked interview could think efficient solving problem approximately num minute interview glass water ate banana relaxed tried problem answer could arrive num minute worst actually track interviewer hint much pressure cooked entire experience got thinking tech interview question wanted pose forum num really possible judge someone technical ability half hour honestly throw dice num technical interview question measure problem solving ability point debatable phd student know mathematical problem solving involves solving something never heard hand question like merging two linked list sorted order printing element binary tree kth level become mere exercise someone seen solution solved problem beforehand num people come flying color interview go become great programmer go design sleek game engine graphic library write fast fork join framework evidence point positive co relation well technical interview actual programming ability interview geared towards finding getting thing done person spolsky bet lot academic publishing ground breaking idea flunk interview assure smartest people find planet mainly academia grad student greatly appreciate someone side fence someone actually conduct interview ok everyone thanks nice thoughtful response since want ask another question ask answer question suppose candidate x good public portfolio work contributed known open source project actually go verify patch verify bug closed take look design created case question much willing give publicly available verifiable work versus well answering contrived binary tree interview question num minute