hi wondering limitation unicode decided assign one one codepoint every user perceived character currently unicode point correspond combining character character combine previous point sequence thereof present user appears single character see current standard full complexity even try avoid kind complexity using encoding like utf num problem still persists encoding issue example unicode grapheme cluster represented internally character sequence consisting base character accent user click button skip next user perceived character skip start base character end last character cluster need hard assign single point every user perceived character going user perceived character simply matter reading next point unicode website seems acknowledge complexity although could understand exactly rare figure number user perceived character count relatively rare circumstance programmer need supply end user user perceived character count count correspond number segment delimited grapheme cluster grapheme cluster may also used searching matching diacritic also reason thing work expected example throw num character japanese pi using unicode representation u u builder reverse would naturally expect num character e give invalid unicode assigned individual point user perceived character scrapped idea grapheme cluster happened would like know exactly wrong representing every user perceived character one unicode codepoint likely would would exceed u possible point exceed u point see reason set limit num num first place even much spare space include whole family elf language unicode state wanted example give instance character paper throughout history might need trillion code seriously make sense source making claim trillion code quite statement