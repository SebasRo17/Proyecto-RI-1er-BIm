first question please excuse mistake let u consider rather contrived example f x z x z z plot f x z x plotlabel f x z plot f x z x plotlabel subscript f x z manipulate plot f x z x plotlabel f x z z plotlabel used making argument axeslabel epilog inset way labeling plot problem evaluator mathematica eagerly replaces occurrence f z value instead f x z plot one see x several solution different variable say ff yy zz used code leaving symbol f z free labeling however make code much incomprehensible label enclosed quote example f x z work subscript f x z formatting wrong f x z variable italicized bracket appear lieu parenthesis label enclosed holdform block example holdform f x z block f x z f x z work manipulate presumably defines local variable type monstrosity formbox subscriptbox f x z traditionalform directly code wonder simple way tell mathematica use expression f x z formatting without evaluation would even better tell say replace current value manipulate leave z untouched additional question sometimes nice label condition plot get away plot f x z x plotlabel holdform clear manipulate plot f x z x plotlabel symbol z seems awfully complicated inconsistent perhaps tell mathematica skip evaluating equal treat given expression edit based discussion summarized several ad hoc strategy deal label define label via l holdform x holdform f x z l stringform plot holdform subscript f x z l holdform z global scope local variable creep shielded global local definition variable last label used plotlabel l z wrap plot manipulate module define local label way example module l holdform f x z manipulate plot f x z x plotlabel l z initialization f x z x z okay long label defined outside scope f z actually used plotting code encapsulated function plot f approach fails label involves f f declared globally pure function f case one may consider plot fn f displayed unevaluated f x use manipulate plot f x z x plotlabel symbol z z holdform f x z z initialization f x z x z displayed wrapped symbol properly formatted must already defined globally otherwise global value show z show current value set probably manipulate f displayed evaluated form x time time use manipulate plot releasehold f x z x plotlabel symbol z z f x z z initialization f x z holdform x z however hard guarantee plotting function wrapped holdform preserved variable x already defined globally possible guard x x cost x properly formatted risk wrong variable ordering nothing could done variable declared scope label used holdform x display decorated name short one single solution work every case except global variable injection