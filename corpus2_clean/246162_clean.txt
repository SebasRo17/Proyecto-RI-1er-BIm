terminology element form element field text list combo box push button etc problem program basically fat client interface system keep track traffic light program exists form form contains several subforms right subforms class subforms controlled completely form form validate called form submitted call validation method within subforms well performing validation form element class sold architecture feel consistent every problem lie implementation handling warning right element validated validation result warning user must correct box meet form validation requirement warning user must notified warning submit form second time warning occurs created flag set information within form element accepted form first check error thrown event error check warning warning flag set display warning next time called warning flag toggled within validation really like implementation basically mean rogue flag cleared based requirement thought implementing state machine however problem state form would set various spot within based requirement one field changed reset starting state etc problem ran warning flag owned form create pointer parent form set flag feel clunky feel like could create lot confusion better way architect edit adding context bool mainform callback submit clicked const validate form display else get warning displayed flag display warning else submit form bool mainform validate form bool bool display warning validate validate perform validation subforms controlled within form date field validate display warning format message clear warning flag else display warning get display warning flag get warning message invert warning display flag