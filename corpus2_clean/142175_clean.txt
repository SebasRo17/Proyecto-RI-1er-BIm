question going mind quite lot lately since found convincing answer would like know user site thought well recent year even though oop still popular programming paradigm functional programming getting lot attention used oop language work c trying learn fp free time find interesting started learning haskell three year ago scala last summer plan learn sml caml well brush little knowledge scheme well lot plan ambitious hope find time learn least basic fp next year important functional programming work whether use real project already developed small tool haskell spite strong interest fp find difficult understand functional programming construct added language like c c developer interested fp find natural use say scala haskell instead waiting next fp feature added favourite non fp language word would want fp originally non fp language instead looking language better support fp example interested lambda switch scala much fp concept access library anyway similarly fp c instead using f knowledge c f work together designed oo fine oop would like keep using way scala designed support oop fp fine use mix oop fp scala haskell designed fp fp haskell need tune performance particular module interface haskell external routine c would want oop basic fp point non functional programming language extended functional concept comfortable interesting exciting productive program language designed beginning functional multi paradigm different programming paradigm integrate better language designed language one paradigm added later first explanation could think since fp new concept new new many developer need introduced gradually however remember switch imperative oop started program c coming pascal c really rethink way coding pretty fast gradual seem good explanation many non fp programmer really interested understanding using functional programming find practically convenient adopt certain fp idiom non fp language important note case seen several language war site mentioned language know better question way meant start comparison different programming language decide better worse also interested comparison oop versus fp pro con point interested understand fp introduced one bit time existing language designed even though exist language specifically designed support fp