abstract common problem store object graph load back easy long stored representation match executing time go requirement change stored object match longer stored object loose client work latest model transformation occur somehow loading returning client know exist library xstream gson protobuf avro could load older object afaik ignore match longer field maybe missed something talking storing serialization mean built serialization mechanism question question researching time seems library adresses issue evolution without loss hope find another working solution idea implement requirement file based want able store serialized disk want append multiple object one file without loading whole file memory support multiple version one file file could contain object different version transformation accessible using even changed generic mechanism generic could use different object different object get mixed one file different version one would nice storing format human readable already stored object updateable least without huge effort think long term archive example could give example better illustration let suppose two pojos want serialize public mypojo text long number integer value pojo public list item next version might renamed field text content changed integer list transformed field list list previous field first element new list loosing transforming new representation public mypojo content long number list integer value list pojo public list item pseudocode client might take use write serializer ser new serializer mypojo pojo new mypojo pojo xxx set field ser store pojo file append read version later serializer ser new serializer ser new list mypojo pojos ser load file approach drawback transformer work kind intermediate format could backed stored format json xml know format point time since transforming relative previous version mapping final making search error hard performance depending transformation happens