let say following class person widget foo bar person multiple widget foo bar admin deletes person want cascading delete remove related record database person widget delete foo bar order accomodate something like person delete feel like creating person manager actually repeat version logic inside delete method widget foo bar class instead calling existing method class thinking example num public delete person personid assume queried list widget foobars id num delete widget personid success dim obj widget new widget widget result obj widget delete widgetid result success exit end end num delete foo bar personid success dim new foo bar foobars result delete result success exit end end end num delete person record success result personid result delete person failed else end end example trying demo reuse existing existing delete method successfully deletes widget foobars person delete person record problem widget delete properly foo bar rollback delete transaction defined within deleting widget foo bar involves let say num num step word delete widget currently look like public widget delete widget database execute begin transaction database execute delete xyx successful database execute delete yyy else database execute roll back end database execute commit widget calling widget delete dy deleting first foobar think rewrite delete everything right inside person manager wrap transaction instead calling existing delete method class least thinking another way look problem please let know could write cascading delete sql statement call method two class know using sql cascading deletes good thing thanks