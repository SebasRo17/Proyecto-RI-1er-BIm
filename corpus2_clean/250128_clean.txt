studying software engineering one thing really trying improve skill software architecture question quite broad try explain example suppose model layer service layer model manages various entity user product order etc service provide feature evaluating efficency campaign use several module model layer access required specify dependency see following possibility allow general access model approach taken many mvc framework controller access model class pro specify dependency developer writing controller flexible contra want test service really know model mock service could use everything implicit dependency also make maintainance pain service specify required model explicitly dependency management system like requirejs commonjs require work way pro implicit dependency simplifies maintanance contra mocking impossible designing module know exactly module need later notice need another interface change architecture specify explicit interface provided service anyone service provide implementation interface think dependency injection work way although injection automated pro implicit dependency simplifies maintanance testing simplified know exactly mock contra designing module know exactly module need later notice need another interface change architecture theory dependency injection seems like best way practical specify requirement fine grained per entity group one dependency per thing entity simply many possibility like get real world advice