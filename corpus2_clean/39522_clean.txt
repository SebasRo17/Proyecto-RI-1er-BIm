recent mathematica project n time time n dimensional matrix suddenly become frustratingly common edge case instance consider following two situation common linear algebra programming suppose matrix presenting linear transformation newcommand r mathbb r r n r kernel particular subspace source r n kernel dimension nullspace produce new matrix presenting map r r n whose image ker mode thought useful let instance restrict action map b r n r l kernel multiplication b transpose nullspace suppose pair matrix b presenting pair linear transformation r n xrightarrow r l xleftarrow b r common target pullback generalized intersection two map defined collection pair vector x r n time r ax easy enough model mathematica nullspace block matrix left begin array c c b end array right split block matrix left begin array c p hline q end array right matrix p q present largest nontrivial map r n r respectively property ap bq mathematics continues make sense run serious difficulty dimensional vector space get involved happens time situation generally situation might applying nullspace matrix trivial kernel mathematica model matrix list list exception like sparsearray support conversion list list anyway real trouble modeling n time dimensional matrix instance nullspace identitymatrix n return first glance reasonable enough totally unsuited uniformly handling procedure expression n time dimensional sense matrix multiplication transposition inversion case n balk using input surmountable course riddling mathematica code conditionals check failure output handle separately uglier sound already sound ugly oftentimes mean passing around extra information keep track n involved since recoverable question cleaner solution sea conditionals idiomatic way model n time time n dimensional matrix mathematica ideally way near seamlessly compatible standard routine like time transpose arrayflatten p eventually intend offer thing writing package prefer modify behavior built function directly