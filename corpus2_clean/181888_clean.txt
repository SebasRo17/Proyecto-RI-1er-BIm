api concept could useful performance optimisation example key based cache expiry applied broader internet wide context instead internal memcached style scenario seems mostly used want make api call almost cacheable static image using news feed subscriber example might poll hourly idea send last updated timestamp along topic could easily version number checksum username wendy topic tv updated num movie updated num music updated num clear resource come directly server every time cached edge client subsequent call topic aggressively cache thanks timestamp assuming want sync topic n call make naieve implementation topic tv etc timestamp construct url like topic tv num json client usually make call already seen cached version resource furthermore even new client edge cache e g reverse proxy like squid varnish service like cloudflare probably seen user probably opened latest version topic already still bypass application server server ever creates topic json underlying resource updated instead n num call server client probably make much smaller number call call rarely hit app server anyway question seems feasible worth question prior art kind thing particular http standard support initially thought conditional caching etags modified date think help optimise setup believe answer subtly different require call passed application server order check something changed idea client saying already know latest version please send resource back think http standard propose url scheme like topic tv num json instead etag like header believe cdns work way surprising real http standard around update reflection important special case web browser fetch new html page know immediately requesting cs j versioning timestamp trick used ensure static resource cache friendly trick formalised spec give confidence unfortunately http standard cs javascript file