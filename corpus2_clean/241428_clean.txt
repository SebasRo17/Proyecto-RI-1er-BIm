kind follow question num model view controller callback wanted post separately kind different topic working multiplayer android platform split project mvc fit need pretty good currently stuck figure good way communicate different part everything setup working controller big state machine called call getter method gui android network part get gui network set set local read getter far good working problem controller check every separately want add check state valid call getter state good let look pretty ugly make addition uncomfortable add redundance got question mentioned kind command event pattern fit need want create shared threadsafe queue controller instead calling getter method check queue new proceed side gui network getters instead create event command send controller example observer observable problem figure way command event fit common interface queue store still transport different kind button click card played player id command come synchronization etc design communication command pattern stick information needed execute command created impossible gui network knowledge thing controller need execute stuff need done example card played thought getting stuff command executing different command would need information controller thus give command reference controller would make everything public real bad design guess could try kind event pattern transport event like command would interface event common stored shared queue could create big enum different event possible save one enums actual event build big switch case event proceed different stuff different event problem different event need common interface store event queue get specific access event interface even problem creating another big switch case look ugly want add new event create event case enum called could course check event enum cast call event specific method give need look like bad design