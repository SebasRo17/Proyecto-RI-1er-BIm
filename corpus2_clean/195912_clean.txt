work large django application us couchdb database mapping couchdb document object similar django default orm dozen model class hundred two couchdb view application allows user register domain give unique url containing domain give access project whose overlap domain document part domain domain property set domain far relationship document go domain effectively mutually exclusive subset except edge case user member one domain administrative report include domain etc full explicit reference domain wondering would worth added complexity abstract also like know sort bound property approach taking basically something like mind model py user document domain stringproperty group document domain stringproperty stringproperty user id return related document set def user self user get id id self user id query couch view optimized specific lookup classmethod def cl domain view provided handle wrapping json couchdb result object take various parameter modifying behavior cl view group key domain creates related document def get new user self user user domain self domain user save self user id append user id user view py model import user group ton view like request domain def create new user group request domain group group group domain group num user user domain domain user save group user id append user id group save group map j doc doc doc group emit doc domain doc model py document domain stringproperty classmethod def domain view cl kwargs kwargs key cl domain default kwargs key super cl view kwargs classmethod def get cl kwargs validate domain ret super cl get kwargs validate domain ret domain cl domain default raise exception ret def model self mapping model application accessing one return equivalent user domain stringproperty default self domain user pas group stringproperty user id def user self self model user get id id self user id classmethod def cl cl domain view group key def get new user self user self model user user save view py domain view decorator set request model sort returned model remove domain argument url router def create new user group request group group request model group group user request model user user save group user id append user id group save might better leave abstraction leaky order avoid deal style include wrapper emit doc domain key similar solution doc doc doc group emit doc pro con pro con pro dryer prevents creating related document forgetting set domain prevents accidentally writing django view couch view execution path lead security breach prevent accessing underlying self domain normal document view potentially get rid need lot sanity check verifying whether two document whose domain expect equal con add complexity hide really happening requires model module class would need add sub attribute self model module however requiring project wide unique name model actually fine correspond doc property us decide instantiate unique remove explicit dependency documentation group model import group