statement question seems little abstract please read detail since time c first choice oriented language almost anything big problem multiple inheritance c two different implementation declared defined abstract concrete parent two come common child create ambiguity popularly known diamond problem c gave solution virtual keyword used specifying parent e one copy go final child decided runtime instead compile time based certain rule tried solve providing single inheritance avoiding multiple inheritance completely lacked feature behaviour could influenced bit may change future behaviour may added needed way encapsulate behaviour came construct interface nothing declaration implementing implement way protocol objective c less thing however approach major drawback question come picture drawback many subclass implementing interface way written everywhere class implementation could parent give implementation max done introduce implementation common current parent make class inherit lead lot bug done properly complex project scala provides trait serve interface add full blown implementation mixed class require removed seen syntax heard ruby solves problem using something called mixins case objective c protocol limitation interface question create category import subclass subclass get implementation method also remove synonymous removing trait inclusion declaration might wrong assumption newbie come oop design got interested fp would also appreciate better solution one