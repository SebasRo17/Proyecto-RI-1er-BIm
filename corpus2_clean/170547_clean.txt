recently reading web site clean development put link english one principle advertised site open closed principle software component open extension closed modification e g implemented tested modify fix bug add new functionality e g new method influence existing one existing functionality implementation changed normally apply principle defining interface corresponding implementation become stable implemented tested normally modify much possibly e num new requirement arrive e g performance totally new implementation interface require big change write new implementation b keep using long b mature b mature needed change instantiated num new requirement suggest change interface well define new interface new implementation frozen remain implementation production system long stable enough replace view observation bit surprised web page suggested use complex refactorings possible write directly final form contradiction conflict enforcing open closed principle suggesting use complex refactorings best practice idea one use complex refactorings development tested successfully frozen