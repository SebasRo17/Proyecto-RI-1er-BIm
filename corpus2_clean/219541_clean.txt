critique common lisp written brook richard p stanford num design decision retained normalizing committee common lisp discussed discussion remains valid two statement refer technology available time may today two statement many cost language dismissed good take care one yet written likely without tremendous effort fraction trick expected common lisp novice even apprentice able specific author seem state great generality flexibility built several aspect language make writing good quite difficult common lisp little much control placed floating point arithmetic certainly although correct behavior floating point intensive program attained performance may vary wildly far understand seems writing efficient numerical common lisp possible challenging thirty year ago regard statement today willing write common lisp program one common free software implementation clisp sbcl et al