working ruby rail model suspect inefficient hard maintain full unnecessary sql join query want optimize refactor model quiz rb comply rail best practice sure rail app game mission many stage user complete stage answering question correct incorrect answer user try complete stage answering question user get quiz entry many attempt attempt record answer submitted question within stage user completes stage mission getting every attempt correct progress tracked adding new entry join table feature work unfortunately quiz rb model twisted handle almost exclusively callback began quiz rb sure leave quiz model multi model update resorted using rail quiz instance via self heavy lifting retrieve every game business logic resulting large extended join query dance around database schema quiz rb model smell quiz activerecord base belongs user many attempt dependent destroy save check answer save update user mission stage accepts nested attribute attempt reject lambda answer id blank allow destroy check every answer within quiz adding num correct answer within stage quiz num incorrect answer def check answer stage score num self attempt attempt attempt answer correct stage score num elsif attempt answer correct stage score num end end stage score end def winner end def update user mission stage step num check exists find creates one current mission exists creates new self user mission user mission new user id self user id mission id self current stage mission id available user mission save else user mission self find user mission end step num check current exists stop prevent duplicate entry self user stage user mission save else step num step num return initiate creation instruction check winner winner action need defined complete last stage last mission given orientation self passed self last stage self last mission create user stage update user mission self winner note rest specify condition available add badge action upon condition occurring user completes first stage mission elsif self passed self first stage self first mission create user stage update user mission creates user badge finishing first stage first mission self user add badge num self user activity log create description granted first stage badge event badge first stage user completes last stage given mission creates new elsif self passed self last stage self first mission create user stage update user mission creates user badge finishing first mission self user add badge num self user activity log create description granted first mission badge event badge first mission elsif self passed create user stage update user mission else self passed end end end creates new record database successful quiz question passing def create user stage update user mission nu stage user mission user stage new user id self user id stage id self current stage id nu stage save user mission save self user add point num end boolean defines passing stage answering every question stage correct def passed self check answer self number question end return number question asked stage quiz def number question self attempt first answer question stage question count end return current stage quiz routing 1st attempt quiz def current stage self attempt first answer question stage end give back position stage relative mission def stage position self attempt first answer question stage position end find user mission current user stage exists def find user mission self user user mission find mission id self current stage mission id end return quiz last stage within mission helpful triggering action related user completing mission def last stage self stage position self current stage mission stage last position end return quiz first stage within mission helpful triggering action related user completing mission def first stage self stage position self current stage mission stage ordered first position end return current user current stage def user mission self user mission id include self current stage mission id end return current user current stage def user stage self user stage include self current stage end return current user last mission based position within given orientation def first mission self user mission first orientation mission position first position self current stage mission position end return current user first stage mission given orientation def last mission self user mission first orientation mission position last position self current stage mission position end end question currently rail server take roughly 500ms num sec process single quiz save action confident slowness due sloppy bad database erd design better solution look like specifically num use join query retrieve value like better instantiate new object within model instead missing better solution num update user mission stage refactored follow best practice relevant reference quiz controller rb w controller route initiating callback applicationcontroller action find stage mission action find orientation action find question def show end def create user current user quiz current user quiz new quiz params quiz save quiz passed mission next mission nil stage next stage nil redirect root path notice congratulation finished last mission elsif stage next stage nil redirect mission next mission mission first stage notice correct time mission mission next mission position info starting next mission else redirect mission stage next stage notice answer correct passed stage end else redirect mission stage alert get every question right please try end else redirect mission stage alert sorry unable save answer please contact end question stage question end private def find stage mission stage stage find params stage id mission stage mission end def find question question stage question find id params id end def quiz params params require quiz permit user id attempt id attempt attribute id quiz id answer id end def find orientation orientation mission orientation mission orientation mission position end end overview relevant erd database relationship mission stage question answer attempt quiz user mission user stage user model mission rb mission activerecord base belongs orientation many stage many user mission dependent destroy many user user mission scope scope position order position asc def stage ordered stage order position end def next mission self orientation mission find position self position next end def first stage next mission stage ordered first end end stage rb stage activerecord base belongs mission many question dependent destroy many user stage dependent destroy many user user stage accepts nested attribute question reject blank allow destroy def next stage self mission stage find position self position next end end question rb question activerecord base belongs stage many answer dependent destroy accepts nested attribute answer reject lambda body blank allow destroy end answer rb answer activerecord base belongs question many attempt dependent destroy end attempt rb attempt activerecord base belongs answer belongs quiz end user rb user activerecord base belongs school many activity log many user mission dependent destroy many mission user mission many user stage dependent destroy many stage user stage many school many quiz dependent destroy many attempt quiz def latest stage position self user mission last user stage last stage position end end rb activerecord base belongs user belongs mission many user stage dependent destroy end rb activerecord base belongs user belongs stage belongs user mission end