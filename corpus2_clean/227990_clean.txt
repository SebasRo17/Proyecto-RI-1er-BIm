currently looking way optimize application consuming unacceptable amount memory process basically take parses tree tree currently stored memory average may consume num mb num gb memory larger input may consume num gb machine handle wanted test locally afraid even larger input future time find scalable solution rather storing everything memory would like move tree part tree external storage benchmarking effect storing certain part tree memory resulted num reduction memory consumption framework well library allows u work tree using set standard getter accessor method use standardized method creating reading updating deleting node parser typically interact directly node example sample might say take update tree new private id return node given id creates one exist yet return reference node getperson id add update attribute node age set num node set john add point existing point node point get node point set point num given information thinking using database however would also like able implement change transparently affect decade worth relies tree use allow get database allowing developer get reference eg person node treat like without knowledge tree stored internally would also nice solution tried optimize amount query made example instead inserting num person node one time would somehow figure way batch insert meant temporary storage parsing complete discarded serializing file based practice implemented year ago changed plan yet