question might simple sound struggled bit num separate bug taken care single fix wasteful take approach one bug might slip crack would take away complete picture hidden time several year worth outstanding bug bug tracker suck searching file bug num part help tooltips missing num dialog treated project broken however bug num num part developer would attempt fix num num get interesting coder fix num num num testing new bug filed old one closed yes invite sloppy programming practice close enough good enough bug fail done tested part num size term size risk part num like car part num like house sizing prioritizing bug must mention use scrum house part noticed read anything bug title anyway deemed low hanging fruit low effort low risk happy user high reward got bitten one recently seemed logically area actually transitional state trying deprecate one thing one library creating widget another new better problem release mid conversion made two different beast look alike qa folk know expected know mind issue need qa friendly push back hard often also try give set heuristic would help decide whether file one bug many suppose problem might lie weak tool splitting merging bug hard however deal stuff general p scrum committed fixing something probably fixed break rule many time discipline degrade