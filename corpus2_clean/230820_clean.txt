designing front end wpf application using mvvm basically calling input displaying output two type input call common input specific input simplify thing common input one instance common input used non trivial list specific input paired common input fed reason need time distinguishes variable also output also fill input pick subset whatever user fill calculated fed back brings u problem ui grid first column every column bound visible row many specific input batch user fill input want hit big button called output generated bind column would become visible also getting result input might possible certain position position sufficiently close overwritten need save display sort attention drawing behavior cell way think three list input output list view model common property visibility agree third list would bound ui property would pulled list running pushed afterwards think solve problem vague sense discomfort one thing mixing property view model seems like duplicating model business logic scrambled together anyone suggestion better design reason plan good bad thank