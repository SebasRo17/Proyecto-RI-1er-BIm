working android game based contract bridge part college summer internship project game multi player num android device play bot cpu player developed time getting project realized student already worked project none work reusable variety reason like undocumented design architecture different platform implementation experience working several open source project hence emphasis work project component make become reusable much possible game multi player entire game progress handled server currently working server design since wanted make game server reusable client platform use previously confused selecting socket rest game server design later finalized work rest apis server since keep player sync make movement game server planned use database keep player progress specific table bridge num player play single table server handle many game table know appropriate decision use database shared medium track progress game table let know appropriate better option obviously game completed table table server database discarded problem access rest service http call long client make request server remain idle consider situation player played card device device request apply change server need let rest three device know player played card also update view device afaik rest cannot provide sort push notification system since connection server persistent one solution thought make device constantly poll server change like every num m change found reflect device feel elegant way every http request expensive choose rest make game play experience robust since mobile device tends get disconnected internet socket like persistent connection entire game progress subject lost also portability client end important also imagining situation num game table progress num player playing server must capable handle flooded http request device make every num m wonder situation assumed do attack explaining situation going right track server design wanted sure proceed much