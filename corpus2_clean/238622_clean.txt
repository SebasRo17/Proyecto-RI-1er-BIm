preface saying mostly front end web developer trained musician past year getting computer science one idea fun toy project learn structure c programming design implement simple database would manage adjacency list post want sql maybe query language fun support acid capable storing 1tb let say trying think database even store without regard structure necessarily working linux read world everything file including hardware like dev think obviously apply database clearly whether mysql postgresql neo4j database collection file see filesystem said would come point scale loading entire database primary memory work make sense design mindset assume however reading secondary memory would much slower regardless portion database primary memory order able anything read post use database instead saving disk found difficult understand database like sqlite neo4j read write secondary memory still fast faster would seem simply writing file filesystem question suggests seems key indexing even index need stored secondary memory inherently smaller database index large database might prohibitively large question generally done large database like one described would least 1tb storing big adjacency list indexing less answer exactly indexing work structure involved