getting scrum tdd think confusion like get feedback let assume user story backlog order start developing part tdd need requirement right far say product manager qa responsible taking user story breaking acceptance test think since acceptance test need formal used test also human readable product approve requirement right also later take acceptance test use requirement e set use case implement tdd hope making much mess current flow mind right update think initial intention unclear try rephrase want know detail scrum flow turning user story using tdd starting point obvious user surface need user representative product short num num line description known format added product backlog spring planning meeting user story taken backlog assigned developer order developer write need requirement especially tdd since requirement test derived format requirement compiled mind product qa define requirement via acceptance test thinking automatic using fitnesse sort core think help serve num purpose time num define done properly num give developer something derive test sure written sprint picked might waste since additional information arrive story picked iteration developer might get stuck waiting