wondering reading interpreted compiled language ruby doubt interpreted language since source compiled interpreter point execution contrary c compiled language one compile source first according machine execute result much faster execution coming somefile py imported creates file somefile pyc directory let u say import done shell django module import change bit execute imported function find still running old suggests pyc file compiled file similar executable created compilation c file though execute pyc file directly file somefile py executed directly somefile py somefile py pyc file created executed indicating interpreted behavior suggest compiled every time imported new process crate pyc interpreted directly executed language consider interpreted compiled efficiency compare interpreted compiled language according wiki interpreted language page listed language compiled virtual machine meant update looking answer seems cannot perfect answer question language interpreted compiled spectrum possibility interpreting compiling also language interpreted compiled rather implementation either interpret compile also found time compilation answer comment wiki found major implementation compiled bytecode highly compressed optimized representation machine virtual machine implemented hardware bytecode interpreter far execution speed concerned various benchmark cannot perfect depend context task performed please let know wrong interpretation