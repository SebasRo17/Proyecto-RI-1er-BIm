working product responsibility one module parse xml file dump required content database even though present requirement parse xml file want design parsing module fashion support kind file future reason approach building product specific client plan sell client near future system ecosystem current client produce consume xml file may case client tried far present following design mind based strategy pattern quickly written eclipse convey design would great aspect proper way handling exception ignored parser strategy interface expose parse public interface parser public parse reason using generic parameter allow well ensure safety compile time concrete parsing product xml file contains product related information using public implement parser public parse file new file try factory parse catch e system println parsing file catch ioexception e system println ioexception parsing file pojo class generated using xsd command future product txt file parsed future define pojo called productdata hold required content file create concrete called implement parser interface parse populate productdata pojo parsing file design make sense obvious flaw design design stand allowing concrete class define algorithm parse file letting concrete decide populate design seems dependent domain object rather file format bad thing input improve design highly appreciated