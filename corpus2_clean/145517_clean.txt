writing us time honored strategy using c back end trying figure exactly handle integer sign using machine word integer default translating intptr generated c would prefer make default unsigned probably much choice making signed expectation widely ingrained defining result integer overflow least default might add option throw exception later c signed integer overflow undefined behavior emit performs signed integer arithmetic seems two option num emit signed integer convert unsigned arithmetic operation except division right shift one difference matter also one overflow edit except min num considering category division zero course strictly speaking overflow num emit unsigned integer convert signed division resisting temptation make division negative number undefined behavior right shift comparison equality num emit signed integer anyway use using gcc backend hope c compiler either take advantage signed overflow undefined provide switch disable optimization third option work e g c compiler make signed overflow wrap first two likely involve less opportunity anything missing