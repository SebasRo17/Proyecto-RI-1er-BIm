chapter making software really work believe andy greg wilson software defect metric used predict summarize remember explained used c codebase open source published defect tracking history used variety well known metric see best predicting presence defect first metric started line minus comment showed correlation defect e loc increase defect variety metric remember top head ultimately concluded complex metric significantly better predicting defect simple loc count would easy infer choosing less verbose language dynamic language result less line thus less defect research making software discus effect language choice defect defect example perhaps program rewritten clojure scala groovy resulting 10x loc saving might infer 10x less defect possible concise language less verbose prone programmer error relative verbose language defect written less verbose language 10x harder find fix research making software fine start left wanting anything published topic