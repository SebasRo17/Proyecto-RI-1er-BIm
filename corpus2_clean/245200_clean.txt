say argument a1 a2 contra variant type b1 b2 covariant corresponding function a1 b1 a2 b2 sometimes make sense grasp flash lateral thinking day later lost struggle another hour using example odersky scala assignment spoiler empty subtypes understand cannot pas expecting since might empty therefore latter a2 b2 cannot subtype former a1 b1 understand pas expecting apparently calling specific method subtypes implemented therefore former subtype latter similarly return cannot subtype return returned cannot necessarily everything conversely return subtype return since returned conform contract trouble grasping pas expecting subtype expecting ostensibly calling specific method implementation would ever want use anyone example useful use function seems dangerous pas know going call specific functionality