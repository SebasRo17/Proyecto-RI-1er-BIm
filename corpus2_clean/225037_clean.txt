following image state pattern applying domain driven design pattern example c net enter image description trying persist salesorder entity database normally would salesorder table database field currentstate pointing current state entity implementation fine single entity state contain different behavior however track property different state example salesorder cancelled need track cancelled quantity salesorder refunded need track basically like entity additional attribute said state well problem change design using state pattern using inheritance however inheritance allow dynamically change state time problem state diagram solves initially question num state pattern fail entity state additional attribute alternative num persist entity case single table inheritance table per table per concrete num maintain attribute former state refund shipped order delete shipping address shipped state would one approach problem num keep track order state occurred