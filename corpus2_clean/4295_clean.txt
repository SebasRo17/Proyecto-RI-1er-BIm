want repeatedly call module using table statement use iterator table command calling module receive error message table itraw raw object cannot used iterator module also contains separate table statement iterator noticed change iterator table statement calling module something else say v longer get error message make think iterator leaking module question correct value iterator table statement calling module leaking module question expected behavior question happen question another way solve problem avoid use iterator table calling module module thank advice todd snippet offending code errorcorrection signaltype chipid probesetpostocheck module cluster position loopindex groupminuscurrent similarprobesets loopindex initialize loop index loop continues length number probesets need checked unusual signal length probesetpostocheck loopindex length probesetpostocheck chipid cluster flatten drop sort findclusters signaltype chipid probesetpostocheck chipid loopindex distancefunction euclideandistance method agglomerate locate probe signal within current probeset evaluated unreliable need replaced print cluster position flatten table position signaltype chipid probesetpostocheck chipid loopindex cluster length cluster print position memberq controlchips chipid groupminuscurrent deletecases controlchips x x chipid similarprobesets table signaltype groupminuscurrent probesetpostocheck chipid loopindex length groupminuscurrent groupminuscurrent deletecases experimentchips x x chipid similarprobesets table signaltype groupminuscurrent probesetpostocheck chipid loopindex length groupminuscurrent print similarprobesets loopindex run table errorcorrection pmsignal experimentchips pmpostocheck table itraw raw object cannot used iterator table position pmsignal gsm pmpostocheck gsm loopindex cluster length cluster run table errorcorrection pmsignal experimentchips v pmpostocheck v considering everyone response able get code work better replacing position flatten statement inside errorcorrection module module position flatten noted block also work fine still puzzled however take value inside errorcorrection module module called statement run table errorcorrection pmsignal experimentchips pmpostocheck example output showing iterator run table errorcorrection pmsignal experimentchips pmpostocheck equal question continuing numbering table command run table errorcorrection pmsignal experimentchips pmpostocheck localize iterator question value show errorcorrection module question take value value errorcorrection module would original position flatten statement worked ok seems naivety problem using case taking value module table statement calling module thought table localize prevent value going module thank struggle understand deeper level