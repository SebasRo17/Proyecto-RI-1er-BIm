working multiplayer game player many storage store item storage storage system allows user deposit item take back example storage type inventory wow inventory add item drop item move item slot slot bank bank call super inventory around num item limit per tab bank maximum num tab store item total item allowed bank num num tab multiplied num item per tab ever bank item stackable equipment equipment inventory sorted slot e helm body leg total num slot chest bank without tab item game item item id certain item stackable unless storage bank chest created system make easier manage storage abstract storage extend public abstract private size item private item sometimes default storage item id num due client interface exact explanation feature equipment possible bob private boolean public item new size public item item item size item length reset storage public item new size get item list list public getitems item count many item id param id item id count public count id count num item item getid item id count count count many item inventory including amount item object themself amount public count num item item getid item num item getamount num count count get length storage public getlength item length check many free slot storage public slot num item item getid item num slot slot find item id earliest slot param id item id slot id public find id num item length item item getid item id item getamount num num get earliest free slot slot id public num item length getid num num check item existing given slot given amount item id param id item id param amount item amount param slot slot id boolean public boolean id amount slot found num item slot id num item length item item getid item id item getamount amount else found found amount check item exists storage public boolean contains id item item getid item id link param index real item id private getid item item getid link param item real item id private getid item item item getid public abstract boolean add id amount public abstract boolean remove id amount also container charge control storage container storage player author ben public player client extends player extends entity public player player enabled removing adding item storage check action returned yes stop right away private boolean storage player contain private map storage new hashmap public player p player p initializes existing storage player private storage put inventory new inventory player get required implementation param implementing extends public getstorage storage get remove item storage param id item id param amount amount item return boolean action successful without middle execution always public boolean remove id amount storage storage value storage remove id amount add item storage param id item id param amount amount item return boolean action successful without middle execution always public boolean add id amount storage storage value storage add id amount reset storage public reset storage storage value storage link error param b public boolean b b problem system work fine inventory equipment however problem cause big algorithm duplicating bank since bank storage multiple tab num either need create named tab make implement put algorithm two class bank tab one bank named hold selected tab id make add accept num arguements itemid amount making accept num argument make problem either ignore abstract add make create num abstract add one num parameter one num find messy design whole thing incorrectly problem design proper structure whole storage feature work kind storage think cannot understand problem might find review thread helpful background server handle item client click item game interface support item storage sends slot id player clicked due security reason server us slot id index get information item