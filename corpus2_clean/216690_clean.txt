one thing never happy project worked year really able resolve exactly tier application human readable information retrieved display user common approach worked well strongly typed concrete result object method public surface business tier api interface may public param result implementation public public readonly list account get set public readonly bool success get set implement public readonly message get set implement human readable constructor implemented set readonly property work great api need exposed wcf result serialized done public surface api business tier message also looked database mean changed localized however always suspect idea returning human readable information business tier like partly constitutes public surface api may change time may case api need reused api component future need human readable message looking database would expensive waste thinking better approach keep business object free result object keep simple retrieve human readable string somewhere closer ui layer ui two problem num ui may remote client winforms wpf silverlight asp net web application hosted another server case ui fetch string server num often multiple legitimate mode failure business tier becomes vague generic way return error may enough information exposed publicly tell actually e num mode legitimate failure return boolean indicate failure cannot work appropriate message display user thought using failure enums substitute indicate specific tested coded sometimes useful within business tier way passing via return specific failure rather boolean good serialization scenario well worn pattern people think thanks