learning haskell faced lot tutorial trying explain monad monad important haskell used analogy would easier catch meaning end day end num differents view monad view num monad label sometimes think monad label specific example myfunction io myfunction whenever performed yield result io io label warning user know result process io action made consequently marked came process io therefore dirty process pure anymore view num monad private space nasty thing happen system process pure strict sometimes need side effect monad little space allow nasty side effect space allow escape pure world go impure make process come back view num monad category theory view fully understand monad functor category sub category example value subcategory io value generated io process view correct accurate