project working using guice trying much possible dependency injection however one little snag many object rely context immutable information object need properly never change class working within context application must able support different context time scope think three way solve problem num currently found writing lot almost always method like factory create context c depends context created manner even otherwise simple num starting consider using provider changing every factory create context obj provider get obj c want rely call like make sure every context context cannot change never num research pointed thread num guice assisted injection deeper dependency hierarchy idea pairing context one bind context sure ensure everything using correct child injector seems like might best thread scenario sure right situation sscce might done option num public public static injector inj guice createinjector new injector inj new foomodule new foo num injector inj new foomodule new foo num bar bar getinstance bar system println bar baz bar getinstance bar system println bar baz private static extends override protected configure private static bar private myinterface intf inject public bar myinterface intf public baz intf dosomething private static foomodule extends private foo f public foomodule foo f f f override protected configure bind myinterface f private static foo implement myinterface private public foo override public dosomething private static interface myinterface dosomething