recently posted asking drawback server process bind dynamically assigned port approach came launched server process allocates stdin stdout server communication channel client wanted server use bidirectional socket response operation team convinced abandon approach need daemon process monitor designated port fork concurrent server server process written using infrastructure socket based developed server process launched first thing bind dynamically assigned port number send port number client stdout listen socket client connect point good go socket based infrastructure operation team use dynamic port security ground see link looking alternate way client connect dynamically spawned server communicate using socket simplest solution would something identical respect instead allocating stdin stdout server connection client would pas socket allocated daemon accept ed connection server presumably since socket number predictable daemon would also need pas number command arg written daemon perl hesitate roll certain x far better hardened could easily come problem conceive simplest solution appreciate hearing alternate solution even whether fact configured pas socket described