quick background designing pythonic language want powerful lisp remaining easy use powerful mean flexible expressive introduced decorator like found question suggests decorator powerful lisp macro third answer question say reason operate function could use decorator arbitrary expression language expression first like function everything else would fairly natural would make decorator powerful lisp macro would use syntax rule like racket technique edit asked provide example syntactic construct expression decorator would simply decorator expression creates expression decorator params printf else printf also need use syntax rule mentioned would use pattern matching syntax match bool expression comma macro assert expr bool lit e e else printf good would match assert num num rough sketch give idea