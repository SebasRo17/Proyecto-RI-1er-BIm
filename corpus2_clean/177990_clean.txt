faced implementing interface rather archaic system handling online stored account think campus card account student dilemma stage num process involves passing user thrid party site credit card transaction like old school paypal step two involves using proprietary protocol communicating legacy system conducting actual deposit step two requires transaction unique sequence number request order since logging transaction postgres first thought take number sequence db guaranteeing uniqueness since dealing web request might come near simultaneously since latency ste payment processor beyond control always chance race condition order request passed back proprietary system order request fails silently brilliant right thought enqueuing request redis using resque worker process single worker single process processed order need able give user feedback whether transaction processed successfully seems less feasible tried make application handle concurrency well much possible ruby rail app situation interact system designed single process single threaded sequential least gave order could increment take next sequence designed fail silently event handling timeouts way block since application us multiple worker unicorn guarantee idea suggestion would appreciated