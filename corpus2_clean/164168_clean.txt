exercise implementing hashlife go brief hashlife work memoizing node quadtree given node future calculated looked instead calculated eg node 8x8 level remember four child 2x2 level next time see 8x8 node calculate next generation first check already seen node four child extended level quadtree give pretty amazing optimization eg num level leaf unsurprisingly look like crux lookup node child node value currently hashmap upper left node upper right node lower left node lower right node node lookup func ul ur lr node node var node node var ok bool nc ul ur lr node ok nc ok node node node ul ur lr num ul level num nil nc node node trying figure nc cause memory allocation time called move declaration global scope modify value time called efficient way advice feedback would welcome even coding style literally first thing written go love feedback