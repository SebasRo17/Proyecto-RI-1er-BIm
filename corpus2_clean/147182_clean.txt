working embedded using c various piece functionality need non blocking stateful function mostly implemented using switch various state example modem connection manager pseudo manage connection static state state idle switch state case idle connection requested state break case random delay timeout connect state connected break case connected result send result sent state idle else result go straight state connect asap state break state machine nasty best time started move different paradigm using coroutine style function using yield statement course c provide yield statement using achieve great give exactly want implement non blocking state machine structured programming style roughly translates pseudo manage connection wait connection requested condition yield wait random delay timeout connect wait result send result sent restart start top part api restart else result part translate well could use ugly goto goto similar alternative none scale well set flag skip state want restart use loop control logic branch appropriately see version whole much clearer simpler term flow logic learn work look past minor boilerplate included example jumping particular state state machine common pattern come across state machine version handle elegantly procedural version course procedural version less bug prone clearer jump place whim except goto like avoid usual reason however good reason want jump add significant bug prone lack clarity otherwise straightforward obviously plenty way achieve necessary functionality none scale well state bear mind simplest possible example real world function fill half screen way solve problem way muddy otherwise lucid flow logic