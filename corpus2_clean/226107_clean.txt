working software product number field customer leave blank numeric persist database use nullable column easy peasy considering utility oriented domain model one thing bug issue nullable field reason world c one often find advice value indeed writing check place suck get reference exception forget check mess good approach initialize everything declare idea actually make sense field customer enter thus num num etc application programmer programming language seem configured binary rather ternary logic also variable darn well rather maybe also maybe oriented design presume one could come clever system representing case personally done analysis yet reason find incremental change successfully sell people radical change proposing oriented domain model oriented might kill idea thus hope improving structure software rather propose version num domain model work easy sell internally whole thing value weighs heavy mind since using c could define nullable number easy one add question mark convinced possible also best approach background junk way question company handled nonexistent value oriented domain model way find effective way find ineffective selection criterion answer one seems sellable defined background junk really like see people come learn new thing answer thought behind receive upvote note seen discussion value thread nothing quite line want talk hence new question edit question scope includes typed property like number c one way allow representation purchase price would declare decimal nullable decimal see number disadvantage number example also looking alternative edit num pattern make sense reference using nullable value appears may tractable coalescing bother coalescing type someone forgets coalesce exposed reference exception suppose could maybe use static analysis tool ensures coalescing used expected worry edit num sense someone made conscious decision make field nullable adding ability represent extra piece information would otherwise need another field represent boolean hasvalue mean anti zealot met past perhaps incorrect measured use nullity fact improve design