working project running difficult problem problem stated simply unit test numerical algorithm however took simple statement would get standard set answer isolation random process mocking etc answer one reside also note concerned testing correctness algorithm done different method assumed algorithm correct using unit testing make sure change part system support algorithm change algorithm test description problem algorithm take processing generates image corresponding map pixel good one map need verify change pixel valid used way fact invalid given would many possible solution fact using year look number valid pixel average standard deviation peak valley image proven sensitive detector change year added complication causing issue approach number thread used increased causing change floating point behavior past smaller number thread accounted tolerance used using floating point compared double increase throughput caused rounding behavior change even combined number thread make worse also made worse move using simd processing like gpu instruction set enhancing algorithm used recover pixel would marked invalid past valid combined num num resulting pixel included machine others since edge useability difference handled algorithm use image concern system whole causing problem unit testing algorithm also recently ran problem two number internal calculation rounding behavior one picked resulting different output problem system whole unit testing flag difference minor side example also non linear algorithm due rounding behavior give different output since algorithm self correcting final solution good higher variability easily accounted unless tolerance opened larger desired question account issue unit testing strongly need unit testing team programmer working system need ability detect someone make change unknowingly impact algorithm yes happened past used time caught change reached final product primary algorithm developer use help many idea work case clear use one different method edit frequently called regression testing also know many time also generically called unit testing many people even completely correct necessarily looking magic bullet would nice need way handling issue way handled others group may knowledgeable detail pick one method fine rule clear adjust parameter change algorithm fixed floating point behavior still causing difference see difference always investigate general try adjust algorithm reduce difference time possible additional computation time stayed away limit would issue past advance technology need push limit giving rise issue described see simple example calculating average many number stay number close simple method make sure result accurate allow number large order mag difference threading float compared double etc get different result yes know algorithm used fix issue computation expensive averaging problem could imagine difference impact downstream processing still want write test monitor calculation