post creator guido van rossum mention early attempt remove gil tried disappointing result reluctant put much effort num greg stein mark produced fork num believe removed gil replacing fine grained lock mutable structure also submitted patch removed many global mutable structure accepted however benchmarking shown even platform fastest locking primitive window time slowed single threaded execution nearly two fold meaning two cpu could get little work done without gil single cpu gil enough greg patch disappeared oblivion see greg writeup performance hardly argue actual result really wonder happened presumably reason removing gil cpython difficult reference counting memory management system typical program call py py decref thousand million time making key contention point wrap lock around understand adding atomic primitive would slow single threaded program suppose modified cpython atomic primitive atomic increment fetch add instruction need increment reference count would make reference counting thread safe performance penalty single threaded application would lock contention ala many people smarter tried failed obviously missing something wrong way looking problem