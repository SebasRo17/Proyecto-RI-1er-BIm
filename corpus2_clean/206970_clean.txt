developing application consumes external service application implemented following typical layered architecture ui presentation domain layer service client resides within layer typically case want ui lock waiting call external service complete however implementing service agent asynchronous method result complicate model chaining async method layer ui stay responsive example viewmodel continuewith result public task serviceclient note significant simplification meant convey mean task chaining requirement ui requirement prevent ui locking make sense keep domain layer synchronous leave presentation layer decide need perform operation asynchronously hand easy natural implement service client proxy async method v auto generate needed think think need async application pulling database instead making service call layer different really change ui presentation domain layer implemented right case think twice access synchronous would better design model domain synchronously leave presentation layer address performance issue ui emerging async world accept async norm make everything fit model