first main reference thread linking fortran librarylink teach make link fortran subroutine mathematica code using librarylink must done c code fortran subroutine called c code compiled via mathematica studied example tried doubt load fortran library e g using fortran command open within subroutine whenever try call subroutine contains open read error message screen read minimal example fortran subroutine subroutine read b c store b c variable sum additionally open read close file dat fadd f subroutine add b c sum implicit none integer b c sum sum b c open file file dat read close return end subroutine file dat contains number minimal example value used anywhere simplification actual code would use dat file make complicated computation calling subroutine c mma cc link directly fortran object file include wolframlibrary h dllexport mint wolframlibrary getversion return wolframlibraryversion dllexport int wolframlibrary initialize wolframlibrarydata libdata return declare fortran subroutine extern c void add mint mint b mint c mint sum extern c dllexport int add wolframlibrarydata libdata mint argc margument args margument re mint margument getinteger args mint margument getinteger args mint margument getinteger args mint sum add sum call fortran subroutine margument setinteger re sum return library error mathematica create library load library function need ccompilerdriver createlibrary mma cc fadd myadd debug true targetdirectory funcadd libraryfunctionload myadd add integer integer integer integer print funcadd exit error running mathematica linux terminal optifi wolfram mathematica systemfiles kernel binary linux x mathkernel symbol lookup error myadd undefined symbol gfortran st open compiling fortran code run linux terminal gfortran c fpic fadd f fpic added requested error message telling recompile fpic