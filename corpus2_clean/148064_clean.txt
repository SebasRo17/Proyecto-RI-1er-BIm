assume stream record need computation record combination function sum aggregate sum last num second ignore record look like date id question assuming id kind corresponds matrix delegate use c dynamically build launch map sure idea exists used window form many delegate event never actually invoked real application sample includes delegate want sum count know make quantity delegate fire based source say even sum odds sample using system using system threading using system collection generic internal static delegate parameter private static try approach work returned threadpool queueuserworkitem new printout hello c num w num threadpool w c bool threadpool w c writeline perhaps need time set thread sleep num datetime datetime utcnow new printout list iasyncresult new list iasyncresult count num num count iasyncresult ar begininvoke new asynccallback callback add ar num count result endinvoke give callback time execute otherwise app may terminate called thread sleep num var re datetime utcnow writeline program done total time re catch exception e writeline e readkey static printout parameter writeline thread currentthread managedthreadid delegate printout waited printed parameter var tmp parameter parameter tmp static sum parameter thread sleep num pretend math maybe save summary disk separate thread parameter static count parameter thread sleep num pretend math maybe save summary disk separate thread parameter static callback iasyncresult ar ar asyncstate writeline callback delayed returned endinvoke ar