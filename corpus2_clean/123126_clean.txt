following situation base multiple derived class include iostream base public virtual foo num derived1 public base public virtual foo std cout derived1 foo n derived2 public base public virtual foo std cout derived2 foo n want make sure user always use base use hierachy got idea provide factory method returning good method look like base make base num derived1 else derived2 client use way base b make base num b foo assuming c num compatibility needed considered good practice p sorry writing english native person edit deadmg point initial make base undefined behaviour require client use base could recommand kind factory better idea include trait include template derived derived make base static assert std base base derived derived must derived base default behaviour derived template derived2 make base derived2 specialise behaviour something derived2 auto b make base std derived must derived base base b1 make base derived1 call make base base b2 make base derived2 call make base derived2 b1 foo b2 foo