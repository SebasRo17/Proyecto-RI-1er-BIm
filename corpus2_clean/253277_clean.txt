see two obvious approach architecture io app need talk server job pretend web browser approach app fetch chunk typically json server response user action navigating new view controller tapping update whatever put spinner progress indicator update view request completes model class mapped directly incoming json possibly even immutable thrown away user move screen fetched populate pure version approach set appropriate header server let friend handle caching work fine assume user fast low latency network connectivity mostly reading server writing sync sync approach app maintains local core store model object display user refreshes either response user action periodically update ui via kvo similar model change user modifies model change sent server asynchronously must mechanism resolving conflict approach suitable app need offline high latency slow network context user writing lot need see model change without waiting server round trip third way app mostly always read writes user see update reflected ui immediately app usable low network situation showing previously cached request server time respond get best world without going full core sync feel heavyweight difficult get right without also inadvertently implementing buggy incomplete clone core