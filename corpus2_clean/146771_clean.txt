strategy pattern work well avoid huge else construct make easier add replace functionality however still leaf one flaw opinion seems like every implementation still need branching construct might factory file example take ordering system factory class implement switch case new order new neworder case cancellation new cancellation case new need worry one place add new order section still extensible pulling file help readability somewhat debatable know strategy order new order com company neworder order order cancellation com company cancellation order order com company order strategy still add boilerplate process file granted easily unit testable relatively stable additional complexity also sort construct integration test well individual strategy may easier test every new strategy add addition complexity test less would used pattern still way implement strategy pattern mitigates complexity simple get trying go would add another layer abstraction little benefit