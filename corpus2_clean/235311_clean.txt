long experience programming ee project noticed job done transaction script anti pattern want learn using rich domain model question shall domain depended container system service persistence mail read article agree service initialized injected domain entity single responsibility paradigm also read applying uml pattern fantastic book know author describe shall responsibility assigned entity defining access layer chapter num best practice rich domain model dependency container system service example consider following scenario software agent work system agent business selling insurance policy insurance policy special pre printed card given agent agent give insured need track agent number available card use case record many card given agent use case recording agent number damaged unused card card used agent sell insurance policy believe rich domain model suggests shall following agent agent agent shall depend num dao class one responsibility one calculating sum count card given agent one calculating count used card selling insurance policy one calculating sum damaged card believe make domain entity mess good practice