want write function construct possible dessins enfants bipartite graph fulfilling certain criterion given collection data presented following form begin bmatrix r left right r left right ldots r left w right r left right r left right ldots r left b right r infty left right r infty left right ldots r infty left right end bmatrix graph produced every r left right white node r left right edge emanating therefrom w white node total every r left j right black node r left j right edge emanating therefrom b black node total white node join black node vice versa graph bipartite graph face k th face polygon r infty left k right side useful simplification case interest j r left right r left j right focusing specific case attempted solution illustrate graph top page article correspond data given top page article taking specific example ia see graph white node three connecting edge criterion satisfied graph black node two connecting edge criterion satisfied graph bipartite criterion satisfied graph six face one individual box one around outside eight edge criterion satisfied would like write mathematica function reproduces graph corresponding vector data input complication sometimes case one set data multiple dessins example consider following data begin bmatrix end bmatrix mathematica input would something like three dessins associated drawn vertex corresponds white node author omitted black node presumably done sake clarity way example also illustrates something confused start polygon time edge found going round whole outside graph appreciate exactly trivial problem approach far create graph b w vertex initially edge making first b vertex black next w vertex white connect black vertex two white vertex white vetex connected three black vertex least two distinct check resulting graph connected use cycle algorithm one identify cycle graph starting white vertex backtrack e go white vertex black vertex back white vertex unless intermediate black vertex connected initial white vertex cycle edge number given r infty left k right draw graph move onto next permutation connection black vertex white vertex else move onto next permutation connection black vertex white vertex post explicit code algorithm asap e reworking hopefully get something think likely efficient way going problem sure elegant solution possible