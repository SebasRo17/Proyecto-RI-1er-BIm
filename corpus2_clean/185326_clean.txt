need play devil advocate question bit cannot defend well lack experience deal get conceptually difference unit testing integration testing specifically focusing persistence method repository unit test would use mock possibly via framework like moq assert say order searched returned expected let say built following unit test testmethod public us moq dependency getting order make sure id set arrange one returned test assertion set num mock return num id test pas get unit tested make sure preforms return expected id something else argument get skip unit test integration test testing database stored procedure together important seems like much extra work unit test integration test ultimately want know database call work know test take longer tested regardless seems pointless test matter could defend text book definition like well integration test need test separately unit test yada yada yada case purist explanation practice v reality loosing sometimes defend reasoning behind unit testing ultimately relies external dependency make case help question greatly appreciated thanks