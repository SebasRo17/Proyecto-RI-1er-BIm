intend write function calculates result error formula amount variable using gau error propagation error mathrm r function r b c corresponding error mathrm mathrm b mathrm c calculated r left left partial mathrm right left partial b mathrm b right left partial c mathrm c right right since huge amount formula one could wish use different amount variable function adaptive first shot following function already job pretty well gaus data matrixq evaluate symbol x tostring data length data norm derivative sequence evaluate table symbol x tostring length data identitymatrix length data data sequence evaluate table symbol x tostring length data print n n accepts function phi layout like r b c b c list value error pair creates corresponding amount intermediate variable x xn n number pair used calculate error alpha value printed problem really want intermediate variable xi alpha local currently global problem function existing variable overwritten proved annoying calculation first try use module similar module evaluate table symbol x tostring b b module lvsym local variable specification evaluate table symbol x tostring b contains evaluate table symbol x tostring symbol assignment symbol produce error message could course define variable x x directly rarely ten value per formula would terribly inelegant several futile try later running possibility rephrase search since neither native speaker significant programming background would happy someone could provide idea create adaptive amount local variable update thanks answer jens use downvalues could modify code following gaus phi data matrixq module df f x x data length data df norm derivative phi sequence array x length data identitymatrix length data data f phi sequence array x length data print n f n df reason get rid elavaluate function although understand reason error basically answer introductory question comment acl night sleep made realize approach indeed wrong task achieved without using intermediate variable using sequence somehow eluded gauss phi data matrixq module df f df norm derivative phi sequence data identitymatrix length data data f phi sequence data print n f n df seems like much cleaner easier function