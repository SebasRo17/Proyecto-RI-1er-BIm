hpc many computation node node corresponds independent machine every node several core example per node mathematica launch remote kernel different node see method kernel launched mathematica seems regard kernel thing use parallelmap different option finestgrained coarsestgrained distribute computation task different kernel regardless node kernel belongs case want distribute computation task according machine instead kernel computation involves matrix eigenvalue matrix large memory usage considerable node limited memory resource parallelize computation finestgrained kernel exhaust memory probably would cause node break one way solve launch limited number kernel node example launch one kernel per node one kernel node eat memory way lose multi thread feature eigenvalue computation see memory usage determined dimension matrix using core core compute matrix need amount memory obviously core faster launch one kernel node wasting remaining core node question distribute computation task according machine instead kernel preserve multi thread feature built function mean create new option finestgrainedtonodes distribute computation task evenly different node