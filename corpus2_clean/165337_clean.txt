difficulty understanding ipc multiprocess system system three child process send two type signal process group four type signal handling process responsible particular signal monitoring process wait signal process accordingly program monitoring process seem pick signal well signal handling process could see log signal generated handled given include cstdlib include iostream include include h include sys type h include sys wait h include sys time h include signal h include h include fcntl h include cstdio include stdlib h include stdio h include pthread h using namespace std double timestamp struct timeval tp tp double tp tv sec tp tv num double srand time r rand num num double double r num count count 1 count 2 double time 1 num double time 2 num pid sender num pid handler num pid reporter sig printf signal called sig argc argv signal pid pid w status signal sig sig err perror num num signal sig sig err perror num num signal sigint signal sig err perror num num registering signal handler num num pid fork num cout endl struct sig result num num num signal sig sig err perror num num sig block else signal sig sig err perror num num sig block result sig result num cout caught signal sig endl exit num else cout handler pid endl handler pid registering monitoring process pid fork num sig result num sig block result sig result num cout monitored signal sig endl else cout endl else reporter pid sleep num registering signal generator num num pid fork num signal sig sig err perror num num signal sig sig err perror num num srand time num volatile signal id rand num num cout generating signal signal id endl signal id num else r rand num num double double r num sleep exit num else cout registered sender pid endl sender pid w wait status cout wait pid w endl signal sig cout handling ctrl c signal endl num num kill sender num num kill handler kill reporter exit num suggestion sample well beginning handler num handler num num handler num handler num num num num registered sender num generating signal num caught signal num monitored signal num caught signal num generating signal num caught signal num monitored signal num caught signal num generating signal num caught signal num monitored signal num caught signal num generating signal num caught signal num monitored signal num caught signal num generating signal num caught signal num caught signal num monitored signal num generating signal num generating signal num caught signal num caught signal num generating signal num caught signal num monitored signal num monitored signal num generating signal num generating signal num caught signal num generating signal num generating signal num num monitored signal num caught signal num generating signal num caught signal num monitored signal caught signal thethe caught signal num generating signal num later monitored signal monitored signal num generating signal num generating signal num caught signal num caught signal num caught signal num caught signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num caught signal num caught signal num caught signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num generating signal num caught signal num generating signal num generating signal num generating signal num see initially signal generated handled signal handler monitoring process later signal generated lot quite process magnitude could see less signal processing monitoring process anyone please provide insight going