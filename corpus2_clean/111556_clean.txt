several response database schema question suggested additional table normalize database feature part current requirement table allow many many relationship employee user different department may belong normalization seems like come database design strong push include feature sure someone want future difficult add table field database accomodate feature tendancy engineer refactored upgraded like rest app needed redoing thing never fun moving one table new one done sure thinking end edit much aversion wonder many project end adding feature requires drastic database change non normalized approach taken like adding field instead new table need multiple department employee common domain problem noticed many database schema littered many many relationship