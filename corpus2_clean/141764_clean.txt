project team num devs included long discussion handle extra work come course single work item extra work usually thing slightly related task always necessary accomplish goal item may opinion example include limited refactoring changed work item refactoring neighboring changed item architecting larger area around ticket example item changing single realize entire could redone better accommodate change improving ui form modified extra work small mind problem extra work cause substantial extension item beyond original feature point estimation sometimes num point item actually take num point time one case num point item retrospect could num point two option going around discussion handle num accept extra work work item write mi estimation argument included plan padding end sprint account sort thing always leave better shape found check half assed work leave refactoring later hard schedule may never get done best mental context handle work since waist deep already better get way efficient lose context come back later num draw current work item say extra work go separate ticket argument include separate ticket allows new estimation lying many point thing really admit estimation terrible sprint padding meant unexpected technical challenge direct barrier completing ticket requirement intended side item nice have want schedule refactoring put top backlog way u properly account stuff estimation since seems somewhat arbitrary come reviewer might say ui control actually modify work item bit confusing fix like hour might say well control inherits base others move hundred line base stuff cascading change etc take week crime scene adding unrelated work ticket making original feature point estimate meaningless case extra work check causing blocking devs u saying decide cut like additional stuff less num fp go ticket make new ticket since month using agile opinion seasoned agile veteran around handle