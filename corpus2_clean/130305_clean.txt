project non functional requirement specify maximum execution time specific action qa must check performance action dedicated machine using precise hardware precise load hardware load specified requirement hand erroneous change source may severely impact performance noticing negative impact early source reach source control verified qa department could beneficial term time lost qa department reporting issue developer fixing several commits later good idea use unit test idea time spent executing action n time use per test timeout testmethod timeout num attribute c expect several problem approach conceptually unit test really expected test small part nothing neither check functional requirement integration test performance test unit test timeout visual studio measure really expected measured taking account initialization cleanup nonexistent test short affect result measuring performance way ugly running benchmark machine independently hardware load etc like benchmark show one database product always faster another hand expect unit test definitive result something used qa department unit test used give general idea expected performance essentially alert developer last modification broke something severely affecting performance tdd impossible test would fail first place starting implement many performance test affect time required test approach limited short action taking account problem still find interesting use unit test combined real performance metric qa department wrong problem make totally unacceptable use unit test wrong correct way alert developer change source severely affected performance source reach source control verified qa department actually unit test expected developer pc comparable hardware performance reduces gap fastest machine never able fail performance test slowest machine never succeed passing action mean rather short piece spends millisecond