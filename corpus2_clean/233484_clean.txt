say header file bad design know answer specified inefficiency header file building bad design really touched upon far know header let break source file compile smaller thing faster header let separate interface implementation header let specify functionality one place ie repeating yet using includes include guard header etc considered bad design alternative edit dry issue common argument violates dry repeat change signature cpp h file however designed reuse functionality specified outside file unavoidable header file must used question asks header file bad design yet without header modularity lost modularity lost design issue thus using header file separate design issue repeating general bad idea get seems unavoidable require common functionality case header bad term signature repetition term design software inclined say splitting modularizing reusing mean designed well