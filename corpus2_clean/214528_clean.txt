review stumbled interesting idea properly judge alone ok improve readability mean widely known language syntax original writer use special syntax designated solving specific coding problem solved simulating workarounds worth refactor clarity conciseness even reviewer know language feature specific bring exact issue met review keep mind example original little web service point arised requirement several request handler protected authentication mechanism somebody solved inheritance def get self hasattr self protected get raise web check auth self protected get else raise web unauthorised def post self hasattr self protected post raise web check auth self protected post else raise web unauthorised foohandler def protected get self b c handle foo get b c def protected post self x z handle spam egg handler deriving found ugly introduced decorator import wrap def requires auth wrapped func little doc telling decorator use wrap wrapped func def decorator check auth wrapped func else raise web unauthorized decorator foohandler requires auth def get self b c handle foo get b c requires auth def post self x z handle spam egg refactored handler reviewer argues change actually decrease maintainability team know decorator syntax next person visiting refactored could puzzled construct previous version also convincing argument codebase language little web service hence team member required even shallow knowledge however work one going need know language right temptation say decorator advanced syntax please remember example every language dark corner learn corner mean become better question read unknown syntax elegance worth surprise least tradeoff guideline really need opinion community programming professional