question inspired stack overflow question decided solve using mathematica addition mathematica thought use new version graph related functionality never really explored past seemd like natural fit got program awkward everything seemed first board orginal question f x e l e w b x u use mix feature turn graph importstring able copy past browser directly string literal notebook makeboggleboard string makeboggleboard importstring makeboggleboard mat string matrixq mat dims dimension mat cpatt integer integer dpatt alternative coords tuples range dims vertexrules thread coords thread range length coords flatten mat edgepattern c cpatt c cpatt matchq c c dpatt graph case tuples coords c edgepattern undirectededge c vertexrules already seems little bit clunky difficulty come trying associate letter vertex graph keeping vertex distinct however mostly seems work well also help winnow dictionary contains valid word must three letter use letter board part least pretty easy quick makeboggledictionary board graph char tolowercase deleteduplicates vertexlist board dictionarylookup char char char char time traverse graph finding word along way need traverse possible path vertex check see path far spell word collect order keep performance reasonably hand want cull path possible spell word quickly possible function came findwordsinboggleboard graph graph dict string makeword tolowercase stringjoin lookup function pattern flatten stringcases dict startofstring pattern endofstring module extendpaths extendpaths v adj deletecases vertexlist neighborhoodgraph graph v v join extendpaths v adj extendpaths v path module extended append v path nexts string feasible adj deletecases vertexlist neighborhoodgraph graph v v string makeword extended scan sow lookup alternative string feasible pick extended function string matchq select lookup string stringlength string string nexts deletecases select feasible function path freeq path adj extendpaths nexts reap scan extendpaths vertexlist graph null null word string union word performance sort acceptable take second find word sample board entire approach taking seems ugly particular repeated use neighborhoodgraph find adjacent vertex recursion extendpaths seems faintly ridiculous whole approach feel quite low level compared graph function anyone suggest possible way speed edit part interested seeing whether mathematica graph function good fit problem though course happy see good fast implementation people posted