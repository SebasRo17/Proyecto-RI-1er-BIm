trying better understand would required able make intelligent choice regarding concurrency behalf programmer realize many difficult aspect problem instance ensuring race condition ensuring concurrently side effect impact semantic meaning deciding whether overhead spinning thread worthwhile given degree parallelism available understanding two major intermediate representation used modern compiler static single assignment procedural oriented language continuation passing style functional language reasoning problem listed seems difficult using intermediate form even language theory best chance automatic parallelization pure functional language like haskell guarantee side effect made limited progress front question really intermediate representation used try tackle problem representation used academic research aware better suited task problem one fundamentally resolved front end manipulating abstract syntax tree compilation reach intermediate representation