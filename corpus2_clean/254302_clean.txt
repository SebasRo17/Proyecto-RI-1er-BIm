started programming imperative programming language c virtually game town paid gig computer scientist training exposed assembler pascal school lisp prolog 1990s oriented programming oop became popular one marketing oop complex program could composed loosely coupled well defined well tested cohesive reusable class object many case quite learned oriented programming c program became better structured like class object last year num num programmed ruby oop language however ruby many functional programming fp feature lambda procs enable different style programming using recursion currying lazy evaluation like ignorance loss explain technique great recently written use method ruby enumerable library map reduce select apparently functional style programming found using method significantly reduce volume make easier upon reading fp one marketing claim made advocate fp enables developer compose program small well defined well tested reusable function lead less buggy low volume question num composition complex program using fp technique contradictory complementary composition complex program using oop technique num situation oop effective fp effective num possible use technique complex program num technique overlap contradict