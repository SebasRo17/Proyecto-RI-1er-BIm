currently reading head first design pattern already first chapter threw question towards chapter introduces prefer composition inheritance design principle explaining strategy pattern question pattern much simple thing book abstract duck hand full duck class like e g rubber duck inheriting duck got display quack display every special duck every duck look different book say abstract duck public display public quack quack extends duck override public display display rubber duck extends duck override public display display duck question make much sense field inside non abstract duck contains displaying information picture 3d model example rather inheriting abstract duck duck private private picture public duck picture picture picture public quack quack public display show duck according field method maybe getter field think make sense abstract duck inherit would prefer second attempt