never written software common lisp scheme clojure well c yet look common lisp system clos common lisp dylan comparing oop simula tradition clos let say c system polymorphism common trait seem differ way method organized simula family method integral part class sub item clos defined outside class rather generalized procedure common lisp proponent typically argue virtual method simula family programming language quite limited since invoked according first argument self clos generic function selected several argument thus something like pseudo draw c device drawable implemented arbitrary canvas drawable combination draw c printer triangle draw c printer image draw c screen image simula family language would difficult since draw would associated either device drawable family object canonical solution seems visitor pattern upon learning clos quite amazed oo programming language offer multiple dispatch wondered specific reason one might associate method closely one specific specific advantage single dispatch ambiguity multiple dispatch e let say subclassing b subclassing b foo b implemented foo b foo b implementation would call foo b invoke reason modularizing method near language designer creator taken stance matter