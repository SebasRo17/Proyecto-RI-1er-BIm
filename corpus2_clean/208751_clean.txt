maintaining ad hoc script check style project guideline aware astyle uncrustify used best style cleanup impractical automatic process every commit explain issue little yes style documentation devs always follow exactly really great give personal mail every time make tiny change go convention took approach deal like warning report inconsistency leave developer resolve may familiar pep8 style checker every often style cleanup general happy outcome unlike style checking tool get get lot flexibility choose strict relaxed convention avoid many positive important currently using pygments parse c source c also mainly c script check tokenized result meet convention work fairly well need full ast get gcc clang example simply knowing text comment punctuation preprocessor etc enough would get syntax highlighting source tokenizer end write quite utility function source extract body block bracket find matching bracket identify cast inspecting whitespace around punctuation nothing really advanced exact convention probably important example check placement brace statement check broken multiple line placement break switch statement space around operator brace call comma indentation multi statement indentation consistency point would interested move away utility function still script check style something else well maintained solving similar problem surprised people similar project maintain consistent source style way interested know alternative available question considering workflow described anyone cite experience using similar workflow project already interested see precedent