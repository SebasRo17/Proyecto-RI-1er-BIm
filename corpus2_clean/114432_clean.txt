application several event handler perform action response user interface event button click menu selection event handler look like example mydialog text file txt txt file txt num const std path std vector std url setting get setting new path url url displaymessage url loaded typical event handler monolithic event handler glue various piece together usually business logic service class ui reference event handler make call one perform desired task wondering still coupled wanted turn command app extract bit piece ui example compound action going thinking look like mydialog text file txt txt file txt num const std path application path displaymessage url loaded right would application controller right abstraction whenever need perform task ui handler always one liner aside getting text box etc anyone pointer tutorial really cover programming language furthermore fact abstract compound action propagate message within compound abstraction back ui exception hierarchy single exception update looking command pattern look promising update num end decided refactoring described humble dialog box paper accepted answer understanding model view presenter mvp pattern specifically passive view refactoring going smoothly rough edge understanding full application pattern come thing like displaying message box file open dialog dealing event timer overall happier tight coupling bothering also found bundle pattern practice web client developer guidance model view presenter mvp bundle sample mvp web project whereas current implementation desktop guess beauty mvp partly matter one thing got dependency inject service layer object presenter rather new ing inside presenter