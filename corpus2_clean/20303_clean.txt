edit thanks responded plenty information geforce gpu found new mid range mac laptop mandelbrot code run comfortably tenth second still quite curious compare geforce mx gpu come new high end imacs someone provides information answer happily accept original v came excited introduction gpu support far however really able take advantage way would like simply computer adequate gpu even cuda opencl supported one might see significant gain using gpu due think limited block size well appears getting new computer distant future like make sure happy gpu end wonder could receive feedback actual user experience specifically interested cuda opengl work midline mac laptop desktop laptop seem run nvidia geforce gpus desktop flexible going higher imacs cuda run machine specifically least following return true warning large package loaded wolfram research need cudalink cudaq false aware course system requirement documentation page indicates cuda run level geforce gpus hard time believing cuda still running main line mac point furthermore nvidia information seems conflict hence question also wonder folk mind trying little test say generate mandelbrot set since quite curious relative speed gpus accessed mathematica end simple opencl program generates escape time count generate mandelbrot image note blocksize parameter changed expert gpu programming believe higher end gpus generally allow higher block size larger block size permit parallelization computer allows blocksize lower lowering blocksize generally slows computation need opencllink blocksize code kernel void mandel kernel global real mset int xres int yres real xmin real xmax real ymin real ymax int xindex get global id int yindex get global id int real cx xmin xindex xmax xmin xres real cy ymin yindex ymax ymin yres real x cx real cy real tmp xindex xres yindex yres max iteration x x bound squared tmp x x cx x cy x tmp mset xindex yindex yres openclq true mandelcalculate openclfunctionload code mandel kernel real output integer integer real real real real blocksize blocksize defines max iteration bound squared print sorry computer even lamer mark assuming computer actually pass test following actually run program xres yres square xres yres mset openclmemoryallocate real xres yres mandelcalculate mset xres yres data openclmemoryget mset absolutetiming null yeah pretty fast computation performed following gpu renderer onscreen opengl systeminformation device graphicsdevices ati radeon hd opengl engine point compare gpus want generate image one way color map data image color groovy picture