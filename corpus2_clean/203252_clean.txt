read little domain driven design usage rich domain model described martin fowler decided put practice personal project instead using transaction script everything went fine ui implementation started thing view use rich component backed unusual model thus must transform domain model used component transformation specially complex view domain portion point business logic involved wich brings questioning adaptation far got following conclusion presentation layer good well layer imposes restriction model one handle bad business leakage service object controller action whatever good change domain api presentation layer bad transaction script wich intended design finally domain model leakage business logic future could expect explosion api series method designed handle view model domain model adaptation hope could make clear