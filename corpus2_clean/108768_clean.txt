point yagni take precedence good coding practice vice versa working project work want slowly introduce good standard co worker currently none everything kind hacked together without rhyme reason creating series class tdd sadly kind unit testing took step back thought violating yagni pretty much know certainty require need extend class concrete example mean access layer wrapping set stored procedure us rudimentary repository style pattern basic crud function since handful method repository class need created generic interface repository called irepository however created marker interface e interface add new functionality repository e g icustomerrepository concrete implement done thing factory implementation build business object datasets returned stored procedure signature repository tends look something like public customerrepository icustomerrepository factory public customerrepository new public customerrepository factory factory factory public customer find customerid access stuff factory build d table num row num concern violating yagni know num certainty never going reason give anything concrete repository since unit test need similar thing many interface might confuse co worker hand using concrete implementation factory seems like design smell good way come compromise proper software design solution questioning need single implemenation interface could sacrifice bit good design example base interface single concrete worry programming interface implementation ever used