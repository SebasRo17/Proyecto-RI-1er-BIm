edit envisioned answer post form mathematica code demonstrate internal check discussed bypassed everything go part think system relatively safe would like sure see challenge know question asked many time take idea mine borrowed many post site core best setup came think work designed robust lightweight spent quite time testing different possibility realized issue design system flow well mathematica end evaluation control standard versus non standard e use versus assignment interplay general specific definition departed obj id f f id design keeping obj field f tightly together challenge control evaluation detect incorrect use question whether setup indeed robust safe would encourage everyone find way abuse system help get idea robust safe system ad system begin objectexistsq false registerobject print cannot register object invalid id structure registerobject id objectexistsq id true isfieldq false neo attempt use non existing object nef use non existing field nif attempt use non initialized field obj id print neo objectexistsq id obj holdpattern obj id fm print nef isfieldq fm protect f isfieldq f true holdpattern obj id f print nif ad system end assume code cannot changed possible bypass check using e constructing expression involve obj id f note naturally print statement implemented interrupt edit imagine package invoked prepares definition seal definition obj etc alternativelly obj defined private scope package cannot directly accessed specification like obj initialized fail already object obj f attempt use non existing object even non existing field used obj f attempt use non existing object object initialized fail non initialized field registerobject obj f attempt use non initialized field field exist say obj f use non existing field assignment non existing object fail obj f attempt use non existing object ibid used non existing field obj f use non existing field assignment registered created object work registerobject obj f fail field exist obj f use non existing field possible construct piece mathematica code obj id f e g following erroneous assignment made registerobject obj f note code non existing field used edit specifically working phraser prepare ad system described beginning post convert source code example instancemethod args f f f args obj id instancemethod args obj id f obj id f obj id f args asking specifically design present good safety use point view possible find example source code cheat safety rule implemented ad system example worry one might use appendto simmilar construct perform wrong initialization example outcome appendto obj f value depends appendto internally behaves e g hold first argument behaves encounter non initialized list first argument etc course one try command see cannot possibly try command would like form general opinion thus question regard zoran