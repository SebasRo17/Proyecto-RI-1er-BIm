working large software project highly customized various customer arround world mean maybe num common various customer also lot change one customer past development separate repository svn new project started large customer created another repository based whatever past project best basis need worked past ran several problem bug fixed one repository patched repository might problem organization find difficult fix patch bug num different repository keeping mind team maintaining repository might another part world test environment neither know schedule requirement bug one country might feature another feature improvement made one project might also useful another project lost used another project often cause big headache merging one base another since branch might developed independently year refactorings improvement made one development branch either lost cause harm good merge change branch discussing solve problem far came following idea solve num keep development separate branch organizing better central repository general bug fix merged project merge change central repository regular e g daily basis requires huge discipline lot effort merging branch convinced work keep discipline especially time pressure put num abandon separate development branch central repository life customization pluggable module configuration option already using dependency injection container resolve dependency following mvvm pattern cleanly separate business logic ui second approach seems elegant many unsolved problem approach example handle change addition model database using net entity framework strongly typed entity see handle property required one customer useless another customer without cluttering model thinking solving database using satellite table separate table extra column entity live num num mapping original entity database handle model life central library would able extend customer using approach sure team struggling problem shocked find little material topic question following num experience highly customized software approach choose work num approach recommend better approach num good book article topic recommend num specific recommendation technical environment net entity framework wpf di edit thanks suggestion idea match already team really helpful see experience tip better implement still sure way go making decision alone pas along team sure helpful moment seems single repository using various customer specific module sure architecture much invest make fit thing might live separate repository think solution work thanks response