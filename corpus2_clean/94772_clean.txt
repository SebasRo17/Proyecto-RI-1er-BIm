seen sql injection attack seems suggest parametrized query particularly one stored procedure way protect attack working back dark age stored procedure viewed poor practice mainly seen less maintainable less testable highly coupled locked system one vendor question cover reason although working project virtually unaware possibility attack various rule adopted secure database corruption various sort rule summarised num client application direct access database table num access table view update base table done trigger num item domain specified num item permitted nullable implication dba grinding teeth occasion enforced num role permission set appropriately instance restricted role give view right change set enforced rule though necessarily particular set appropriate alternative parametrized query preventing sql injection attack database secured attack database specific measure edit emphasis question changed slightly light initial response received base question unchanged edit2 approach relying query seems peripheral step defense attack system seems fundamental defense desirable may render reliance query necessary less critical even defend specifically injection attack approach implicit question based database idea whether viable option research suggested approach found following source provide pointer approach principle feature taken source num extensive dictionary combined extensive security dictionary num generation trigger query constraint dictionary num minimize maximize answer far useful point difficulty arising disregarding query ultimately answer original question emphasised bold