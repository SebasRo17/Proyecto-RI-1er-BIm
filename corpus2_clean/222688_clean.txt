evaluator custom language would like replace sort routine std sort routine possibly parallel sort problem allow user language supply comparison routine implementation tried std sort take kindly routine fail strict order particular quickly start looking element outside iterator range sort assume put indirection layer top iterators could avoid using virtual sentinel reason assume resulting call would necessarily ever terminate given black box bool f widget const widget const b non user controlled total order operator widget const widget const b would minimal amount call would need make get sort call terminate order according f fact order look like following work hoping could get fewer call f clever possibly remembering previous comparison call bool f stabilized widget const widget const b bool fab f b bool f b fab fab b would reasonable start calling f seeing n num call list length n fall back stabilized version realize reason assume result would correctly ordered would need start beginning wrapper