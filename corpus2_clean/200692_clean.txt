many comparative study available online come runtime performance application built using one language another driven corporation academic personal experiment report also get decent share comparative study side effect programming language tooling like build time likelihood post production bug detection expressive power etc however recently memory consumption program anything else might come fact moore law side raw performance come realize bottleneck matter tend update hardware every often old read num num num 6ghz pentium num 4gb ram nowadays hard pressed useable large application without requiring go great trouble squeeze every bit juice choice o ui tweaking service daemon choice application use task another quite honestly sometimes fire top sight memory used innocent program address keeping push direction listed essentially trying limit program use dear love cli program reason guess also cannot help think maybe wrong modern tool modern need course higher level language arguably better justify worth dead weight design choice made good supposedly well intended reason time many toolchains shared library memory model pre processor system etc might viable others modern hardware curious read serious study matter question benchmark game others focus comparison language base runtime memory consumption even study cross reference parameter similar article instance criterion also based benchmark game