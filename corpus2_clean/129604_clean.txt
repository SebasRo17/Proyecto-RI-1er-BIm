reading site seen many story interview question answer saying candidate implement linked list scratch usually gimme exercise programming role candidate like writing fizzbuzz idea candidate program rejected almost immediately however help think could poor practice following reason modern higher level language like c natively use list extensively writing linked list would required unusual circumstance even probably ill advised lower level language like c standard library iterators list container object light first two point coder go year without even thinking implementing list linked doubly linked etc may even really see thing since college day computing power also factor year ago efficiency via pointer issue used general simple web search something like linked list example would bring plenty example could memorized back really indicating competence applicant say using linked list lead open ended question discussion candidate problem solving critical thinking ability mostly likely really good interview practice way interviewer really see applicant like think massively beneficial think binary approach linked list job programmer working desktop web application bit outdated could also quite harmful candidate remember properly work head list could otherwise excellent coder co worker lost mix thought edit many good comment suggesting whether good bad question ask depends context job strongly agree let rephrase question implementing linked list common interview question wide range coding job similar question like fizzbuzz writing recursive calculating factorial question enough utility used commonly evaluating programming candidate across board considered bad question ask except senior developer embedded linked list team position