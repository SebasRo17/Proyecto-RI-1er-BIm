continued problem librarylink memory usage question following code x performance difference change mmasrc include wolframlibrary h include wolframcompilelibrary h dllexport mint wolframlibrary getversion return wolframlibraryversion dllexport int wolframlibrary initialize wolframlibrarydata libdata return extern c void zspsv char uplo const mint n mint nrhs mcomplex mint ipiv mcomplex b mint ldb mint info extern c dllexport int lpksolveaxbs wolframlibrarydata libdata mint argc margument args margument re mtensor ta margument getmtensor args mtensor tb margument getmtensor args mint n mtensor getdimensionsmacro tb mcomplex mtensor getcomplexdatamacro ta mcomplex b mtensor getcomplexdatamacro tb mtensor tclone char u u mint ipiv n mint nrhs mint lda n ldb n mint info mint j mcomplex ap n n j j n j j ap j j n j zspsv u n nrhs ap ipiv b ldb info libdata mtensor clone tb tclone margument setmtensor re tclone return library error need ccompilerdriver createlibrary mmasrc lpk debug true targetdirectory tmp compileoptions llapack b lpksolve libraryfunctionload tmp lpk dylib lpksolveaxbs complex complex complex test performance memory usage memoryinuse table linearsolve b absolutetiming memoryinuse table lpksolve b absolutetiming memoryinuse table lpksolve b absolutetiming memoryinuse null null null note seems memory leaking problem identified bug ruebenko work around suggested also ruebenko use end call librarylink function solves memory leak performance seems decreaed memoryinuse table linearsolve b absolutetiming memoryinuse table lpksolve b absolutetiming memoryinuse table lpksolve b absolutetiming memoryinuse null null null using instead table solve problem memoryinuse linearsolve b absolutetiming memoryinuse lpksolve b absolutetiming memoryinuse lpksolve b absolutetiming memoryinuse null null null x performance difference adding end function call replace table fix