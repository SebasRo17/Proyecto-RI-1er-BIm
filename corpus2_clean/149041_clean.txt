learning oop studied much encapsulation read became confused understand hide making private expose user developer property method also understand encapsulation hide detail article read abstract article designing must think others could use best case scenario program using would well designed would never change however reality program change often team environment many people touch one time another therefore beneficial consider could go wrong well pristine image used case bankaccount examine situation outside could access decimal amount field customername field point time written everything would work well however later development cycle realize bankaccount keep track customerid rather customername want duplicate relationship information valid reason alter definition internal state change cause effect built use bankaccount originally designed customername must change access state throughout entire application oriented principle encapsulation help avoid problem allowing hide internal state abstract access though member method property indexer encapsulation help reduce coupling object increase maintainability question encapsulation help making change effect member change float even exposing using property need change using already using kindly guide encapsulation help change thanks help guidance