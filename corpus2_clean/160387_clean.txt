new functional programming concept c experience higher order function via haskell scala ruby currently going old net num codebase lot duplication simple copy paste variable changed trying condense much possible chunk within routine working go bit like example w writeline v1 num set foo w writeline v2 num set bar w writeline v3 num set baz isspecial w writeline v3 num increase baz w writeline v4 num set quux w writeline v5 num set foo w writeline v6 num set bar w writeline v7 num set baz isspecial w writeline v7 num increase baz w writeline v8 num set quux w writeline num set foo w writeline v10 num set bar w writeline v11 num set baz isspecial w writeline v11 num increase baz w writeline num set quux v see defined earlier part fairly large could write another called say pas required info call three time ever applies section think would place writing anonymous inner would make sense test seems work fine single delegate look something like private delegate v1 v2 v3 v4 snip va vb vc w writeline va num set foo w writeline vb num set bar w writeline vc num set baz isspecial w writeline vc num increase baz w writeline num set quux process v1 v2 v3 v4 process v5 v6 v7 v8 process v10 v11 question proper use inner function acceptable c graduate team mostly mechanical engineer