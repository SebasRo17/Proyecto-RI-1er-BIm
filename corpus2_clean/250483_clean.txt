designing structure c want expose interface user traverse structure order instead creating several different type enumerator want keep simple provide single enumerator maintaining const correctness design summarised follows basic building block structure public friend datastructure getnext getprevious private const node datastructure public getenumerator const e let assume also ensures node belongs structure const cast e node ooo const cast const const e const let assume also ensures node belongs structure e node design benefit one enumerator handle mutable immutable structure course alternative conventional design c two enumerator class conventional design come added bloat template uglier interface opinion norm c community interested hearing opinion community design potential pitfall missing design