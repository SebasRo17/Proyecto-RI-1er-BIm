currently working c project classified legacy project lot poor written committed lack experience pressure deadline try fix bug eventually make new one recently got free time want make project better exact want begin using tdd however turned easy faced problem write test singleton everywhere even basic class us static member instance project widely use numeric wrapper c library decimal computation static member keep context precision rounding mode etc obvious need refactor avoid static field immediately thought dependency injection factory pattern factory keep single context every user create numeric instance using factory going messy factory injected every want construct numeric instance pattern use case one make sure every instance numeric us single shared state p significant parallel question dependency injection good practice reduce boilerplate