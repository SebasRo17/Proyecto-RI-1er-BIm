want design api backed database really matter make discussion interesting let say mongo explanation sends client database contains several type record reference type record uncommon record referenced several record different type thus db normalized consideration designing api server sends record client two option come mind invited suggest correct num api granular send normalized let client ask record based receives client may cache may decide need ask server everything num api sends record client might possibly need based requested thus effectively denormalizing option num client may make http request complete need mean network communication may make total transfer slower server simpler though client selectively ask record already option num less http request may send client already maybe already received cached record previous request server complicated especially rdbms join mongo query db get assumption num change every day num num time week client potentially persistent cache num mongo query bit slow million document collection num session 2mb sent client