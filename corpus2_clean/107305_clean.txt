resource paying attention detail software developer especially edge case small mistake detail problem description ramification certain change large system thought far book sort exercise sort e g solving math problem professor undergrad mentioned math teach attention detail although another said assembly language programming teach detail decomposing problem thinking force attention every detail way noting detail forget later example mean someone said good question ask prospective developer many num num num quickly thought num forgetting num num num num basically lack attention detail another example white board coding interview easy problem initial version correct kept making efficient kept making small mistake pointed easy fix embarrassing pointed interviewer instead finding issue fixing another example compiling initially would write go compiling catch many error miss many error interpreter find many error used also noticed first came undergrad much easier hang onto ton detail even detail initially knew seem forget time go addition paying attention detail new problem could also use resource keeping track detail older problem without rely memory