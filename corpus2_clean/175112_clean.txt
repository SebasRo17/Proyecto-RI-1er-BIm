thinking unit testing best practice come across one assertion per unit test rule see idea would help isolate piece complex operation verification like private place place test public test place new place assertequals num pennsylvania avenue place getaddress assertequals washington place getcity assertequals dc place getstate see would generally want break smaller test like private place place public setup place new place test public test street assertequals num pennsylvania avenue place getaddress test public test city assertequals washington place getcity test public test state assertequals dc place getstate however testing setter might look like test public test place setcity place place new place place setcity assertequals place getcity test properly shared setup making assumption initial state would downside running check initial state something like test public test place setcity place place new place assertfalse place getcity equal place setcity assertequals place getcity check would verify setter actually changed something verifying initial state different final state otherwise change malfunction constructor setup could cause test become ineffective downside violating one assert per constraint rule way