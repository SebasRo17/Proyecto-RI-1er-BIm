seen multiple post rewrite application bad people experience programmer article ready joel spolsky subject hard evidence case study two example joel gave post bad codebase decide based real study case point two client know old legacy keep along one found rewrite disaster expensive really work improve much customer complicated business logic quickly found case mission critical application brings lot revenue company one attempted rewrite felt would hit brick wall legacy software get upgraded point future kind risk warrant research analysis ensure successful path actual case study investigated want attempt major rewrite without knowing best practice pitfall success based actual study aftermath okay searching find three interesting article case study num rewrite reuse study cobol app converted num software reuse developer experience perception num reuse rewrite another study cost maintenance versus rewrite recently found another article subject great rewrite author seems hit major issue along idea prototyping using proposed new technology stack measuring quick devs picked prelude rewrite thought great idea