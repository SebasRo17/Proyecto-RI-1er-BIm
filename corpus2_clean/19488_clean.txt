inspired question handle practice best way default function value certain condition met example function defined func x x value x less x equal zero also always want function evaluate even x less normally would handle func x module xx x xx xx xx try use pattern define condition define function twice region func x positive x func x luck using pattern define function admittedly easy example easily handled using max x etc pattern much complex integer divisible prime number pattern married default argument handle situation efficient computation memory basis update complicated version function referred comment func qi dei b dmin rt pt module ptt max pt rtt max rt di diexp xotime xorate di b dei b diexp log dmin xotime di diexp di b diexp rtt ptt xorate qi b di xotime ptt rtt b piecewise qi rtt rtt qi rtt rtt ptt qi b di rtt ptt b rtt ptt xotime xorate exp diexp xotime xotime plug random variate sometimes zero based distribution evaluate function multiple time however rt pt never negative default zero word minimum value zero way work well original question stemmed idea could done efficient pattern jvincent vanishing pattern solution work one argument pattern rt pt pattern vanishing pattern seem work