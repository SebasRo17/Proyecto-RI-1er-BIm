redis queuing impression redis make good candidate implementing queueing system point using mysql database polling rabbitmq rabbitmq many problem client library poor buggy like invest many developer hour fixing problem server management etc time least grasping millisecond seriously pushing performance long system architecture support queue intelligently probably good shape okay background essentially classic simple queue model several producer producing work several consumer consuming work producer consumer need able scale intelligently turn naive pubsub work since want subscriber consume work want one subscriber receive work first pas look like intelligent design use basic design one work queue progress queue consumer receives work atomically push item progress queue completes work prevents work client die make monitoring pretty effortless instance tell problem causing consumer take long time perform task addition telling large volume task ensures work delivered exactly one consumer work wind progress queue blackhole consumer drawback seems rather strange best design found actually use pubsub since seems blog post queuing redis focus feel like missing something obvious way see use pubsub without consuming task twice simply push notification work arrived consumer non blocking ly impossible request one work item time seems performance problem huge one situation rather obviously say operation designed high throughput situation short missing anything stupid also adding node j tag language mostly dealing node may offer simplification implementing given single threaded nonblocking nature furthermore using node redis library solution sensitive strength weakness well