stack overflow effective suggested strategy design pattern stateless fact book also suggested make strategy singleton problem strategy envision program need state field either path dependent behavior want heterogeneous statistical distribution similar strategy prefer force break effective suggestion instantiate new strategy user strategy contain field bad done differently suggested keep field make strategy heterogeneous us pas argument find anti oo field belong user fact us another strategy might need field seems reason using strategy pattern first place mostly confused make simple example imagine gambler represents somebody making bet horse require strategy work something like interface public horse r many implementation strategy choose random pick white horse whatever easy imagine though implement strategy look past prediction somewhat learns past mistake clearly strategy memory learn might add one interface make extension interface public horse r public r horse horse gambler call strategy end race improve predictive power really done stateless strategy seems impossible