working first public facing web application using mvc num presentation layer ef num dal database structure locked moderate difference user input database get populated done ton reading repository pattern never used research pushing away using since supposedly creates unnecessary level abstraction latest version ef since repository unit work already built initial approach simply create separate set class business object bll act intermediary controller dal example public public id get private set public get set public note get set private readonly entity context new entity thread safe private static readonly userid getcurrentuser userid public ienumerable getlist ienumerable p context p building userprofile userid userid select new id p p buildingname note p building note public create var b new building userid userid note note context building add b context savechanges set building id id b seed num num table reference new building context add new building b context add new building b context add new building b context savechanges public static find id using var context new entity ok static var b context building firstordefault p p id p userid userid b throw new exception building found user access new id b b buildingname note b note primary concern way instantiating dbcontext private property thread safe safe static instantiates separate dbcontext approaching wrong opposed learning repository pattern taking total wrong approach