part series question focus sister project abstraction project aim abstract concept used language design form framework sister project called oilexer aim construct parser grammar file without use injection match page associated question related structural typing viewed ease use found meta topic associated inquiry framework proper place post found getting point start extracting parse tree given grammar followed recursive descent parser us dfa discern forward path similar antlr num figured open get insight parser kind feature ideal far brief overview implemented num template num look ahead prediction knowing valid given point num rule taking literal within rule resolving token num nondeterministic automaton num deterministic automaton num simple lexical state machine token recognition num token automation method scan useful comment comment scan subtract useful identifier identifier subtract keywords ensures identifier accept keywords encode encodes automation series x count base n transition u num num make unicode escape hexadecimal hex num transition difference num 9a fa f num resulted automation encode limit allowed set hexadecimal value scope give encode version accept thing like serious caveat use sparingly resulted automation could quite complex implemented generation need adjust deterministic automation carry proper context get working anyone interested uploaded pretty printed original form project file link every file started link individual rule follow would taken far long would simpler automate context needed please post accordingly edit num num num written create graphviz graph state machine within given language graphviz digraph member linked language description txt relative folder digraph rule language description changed since posted example due simplifying thing grammar interesting graphviz image