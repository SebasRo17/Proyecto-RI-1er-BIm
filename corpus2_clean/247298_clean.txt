relatively familiar go written number small program rust course less familiar keeping eye recently read thought personally examine two way generic handled article seemed unfairly criticize go practice much interface accomplish elegantly kept hearing hype powerful rust trait nothing criticism people go experience go wondered difference ultimately found trait interface pretty similar ultimately sure missing something quick educational rundown similarity tell missed let take look go interface documentation interface go provide way specify behavior something used far common interface return representing interface defined used signature func take almost object print also interface take must determine runtime reflection let take look rust trait documentation simplest trait set zero signature example could declare trait printable thing printed single signature trait printable fn self immediately look quite similar go interface difference see define implementation trait rather defining method impl printable fn self println self instead fn bonus question happens rust define implement trait use impl work unlike go interface rust system parameter let proper generic thing like interface runtime actually know example trait seq fn length self uint work know sequence element compile time rather using reflection actual question missing difference really similar fundamental difference missing usage implementation detail interesting ultimately important besides syntactic difference actual difference see num go automatic dispatch v rust requires impl implement trait elegant v explicit num rust parameter allow proper generic without reflection go really response thing significantly powerful ultimately replacement copying pasting method different signature non trivial difference would appear go interface system practice weak perceived