process writing library used able access database library requires initial definition table application using form class extend abstract within library class contain database connection table stored table column index relationship table abstract contains static function allow user select insert row particular database select return allows query assembled provides option field join group order limit fetch return contains resultant record along save delete function work fine working table within database combined table database trying get something like extends public static database public static tablename tablea public static column num varchar num num extends public static database public static tablename tableb public static column num boolean text select join left foo fetch fetch would comprise row containing found column two database driver database use common interface select look like select column join group order limit offset aware break query performing two separate query one query one join result defined case left join problem coming suitable algorithm dividing query two separate query block combine result satisfying condition efficient manor thought far would entail stripping column excluding field derived operation two database condition relevant database using search database passing result database table result joining discarding row match join point derived field stated computed finally passing resultant row ensure remaining condition matched applying final ordering mind seem efficient manor creates issue using limit unless fetch row applies limit operation final result resource information thing could accomplished better efficient neater way additional although sql database nosql database could work long driver built operates within confines database driver interface moment one driver us pdo working building driver xml mongodb datastores