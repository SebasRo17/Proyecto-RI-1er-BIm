recently discussion using protected inheritance order hide fact client inherits specific base exploit fact implementation following demonstrates compiles recent version gcc clang us c num feature include vector include iostream iobserver public virtual update num model std vector iobserver observer number num public addobserver iobserver observer observer push back observer number notifyobservers number const number protected notifyobservers auto observer update want hide fact view iobserver interface view protected iobserver model public view model model model model addobserver exploit fact iobserver protected update override std cout number std endl argc argv model model view view model view update update protected member view model num model num view inherits iobserver interface us protected modifier correspondingly public update inherited interface protected constructor view add observer model instance passed parameter running executable num num two separate line run expected solution intensely discussed team end question could answer common agreement num actually legal w r c standard issue constructor view pass reference model expects reference iobserver instance public update however view us protected inheritance protected model notifyobservers called within model view update called outside spite fact actually protected c faq lite state protected inheritance allows derived class protected derived exploit relationship protected base sound like corresponding use case num assumed legal also good design fact discussed lot come common agreement might hint colleague opinion interface solely defined public method view want pas reference expecting iobserver instance must use public inheritance others including agree strict definition implementation know fact provide iobserver interface exploit knowledge expose protected interface want c able define public interface normal client protected interface client want specialize extend point view interface defined public protected interface depends kind client look interface num goal hide away iobserver interface public using idiom solely purpose worth able come common conclusion regarding first two question decided workaround using pimpl idiom public inheritance implementation view inherit iobserver instead inherits iobserver publicly agreed good design made implementation complex one indirection maintain nearly twice much furthermore need maintain inheritance hierarchy public implementation class course well known drawback using pimpl idiom appreciate opinion regarding three question lot many thanks advance