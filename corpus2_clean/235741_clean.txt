might got reply pointer address difficulty really buy simple explanation assembly obvious pointer num different c program generate assembly cat file c text ebp def offset num offset num num movl esp ebp def register num movl num eax ebp def num num restore num ret size ident gcc ubuntu num num num num section note gnu stack file c text ebp def offset num offset num num movl esp ebp def register num movl num eax ebp def num num restore num ret size ident gcc ubuntu num num num num section note gnu stack num address var1 pointer var1 written differently address num compile num c program difference pointing difference assembly diff c c cat c c diff include stdio h num include stdio h num file c file c conclusion drawn difference generated assembly investigate simple obvious difference pointer declaration simplistic answer right along pointer point analysis difference pointer case sugar since type removed assembly level difference difference generated assembly show diff use pointer argument indeed difference pointer usage example trivial generalized type removed generated assembly conclude difference indeed result difference generated assembly non trivial example e g pointer argument example good since look like generated assembly disregard typing difference make difference generated assembly another example assembler align num global word num align num global word num