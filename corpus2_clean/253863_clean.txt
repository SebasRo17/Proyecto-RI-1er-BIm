first asking business logic belong asked answer read agree belongs model put business logic mvc design much business logic allowed exist controller layer accurate business logic service model put business logic model happens multiple type storage however people disagree way logic distributed across class seem exist three major thought num fat model business logic inside entity class num anemic model business logic service class num depends find problematic first option stick problem fat model sometimes business logic funtion related instead us bunch class example developing web store calcs order total could think putting inside order actually happens logic need use different class contained order also user session maybe tax country payment etc class could composed inside order others sorry example good hope understand mean putting inside order would break single responsibility principle adding unnecesary dependence business logic would scattered across entity class making hard find second option one usually follow many project still doubt class holding business logic company usually develop apps offline capability user able perform entire transaction offline validation business rule implemented client usually background thread syncs server usually following class package every project model dtos access layer persistence web service layer usually one per w one per w business logic standard approach single holding logic multiple class criterion used distribute logic across foomanager fooservice know last one common case bad naming w layer usually class named third option probably right one also devoid useful info sum like first approach accept might unable fully understand zen advocate fat model universal solution welcome post link explaining right way like know standard design naming convention second approach oo language name package structure particular would also helpful could include link open source project showing done thanks advance