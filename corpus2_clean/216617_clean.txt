writing server client application client connect server want make sure client connecting server actually using protocol trust sent client server thought creating sort hash client machine follows particular algorithm previous version took ip address client version attribute client sent calculated hash server took ip version protocol client claimed using calculated number see matched work ok get client connect within router environment internal ip different external ip fix pas client internal ip used calculate hash authentication protocol fear approach secure enough since passing used create auth hash example talking client ip num num version num num hash num num num num num num num num num num num num num client connects server client sends auth hash ip version server calculates info accepts denies hash go come another algorithm prove client provide server use existing algorithm wondering existing proven secure system generating hash side generate general knowledge server know client first connection established protocol intent manage network client contributing server periodically new client added simply connecting client server registering server client connects server first time register info mac address kind unique computer identifier connect server recognize client previous person associate database edit approach ended going ended using approach similar reverse since client connects sure trust client first time client connecting provide public key unique identifier case using computer service tag since computer going dealing server store id public key database sends client secret question encrypted using public key client need respond decrypted answer client accepted server may end unique id registration server manually connecting client first time way sly person generate public key emulate client new unique id thanks help hope help someone feel free tear apart security flaw approach