continuous delivery sound good year software development experience suggest practice work edit make clear always lot test running automatically question get confidence deliver checkin understand full form cd alternative year long cycle iteration every week might consider still cd done correctly two week month including old fashioned qa end one supplementing automated test full test coverage impossible put lot time time money every little thing valuable time could spent contributing quality way thing hard test automatically e g gui even selenium tell gui wonky database access hard test without bulky fixture even cover weird corner case storage likewise security many thing business layer effectively unit testable even business layer simple function whose argument value easily isolated test purpose spend lot time building mock object might correspond real implementation integration functional test supplement unit test take lot time usually involve entire system test reinitialize test environment inconsistent refactoring change break lot test spend lot time fixing matter validating meaningful spec change fine often test break meaningless low level implementation detail stuff really provides important information often tweaking focused reworking internals test truly checking functionality tested field report bug cannot easily matched precise micro version