opinionated reason like traditional orm activerecord pattern work database sometimes dealing object api object database implementation seen allow feel free clue wrong brittle change database likely break implemenation implementation help reduce one seen design influenced database want switch using api redesign get work likely seems violate single responsibility pattern know act also know created destroyed saved seems bit much approach somewhat familiar php implementing interface php num interface defines json encode user become accustomed thing interface still orm certainly tradition interface return id identifies resource return resource return serialized thing might poorly named take suggestion note work api database long primary key database resource id api conflict api worked unique id resource see issue group associated resource use map resource api call database table person could map api num person table person people smart enough return stored key would identify api parameter database table column also seems easier test activerecord orm done much automated testing traditional activerecord orm merely guess seems able create object independently library help use load get existing resource simply create one set right property easy activerecord orm dealt downside need another serialize also mean general use object map resource type api call database table even work orms activerecord implementation require map object table name anyway downside see seem feasible would improve note almost asked stackoverflow might vague standard still really familiar programmer stackexchange com please help improve question shape standard