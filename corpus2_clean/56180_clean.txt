simulating image corrupted poisson noise encountering problem performance according documentation imageeffect one add poisson noise according following rule enter image description loading example image running code man imageadjust imageresize exampledata testimage man imageadjust imageeffect man poissonnoise absolutetiming second subsequently running kernel take second meanwhile gaussian noise effect imageadjust imageeffect man gaussiannoise absolutetiming second running take second tried defining function adding poisson gaussian noise comparison note define amount poisson noise slightly differently mathematica method way actually make sense addpoissonnoise x peak block imagedata imagedata peak imagedata x map randomvariate poissondistribution imagedata addgaussiannoise x sig block imagedata imagedata imagedata x map randomvariate normaldistribution sig imagedata imageadjust image addpoissonnoise man absolutetiming second imageadjust image addgaussiannoise man absolutetiming second initial run code faster built code case subsequent run slower built code considerably slower case poisson noise gaussian example comparison poisson noise interested speeding initial run code second considerably slower like reality image bigger x pixel way speed corruption image poisson noise update replacing map parallelmap speed poisson noise function still quite slow taking second machine avoiding multiple call randomvariate hard avoid think shame poissondistribution compiled distribution compiled using randomvariate update question poisson random deviate generation slow info v win