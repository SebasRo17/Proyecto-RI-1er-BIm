given list list whose element vector certain fixed dimension interested behaviour scalar function cfn list list j defined function output list entry formatted list list j scalar since would also like keep track vector scalar number came fastest way generate list course use outer map function two list outer cfn list list however produce complete list value function scanning list since list long process long run memory increase dimension typically list list function also fixed dimension seem fine order million computation uninterested function value say certain range cmin cfn list list cmax efficient way scan list pick tried obvious nested loop expected ended slowing computation significantly thanks edit requested comment attaching simplified version code computes inner product two vector redefinition n number specify list list list whose entry integer valued vector length n e g list etc cfn list list list list n module rhow rhow table n lambda list list rhow hdim lambda lambda return list list hdim timing data flatten outer cfn n list list selectdata select data cmin cmax second code nest loop rhow table n sampledataalt list list list list n module sampledata length list j j length list j lambda list list j rhow hdim lambda lambda cmin hdim cmax datanew list list j hdim datanew sampledata join sampledata datanew return sampledata timing test partition sampledataalt list list made list manipulation split thing trial length list length list second code marginally faster slows increase list size