focus question software performs extra work order increase chance eventually successful satisfactory outcome despite one internal error software requires longer execution time error happen happen without user knowledge outcome successful definition complex software contains written contributed num developer lifetime written time frame depends num external library caveat typical software task generating result wanted user requires num parameter default value configurable user need control importantly software appropriate complexity relative task performed e unnecessarily complicated edited complex please see big difference complex complicated direct link definition redundancy robustness within question added robustness based comment software task failed current set parameter used try different parameter obviously must inside knowledge different parameter use different path possibly resulting different hopefully better outcome sometimes different path chosen based observation external library end actual task performed slightly different user specification user receive report detailing discrepancy finally like num plus configurable parameter redundancy reporting also configurable example software database migration business database source control database etc batch converting word document openoffice document powerpoint openoffice draw etc automatic translation entire website automatic analysis software package doxygen analysis need dependable e documentation tool network communication packet may lost number retries expected question originally inspired deal intentionally bad focused one cause software bloat question address cause software bloat addition new feature possibly related deal complex code huge project people manage write maintain extremely complex hard read