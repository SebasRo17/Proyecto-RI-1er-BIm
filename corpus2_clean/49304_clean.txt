trying compute numerically nsum n n n infinity course using first sum would work often option closed form would like compute sum arbitrary number digit far found nsum n n n infinity workingprecision accuracygoal precisiongoal infinity give digit whatever value workingprecision accuracygoal however add option method alternatingsigns get many digit want really controled workingprecision among option method eulermaclaurin give wrong answer digit correct imaginary part method wynnepsilon also fails giving even ask digit something wrong reason work give specific method straightforward way compute sum numerical result matter since quite interested numerical computation mathematica beginner mathematica numerical analysis good guide aside know maximum better used option fpprec control bigfloat evaluation every computation something similar mathematica think better control accuracy maybe question make sense maybe global setting answer rasher comment since much space comment actually use larger value option nsumterms get digit agree get method alternatingsigns nsum n n n infinity workingprecision accuracygoal precisiongoal infinity nsumterms nsum n n n infinity workingprecision accuracygoal precisiongoal infinity method alternatingsigns digit different number possible check sum n n n infinity n answer method alternatingsigns also wrong better combine method nsumterms option nsum n n n infinity workingprecision accuracygoal precisiongoal infinity method alternatingsigns nsumterms result differ digit even puzzled see comment right since get right answer absolutely understand method fail without notification also satisfying approach since set number accurate digit output depends nsumterms non obvious way