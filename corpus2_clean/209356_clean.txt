design issue regarding net property interface ix guid id get bool get invalidate problem interface two read property id fact read however guarantee value remain constant let say intention make clear id represents constant may therefore safely cached might change lifetime ix cached could modify interface ix make contract sufficiently explicit three attempt solution num interface already well designed presence called invalidate allows programmer infer similarly named property might affected argument hold case property similarly named num augment interface event bool get event eventhandler presence changed event state property may change absence similar event id promise property change like solution lot additional stuff may get used num replace property bool might subtle change supposed hint computed freshly time necessary constant msdn topic choosing property method say use rather property following situation operation return different result time called even parameter change kind answer expect interested entirely different solution problem along explanation beat attempt attempt logically flawed significant disadvantage yet mentioned one solution none remains would like hear went wrong flaw minor one solution remains taking consideration please comment least would like feedback preferred solution reason