would like convert logical relational expression disjunctive form e g x lt lor lt x lt lor x gt conjunctive form e g x ne land x ne machinery place convert logical relational expression disjunctive form union interval clearall mxinterval mxinterval unrecognized expression inequality less lessequal greaterequal greater operator logical one operator mxinterval holdpattern inequality valueleft ropleft var ropright valueright mxinterval ropleft valueleft valueright ropright mxinterval rop less lessequal var value mxinterval lessequal infinity value rop mxinterval rop greater greaterequal var value mxinterval rop value infinity greaterequal mxinterval holdpattern x replace holdcomplete x elem mxinterval elem mxinterval expr message mxinterval unrecognized expr return fail mxintervalsymbol op side switch op less greater switch side l r lessequal greaterequal switch side l r mxinterval makeboxes mxinterval ropleft less lessequal greater greaterequal valueleft valueright ropright less lessequal greater greaterequal form rowbox mxintervalsymbol ropleft l makeboxes valueleft form makeboxes valueright form mxintervalsymbol ropright r using mxinterval sample expression produce disjunction interval mxinterval x x x mxinterval infinity lessequal less mxinterval less less mxinterval greater greaterequal infinity display infty cup cup infty number line oops actually infty cup infty numberline note maybe produce union instead would eliminate need makeboxes definition mxinterval use function get cup operator instead lor display would really like function mxinterval mxinterval would take disjunctive form interval produce conjunctive form course mxinterval mxinterval would reverse using procedural language would sort iterate interval constructing result along way however feel like best way implement function mathematica rely heavily pattern matching trouble formulating solution using paradigm maybe mathematica incantation conversion original logical relational expression would sweet