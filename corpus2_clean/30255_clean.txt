context working freelance developer often made website completely based xslt word every request xml file generated containing everything need know page content user currently logged top menu entry menu dynamic configurable text display specific area page etc xsl process cache etc html xhtml page send browser good point make easier create small scale website especially php sort template engine prefer template engine much powerful template engine know better like also possible need give access raw xml demand automated access without need create separate apis course fail completely medium scale large scale website since even good caching technique xsl still degrades overall website performance requires cpu serverside question modern browser ability take xml file transform associated xsl file declared xml like xml stylesheet href demo xslt text xsl firefox num internet explorer num mean possible migrate xsl processing server client side num user according browser statistic several website may want implement mean num user receive xml file request thus reducing server bandwidth xml file much shorter processed html analog reducing server cpu usage drawback technique thought several one apply situation difficult implementation need choose based browser request send raw xml transform html instead obviously system much difficult actual one change make add xsl file link every xml add browser check io bandwidth usage since xslt file downloaded browser instead cached server think problem since xslt file cached browser like image cs javascript file cached actually possibly problem client side like maybe problem saving page browser difficulty impossible obtain html source browser actually using since displayed source downloaded xml hand rarely go look html client side case unusable directly whitespace removed