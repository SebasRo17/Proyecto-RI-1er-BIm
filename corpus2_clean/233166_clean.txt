currently studying design pattern book although try anything else find excellent head first design pattern confused two concept factory factory design pattern trying understand one mean came conclusion like know definition exact factory meant one thing create specific supertype may may take parameter may may decide using statement kind concrete create example factory public hat hat hat equal red hat new redhat else equal blue hat new else equal green hat new else hat new hat factory design pattern named factory pattern provides specific way encapsulate creation client work like pattern system two class creator concretecreator creator abstract concretecreator subclass job concretecreator create using factory contain one job creator manipulate use received subclass concretecreator usually client done like creator contains abstract signature something like createobject whenever need call createobject thing createobject said abstract concretecreator job implement way implementation createobject hidden creator know concrete get know sure way client use creator create object supertype concrete object created depend subclass thus declaring factory new make factory produce california style shoe factory new make factory produce ny style shoe since implementation creating concrete object depends concretecreator demonstrate client public static factory shoe shoe factory new shoe factory system println shoe getdescription ny style shoe invokes subclass receives shoe know concrete shoe depends subclass manipulation return shoe client factory new shoe factory system println shoe getdescription california style shoe understanding two concept accurate thanks