understand intent open closed principle meant reduce risk breaking something already work modifying telling try extend without modifying however trouble understanding principle applied practice understanding two way apply possible change num program abstraction predict future much example drive car car change motorcycle added system future probably violates ocp drive vehicle less likely change future adheres ocp however quite difficult predict future know advance change going made system num change needed extend instead modifying current practice num hard understand however practice num trouble understanding apply example took video youtube let say accepts creditcard object makepayment card one day voucher added system support modified implementing first place failed predict future program abstract term e g makepayment payment pay change existing practice num say add functionality extending instead modifying mean subclass existing instead simply changing existing make kind wrapper around avoid rewriting principle even refer correctly modify add functionality rather refers avoid make change first place e program abstraction