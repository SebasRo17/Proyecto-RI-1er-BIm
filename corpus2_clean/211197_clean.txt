team writing domain specific language dsl integrated ide right focused analysis phase using existing parser generator antlr need real time performance highly detailed warning message information num class represents node concrete syntax tree language well num class act annotation node e error additional information well num internal class build manipulate concrete syntax tree e lexer parser cache string syntax visitor trying decide overall strategy organizing test company pushing behavior driven development bdd domain driven design ddd although building dsl company domain domain programming language still process building test already aiming num statement coverage currently test source syntax tree builder verification property every node resultant syntax tree make sure expected information number relevant child parent token width token token etc since node certain annotation error attached node separate class test end referencing many class currently test certain class lexer isolate list token class e g class node syntax tree test granular test paragraph immediately put correspondence test e g lexer cache however test second paragraph really test whole analysis phase test well num assertion syntax tree given source test behavior analysis phase appropriate testing strategy differently organization strategy use test