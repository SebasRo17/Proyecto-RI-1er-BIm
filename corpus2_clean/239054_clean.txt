read pull something release solve problem case complex situation follows developing application internal customer scrum four less aligned team e sprint end day one site basic dtap street use subversion source control want deploy tap end street source control preparation use continuous integration later able deploy source control maintain branch sync p environment current setup clean trunk sync production branch branched trunk point past sync acceptance branch sprint branch branch start sprint merges back end sprint branch sync test environment duration sprint end sprint issue done merged new sprint branch made new sprint begin meanwhile branch deployed acceptance tested course ideal world would complete user story sprint uat would defect found ala world perfect problem found uat course bug may interpreted request incorrectly may reason user story released yet pull story branch since change merged sprint branch branch one go trivial task adjust allow user story pulled branch also read agile version control multiple team henrik kniberg look like model better suited need even question adopt model sync trunk acceptance would give u opportunity conduct uats sprint would effectively uncouple sprint schedule release schedule kniberg promotes stricter adherence scrum currently follow user story done pretty much sequence could adjust kniberg suit need