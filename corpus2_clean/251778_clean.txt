found creating child record require master record exist first reference master record primary key right term accomplish using ef num tried call savechanges twice create master record identity key get generated child created problem ran ef like multiple call savechanges use transaction like using transaction feel messy reason articulate somewhat common problem instead using try catch commit rollback figured easier time multiple call savechanges also begintransaction exposed passing func bool desirable public interface irepository iqueryable tmodel query tmodel tmodel tmodel find tmodel params key tmodel add tmodel tmodel model tmodel update tmodel tmodel updated params key tmodel savechanges delete tmodel params key tmodel begintransaction begintransaction func bool transaction func bool transaction public interface idisposable commit rollback public interface bool issuccess get errormessage get realize irepository thin wrapper around dbcontext class mock implementation provided instead mess fake get around non virtual aspect dbcontext method question reasonable way something similar also testable involves action func