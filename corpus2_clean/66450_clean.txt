always found xml somewhat cumbersome process talking implementing xml parser talking using existing stream based parser like sax parser process xml node node yes really easy learn various apis parser whenever look process xml always find somewhat convoluted essential problem seems xml document logically separated individual node yet type attribute often separated actual sometimes multiple level nesting therefore processing particular node individually lot extra state need maintained determine need next example given snippet typical xml document book title blah blah title author blah blah author price num usd price book would determine encountered text node containing book title suppose simple xml parser act like iterator giving u next node xml document everytime call xmlparser inevitably find writing like following boolean boolean xmlparser finished xmlnode n xmlparser n book title something else n n equal book else n equal title else n n equal book else n equal title basically xml processing quickly turn huge state machine driven lot state variable used indicate parent node found earlier otherwise stack need maintained keep track nested tag quickly becomes prone difficult maintain problem seems interested directly associated individual node sure could wrote xml like book title blah blah author blah blah price num usd rarely xml used reality mostly text node child parent node need keep track parent node order determine text node refers something wrong better way point using xml stream based parser become cumbersome fully fledged dom parser becomes necessary like hear programmer sort idiom use processing xml stream based parser must stream based xml parsing always turn huge state machine