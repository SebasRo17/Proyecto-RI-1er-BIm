douglas crockford javascript good part walk three type inheritance classical prototypal functional part functional inheritance writes functional pattern also give u way deal super method go implement named superior object however way us superior look like copying super later use crockford var spec var cat spec super get superior get get n like super get baby original get copied super get get special functional inheritance make possible classical prototypal inheritance difference var prototype new cat prototype super get prototype get prototype get n like super get baby second example provide access super method