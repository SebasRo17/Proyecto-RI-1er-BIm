use strategy pattern io app feel like approach violates somehow fundamental mvc pattern app displaying visual story story consists e property one photo one object represent e g animated circle moving arrow photo therefore eventtype property might e g event thing common like starttime property differ way drawn currently trying follow mvc pattern controller know model object like story kind visual event view chose right drawing different visual event type using switch statement implementation event switch event eventtype case self event break case self event break switch statement checking bad design according uncle bob lead tight coupling almost always replaced polymorphism read strategy pattern head first design pattern felt great way get rid switch statement changed design like specialized visual event type subclass abstract interface nsobject abstract every concrete subclass implement concrete specialized version drawing behavior implementation self position color self color linewidth self linewidth radius self radius simply call type event implementation event event result seems great got rid switch statement ever add new type future simply create new subclass change anything cause approach violates mvc pattern since model know depend view controller talk model model talk view calling method like color linewidth radius kind call controller model right seems like made thing worse confused completely missing point strategy pattern better way get rid switch statement without breaking model view separation