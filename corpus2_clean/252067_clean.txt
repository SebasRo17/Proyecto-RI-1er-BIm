trying simplify unit test hand written dsl far dsl walk developer processing service setting precondition construction monster huge constructor setter conflict monster one many precondition processing service constructed hand developer write unit test new service system would worth putting considerable effort making constructing easier tried watching people copy paste life support system unit test unit test making separate new class one job build monster one walk step process service used many developer mean used widely change difficult worried extendability rather simple fluent interface builder every return always available decided use internal dsl return different nested powerful choice let limit method available one step valid one also let change based state previous choice put dsl briefly way work first return first nested next valid could called limit choice intelisense offer making writing dsl calling easier final build exist nested public public new one many nested class public public firstname firstname new public public middlename middlename new used ensure method called order ensure precondition met inner class thought state dsl one state change path supported simply state tell state came long state merges two state path one mean careful know every needed called building returning result fair warning follows verbose boiler plate finest full listing monster builder monster dsl look something like public required private private required alternative neither private one private fuss private person call required order offered public new public public firstname firstname new public public middlename middlename new client example either x b c etc num call hammered call safety inspector call different constructor based alternative interesting forking bit public public got enough constructor new person new public got enough constructor new person new could created past constructor choice forget path brought u public build person leaving optional field set default value public person call none optional field public new since person immutable thing gained confidence set according person whacky rule build person public person public new public clothing clothing public tattoo tattoo add number setter good default value conflict ideally person allow anyway person set stone least provides safer interface public build person public person optional conflicting setter might never called must never called together public todo remove new public jobtitle jobtitle todo remove jobtitle new strictly needed like one statement simply get added public build person public person public build person public person spare service us nested technique mix optional method required method also able different result type based previous alternate choice since even though result params coming different inner despite unreal amount typing required create dsl found result powerful however expect people want new feature added new precondition processing service use style hope reuse would better write whole new dsl time something need change cause working used want dive back existing dsl class mess see issue please let know hoping peer review appreciate feedback