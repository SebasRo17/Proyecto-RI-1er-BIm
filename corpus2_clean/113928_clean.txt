say produce software genetic algorithm order certain software work correctly situation would need test situation could prohibitively infinitely many evolve software evolving test fixed inherited random generation probability measurably increase function general solution solution known hand developer flawed software may fail fact quite often generally speaking idea probability failure given point though may able discern specific case software fail reduce failure rate test thoroughly practice good software development logically distribute flawed software time would make uncomfortable developer know often software might fail know nothing specific case might failure rate acceptable num num would hold genetic algorithm higher standard human come failure rate