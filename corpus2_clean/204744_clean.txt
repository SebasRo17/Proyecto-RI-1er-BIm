creating simple game development framework ruby node system node game entity position child node one parent node child always drawn relatively parent node position field anyone modify position modified node must update child accordingly properly draw relatively position contains point instance x property plus useful method need know node position state change tell node update child easy programmer something like node position point new num num equivalent calling node def position newvalue position newvalue update child know position changed end lost happens node position x num one know position changed point instance stored position property node need node notified point considered observer pattern basically point observable node position property given new point instance assignment operator stop observing previous point start observing new one point instance get state change observer node owning notified node update child position change problem happens position position mean two node observing point change one node position would change well fix position assigned plan create new point instance copy passed argument x store newly created point instead storing passed one another problem fear node position x num would technically modify node position sure anyone would expecting behavior impression people see point kind primitive rather actual approach even reasonable reason feeling skeptical heard observer pattern used well many observer technically scenario one observer time assigning node position another position position create whole new instance rather storing passed point feel hackish even inefficient