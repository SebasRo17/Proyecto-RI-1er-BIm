page num second edition steve mcconnell discussing way programmer conquer complexity big program tip statement oriented programming provides level abstraction applies algorithm time kind abstraction functional decomposition alone provide coupled conclusion reducing complexity arguably important key effective programmer page seems pretty much challenge functional programming debate fp oo often framed fp proponent around issue complexity derives specifically challenge concurrency parallelization concurrency certainly kind complexity software programmer need conquer perhaps focusing reducing one sort complexity increase greatly dimension many case gain worth cost shifted term comparison fp oo particular issue like concurrency reusability management global complexity would debate look edit contrast wanted highlight oo seems encapsulate abstract away complexity algorithm whereas functional programming seems encourage leaving implementation detail structure exposed throughout program see e g stuart halloway clojure fp proponent saying specification type negative consequence idiomatic oo style favoring conceptualizing addressbook simple vector map instead richer oo additional non non property method also oo domain driven design proponent may say exposing addressbook vector map encapsulated method irrelevant even dangerous standpoint domain