looked builder pattern abstract interface design pattern etc think thinking simplicity behind trying asking guy help either recommending design pattern use architecture style familiar fit task one model represents budget high level look like public budget public id get set public list month get set public float get set public float get set public list saving get set public get set public list debt get set public get set public list expense expense get set public list income get set public bool autosave get set public decimal get set public get set public decimal get set public decimal get set go detail property necessary question fill guy trying create build one thing based set user create supply going multiple type parameter example site homepage example section quickly see number look like would much simpler set say user register want create fully filled budget using much information lot build going using similar certain task might want also check status user formulating monthly spending report budget focus saving might want like reduce duplication obviously much possible head every way think would require using base correct builder caller creating say inherits put duplicate let handle case problem lot unique case unique num num builder duplicate somewhere obviously anyone think better way either explain solution may may similar mine completely different pattern way thinking really appreciate