clarify mean use term persistent immutable structure mean num state structure remains unchanged lifetime always hold operation always produce result num structure allows add remove similar method new object kind modified instructed may may share original however structure may seem user persistent may thing hood sure structure internally least somewhere based mutable storage base persistent vector copy whenever add invoked would still persistent long modify locally created array however sometimes greatly increase performance mutating structure hood say insidious dangerous destructive way way might leave abstraction untouched letting user know anything changed structure critical implementation level example let say called implemented using whenever invoke add get build top newly allocated additional item sequence update involve n copy allocation illustration enter image description however let say implement lazy mechanism store sort update add set others queue case update requires constant time adding item queue allocation involved user try get item queued modification applied hood requiring single allocation copy since know exactly final hold big future get operation performed empty cache take single operation order implement need switch mutate internal new one empty cache dangerous action however considering many circumstance update going occur sequence save lot time memory might worth need ensure exclusive access internal state course question efficacy structure general question ever acceptable mutate internal state supposedly persistent immutable destructive dangerous way performance justify would still able call immutable oh could implement sort laziness without mutating structure specified fashion