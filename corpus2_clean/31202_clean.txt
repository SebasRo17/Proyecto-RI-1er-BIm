multithread evaluation talking see post nintegrate function grarm e dimension matrix operation function grarm dimension set dim matrix give code gram end take notice manually change dimension get different gram different dimension variable integration ok first set dimension equal integrate following nintegrate im grarm e e maxrecursion absolutetiming use linux command top monitor cpu situation see single threaded see enter image description set dimension integrate following nintegrate im grarm e e maxrecursion absolutetiming use linux command top monitor cpu situation see multi threaded see enter image description force integration use one thread integrate following parallelmap nintegrate im grarm e e maxrecursion tuples range range absolutetiming notice much faster odd summary two peculiar thing waited explained dimension single thread dimension multi thread nintegrate actually naturally multi threaded multi thread actually due matrix operation integrand well personally think likely multi thread evaluation much slower single thread evaluation case dimension end code grarm forget change dimension integration dimension clear armchairibbonmat armchairibbonmat kx n h table n j n b aa h b e kx aa h b e kx aa h b e kx aa h b e kx aa h b e kx aa h b e kx aa n h arraypad h mat compile kx n evaluate armchairibbonmat kx dimension clear armchairibbonmat armchairibbonmat mat clear gkarm gkarm kx numericq e xx width ii label eta inverse e eta identitymatrix width armchairibbonmat kx width ii label ii label clear fkx fkx kx numericq xx e kx xx clear grarm grarm e numericq xx width ii label eta nintegrate gkarm kx e xx width ii label eta fkx kx xx kx pi pi maxrecursion