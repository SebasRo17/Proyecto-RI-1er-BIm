research combinatorial object called gt pattern generated three part data two integer partition sequence weakly decreasing number lambda lambda geq lambda dotsc lambda n geq mu mu geq dotsc mu n geq lambda geq mu vector non negative integer w w dotsc w k w w dot w k lambda dot lambda n mu dot mu n generate array certain equality inequality satisfied example lambda mu w note pad mu zero length lambda array constructed follows consists k row first row lambda last row mu difference sum entry row must equal w k thus thus example going th row th row row sum increase th rd also increase followed equality needed satisfied inequality require fulfilled right diagonal weakly decreasing left diagonal weakly increasing entry non negative integer solution example given gt pattern output consists row matrix also interested case instead specifying row sum specify number row number pattern fit requirement still finite number thus method could specified follows findgtpatterns lambda list mu list w list findgtpatterns lambda list mu list row integer output list matrix method currently use one straigthforward encodes equality inequality use reduce work ok number solution large reduce cannot take also strongly suspect efficient solution rely reduce totableaushape method pad partition lenghts war total lambda minus total mu total w gtpatterns lambda list mu list weight list gtpatterns totableaushape lambda mu weight gtpatterns lambda list mu list maxbox integer gtpatterns totableaushape lambda mu maxbox gtpatterns lambda list maxbox integer gtpatterns totableaushape lambda maxbox gtpatterns tableaushape lambda mu weight maxboxin integer module w h x gtp bddconds wconds true ineqs sol maxbox maxboxin calculate width height gt pattern w length lambda weight maxbox specified maxbox number part lambda h length weight length weight maxbox maxbox true w gtp table x r c r h c w gt pattern boundary condition bddconds table x h c lambda c x c mu c c w length weight wconds table sum x r c x r c c w weight r r h inequality must hold ineqs flatten table r h x r c x r c true r h c w x r c x r c true r h c w sol reduce bddconds ineqs wconds flatten gtp integer sol false return sol gtp list torules sol return gtpattern sol side note pattern called gelfand tsetlin pattern related representation theory mathematics asked another question related earlier got really nice algorithm related computation type pattern side note trying thing examine lambda total lambda examine mu w fit requirement examine pattern currently ok take much time course parameter lambda mu w set pattern empty nice description happens write article think proven np hard