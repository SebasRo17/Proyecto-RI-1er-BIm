reading joel test daily build discussion tech lead friend mine various company revealed never daily build continuous integration according num daily build meant project following agile practice work waterfall model num continuous integration required automated testing opengl ogre graphic project use apparently automated testing impractical project graphic part development num one belief necessary configuration management enough follow philosophy defining small num num day task perform activity development cycle task review unit test integration deliver integration stream build generate setup num even created script entire build burn cd process creating automated test problem program create always know test scripting test case take much time automated testing tool may always support specific kind test might want make daily build continuous integration really practical non agile project meant test driven development really sufficient follow point num kind philosophy talking build one step kind scripted automation joel talk willing buy idea p question site daily build etc believe question different edit point num started one belief necessary integrate configuration development tool