suggestion comment try rephrase question better reflect problem present user first many possible later website able browse various served local cache db user always presented fresh possible source external service possible limit long response time etc process processing source schema local db also straightforward conversion calculation decoupling recreating relation etc putting mining processing ok work time user click link receive second idea another constantly running miner application better another option old text currently developing website present user profile submited content well obtained various external source e g via webservice call varied source varied limit allowed call respond varied speed etc user presented default fresh possible option request refresh unless refreshed recently started development asp net better worse template customization quite lot coding ended workable proof concept started think large scale operation displaying cached quick easy mess refreshing though problem requesting one user fast eat allowed api call quickly b requesting multiple user apis allow save potentialy great amount api call take linearly longer num num still take time request receive parse ten time single request also come problem exceeding limit usually would force app either cancel refresh wait second new allowance really see user happily waiting several second page load currently gutting gathering part website moving single managing application sharing db website website would provide info user need refreshed app would load balance external service use efficiently limited user open website keep fresh possible also possibly keeping part allowance forced refreshes problem see cost hosting website also background running net application let assume cost relevant actually fear overcomplicate solution might put website ajax wait request complete background call become available anyone experience especially interested scenario scaled assume always deficit available call p also worry keeping website triggered independently many user trying refresh record twice etc guess put additional safeguard lock least mark record undergoing refresh etc lot solve problem exist single backend