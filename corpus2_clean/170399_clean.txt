recently come prefer mapping num num relationship using dictionary instead switch statement find little faster write easier mentally process unfortunately mapping new instance want define like var new dictionary num new foo creates instance foo num new bar creates instance bar num new baz creates instance baz var quux num quux reference foo given construct wasted cpu cycle memory creating num object whatever constructor might contain ended using one also believe mapping object num case cause reference thing rather creating new instance foo intended solution would use lambda instead var new dictionary func num new foo return new instance foo invoked num new bar ditto bar num new baz ditto baz var quux num equivalent saying var quux new foo getting point confusing easy miss end mapping expression fairly common practice alternative would use switch quux switch someint case num quux new foo break case num quux new bar break case num quux new baz break invocation acceptable dictionary faster lookup fewer keywords case break switch commonly found require use func indirection