dealing ddd month still confused general purpose domain service factory aggregate root relation e g overlap responsibility example need num create complex domain entity saga process manager followed num certain domain event need handled elsewhere whereas num entity clearly aggregate root mark bounded context entity num factory responsible creation entity aggregate root num service create entity since also throw domain event num service act aggregate root create entity id num num aggregate root create manage introduce concept aggregate root well factory domain service seems longer needed however service handle everything needed well knowledge dependency example based ubiquitous language car repair shop public car aggregateroot private readonly wheel private readonly public wheel wheel wheel add wheel raise new public static public static car model public car public icollection wheel wheel get set public interface icarservice car car carid wheel wheel