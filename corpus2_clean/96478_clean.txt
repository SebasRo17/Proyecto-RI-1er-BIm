developed current project architecture started developing reaching something like revision num developing simple subway routing framework design seemed done extremely well several model corresponding view logic structure modeled fully separated rendering algorithmic part also implemented apart model minor number intersection point would call design scalable customizable easy implement interacting mostly based black box interaction well nice done started implementation corresponding interface ported convenient library wrote implementation stub application part document describing coding style example coding style usage written forced usage less modern c development technique including delete wrapped via smart pointer etc documented purpose concrete interface implementation used unit test mostly integration test lot actual set mock core abstraction absent num day project developed num member team num different coding style project guess two agreed use style applies naming abstraction e g h h basically header declaring structure absolute lack documentation recently implemented part could recently call single purpose abstraction handle least num different type event tight coupling part half used interface contain member variable sic raw pointer usage almost everywhere unit test disabled rev num unnecessary project probably everything commit history show design interpreted overkill people started combining personal bicycle reimplemented wheel problem integrating chunk project still small amount severe integration problem assume memory leak anything possible case realize effort benefit deadline pretty soon something someone similar situation basically thought good well everything could start project would probably lead something nice however understand wrong advice would appreciated sorry bad english