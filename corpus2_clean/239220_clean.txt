tl dr told domain driven design identifier entity could custom e something guid etc really advisable distributed system long version invent situation analogous one currently facing say distributed system central concept egg system allows order egg see spending report inventory centric quantity hand usage valuation area variety service backing behavior say also another app allows compose recipe link particular egg egg broken specie ostrich duck chicken fine dandy mean user end ostrich egg wanted egg whatnot however getting complaint jumbo chicken egg even close equivalent small one price different really substitutable recipe thought user favor overwhelming many option currently service say whatever identifying egg type industry standard integer representation specie let call realize goofed change could effect every service two basic proposed solution num use predefined identifier like guid throughout service make service know map potentially flag future whatever num use combination every service proposed first solution hoping better encapsulates definition egg resilient change say people want differentiate egg whether organic second solution suggested people understand ddd better hope less enrichment lookup necessary way justification ddd using id fine also saying domain entity guid id however sure second solution viable going serialized json url get request used variety technology c javascript break encapsulation thus remove behavior identifier either field optional etc case want avoid something would normally fine ddd trying ddd distributed fashion summary good idea use custom identifier distributed system solution num