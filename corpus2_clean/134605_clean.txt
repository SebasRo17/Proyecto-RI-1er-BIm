backstory messaging server application responsible proxying call made application tier numerous external service purpose application abstract technicality invoking service away application tier work well application server worry etc protocol wcf ftp soap etc etc simply send payload identifier messaging server handle rest also mean service definition change application server need changed additionally messaging server back ended sql num database store audit message sent associated response etc general flow architecture follows application server load balancer messaging server x external service question need implement retry mechanism messaging application tier intention gracefully recover situation messaging server able forward onto target service e service network issue timeouts etc e issue point x architecture high level design requirement application server sends request messaging server attempt forward external service first attempt fails messaging server responds synchronously application server stating message retry messaging server proceeds retry per contract e x retries second one two thing happen next contracted retries performed unsuccessfully one retries succeed either case message sent back application tier notify state messaging request message retry held memory messaging server go message lost additionally retry contract could num time every num hour holding memory length time feasible said retry contract could num time every num second forward network go recovers load retries spread across entire messaging tier rather single server question application messaging tier concern framework already place however architecture retry framework messaging tier still air would implement option considering failure store retry database polling service check database every second message found scheduled retry push back onto messaging tier via load balancer failure store retry database use clr job poll database push message scheduled retry back onto load balancer information may may relevant c database sql num comms application messaging tier performed via wcf basichttpbinding complete control aspect messaging server tier control application tier messaging tier currently handle around 500k transaction per hour imagine quickly thing backup failure one external service