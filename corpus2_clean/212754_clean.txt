working akka num num month daily started would working application notice actor would used basically anywhere inside actor system communicating object spin another actor x z seems may adding complexity needed find discussion actor v plain synchronous even async logic via future used started pondering stance coworker mentioned something similar realized several case recently pondered task avoided creating another actor could achieve result safely immutable implementation eg something like getting configuration value db file somewhere access infrequently wait result actual use case particular seems case playing immutable state actor create complexity limit throughput pure example called concurrently risk level concurrency yet actor process one message time alternate consideration park thread need wait result unless start using future case need worry async messaging scale seems may overkill employ actor question bad time use actor curious erlang look would really like people insight principle around actor use