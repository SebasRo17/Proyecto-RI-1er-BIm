created couple project create better division portable library targeting framework contains basic dtos auto generated database dtos contain basic dataannotations representing table example datacontract public datamember public virtual id get set datamember required stringlength num public virtual get set datamember public virtual datetime orderdate get set datamember public virtual datetime get set problem want create business provide common feature n level undo redo marking child object deletion etc way could think follows option num inherit dto add additional member build graph use partial class interface even aop implement common feature example generated c auto generated t4 public sealed partial dto common feature coded e n level undo redo c custom datacontract public sealed partial datamember required public address shippingaddress get set datamember required cardinality num cardinality infinity public icollection productdetail product get set problem every single auto generated business extension dto address productdetail etc need common business feature available e n level undo redo inherit sort inherit dto option num inherit business abstract already common feature built simply wrap dto property expose datacontract public abstract common feature coded e n level undo redo datacontract public sealed wrapped property private dto dto get set datamember required stringlength num public get dto set dto etc custom property graph datamember required public address shippingaddress get set problem wrapped dtos lack inheritance business version dto wrapped property get redundant really stuck done one option better maybe way accounted option num num num etc