sure start explain question go finished mvc application hit num wcf service bit disagreement worked project design used two wcf service one site site specific another head office shared common site normally would two apps one site another head office case decided ux point view would better look like one app user point view would need know two url basically user know hitting site head office come design decision caused disagreement mvc app controller need hit either site wcf service head office wcf service prevent need controller needing aware two wcf communication layer converting wcf result model controller could use created layer controller wcf proxy accepts request controller call appropriate site central wcf proxy call needed convert wcf result model controller use layer called mediator much discussion opinion correct description anyway reason layer keep oriented principle particular single responsibility principal controller responsibility handle client request view result need know maintain wcf proxy convert result could go directly database instead wcf call controller responsible even aware responsible view go wcf proxy know consuming result wcf contract converted model specific controller mediator layer decides wcf service call either via extension specific handler convert result model controller use sometimes may take several wcf call create model controller1 mediator mediator controller asks knowing come mediator convert pass request appropriate wcf proxy wcf proxy make call across wire result mediator convert result model needed via extension return controller controller render view using said model described mvc side similar setup wcf service side mediator benefit clearer head office wcf service mediator datalayer linqtosql sends change site via web service devs worked project like separation concern alot clear everything belongs keep minimum layer side mvc app lot call mediator make single wcf call even need convert result time contract fine use model resulting fair amount one liner boiler plate mediator really add much scenario except keep thing consistent across controller devs worked project insist need mediator layer could handled controller mean maintaining appropriate wcf proxy controller mind violates single responsibility principle argue solid like set guideline blindly followed kinda agree statement also blindly ignored term mediator really appropriate perhaps director relay still think basic design valid would use said worked project would like know people think better solution complicated still agree complicated simple concept easy maintain