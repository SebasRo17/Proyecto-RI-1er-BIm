bit experience unit testing call classic software engineering project mvc user gui database business logic middle layer etc writing scientific computing library c yeah know c slow use c reinvent wheel lot people scientific computation faculty c sort need small project term software development industry writing mostly time time help colleague also get paid important academic project mean expect professional quality day planning going open source hopefully enough time grow community developer anyway project getting big around num num line think big one man project getting hand using git source control think got pretty right testing like old school mean writing full application test big part system mainly idea unit testing scenario although feel problem library contains mostly algorithm instance graph algorithm classifier numerical solver random distribution etc know specify tiny test case algorithm since many stochastic know validate correctness classification instance metric like precision recall metric better comparing two algorithm judging single algorithm define correctness finally also problem performance know whole different set test performance one important feature scientific tool rather user satisfaction software engineering metric one biggest problem structure test come kd tree stress test insert lot random vector perform lot random query compare naive linear search performance numerical optimizers benchmark function test stress test think test classified unit test important continuously since rather heavy also think test need done insert two element pop root yes work num num n case unit testing approach kind software organize unit test heavy one around build commit integrate cycle