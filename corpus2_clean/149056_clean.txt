implementation scheme programming language r6rs standard import module follows import abc def xyz system try look file dir abc def xyz dir directory keep scheme module xyz source module compiled fly necessary ruby perl module system similar respect c hand little involved first dll file must reference per project basis must reference one explicitly involved say dropping dll file directory c pick second one one naming correspondence dll filename namespaces offered dll appreciate flexibility also get hand make concrete would nice say using abc def xyz c would try find file abc def xyz dll directory c know look configurable per project basis find ruby perl scheme way handling module elegant seems emerging language tend go simpler design net c world thing way extra level indirection