creating prototype scripting language similar something like javascript language every single reference actually call getter whether parenthesis example var foo num var bar foo really happens foo set called first creates new getter second newly created getter foo called look like foo get num also assign case becomes getter var foo num num var bar foo bar equal number num foo contains working function example func1 num func2 num var foo new foo push func1 foo push func2 var bar foo bar contain func1 func2 num num reference single run give trying decide reference function also function would advantageous function word would getter foo look like foo get func1 reference func2 reference would func1 func2 like foo get func1 func2 would num num specifically asking anyone know problem solution one would create established rule good programming language design apply