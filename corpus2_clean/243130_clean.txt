recently tasked implementing way adding support versioning hardware packet specification one library first bit information project hardware library class various command support sending hardware hardware module essentially light button num num digit display packet typically follow format etx aa sentinel action dd device id packet spec different one command next obviously different firmware version support different specification example version num action num may spec etx would aa num literal dd device id text literal text display device come revision add extended byte onto end packet like etx assume text field fixed width example added new field onto end could used say specify color flash rate text button currently library support one version command latest hardware library would command say would field device id text extended byte command would expose generates etx using practice would create needed populate field call get packet ship across command specification vary command version depending runtime state example another command version num may aa etx action clear module behind specific controller device text may overload packet option field multiple meaning like etx oc literal text tell controller clear text specific module leave others alone spec could also option format etx clear text specific device currently generates packet would evaluate field determine spec using formatting packet example would along line deviceid use etx else use ext else use aa etx considered using xml database store format format string linked firmware version number table would load startup pas version number hardware firmware currently using query device firmware version version included packet part spec break pretty quickly dynamic nature select version command use considered using rule engine possibly build expression could interpreted evaluate state select appropriate format use brief look rule engine scared away complexity seems like might viable solution seems overly complex say design strongest skill im trouble figuring best way approach problem probably wont able radically change class trade good enough may able convince bos change appropriate would like community feedback best practice design methodology api resource could use accomplish logic determine set command use given firmware version command version command use based class state keep rule logic decoupled application avoid needing release every firmware version simple enough need week study trial implement effectively