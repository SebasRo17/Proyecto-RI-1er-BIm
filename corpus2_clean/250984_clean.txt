application wpf project implemented c net num using mvvm architecture behind view order eliminate coupling view viewmodel implementing wpf specific behaviour custom dependencyproperties bound simple property exposed viewmodel view assembly several dependencyproperties bound top level window view see obvious reason collect together single controller suddenly look prettier introduces unnecessary coupling property simply may bound top level view viewmodel object require behaviour sacrifice reduction coupling requiring top level viewmodel object expose cohesive controller property view bind single custom dependencyproperty would better implement multiple single purpose custom dependencyproperties behaviour completely different could use providing kind behaviour container single controller approach using system using system threading using system window using namespace public static one property encapsulates behaviour controller region private static dependencyproperty dependencyproperty typeof typeof new public static dependencyproperty get private static dependencyobject e hook event dialogresult etc endregion multiple property approach using system using system threading using system window namespace public static multiple property one behaviour region private static dependencyproperty dependencyproperty typeof eventhandler typeof new rest implementation go endregion region private static dependencyproperty dependencyproperty typeof boolean typeof new rest implementation go endregion region private static dependencyproperty dependencyproperty typeof typeof new rest implementation go endregion etc etc etc