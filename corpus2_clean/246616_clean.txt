given ordered pair value well known algorithm find converse duplicate converse meaning value opposite order given ab ac ad bc bd ca db efficient way find ca db converse duplicate ac bd application simple enough ordered pair edge directed graph converse edge single double ended edge drawn rather one edge direction value string node name viewed lookup sparse given coordinate b check whether b exists however common programming language appear provide sparse 2d array written solution ruby using hash hash num line awkward unsatisfying outcome writing language like c would longer better solution sought convenient language pseudocode attempted define efficient better performance overriding consideration drawing hundred node node sorted default algorithm would pair form converse brute force search preceding half binary search would require prior sort solution based hash indexing much faster