plan writing near future still quite interested technology stuff could made better starting compiled language compiler two level warning error first time non fatal stuff fix error indicating time impossible produce machine byte though pretty weak definition language like certain warning simply impossible get rid without using directive also treat certain non fatal problem error instance unreachable trigger reason like know c problem seems compilation occurs several pass pas failing keep pass executing count get build fails often grossly underestimated one might say two error fix maybe get num new one digging c c simply show bad combination c compilation diagnostic weakness though might accurate say c went way half problem warning really ought error instance path still warning suppose time wrote standard technology good enough make kind check mandatory vein compiler often check standard say still use standard warning level additional finding often compiler report error could find right away might take compiles get rid mention cryptic error c compiler like spit single mistake cause ten message adding many build system configurable report failure compiler emit warning get strange mix error fatal warning warning deserved explicitly suppressed without mention existence sometimes warning become error non compiled language still share crappy reporting typo reported actually never really kick one time script stop executing meet one php side bunch less significant level exception parse error reported one time warning often bad abort script default notice really often show grave logic problem error really bad enough stop script still usual php really weird thing hell need level fatal error really fatal e recoverable e talking seems every single implementation reporting think broken real shame since good programmer insist important correctly deal error yet get tool think right way report error