today found article java8 fork join framework usage parallel stream implementation understand article entirely sure think basically say f j conjunction stream next useless especially context jee application quite specific argument listed need massive volume easily separable aggregate creates copious thread without regard others high potential stack overflow high potential massive memory usage narrow performance window designed one request time moreover give argument f j recursive approach recursive decomposition even narrower performance window addition dynamic decomposition recursive decomposition optimized recursive division work well balanced tree structure directed acyclic graph cyclic dependency computation duration neither short long blocking since source could find complains fj sure taken seriously cited similar point valid concern specifically oracle official position regarding limitation f j framework applied parallelization stream processing plan something