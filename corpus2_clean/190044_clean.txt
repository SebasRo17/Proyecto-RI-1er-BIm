exist dynamic programming algorithm find longest subsequence x contain substring problem seems similar dp algorithm longest common subsequence must able handle occurrence overlap seems might num state dp problem state po po longest subsequence starting po sting po substring n length length however transition correct get case problem else statement know transition character equal actually feel branch wrong anyone know could wrong even fails case aaab explain fails assuming call solve num num solve num num call solve num num solve num num call solve num num since num num restarts search solve num num however substring never check considers case solve po po po n po num po num po po num ret num po po tmp solve po num num ret max ret tmp num else po num n tmp solve po num tmp num ret max ret num tmp ret