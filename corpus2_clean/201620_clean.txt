engaging redesigning linux c server application application act file form receiving file packet control packet packet client writing packet local file create update index file finally start many thread read file forward packet receiver client b client c client etc flow chart like client server client b client c client currently application using producer consumer pattern pas packet among module module contains thread listening reading incoming socket managing user tcp session contains many thread job like processing incoming packet writing local file reading local file updating index file forwarding packet receiver via tcp socket problem performance bad take example take num minute client send file size client b p2p file sending receiving different machine take num second think cause bad performance store socket information global std map every thread want send client need wait lock std map thus application act like single threaded application original design application follow principle design pattern result many issue want redesign using mvc pattern adding role thread manager file manager first item think use threadpool dispatch every accepted socket thread least client socket number possible reasonable application would designer project update num check project figure part real bottleneck performance num matter part real bottleneck need reconstruct application manage resource thread memory easy maintain gonna thing like following num create many class managing tcp session contains thread file relaying managing file index file contains threadpool num thread contains socket map listening socket contains act controller act model num create thread pool num thread initialized startup creates listening socket put every accepted socket new accepted socket set thread threadpool querying least socket update2 threadpool designed following reasonable std list worker thread would public static private map socket std deque messagequeue object call inform message num firstly process message message includes adding socket deleting socket go offline msg messagequeue pop front msg process msg processing message read write socket set ret select max timeout process read write local file read local file write post message controller remove fd