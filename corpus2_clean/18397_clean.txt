would like able get current iteration count one exceeds iterationlimit make evaluation stop finding magical variable store value magical built retrieves thought tracescan according documentation iterationlimit iterationlimit give upper limit length list generated trace however quick test show simple let define clearall f f f f yeah block iterationlimit trace f length print trace f tracedepth length print f print respectively f evaluation finish successfully looking output last trace see argument evaluation traced trace f tracedepth f f f f f f f yeah notice two output per iteration rule hold add definition like f f case trace f tracedepth f f f f f f f f yeah happened hacky workround could exist along line setattributes trackiterations holdfirst trackiterations code block iterationcounter tracescan iterationcounter code tracedepth question get counter alternatively make trace trace iteration