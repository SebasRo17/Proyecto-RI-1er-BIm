ran across problem goal use dynamic programming instead approach distance spanned set cable different length minimum number cable needed span distance exactly looked like knapsack problem since could multiple particular length bounded knapsack problem rather num num knapsack problem treat item weight taking naive approach caring expansion search space used convert bounded knapsack problem num num knapsack problem simply break multiple apply well known dynamic programming algorithm unfortunately lead sub optimal result example given cable num x num x num x num x num x num x target span dp algorithm pick num num span distance greedy algorithm would picked num num tie minimum number cable problem arises trying span dp algorithm ended picking num num num num get num cable greedy algorithm correctly pick num num num num cable anyway light scanning converting bounded num num seems like well known approach convert multiple item p 2p 4p question conversion work p 2p 4p add number multiple item example num cable well add num 2x3 4x3 num 2x3 4x3 add num 4x3 instead currently trying grok oregon trail knapsack problem paper currently look like approach used dynamic programming