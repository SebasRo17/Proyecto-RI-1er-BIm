read basic unit test tdd find hard convince tdd advantage selected unittests read common argument tdd see improvment compared simple unittests maybe help clarify tdd allows loosely coupled testable design believe well imagine theoretically testable without write test loose coupling fundamental requirement one judge without refering tdd tdd give confidence refactoring efficient add selected unittests soon start refactoring think cover test still save writing lot test tdd make define interface first seems minor point easier decide coding also agrees agile even hard predict nested structure coding often validate get expected made nested coding small unit see behaviour save lot time writing first using validated result posteriori plug unittest read many course source state tdd require development time even considering benefit debugging merely quality improves programmer make different kind mistake tdd cover mistake make anyway typical bug approachable predictable test tdd aid changing team larger interacting team large issue imagine however moment program alone cannot judge tdd help team way important point way force discipline less experienced team member apart advantage