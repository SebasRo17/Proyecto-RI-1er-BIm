say large like following lot stuff subpart num subpart n common pattern decompose subfunctions lot stuff subpart 1 subpart 2 subpart n usually find decomposition two advantage num decomposed becomes much smaller help people read without getting lost detail num parameter explicitly passed underlying subfunctions instead implicitly available scope help readability modularity situation however also find decomposition disadvantage num guarantee subfunctions belong lot stuff nothing stopping someone accidentally calling wrong place num module complexity grows number function add possible way thing call therefore useful convention coding style help balance pro con decomposition use editor folding call day edit problem also applies functional although less pressing manner example functional setting would subpart returning value combined end decomposition problem lot subfunctions able use still present always assume problem domain able modeled small simple type highly orthogonal function always complicated algorithm long list business rule still want correctly able deal lot stuff p1 subpart 1 p2 subpart 2 pn subpart n p1 p2 pn