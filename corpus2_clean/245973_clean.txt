look following use case client application want get set state another remote application c communication done via sip another thread sip interface following sendmessage two idea architecture rpc json rpc define marshalling unmarshalling num base html define invoker something like call server argument invoker argument put sent via sip layer sendmessage come problem actually get right back caller control flow called know whether answer previous call putting response reaching server map poll list invoker rough sketch might invoker provides api client invoker private channel channel public invoker channel channel channel channel public call server req channel sendmessage server req tostring channel req id thread sleep num channel getresponse req id result channel interface messenger channel private map response new private sip sip new sip public msg response parse msg response put msg id response public sendmessage server message sip sendmessage public boolean id response haskey id public getresponse id response get id response delete id sip messenger abstract sip public sendmessage msg sip magic public abstract msg better way biggest problem smell blocking invoker protocol invoker maybe want switch marshalling something else map mean get correct response request sip abstract look strange handling timeout message passing easy way get rid rpc implement something like rpc message passing hint pattern welcome need totally fine architecture tried google message passing implementation actually change state find anything useful implement timeout handling good book literature topic also welcome never programmed distributed stuff idea protocol use inside sip change state welcome rpc initial thought find anything useful compile guess visualize idea