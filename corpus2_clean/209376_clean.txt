explaining difference strictness language paradigm colleague mine ended asserting tolerant language dynamic interpreted language used best prototype small project medium size web application choosing elegant dynamic language javascript node j benefit num fast development num reduced boilerplate num ability attract young creative programmer flee corporate language like statically typed compiled language best application require higher strictness business critical apps apps medium large size apps num well known paradigm pattern developed decade num ease static checking num ability find many professional developer decade experience strict language haskell ada technique contract c better system favor safety flexibility even haskell extremely flexible life critical system system expected extremely stable benefit num ability catch many bug possible compile time num ease static checking num ease formal proof however looking language technology used large scale project large corporation seems assertion wrong example successfully used large system youtube google application require important amount strictness still correlation scale project strictness language paradigm used third factor forgotten take account wrong