problem feel rather basic yet never known great solution looking way component application notify decoupled possible build compile time also avoiding circular notification way component need self mitigate happen hitting issue time javascript right incidental mean decoupling include dependency injection di case use require j allows instance substituting mock implementation unit test creating alternate require config setup event dispatching e g listen action publish subscribe aka pub sub last two basically variant observer pattern different pro con problem want solve specifically addressed pattern sure implementation detail pattern apply fooobj sends message fire event whatever baz property changed handle event calling fire event baz changed fooobj handle event real case imagine fooobj gui component slider tempo music sequencing component play back score slider affect tempo sequencer score contain tempo change playing sequencer affect slider position solution one approach add guard example tempo tempo tempo work feel like poor solution mean every event handler need either assume need guard ugly boilerplate often required need aware component system would make cycle possible arguably point wrong guard always used handler going fire changed event directly indirectly still feel like boilerplate logic may answer question general case pattern deal potential cycle described note synchronous v asynchronous either way cycle occur edited reflect insight commenters realize possible eliminate boilerplate using sort mixin pseudo generic setter set propname propname propname fire propname generic add listener observe propname handler observer propname add handler private event dispatching fire propname foreach observer observer propname observer call propname simplified focus question real mixin would implement pubsub event signal semantics analogous event dispatcher implementation component needing observer observables would inherit extend mixin assumes form multiple aggregate inheritance possible language could modified work composition instead e g constructor rather using