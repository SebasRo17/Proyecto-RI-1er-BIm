confusion regarding factory pattern basically two way implement approach num public interface iproduct iproduct iproduct public productfactory public iproduct implementation go public iproduct implementation go public iproduct implementation go approach num public enum producttype producta num productb num num public interface iproduct getproduct producttype producttype public productfactory public iproduct getproduct producttype producttype switch producttype case producttype producta iproduct specific implementation break case producttype productb iproduct specific implementation break case producttype iproduct specific implementation break default pro approach approach num num benefit compile time check implementation forced provide corresponding method approach num num implementation benefit shorter line num interface become fragile change new product keep adding con approach approach num num line becomes large num number product implemented interface change hence hard follow liskov substitution principle approach num num since hiding internal detail getproduct hard tell factory specific enum passed num might get time exception still struggling decide approach use note aware two approach might different approach also