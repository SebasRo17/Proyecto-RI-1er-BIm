context cocoa application developing need load model defined plist file something like root item dictionary object child item dictionary action action child previous model loaded become representation using language primitive array dictionary string etc custom class load model know item table view child key set add child pressed go plist fetch structure e g root item dictionary parameter dictionary key id key x position num see first model go second plist fetch structure defined plist loaded using plist library without subclass creation whatsoever single factory contains structure instantiates initializes configuration problem hope see grave danger design model contains user generated well configuration bad problem haunted started exporting model user app interacted model though ui exported model would contain configuration key make exported rigid un upgradable change key later version app something else load old model model load old configuration case referencing old question need help find proper design pattern click driven design providing configuration separate file somehow linking model