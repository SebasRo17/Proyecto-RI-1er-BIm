time ctype proper option method plenty thinking wanted put question hope would answer question put question rest workplace idea ctype never used others seem think still around something backward compatibility still use big problem many people seem understand difference casting converting converting v casting one getenumerator movenext ctype current zipentry work done end end buddy ever read like lol yes discussed current enumeration zipentry converting ctype really casting using directcast current zipentry proper way cast something use directcast discussion directcast point ctype certainly used cast conversion tool let talk converting ctype ctype think simplistic example num want converted integer many time see something like dim result integer num result ctype num integer great work difference dim result integer num result integer parse num well exact example difference ctype took resource gave two clear drink told one health rating num num choose num principle much less healthy choose num also integer parse couple character less typing okay num hear ctype break far know ctype break much parse like argument though argument supporting ctype resilience alone reason enough use ctype hand option dim myint integer num dim integer num integer tryparse num myint else handle appropriately end parsing parse handling correctly much better option throwing try catch around bad letting break handling failure catch finally keep mind may multiple different way cast convert purpose question prove disprove ctype simply used argument argument seen support use ctype say ctype break passed bad ctype better unsure going response say posh rethink place conditionals know wanting use item something happens expecting handle correctly time ctype proper option method please provide example