imagine discussion four people one developer one manager one tester one deployment operation manager angry system fallen new version deployed production looking point finger operation person ignorance followed deployment step exactly tester ignorance functionally tested worked fine test environment development person ignorance provided good claim system badly configured situation may seem familiar always excuse mistake made along chain design deployment allows system upgraded work intended pro con diagnosis testing test built application perhaps command api something would allow system check internal connection database middleware filesystem etc confirm everything expects work correct rather relying external monitoring system may configured fashion application new release different property looking wrong database etc example writing interacts database within create interacts database without affecting say simple select query constructor pas observer test based argument passed constructor observer called test time test validity connection even system actually running