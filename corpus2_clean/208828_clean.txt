reading common smell martin fowler refactoring book context wondering pattern seeing base wether one could objectively consider anti pattern pattern one passed argument one method change state none relying pas reference nature case c net var something new thing foo something result bar something num baz something find especially method named appropriately need look method understand state changed make comprehension complex since need track multiple level call stack like propose improve another cloned new state anything needed change call site var something1 new thing let new instance thing var something2 foo something1 let use param info operation result var something3 bar something2 result necessary let capture make explicit complex change var change baz something3 something3 apply change seems first pattern chosen assumption less work requires less line allows u change piece information efficient since less instance thing illustrate alternative propose one need argument original solution argument made make case original solution anti pattern anything wrong alternative solution