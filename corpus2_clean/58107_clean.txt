expression f g h element symmetric tensor algebra expression generated basis e e e en take form polynomial basis element coefficient linear polynomial made c c c cm parameter k know unique assignment c f g h initially used solvealways gave basis second argument however solvealways became slow larger f g h continued attempt solve k even though possible determine specific value varied attempt using solve eliminate f g h basis constantslist speed process significantly likely mathematica correctly identifies k parameter however size basis dealing grows seems eliminate slowing process example basis dimension f c e c e c e take second nearly gb memory tell one coefficient must way around know f linear term basis involves brute force method solving zero coefficient one one replacing rule back f come module tempvalue e c e c e c e temprules tempcoef generatorsize tempvalue tempvalue temprules tempcoef coefficient tempvalue generatorbasis temprules join temprules solve tempcoef temprules however would believe method would impracticable f non linear term basis asking e coefficient c e e c e would lead c e c unless use sovlealways find solution keep eliminate problem fix would need generate list go highest order term lowest may possible unsure go example would needed solve problem suppose f c c e e c e c e needed extract equation needed solve c c c c c c c method could possible would generate list term generated basis element e e ordered highest order product least list would e e e e would used coefficient extract equation reason set must ordered way equation extracted solution put back f would eliminate term picked lower ordered term mean coefficient f rule e called one would get c rather c c c e lead question hand either way generate list term polynomial made basis ordered high order product first better way approach problem whole