background currently designing programming language research project grammar done written context free grammar working working actual translate language x86 binary assembly specifically working parser front end language syntax part similar c c parser construct intermediate representation source work follows grammar built big tree actual source determines leaf syntactic nonterminal class static get byte source offset return new leaf node source syntax fit nonterminal structure using variation predictive parsing way nonterminal datatype chosen following grammatical structure datatype datatype mention language oriented problem datatype get called first check whether following primitive get called assuming would continues check whether calling get problem array may created including array would look like get would call datatype get figure unfortunately parser implementation would fail behavior result question would good better design alternative