experience start working company opportunity look base asked reason confidentiality everyone always said think fair interview process think important question ask find kind state dog going poor walk every day update check list ask think codebase pay close attention facial expression time take respond anon company cmm level hear level num way doug lifecycle use hear agile start asking penetrating question try figure agile mean agile cowboy coding carson63000 tool use ass quality tool use development look refactoring tool continuous build server source version control system use good follow ask use k testing procedure like karl bielefeldt look especially team use mocking framework place emphasis thorough automated unit testing established framework like nunit junit put team use test driven development tdd wary consider testing integral cornerstone solid software development look team dedicated tester kind assignment given new developer experienced developer karl bielefeldt many people work project karl bielefeldt refactoring allowed encouraged karl bielefeldt quality related process architecture change consideration made recently karl bielefeldt much autonomy individual module karl bielefeldt developing newer project greenfield development legacy project brownfield development greenfield development generally fun less problem cleaning someone else mistake employee turnover rate high organization team often indicates lower quality sameer programming problem avoid seeming like jerk developer collaborate knowledge shared amongst team match personality would say mixture solo pair work probably best ratio matching social need close database 3rd normal form 3nf deviate say 3nf leave might good reason find note accepted anon answer week community think best one think suggests something somehow need develop sixth sense think everyone something valuable say