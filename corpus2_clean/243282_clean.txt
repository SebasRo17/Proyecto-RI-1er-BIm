going starting project soon expose restful api business intelligence may limited restful api plan delegate request service layer coordinate multiple domain object business logic local api likely many call long term project thinking design recalled best practice num use command object controller layer using spring mvc num use dtos service layer num validate controller service layer though different reason doubt recommendation num using command object add lot extra single purpose class potentially one per request exactly benefit annotation based validation done using approach sure two request take parameter different validation requirement would two different class exactly member different annotation num heard using dtos preferable parameter make maintainable road say e g requirement change service parameter need altered quite understand api less set stone would understand early phase project especially entire company domain well understood thus core domain object may change along apis manipulate object point however number api method small dependent change method could easily tolerated maintainability standpoint large api many method substantial domain model would think dto potentially domain would become unwieldy misunderstanding something num see validation controller service layer redundant case would validate parameter general well formed controller service going exactly validation service throw runtime exception list bad parameter catch controller make message presentable better yet make message user friendly service let exception trickle global handler spring example something wrong either approach see use case controller validation map one one service since controller rest api form api parameter probably map directly service parameter also question unchecked v checked exception namely really sure ever want use checked exception every time seen used get wrapped general exception domainexception w e reduce signature length method devs catch exception rather dealing see either practice useful use unchecked exception always catch one actually care could document unchecked exception throw