way create application num bounded context using cqrs event sourcing order make bounded context talk planning using rabbit mq requisite following bounded context must know bounded context must hindered bounded context rabbitmq bounded context available message receive must wait patiently ie every event published must forwarded least bc interested therefore thinking referencing queue creates producing event event store store dispatch consists two step num project event every little projection projection little tiny store event already projected warrant period time num publish event queue would fail step num rabbitmq available expect event store try dispatch message rabbitmq sometime really though precisely part must say bounded context know every different bcs look one reading decides event public also responsible handle saga send corrective action bc order bounded context using dedicated queue bounded context creates exit bc bound specific queue add event coming outside event store afterwards project projection architecture work see major flaw