designing instant messaging server personal exercise improve understanding application multi threading design pattern still designing yet goal server make effective use multi cpu box like server distributable across multiple box wonder running walk initial thought serversocket constantly accepts client socket connection thread pool spawn new client socket connection accepted handing client socket object represent client app handle sending receiving message across socket stream correct one serversocket may bind port take way pool object accepting socket connection two idea passing message object either directly object buddy via central exchange better yet pool object pro con two approach exchange lend better distributed app would observer mediator pattern respectively appropriate