accepted answer lisp useful num real world messy pragmatic coding wind either use invent messy construct common lisp sufficient get stuff done thought occurred currently developing application whose backend chose write haskell whose frontend php experience dealing messy php much easier dealing messy haskell however php probably bad simple example php equality operator know equality num since wary often choose use php strict equality operator instead admin gid num gid num however usage turned wrong gid came database still time strict equality operator bit would saved minute simply saying admin gid num gid num consider another interesting identity php var dump num num bool heck two string even comparison however consider user given id card say num database id simply num user may trouble logging application chose use sure get bug report able make application correct rather relying obscure feature take time rather spend time outside really nice day contrast example helpful case j parseint num num concrete example help get thing done please explain list feature haskell another way putting language feature aware use save time