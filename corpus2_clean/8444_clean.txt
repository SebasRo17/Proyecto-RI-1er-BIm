main question compare last output nested function previous one stop iterating find repeating value question think simple deserve separate topic post example let say want see number happy got idea recent topic look iteration code wrote f nestwhilelist total integerdigits f get wrote code know list eventually reach let say know list reach cycle number change compare last iteration others stop find number repeated case list stop already subquestion f work write f thought pure function listable like f something nest subquestion little question pure function difference f f edit thank answer someone curious timing test computer naming leonid f n module appeared appeared false nestwhilelist total integerdigits n appeared appeared true belisarius wreach f nestwhilelist total integerdigits unequal j vincent f nestwhile append total integerdigits length union length f block continue continue continue false true nestwhilelist total integerdigits continue image doctor f fixedpoint deleteduplicates append total integerdigits last wreach nestuntilcycle f x module fast x true nestwhile f f x fast f f fast fast nestwhilelist fast f fast f x fast false true mr wizard f module x x exit total integerdigits x nestwhilelist exit f nestwhilelist total integerdigits signature obtained absolutetiming f range absolutetiming f range absolutetiming f range absolutetiming f range absolutetiming f range absolutetiming nestuntilcycle total integerdigits range absolutetiming f range absolutetiming f range null null null null null null null null time issue included completeness note leonid others pointed case difference negligible longer list cycle better avoid method quadratic complexity let use function proposed mr wizard see change f mod leonid f n module appeared appeared false nestwhilelist f n appeared appeared true belisarius wreach f nestwhilelist f unequal j vincent f nestwhile append f length union length f block continue continue continue false true nestwhilelist f continue image doctor f fixedpoint deleteduplicates append f last wreach nestuntilcycle f x module fast x true nestwhile f f x fast f f fast fast nestwhilelist fast f fast f x fast false true mr wizard f module x x exit f x nestwhilelist exit f nestwhilelist f signature pc absolutetiming f absolutetiming f absolutetiming f absolutetiming f absolutetiming f absolutetiming nestuntilcycle f absolutetiming f absolutetiming f null null null null null null null null calling f trying f mod result null null null null null null null