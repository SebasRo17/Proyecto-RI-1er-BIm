writing algorithm find center x pixel image coming live feed camera hz quick image image optical field look like flower example somehow circular true center since jiggle rotates calculate true center every frame example field example kernel k far prior beginning frame capture prepare advance matrix size x like linepoints co sin co pi sin pi img l k graphic table line linepoints k pi l pi pi l white disk imagesize l k imagedata colorconvert img l k grayscale bit mask mask l range matrix mask l line going center rotated frac pi l k one another l l one l ray example k mtrix important number ray k matrix match number petal true image camera problem number fixed beginning algorithm calculates discrete convolution matrix k kernel k actual frame coming camera cropped x around guessed center end tensor made matrix size x array imagedata image real msec listcorrelate array mask msec image image yet frame video feed transpose turn x matrix convol list length run simple visibility test visibility list max list min list max list min list map visibility convol msec x position max msec nothing else map visibility highest corresponds true center pattern corresponding arrayplot arrayplot log optical field fig fine except use listconvolve take millisecond per frame use convolution theorem fft take millisecond core machine run real time take millisecond algorithm order magnitude slower would like question following gtx ti cuda core way use speedup algorithm better version run real time clever version algorithm pretty sure naive programmer edit important find center high precision addressing visibility curve plot point calculated true center detect rotation pattern precision even pi l tried cudaimageconvolve give error message large kernel unfortunately kernel large already around x test image petal petal petal petal petal petal