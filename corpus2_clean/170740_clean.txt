often hear following want test private method better put another expose sometimes case hiding concept inside time end class attribute worst every attribute one become argument expose functionality fact implementation detail specially tdd refactor public method previous tested part interface test since refactored implementation detail may finding obvious better answer answer correct mean sometimes writting unit test break encapsulation divide responsibility different class simple example would testing setter getter actually needed anything real please provide simple answer specific case may written rather try explain generic case theoretical approach neither language specific thanks advance edit answer given matthew really insightful quite answer question altough made fair point either test private method extract really concern responsibility least could understand answer think situation unit testing private method useful primary example one responsibility give take complex example hashing good way break hashing apart mantain cohesion encapsulation however testing hashing really tough since would need calculate hand use calculation test calculation hashing test multiple case hash change way may question worth topic think private testing best way handle sure ask another question ask better way test complex ob please think ask another question topic leave comment edit2 accepted answer correct made think decide course action altough answered completely face problem one cohesive change together still hard test tell decided simply hard computer test correctly test could used framework test private method would best idea think want get point wondering cohesive respect srp still hard computer test give example heightmap generation hashing function procedural music generation test unit highest level unit simply subjective