setting often trouble determining use exception let consider simple example suppose scraping webpage say determine abe still alive need download page look time phrase abe appears first appearance since includes abe status conceptually look like def get abe status url download page page download page url get mention abe hit page find mention abe parse first hit status status parse abe status hit num either alive dead status alive parse abe status take form abe something return something part argue much better robust way scraping page abe status remember simple contrived example used highlight common situation encounter problem among error expected one download page might able download page throw ioerror url might point right page page downloaded incorrectly hit hit empty list web page altered possibly making assumption page wrong maybe expect num mention abe find num reason hit num might form abe something cannot correctly parsed first case really problem ioerror thrown handled caller let consider case might handle first let assume implement parse abe status stupidest way possible def parse abe status num namely checking option option num none tell caller something went wrong returning none def get abe status url download page page download page url get mention abe hit page find mention abe hit none parse first hit status status parse abe status hit num either alive dead status alive caller receives none assume mention abe something went wrong pretty vague right help case hit num thought hand put exception option num using exception hit empty thrown attempt hit num caller expected handle thrown since idea came could thrown find mention know create custom exception handle exception throw something found page def get abe status url download page page download page url get mention abe hit page find mention abe try hit num except raise mention found parse first hit status status parse abe status hit num either alive dead status alive page changed unexpected number hit catastrophic may still work caller might want extra careful might want log warning throw warning exception throw something found page def get abe status url download page page download page url get mention abe hit page find mention abe try hit num except raise mention found say expect four hit len hit num raise warning unexpected number hit logger warning unexpected number hit parse first hit status status parse abe status hit num either alive dead status alive lastly might find status either alive dead maybe odd reason today turned want implies abe dead throw exception probably kind create custom exception exception throw something found page def get abe status url download page page download page url get mention abe hit page find mention abe try hit num except raise mention found say expect four hit len hit num raise warning unexpected number hit logger warning unexpected number hit parse first hit status status parse abe status hit num status alive dead raise status unexpected either alive dead status alive option num somewhere think second exception preferable sure using exception correctly within curious see experienced programmer would handle