various type quality measured software product e g fitness purpose e g end use maintainability efficiency somewhat subjective domain specific e g good gui design principle may different across culture dependent usage context think military versus consumer usage interested deeper form quality related network graph type inter type refer clearly identifiable cluster interconnectivity relating properly tiered architecture conversely big ball reference monolithic also size e g measured quantity byte net il give indication large complex algorithm implemented monolithic block instead decomposed manageable maintainable chunk based idea may able calculate metric least proxy quality exact threshold decision point high low quality would suspect subjective e g since maintainability mean maintainability human programmer thus functional decomposition must compatible human mind work wonder ever mathematically pure definition software quality possible software possible scenario also wonder dangerous idea objective proxy quality become popular business pressure cause developer pursue metric expense overall quality aspect quality measured proxy another way thinking quality point view entropy entropy tendency system revert ordered disordered state anyone ever worked real world medium large scale software project appreciate degree quality base tends degrade time business pressure generally result change focus new functionality except quality principle selling point e g avionics software quality regression issue shoe horning fit well quality maintenance perspective measure entropy software