one thing always irked c hard dependency interface abstract implementing assembly meaning two different assembly implement interface either one reference interface lie reference third assembly interface make harder test different part application separately make much less flexible since implement specific interface also make distributing library third party less tidy since want distribute part functionality either rework include interface silly assembly containing interface case way interface instance two object take interface parameter assembly separate identical interface would able interchange two sure instance want good ol strict interface dependency right also possibility soft interface might good idea concept convoluted situation like multiple inheritance instance language completely solved issue perhaps use avoid dependency example assembly public interface isomeinterface public classa someinterface assembly b public interface public classb public dostuff like assembly c reference b classa classa new classa classb classb new classb classb dostuff classa direct dependency b still used together guess instance could make adapter feel clunky instance appropriate specific casting one way go another would declare interface dynamic whatever would check interface identical interface third way would able specify dynamic parameter could allow disallow kind interface perhaps even way around unless declare interface explicit always kind typing