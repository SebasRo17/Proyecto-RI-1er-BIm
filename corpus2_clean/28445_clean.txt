consider code sorry messy paralleltable version time slower table version quit clear version linux x bit february kernel randomreal b randomreal developer packedarrayq b true true ht dft ht rotateright ht sqrt pi fourier rotateleft length fourierparameters length smoothdft ht n dft table n length join join table n length ht selectbywrange wmin wmax takewmin takewmax module ltha nmax nmin ltha length nmin round wmax ltha wmin wmax wmin ltha takewmin wmax wmin nmax round wmax ltha wmin wmax wmin ltha takewmax wmax wmin transpose table takewmin n takewmax takewmin nmax nmin n nmax nmin take nmin nmax smtx table selectbywrange im smoothdft n ht conjugate smoothdft b n ht n absolutetiming null kernel launchkernels kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local kernelobject local smtx paralleltable selectbywrange im smoothdft n ht conjugate smoothdft b n ht n absolutetiming null note core node table element e n even change n paralleltable version still time slower table version overhead huge overhead thanks screenshots enter image description enter image description update oleksandrr point distributedefinitions documentation paralleltable promise automatically distribute calculation version paralleltable parallel version table automatically distributes different evaluation expr among different kernel processor default value distributedcontexts distributedcontexts distributedcontexts context distributes definition symbol current context distribute definition symbol package oleksandrr also gave excellent analysis post pointing performance problem memberq function indeed turn unpack warning see unpacks array call memberq packing smtx absolutetiming paralleltable selectbywrange im smoothdft n ht conjugate smoothdft b n ht n developer frompackedarray unpack unpacking array call memberq null however second evaluation much faster even array still unpacks clearsystemcache smtx absolutetiming paralleltable selectbywrange im smoothdft n ht conjugate smoothdft b n ht n developer frompackedarray unpack unpacking array call memberq null use temporary fix memberq proposed szabolcs post unpack warning gone evaluation still slow quit packing need reevaluate definition code memberq list form matchq form list clearall fix setattributes fix holdall fix expr block memberq memberq expr smtx fix absolutetiming paralleltable selectbywrange im smoothdft n ht conjugate smoothdft b n ht n null fix