note question mvvm pattern general related specific mvvm framework wondering best design approach requirement hypothetical example also leave interface dependency injection etc keep simple requirement view user enters password confirm password hash stored database password asked user every time start application view b user enter username username supposed encrypted password entered view term mvvm would create two view model password username however order save username need know password derive key encryption start ask correct solution something like exists pas constructor saving use information required change password pas relevant information change pas complete view model contains information required would prevent abuse applying password remove create another interface responsible saving information like interface responsible saving interface could ask similar question password hash stored