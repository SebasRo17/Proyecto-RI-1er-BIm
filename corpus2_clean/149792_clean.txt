let known big fan dependency injection di automated testing could talk day background recently team got big project built scratch strategic application complex business requirement course wanted nice clean meant maintainable testable wanted use di resistance problem team di taboo brought time god approve discourage move may sound weird third party library usually approved architect team think thou shalt speak unity ninject nhibernate moq nunit lest cut finger instead using established di container wrote extremely simple container basically wired dependency startup injects dependency constructor property disposed disposable object end web request extremely lightweight needed asked review response well make short met heavy resistance argument need add layer complexity already complex project also like plugging different implementation component want keep simple possible stuff everything one assembly di complexity benefit finally question would handle situation good presenting idea would like know people would present argument course assuming like prefer use di agree please say see side coin would really interesting see point view someone disagrees update thank everyone answer really put thing perspective nice enough another set eye give feedback fifteen really awesome really great answer helped see issue different side choose one answer pick top voted one thanks everyone taking time answer decided probably best time implement di ready instead concentrate effort making design testable attempt present automated unit testing aware writing test additional overhead ever decided additional overhead worth personally would still see win situation since design still testable ever testing di choice future design easily handle