working noncommuting object basically using mathematica sort large expression normal ordering simplifying end first create object called boson satisfy dagger clear boson bosonc bosona boson makeboxes boson cr true false sym fmt sbox stringq sym sym toboxes sym abox cr superscriptbox formbox dagger bold sbox interpretationbox abox boson cr sym bosona sym string boson false sym bosonc sym string boson true sym next alias noncommutative product centerdot follows unprotect noncommutativemultiply clear noncommutativemultiply centerdot centerdot noncommutativemultiply noncommutativemultiply makeboxes noncommutativemultiply fmt cbox toboxes holdform centerdot interpretationbox cbox noncommutativemultiply protect noncommutativemultiply clear crule crule noncommutativemultiply define function clean normal ordering defined term expand main definition expand clearall expand setattributes expand holdall unevaluated expand expr block noncommutativemultiply time expr replacerepeated instead replaceall time left cnum freeq cnum boson right cnum time left right time left cnum freeq cnum time n numericq boson right time apply power drop factorlist cnum time left first last factorlist cnum right time left boson false boson true right time left right time left boson true boson false right time left fst boson sec boson right time left sec fst right freeq ordering time b boson b time holdpattern time noncommutativemultiply definition expand expand alternative noncommutativemultiply centerdot expand expand expand alternative noncommutativemultiply centerdot expand expand finally definition clean clear clean clean simplify fixedpoint expand distribute crule working well computing quartic term problem computing higher order term involve product oscillator use clean function term computation go okay kernel start using pretty much memory stop anything else quit kernel assuming module function deleting temporary variable leaking memory tried setting historylength help either else prevent update think problem implementation fixedpoint clean manually apply expand distribute clear cache keep till computation take long take indication much changing finish computation dirty fix would nice know way implement clearing cache clean along fixedpoint update data one computation became large kept running memory everything keep dividing expression smaller smaller part point became hard manage could expression big enough memory also edited last block code remove stray piece code update full working notebook pastebin