interested equivalence relation n x n binary matrix two matrix equivalent one obtained rotating reflecting would like obtain list binclasses b bk mk bi representative element class mi size class course requirement binary matrix somewhat artificial question could rephrased matrix taking value finite set n looking obtain list binclasses thought process far follows define list binlist n x n binary matrix choose element currmat binlist generate list currsym rotation reflection currmat define new list binminsym binlist element currsym removed add pair currmat length currsym new list binclasses set binlist binminsym return step guessing particularly efficient approach curious know one could better go problem edit second update improved original code however still run slowly original edit left information variation first group binary matrix number number adjacent mean fewer list element need checked moment x case version take little minute identify equivalence class compared minute previous method stotal function give total matrix entry stotal matrix sum matrix j length matrix j length matrix etotal function give total number adjacent non zero entry halo matrix module cmat cmat constantarray length matrix length matrix cmat length matrix length matrix matrix cmat etotal matrix sum halo matrix j halo matrix j halo matrix j length matrix j length matrix timing clear mdim blist bgrlist binclasses binreps currbg currmat currsym mdim matrix dimension blist tuples mdim mdim square binary matrix size mdim blist grouped set matrix equal number equal adjacent bgrlist gatherby blist stotal etotal initialise list equivalence class binclasses binreps timing currbg bgrlist j length currbg currmat currbg currsym symlist currmat binclasses append binclasses currmat length currsym binreps append binreps currmat mdim binreps append binreps constantarray mdim mdim currmat currbg deletecases currbg x memberq currsym x true j length bgrlist ceiling length bgrlist length binreps edit code algorithm note defined symmetry square function even though eg reflection diagonal simply transposing matrix clarity reader rather efficiency symmetry function vsym matrix reverse matrix hsym matrix reverse matrix sym matrix transpose matrix r sym matrix vsym sym matrix sym matrix r sym vsym matrix list distinct symmetry given matrix symlist matrix deleteduplicates matrix vsym matrix hsym matrix sym matrix sym matrix r sym matrix r sym r sym matrix r sym r sym r sym matrix square binary matrix size mdim binlist mdim binlist tuples mdim mdim initialise list equivalence class binclasses binlist length binlist currmat binlist currsym symlist currmat binclasses append binclasses currmat length currsym binlist deletecases binlist x memberq currsym x true