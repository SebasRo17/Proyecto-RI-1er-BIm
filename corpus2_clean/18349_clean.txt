question appears impossibly long apology advance skip bottom want see actual question want able mock java class mathematica code example may simple java bean point two field x using jlink would interact object point class obj javanew java awt point obj x obj countless way could done mathematica mock later swap mathematica code actual java class like able something along line obj point obj x obj obj point evals true taken two stab first using notation package overriding following type expression notation parsedboxwrapper rowbox rowbox obj field val doublelongleftrightarrow parsedboxwrapper rowbox applyset rowbox obj field val map code like obj field val obj x example applyset obj field val applyset obj x example applyset turn redirected either setter class passed usual mathematica handling basis conditional evaluation check obj class applyset obj field val set obj obj field val mbeanq head obj pas obj twice holdfirst second evaluated data otherwise pas normal handling prefix applyset obj field val obj field val approach work well frontend seemed able everything needed however moved package notation related makeexpression makeboxes seem work use action printnotationrules get underlying notationmakeexpressions notationmakeboxes example notationmakeexpressions notationmakeexpression rowbox notation private lh rowbox obj field val notation private rh standardform makeexpression rowbox notation private lh rowbox applyset rowbox obj field val notation private rh standardform second crack override behaviour set redirect similar way testing class example set obj field val callset obj obj field null val callsetq head obj set obj field idx val callset obj obj field idx val callsetq head obj set obj fieldupdates list callset obj obj fieldupdates callsetq head obj approach work well enough frontend package course requires overriding something pretty fundamental even setting aside potential performance concern seem right sure documentation somewhere find makeexpression makeboxes really frontend function available kernel package smarter way