company successfully working agile practice without using iteration reason find clean way fit qa iteration cycle understand qa extra bit verification certain build release candidate build get deployed customer point avoid single malicious commit damage whole release since never know one qa wait feature commits release build famous last word tiny change allowed qa find bug release candidate developer fix bug respective release branch merge trunk bug fixed new build deployed qa test bug found certain release candidate offered customer verification usually take around two three candidate one week per release time write fix typically much lower testing effort order keep developer busy work release n num qa work n without using iteration problem overlap work release n n num however understand compatible iteration based approach like scrum xp demand iteration releasable end testing effort incorporated iteration find necessarily lead one following unwanted result developer idle iteration end qa need time verify release candidate bug fixing work fully keeping devs busy b qa start working already first release candidate ready mostly recommended stack exchange company understands qa specific release candidate tested tiny change break everything still introduced unnoticed c bug carried next iteration also recommended stack exchange think solution basically mean never getting verified build whenever bug fix made new unverified commits added branch well way dilemma