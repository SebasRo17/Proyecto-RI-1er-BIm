want implement first application using cqrs pattern along event sourcing wondering creation aggregate root handled properly let say someone sends createitem command handled event stored first event new item kind itemlist entity aggregate item event list consists event udi dahan suggests create aggregate root always use instead kind fetch fetch something new certainly id assigned understand idea behind pretty reasonable think new state composed zero event replied use distinct repository like make get id accepting optional itemid instead edit time digging found really interesting implementation aforementioned pattern using actor author instead creating aggregate retrieves kind repository newly created uuid drawback approach allows temporary inconsistency state also wondering implement delete approach simply add deleted event event list aggregate