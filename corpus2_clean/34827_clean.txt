suppose number list n randomreal n want generate list c dimension relationship element c c think doubt best way get c c however c piecewise list e element different part c generated different formula example n element right middle c others still follow formula direct way think c table n n n absolutetiming null simple slow approach fast c c n n constantarray n absolutetiming c constantarray n c n n c n n absolutetiming null null dirty thing worse dimension list becomes higher n b randomreal n n n table n n n j n n k n b j k n j n k n absolutetiming constantarray n n n n b n n b n n n n b n n n n n n b n n n n n n n n b n n n n n n n n n n b n n n n n absolutetiming null null nightmare region irregular f table j k n b j k n j n k n absolutetiming null fast f method shown c course possible like skip question title said approach elegant c fast c least slow c dirty c cake eat well honest knew compile together module somewhat help thanks help chyaong c compile module n n table n n n absolutetiming null still look forward better solution maybe little greed like point though chose f generate list example sake simplicity question general generated list may formed f g even f g still appreciated appreciate answer focus special case since f case simple also common added tag difference equation question generated exploring finite difference method fdm believe inevitable issue programming fdm two existed post optimized answered outcome discussion discretize nonlinear pde fast solve pde strange boundary condition