writing code moment schematically look like set initial condition differential equation given parameter r r ndsolve differential equation taking min give solution dependent paramaters w l defining memoized function phi w numericq l integerq integerq phi w l interpolated func result ndsolve taking min compute given parameter set w l compute thing coefficient w l term sum numerical differentiation nd needed hence necessity memoizing phi speed step w l calc dependent phi b w l calc dependent phi termsum w l calc dependent phi b write termsum file putappend clear cache memoized phi w l interp func variable like w l phi unset rinse repeat different w l implemented loop issue considering way use block module say allow better handle caching variable especially huge memory hog like phi large interpolating function also change initial parameter r etc start setting initial condition forth function depend could use block module incorporate way run kind initialization script mathematica set constant run standard definition etc time load notebook later calculation probably use phi b given w l different value r along range interpolating function thought saving hard memory actual interpolating function given w l normal save lead mb file even dumpsave mb anything could recompute