currently work image segmentation scenario detect cell nucleus using mathematica data image stack tiff file format would like keep sequence image processing step small simple possible since expect segmentation pipeline work several image stack uploaded example image stack containing several cell nucleus object screenshot image stack creating image object smallcropped image import smallexample tif ax true axeslabel x z raw image stack image object image show cell nucleus object note due different spacing z dimension object appear flattened however influence segmentation look data find signal noise ratio snr high segmentation cell nucleus object therefore feasible gif animation image stack moving stack z dimension enter image description applied seems straight forward approach segmentation mathematica binarize morphologicalcomponents show imagesize binary binarize smallcropped image colorize morphologicalcomponents binary enter image description far good see colorized component matrix left several cell nucleus object assigned object label e g large pink object hence preprocessing step sophisticated segmentation procedure seem required going many type image filtering segmentation mathematica got lost point ended plugging together various different filtering segmentation step case tried worse result got know golden rule segmentation image processing task correctly segmenting object scenario seems difficult wonder exists nice easy way watershedcomponents method try separate connected object since method currently work mathematica implemented method first segment image stack slice slice using combination gradientfilter watershedcomponents binarize maxdetect distancetransform tried merge result segmentation end component matrix put code see output two step left watershedcomponents result right result merging compsmatrix selectcomponents watershedcomponents gradientfilter maxdetect distancetransform binarize imageadjust method minimumsaliency count image dslices binarize smallcropped enter image description far segmentation accuracy object separation still look poor curious step might improve result question preprocessing step e g filter built mathematica might suitable increase segmentation accuracy case combination standard filter might work could improve separation object watershedcomponents image object edit response comment erosion suggestion comment use erosion know erosion help separate object however scenario help would lose much information object edit response answer udb thanks nice approach proposed udb could go segmentation problem try approach data first result looked promising taking closer look say solution proposed provide satisfying result checked result test image stack provided used function proposed udb distcompiled compile dist integer module dimi dimj dimk disttab j k ii dimi dimj dimk dimension dist disttab table ii ii dimi dimi table min table disttab ii dist ii j k ii dimi dimi j dimj k dimk compilationtarget c option euclideandistancetransform padding euclideandistancetransform im image optionspattern module dist j k ii dimi dimj dimk dist developer topackedarray parallelmap round imagedata distancetransform distancefunction euclideandistance padding optionvalue padding image dslices image arraypad imagedata im bit padding optionvalue padding optionvalue padding dist developer topackedarray parallelmap time dimension total flatten dist dist developer topackedarray distcompiled dist dist arraypad dist image sqrt dist real see changed compilationtarget c added missing comma local variable disttab distcompiled function packed function together gave name splitsegmentation img image function image image colorize morphologicalcomponents imagemultiply binarize laplaciangaussianfilter euclideandistancetransform colornegate binarize imagemultiply maxdetect euclideandistancetransform image image img proposed set threshold accepted maximum function binarization use proposed totalvariationfilter pre processing step simple binarize last pipeline using function splitsegmentation smallcropped image import smallexample tif prepro totalvariationfilter smallcropped bin binarize prepro comp splitsegmentation binarize prepro enter image description component image look like component image answer except color good taking closer look segmentation slicing image z dimension see detail put result complete image processing chain next left right original preprocessed binary component image enter image description see multiple problem approach first using totalvariationfilter preprocessing step also blur image result many connected object second splitting performs heavy segmentation resulting splitted object third many object seem rounded segmentation think result euclideandistancetransform combination imagemultiply think perfect segmentation possible data work least object