let say n job numbered num upto n k worker numbered num upto k job equally difficult worker efficient others given time take worker perform job fact two worker able finish job time first worker take care job numbered first take first second take second job etc someone finish job start job lowest number one started case draw two worker finish time worker lower identifier start lower numbered job higher numbered worker work job done worker would like number last job completed example n num k num worker efficiency num num num num num num first worker one two three start job num num num time num one finish job start num time num two start num time num one three finish job start num num respectively time num one start num time num two start num finally time num one start num last job therefore answer num num num num num num easy solve problem simulating procedure maintaining priority queue worker running time algorithm would nlogn wondering would one solve problem faster without simulating large value n