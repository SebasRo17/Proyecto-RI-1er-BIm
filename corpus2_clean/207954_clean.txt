agile tdd use circumstance however circumstance feel work well example day building fairly complex processing app ideal world layout foundation design component write unit test demo sprint finish feature practice however think work first version released foundation component design change frequently figure thing better simple test driver much useful richer unit test building mvc app foundation going change app less build framework quite know thing best beforehand case feel simple test driver automated verification much useful richer unit test stage basic infrastructure place hard break thing individual feature already mvc framework easy imagine first mvc framework ever developed must much less useful think thing individual feature initial stage important thing work principle philosophy separating model view control demo help little sizable part app done ui put mocked interface get lot valuable feedback however e g web crawler really meaningful demo non technical people quite bit done even usually able give useful input anyway sure demo developer colleague hard give based log usually much productive explain thing plan thing perhaps showing illustration get feedback way wrong