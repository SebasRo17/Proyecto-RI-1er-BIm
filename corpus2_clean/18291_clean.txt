trying make optimized version plotrange fonction faced problem catching preemptive evaluation generated frontend withing main evaluation loop consider following clearall global xr r xrange r none yr r yrange r none nb createdocument plot sin x x pi tick xr yr xrange yrange pause xrange yrange notebookclose nb xrange yrange one see first evaluation xrange yrange return undefined symbol moment evaluation function xr yr still evaluated via preemptive link frontend waiting one second function already evaluated xrange yrange defined need value evaluation need delay main loop preemptive evaluation done alternative solution would force frontend perform evaluation main loop one possible way solve problem initiate dialog wait return generated frontend preemptive evaluation go past dialog allow return following code freeze kernel dialog xr r xrange r none yr r yrange r none notebookclose nb return xrange yrange nb createdocument plot sin x x pi tick xr yr possible catch preemptive evaluation main loop way update comparison original rasterize based version new finishdynamic based gr plot sin x x pi plotrange plot graphic graphic quiet last last reap rasterize show plot plotrangepadding none ax true tick sow displayfunction identity imageresolution table plotrange gr absolutetiming plotrange plot graphic graphic quiet last last reap nb createdocument show plot ax true tick sow plotrangepadding none displayfunction identity showcellbracket false windowframe frameless windowelements windowsize antialiasing false editable false magnification saveable false windowclickselect false windowfloating false windowframeelements windowmovable false windowselected false windowtitle finishdynamic notebookclose nb table plotrange gr absolutetiming null null original rasterize based version time faster