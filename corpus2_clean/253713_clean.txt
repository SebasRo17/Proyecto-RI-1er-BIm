recently completed language library act giant filter food item flow bit like product recipe menuitems meal finally upon submission creates order also completed database structure store pertinent information seems fit need issue linking two imagined information local instance product exists one backend user edits manipulates multiple front end user select meal create order ideally front end user would information stored locally within library would update library startup database go storing load library every time user open application package database onboard load populate every time currently conceive even num possible product object would require foreach list every product need match recipe forth every time relaunch program seems like lot wasteful loading general flow architecture product public product public product n uint num n public get set public uint get set recipe public recipe n decimal volume unit unit n yield new volume unit yield summary creates new ingredient summary param n param param recipe yield param param unit unit yield param public recipe n decimal weight unit unit n yield new weight unit public recipe recipe r r yield r yield ingredient r ingredient public get set public yield public dictionary ingredient new dictionary menuitems public abstract menuitem public static title public get set public decimal get set public decimal get set public dictionary ingredient new dictionary meal public meal public meal guest guest public get private set todo make new hold pasta public dictionary count new dictionary title num side title num appetizer title num public list menuitem item new list menuitem database store link basic name amount together id productid