designing implementing multiprocessing postscript interpreter lightweight process simulated single o thread need generate unique identifier process system well maintain id dead process still live reference reference adobe ch num display postscript started simple increment map table index per process num unsigned num global file static counter unsigned generate new state num state num mean free context unsigned get context num gonna big problem unsigned wrap around perhaps scary game application thing supposed server eventually like avoid writing disclaimer warning start strange problem running long time easy enough detect wrap bail situation scenario far multitasking postscript server handful process allocated one epoch generator epoch turned thought impossible seems really hard compact existing id 0 n range rewriting reference scanning memory necessary reset n gonna pain butt different way generate id big garbage collect work know perpetually edit fact neglected mention display postscript reference say id used running instance system since id exposed cannot saved form context use fine long running process know contains old context accessible memory