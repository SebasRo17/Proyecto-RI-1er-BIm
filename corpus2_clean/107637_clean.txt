sure anti pattern somewhere however familiar enough anti pattern literature know consider following scenario member better worse heavily dependent member variable programmer come along need functionality like rather calling programmer copy renames entire guessing call say heavily dependent member variable functionality maybe junior programmer know call got c0 c copy completely fault programmer approach get tight deadline hack get work done several programmer maintain version c0 version cn unfortunately programmer maintained containing seemed completely unaware c0 one strongest argument think wisdom dry principle may also independent maintainance c either way appears c0 maintained independent joy happiness occurring cn occur question num anti pattern seen happen often find hard believe named anti pattern num see alternative fix take parameter specifies value member variable need modify cn call needed parameter passed b try manually port fix cn mind want realistic possibility c recopy cn yuck list sake completeness try figure cn broken repair independently alternative seems like best fix long term doubt customer let implement never time money fix thing right always time money repair problem num num time right anyone suggest approach may considered place approach would take question answer along line please post link mind removing question dupe searching turned anything address question yet edit thanks everyone thoughtful response asked anti pattern could research surprised particular bad coding practice seem canonical