currently process writing custom minecraft server application c figured good way teach lot important thing like concurrency especially memory efficiency due simply space minecraft train yesterday finding hard really think way organize network module wanted simple external interface would give necessary let user react connection received message received connection dropped however also wanted fairly abstract could allow either real game client connect simple fake client started engineering thing la kingdom noun galore really getting anywhere felt like putting fundamental problem behind layer abstraction idea wanted organize communication module came thought use verb action function method whatever instead noun type let focus want achieve split noun later came something similar private static func idisposable listen action tcpclient action tcpclient action tcpclient byte func bool isopen todo num need injected todo give opportunity supply listener todo refactor listener role interface var listener new tcplistener ipaddress num observable fromasync listener accepttcpclientasync isopen subscribe client var stream client getstream subscribe invoke delegate first client delegate option disconnect client based whatever criterion see fit create observable listen message client observable defer buffer connection actually fairly small var buffer new byte num handle thing byte inside passed much otherwise observable fromasync ct stream buffer num buffer length ct select n new read n byte buffer subscribe drop connection nothing read read num client else client read byte really simple well mean quite basically role noun except decoder listed earlier making assumption fact need tcpclient obviously want right work iteration num however problem really typical c surely break srp returning entire execution server make sense question real inherent downside using functional esque paradigm like opposed traditional kingdom noun oop inside c traditionally multi paradigm language downside would face record intend os another issue developer might understand style simply oop orientated pure function