looking around algorithm would optimize distance num list coordinate choose coordinate go together say list num num num num num num num num num list num num num num num num num num num calculated distance coords num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num num algorithm would pick num num num num num num num num num num num num num num num num num num num num algorithm would pick number would group would variance distance condition num coordinate may used one list num list num list2 larger still us coordinate try get smallest distance variance nothing unused coordinate need clarification please ask p looked hungarian algorithm seems like sort job exactly expecting hungarian algorithm try make least distance coordinate mean smallest variance every time variance important least distance optimization additional information list1 list2 distance distance list1 item 0 list2 item 0 num distance list1 item 0 list2 item 1 num distance list1 item 0 list2 item 2 num distance list1 item 0 list2 item 3 num distance list1 item 1 list2 item 0 num distance list1 item 1 list2 item 1 num distance list1 item 1 list2 item 2 num distance list1 item 1 list2 item 3 num distance list1 item 2 list2 item 0 num distance list1 item 2 list2 item 1 num distance list1 item 2 list2 item 2 num distance list1 item 2 list2 item 3 num distance list1 item 3 list2 item 0 num distance list1 item 3 list2 item 1 num distance list1 item 3 list2 item 2 num distance list1 item 3 list2 item 3 num distance list1 item would need pick distance distance picked list2 item cannot picked different list1 item distance picked list1 item element would need picked way variance minimal distance list1 item close possible without reusing list2 item