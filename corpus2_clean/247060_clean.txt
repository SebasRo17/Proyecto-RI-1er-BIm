point getting freelance development complex web apps would like develop light weight framework personal use like get advice experienced programmer first one aspect big picture design framework heavily prototype oop based framework set know handle prototype know certain object example socketio construct utilize specific object ip server example also server facilitates practice programmer functionality well helping keep decoupled oriented wireless outcome look wireless mean instead passing parameter framework object know object look read developer pas parameter framework search find exists within appropriate scope described good programming practice design like structure help achieve quickly important spend time something broken bad model want know practice visually passed around transferred acceptable approach development concern communication related object behind scene may confuse programmer privy design framework mock client side engine would work completion framework currently calling air j commented explain blueprint sort feel free skim without bothering every detail app engine new engine air j engine model developing web apps engine get complex quickly client server side without framework promoting use good j oop coding pattern quickly become tangled mess utilizing prototype air j access relevant object find thing like ip port extension information relevant specific task without developer needing manually connect thing example creating socket io connection server exists owns air find port string attached server new server server constructor allows relevant server information gathered one place sky j object socketio ajax utilize server information dynamically locate utilize information wireless without need passed location new location url new url www website com ip new ip num num num port new default new num socket new num path new pathlist app app login login register register getdata get auth new authentication username new username app client username password new password app client password socket new socketio open new open handle event socketio expects containing first parameter socketio accepts server port second parameter app server app engine app engine server app engine server port app engine server port socket num num example air j work wireless relevant exists within engine found without developer passing information parameter called wireless association air j wireless association discussed later program primary proponent clean de coupled air j promotes situation relevant server exists owns containing grab port multiple server object framework choose first one owns found server framework search scope server found server server found engine framework check socket engine scope ultimately exists developer provide port via parameter thrown pointing missing app init functionality demonstrated prototype assigned within framework shortcut programmer model new engine piece component framework would facilitate use object know certain prototype example user creates prototype car list one related object car instance look without developer feeding parameter