trying come functional programming method calculate list replacement depend previous replacement since always finite number step would like use fold nest composelist related function elegant way following procedural code given initial list assignment temp empty set storing replacement rule rule arbitrary function f one argument temp c c c b b rule f x x randomreal input rule x x evaluate f x x numberq randomreal input rule x x num num evaluate rule append rule temp f temp temp replace temp rule needed replace rh rule temp length temp output rule c b temp c b problem might considered entertaining code golfing example believe entertaining edit note f reality function evaluates right hand side input rule already evaluated e list random real example modified f accordingly evaluates input rule element lh rh rh wrapped list rh contains element already numeric value since numeric value depend previous evaluation therefore required algorithm process initial list left right initial temp list always end right hand side evaluated edit algorithm would synchronous update bayesian network direct acyclic graph sorting node according lexicographic order node temp sorted according topological order member node parent node pair actual f function simple one assigns output state node given state parent present state since know ready made package available deal bayesian inference co started scratch also good code thing understand concept new field