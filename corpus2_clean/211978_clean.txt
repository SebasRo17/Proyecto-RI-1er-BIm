currently developing architecture system following kind couple existing application front end one define uml profile capturing specific domain aspect since tool proprietary produced model default hand couple tool analyze produced frontend model back end also mechanism different frontends represent domain aspect since would produce n model transformation frontends n backends chose introduce exchange model capture relevant information frontends nevertheless allows backend enough information analysis approach result n transformation bird eye view architecture architecture overview thing go like transformation possible frontend model exchange model exchange model backend model analysis task triggered frontend delegated backend executed first glance looked like layered style thought intuition problem make different layer layer achieve separation concern focus portability rather introduce intermediate layer decouples two others target mainly extendability another point highest abstraction found highest layer intermediate layer e exchange format core architecture frontends backends attached need know anything attached frontends backends also mean backend layer must know transform exchange format model representation upward usage allowed layered style boil question num know architectural style similar one depicted also follows intuition num good example layered style apart upward usage num since application mainly model driven specific architectural pattern style system kind thanks help advance edit actually concerned layer coarse vision architecture embedded existing project communicated layer architectural point view fit style problem lie documentation communication architecture stakeholder talk layered architecture introduce layered view although applied correctly confuse stakeholder right understanding layered architecture goal document view style really applied correct basis communicating architecture