time developer num yr spent creating tooling automation one sort another tool develop usually interface one api api could win32 vmware help desk application ldap get picture apps develop could pull back store report could provision group vm create live like mock environment update trouble ticket etc developing net currently reading design pattern trying think improve skill make better use increase understanding oop example never used interface making anger probably good thing honestly cannot identify using one would benefit later modifying class usually specific create similar class similar property method could use common interface like perhaps car shop application might generally use n tier approach apps presentation layer business logic manager layer interface layer make call api working business entity always less container object populate pas back forth api interfacing layer using static method proxy validate front back end nature work common component least see struggling see better make use oop design perhaps reusable pattern right concerned could smarter work right work missing something fundamental oop edit basic show mgr api facing layer work use static class persist facilitate moving layer public static public static bool perform logic validate apply biz logic call work public static public static bool call 3rd party api power virtual machine return successful example