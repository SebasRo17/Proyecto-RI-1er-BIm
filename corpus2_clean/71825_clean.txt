canonical idea pervasive software pattern like canonical model canonical schema canonical model seem come development like many developer often followed conventional wisdom need canonical model otherwise face combinatorial explosion mapper translator least used couple year ago first read somewhat infamous ef vote confidence hypothesis supported pursuit canonical model include factor would discovered idea put practice found year trial using separate model individual context canonical model might used least complex approach least costly approach one lead greater maintainability extensibility application endpoint using contextual model approach encourage software entropy canonical model essay present evidence kind support claim make question approach long enough try alternative resulting software explode literally figuratively mean whole lot isolation could lucky wondering serious research done practical long term effect canonical model v contextual model software system architecture early asking developer architect written personal experience switching independent contextual model vice versa practical effect thing like productivity complexity reliability difference different level e using model across single application v using across system application entire enterprise fact please war story welcome speculation