tl dr writing good useful test hard high cost c experienced developer share rationale test long story used test driven development whole team fact work well u many test never seem cover case actual bug regression usually occur unit interacting isolated behaviour often hard test unit level stopped tdd except component really speed development instead invested time increasing integration test coverage small unit test never caught real bug basically maintenance overhead integration test really worth effort inherited new project wondering go testing native c opengl application integration test really option unit testing c bit harder explicitely make stuff virtual program heavily oriented mock stub stuff away want rip apart oo ize whole thing write test sake writing test asking write test e g function class expect change frequently function class difficult test manually function class easy test already began investigate respectful c base see go testing right looking chromium source finding hard extract testing rationale anyone good example post popular c user guy committee book author google facebook microsoft approach extra helpful update searched way around site web since writing found good stuff appropriate unit test num test come unit testing sadly rather c centric writing lot test c big problem benefit usually outweights cost wrote difficult c especially base oo severely mess thing get good unit test coverage instance application inherited graphic space thin layer opengl order test entity use function directly turn interface inject entity one example answering question please keep mind make rather big investment writing test