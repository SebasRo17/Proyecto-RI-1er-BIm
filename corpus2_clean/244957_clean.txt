writing library use scientific computing ran bit quandary type work consists reference container c many different implementation c devoted lot work making sure object could use c object without knowing internal representation may used high performance scientific computing someday speed actually concern break encapsulation c object could faster tested indeed could get num speedup would involve lot repeated violation open closed principle alternatively take behavior need perform delegate c default c use implementation agnostic algorithm logic moved downtown new advantage approach co implementation c substantially better default implementation override version present num need delegate c imagine num behavior need dealt way may bit repeated could handled generator common approach called terrible idea reason noticed quite strategy pattern container object even bother implementing strategy use default