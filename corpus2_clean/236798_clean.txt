designing hold several type property optional example let say represents person one property occupation another property military rank property retrieved person occupation military best way handle num throw illegalstateexception occupation military num optional rank num occupation invalid like null num something else idea num work user check occupation prior calling making sure call invalid person idea num seems unnecessary infer whether optional present calling however let say person another optional property presence inferred another property example middle obviously best empty optional person middle presence middle really inferred way since probably consistent handling optional property seems like could one following num use optional property may absent even inferred another property num add method like resolve discrepancy seems like bad idea num consistent let property whose presence determined externally throw exception one independent wrapped optional num something else null could simplify thing cause problem optional property nullable could use integer seems like bad idea best way handle different type optional property