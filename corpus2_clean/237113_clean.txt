purpose question say interface mean language construct interface interface sense word e public method offer outside world order communicate manipulate loose coupling achieved depend abstraction instead concrete allows loose coupling two reason num abstraction less likely change concrete type mean dependent less likely break num different concrete type used runtime fit abstraction new concrete type also added later need alter existing dependent example consider car two subclass volvo depends car use either volvo runtime also later additional subclass could added need change dependent also car abstraction less likely change volvo car generally quite time far likely change e abstraction stable concrete type show understand loose coupling achieved depending abstraction concretion wrote something inaccurate please say understand abstraction superclass interface interface specifically praised ability allow loose coupling see different using superclass difference see num interface limited single inheritance much topic loose coupling num interface abstract since implementation logic still see make big difference please explain interface said great allowing loose coupling simple superclass