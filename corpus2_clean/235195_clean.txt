always thought typical mvc design bad practice build concatenate html string php file strictly template working large project strict guideline place forbidden put html php controller fair game php sub object might generate lot html string get passed template sub object contain additional logic could change html depending condition thus num question num considered mvc num object considered part view model view example php controller php protected view view html public render request request get getobject get php setfield foo bar setfield baz render php php public render html html div cool html html p duck p else html p duck p html div html html template html body div blah foo div footer baz footer body html