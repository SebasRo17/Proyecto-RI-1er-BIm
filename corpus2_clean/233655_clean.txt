created general accepts constructed spit user call throw return initializing exception private std message public exception const std message constructor message exception message virtual const const throw message c str use custom exception bool check range const std vector std list const unsigned idx start start checking const unsigned idx end stop checking const std key idx start idx end throw exception check range start index end index fix rest end check range user would use check range user using check range try set variable hero qualified check range semi finalist third place first place hero rest catch const exception e std cout e std endl try catch would abort program thrown exception user would notified check range start index end index fix sure beat writing ton etc class see lazy yeah anything fancy like modify value based exception morph state entered unexpected territory know handling correctly may well end fix develop properly question exception break program unexpected circumstance single exception return problem enough exception thing anyway create many class exception different name sure seen report something went wrong