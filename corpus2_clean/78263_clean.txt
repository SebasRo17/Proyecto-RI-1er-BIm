week work got yet gone standard agile tdd shared ownership ad hoc development methodology never planning anything beyond user story piece card verbally chewing cud 3rd party integration ad without ever real thinking due dilligence architecturally coupling production first test come anyone head past month reach end release cycle lo behold externally visible feature developing slow use buggy becoming complex completely inflexible process spike done never documented single architectural design ever produced f hell eh know developing plan research project passed pair pair ever focused single user story time well result inevitable resolve went radar went dreaded waterfall planned coded basically swap pair tried much could work alone focusing solid architecture specification rather unit test come later everything pinned much better actually totally usable flexible fast certain people seem really resented gone way sabotage effort possibly unconsciously go holy process agile developer explain team un agile plan work fit planning agile process talking talking sitting problem sketching end end design say problem solved sufficient detail anyone work problem know architecture pattern using new integrate existing