really struggling write effective unit test large django project reasonably good test coverage come realize test writing definitely integration acceptance test unit test critical portion application tested effectively want fix asap problem schema deeply relational heavily time oriented giving model high internal coupling lot state many model method query based time interval got lot auto add going timestamped field take look like example def summary self starttime none endtime none logic assign proper start end time none provided probably using datetime object self related model set manager filter sum key starttime endtime object one approach testing something like far occurs unit testing objective given mocked behavior key argument summary correctly filtering aggregating produce correct result mocking datetime straightforward enough mock rest behavior could use fixture heard pro con using fixture building poor maintainability con hit home could also setup orm limiting create related object well orm let mess auto add field manually mocking orm another option tricky mock deeply nested orm method logic orm get mocked test mocking seems make test really dependent internals dependency test toughest nut crack seem function like sit layer model lower level function dependent time even though function may super complicated overall problem matter seem slice test looking way complex function testing