always done wrong sure lot others hold reference via map write db etc need right know go know want object cached sure achieve complicates thing need legacy system db change without notice application context web application let say several method widget getwidget collection widget collection widget collection widget integer collection widget status given could decide cache signature e aa would single cache entry could cache widget individually would difficult believe call would first cache widget call would produce cache match key invocation example take following untested theoretical collection widget entity entity cache get widget collection widget re entity re else re collection widget entity getvalue re collection widget get widget underlying db collection widget re db cache put widget re map list widget new hashmap widget w re cache different type call e category containskey widget put widget new arraylist widget get widget widget re collection widget key new entity ent cache get key entity ent cache get key ent collection emptylist collection widget ent getvalue note worked cache manager illustrates cache may hold cache key pair though modelled specific implementation using benefit able cache object different way called single object heap whereas cache call invocation via say spring would believe cache multiple copy object really wish try understand best way cache domain object go wrong path make harder later read documentation ehcache website found various article interest nothing give good solid technique since working erp system db call complicated db slow business representation domain object make clumsy coupled fact actually num different db information contained application consolidating single view make caching quite important