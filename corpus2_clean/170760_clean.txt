evaluating google protocol buffer based service expecting language agnostic pattern two question first broad general question pattern seeing people use said pattern related organization e g message per proto file packaging distribution message definition e g repeated field v repeated encapsulated field etc little information sort google protobuf help page public blog ton information established protocol xml also specific question following two different pattern num represent message proto file package separate jar ship target consumer service basically default approach guess num also include hand crafted wrapper sub class around message implement contract supporting least two method wrapper v message using generic simplified syntax brevity public v v builder builder v item item builder additem item builder build public static v message new message message message one advantage see num hide away complexity introduced v build add meaningful method etc wrapper second advantage see num client deal immutable object something enforce wrapper one disadvantage see num duplicate sync wrapper class proto file anyone better technique critique two approach encapsulating repeated field mean message one message itemlist repeated item num message required shippingaddress address num required itemlist num required double num instead message one message required shippingaddress address num repeated item item num required double num like latter happy hear argument