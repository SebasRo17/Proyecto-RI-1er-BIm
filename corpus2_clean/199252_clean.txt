good practice implement useless exception handling case another part coded correctly basic example simple one loose everybody let say writing app display person information address etc extracted database let say one coding ui part someone else writing db query imagine specification app say person information incomplete let say missing database person coding query handle returning na missing field query poorly coded handle case guy wrote query handle incomplete result try display information everything crash prepared display empty stuff example basic believe say problem responsible crash still part crashing another example let say one writing query specification say guy writing insert query make sure field complete adding person database avoid inserting incomplete information protect select query make sure give ui guy complete information question specification explicitly say guy one charge handling situation third person implement another query similar first one another db us ui display handle case necessary prevent possible crash even one supposed handle bad case looking answer like one responsible crash solving conflict like know protect situation responsibility handle simple empty something would suffice general question redundant exception handling asking work alone project may num num time similar exception handling successive function case something wrong let bad case come