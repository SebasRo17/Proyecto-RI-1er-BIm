creating small game computer generate pseudo random number give range user guess also made option play computer v computer mean computer generate random number computer guess easiest way found create increase num guess decided try create algorithm basically hold guess number equal range num program enters random number number generated logic one range num num two add num number program num add one guess number c range range argument used given generator func random number generate random number range assigning random number guess range num computer guess number try num many try computer needed guess number guess random number guess random number guess random number guess random number guess guess num num dev num add one else guess random number number number guess guess num num num add one try increase number tire std cout try generate random number generate pseudo random number question algorithm faster one using increasing one guess number full anyone need something include iostream include include cstdlib include time h generate random number generate random number range range argument used represent maximum number range num range num std cout range less num exit num std srand time making sure random number different every time rand range returning random generated number specific range game computer v computer range range argument used given generator func random number generate random number range assigning random number guess range num computer guess number try num many try computer needed guess number guess random number guess random number guess random number guess random number guess guess num num dev num add one else guess random number number number guess guess num num num add one try increase number tire std cout try game human v human range range argument given generate random random number generate random number range assigning random number num var represents user try num number try user make guess number random number std cout enter number alerting user enter number std cin getting number random number checking random num std cout guess low try n alerting user else else number std cout guess high try n alerting user try increasing try one try std cout n guess need try n n game human v human range number guess number must guessed user guess user guess std cout enter number range num range n alerting user enter number std cin number guess entering number num num clearing screen std cout n user guess number guess guess std cout please enter numer n alerting user std cin user guess getting user user guess number guess std cout guess low try n else user guess number guess std cout guess high try n std cout guess number n std game play game range num num std cout please enter range num leave default n std cin range std cout want play ai v human human v human ai v ai n std cin ignore get std getline std cin game getting user std cin clear clearing game ai v ai game ai v ai user chose ai v ai std cout choosed ai v ai n range calling ai else game human v ai game ai v human game human v ai game human v ai game human v ai user ai v human std cout choosed human v ai n range calling human v human else game human v human game human v human game human v human game human v human user choosed human v human std cout choose human v human n range calling human v human else case std cerr occured std cout want play another game n want another game std cin play game play game play game std cout starting another game n else break enough playing num