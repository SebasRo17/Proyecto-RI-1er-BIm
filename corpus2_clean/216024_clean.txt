question c implement raii clarification aware garbage collector deterministic current language feature possible dispose called automatically scope exit could deterministic feature added understanding feel implementation raii must satisfy two requirement num lifetime resource must bound scope num implicit freeing resource must happen without explicit statement programmer analogous garbage collector freeing memory without explicit statement implicitness need occur point use library creator must course explicitly implement destructor dispose c satisfy point num c resource implementing idisposable bound using scope test using resource r new resource r foo resource released scope exit satisfy point num programmer must explicitly tie special using scope programmer forget explicitly tie resource scope creating leak fact using block converted try finally dispose explicit nature try finally dispose pattern without implicit release hook scope syntactic sugar test programmer forgot aware need explicitly bind resource scope resource r new resource r foo resource leaked think worth creating language feature c allowing special object hooked stack via smart pointer feature would allow flag scope bound always created hook stack could option different type smart pointer resource detail dispose free resource test resource flagged tie stack implicit resource r new resource r smart pointer r foo resource released scope exit think implicitness worth implicitness garbage collection worth explicit using block refreshing eye offer semantic advantage try finally dispose impractical implement feature c language could introduced without breaking old