process refactoring fairly large web app one major issue inconsistent handling trying come sensible strategy created custom handler via set handler essentially turn php error custom base exception directly inherits exception production using generic exception catch via set exception handler add exception logging mix dilemma actual logging base exception catch thought couple reason log catch quite exception need converted appropriate child base exception happens exception get logged somehow feel natural catch base exception might single responsibility principle thing could misguided feeling one reason log base exception currently catch used production would easy introduce environment development testing would call adjustment error handled differently per environment production translated num num page acceptable practice logging exception logging involve writing text file first may evolve sending mail certain type exception clarification prompted answer facing num num num sloc codebase lot third party stuff control control pre date exception php also crappy recent recovering long period intense pressure virtually stop thinking hacked actively refactoring address inconsistency introduce sensible handling approach going take time interested reach point error handled appropriately probably ask another question sensible exception strategy point motivation behind logging get email phone whenever something bad happens production care dump get huge cron job deleting old one every