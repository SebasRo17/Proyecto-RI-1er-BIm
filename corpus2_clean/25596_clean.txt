designing suite web application base functionality know create operate widget difference target audience user interact widget essentially application developed independently would lot duplicated effort simplify thought two solution would like feedback pro con solution would prefer num platform idea independent service layer la web service web service simply back end application platform would talk application via messaging serialization would want write platform intention would application could written web framework rail django flex something platform would abstract database interaction back end would done via platform one potential problem updating platform entail taking application least application consistent regard back end like cut horizontally application really focus front end rather worrying organize back end num module idea write everything develop module would live jar module would represent guice module application would include module want create approach would make application completely independent aside sharing common database theoretically would much easier deploy application different environment worrying platform would stuck one language environment although jruby jython would available maybe much concern also foresee easier customize application effecting platform one con update module would want redeploy application using module would easy continuous integration though thank time regard gary answer decided take hybrid approach going develop platform access point web application service modularize platform module remain single repository parent pom could keep single jar would like classpath separation development purpose make others think requiring module depend another