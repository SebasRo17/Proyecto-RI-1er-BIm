using signalr implement client server system guess question could apply tiered client server rpc system familiar signalr basically create server side called hub contains method want expose client client side signalr expose hub proxy via invoke server side hub method let say want remotely control car client application first thought create abstract base method start stop steer etc client side would implement concrete car whose method would invoke via signalr hub proxy relevant method server hub similarly server side would implement concrete car time method would carry relevant action physical car let say client want start car var car new car car id num car start car start would basically invoke relevant server via hub proxy e g public override start invoke startcar first question acceptable car dependency hub proxy pas remote like read functionality persistence separate concern therefore live separate two mind whether guideline applies would result client startcar car rather oo friendly intuitive car start moving server side hub startcar might look something like public startcar instantiate server side car implementation interacts physical car var new car map property received client car id id etc start acceptable approach e client side pas car passing around something else e g car id property guess avoid instantiating server side car mapping property functionality interact physical car life gone round circle trying think better solution reached point see wood tree