dual core intel machine would like test many parallel local kernel launch get optimized performance knowing hyperthreading technology intel could run thread core mean could run thread dual core cpu information thread v core look amd say hyperthreading core much important view amd v intel based result cinebench povray benchmark test find physical core outperform enhanced threading software certain application function evaluate mlength z length fixedpointlist z z sametest ab sequential evaluation parallel closekernels kernel paralleltable mlength x x absolutetiming evaluation paralleltable nopar parallel kernel available proceeding sequential evaluation null enter image description although parallel kernel used see second core right share work first core think window automatically share work multicore using slave kernel closekernels launchkernels kernel paralleltable mlength x x absolutetiming null enter image description asking mathematica add one slave kernel slave kernel run first core mainly left see work mainly done first core still work second core using slave kernel closekernels launchkernels kernel paralleltable mlength x x absolutetiming null enter image description slave kernel work evenly distributed core reason get result done half time see mathematica parallelizes better window using slave kernel closekernels launchkernels kernel paralleltable mlength x x absolutetiming null enter image description enter image description trying add kernel supposing one core could maintain thread result slower think multithreading help mathematica rule thumb number parallel local kernel number core thread increasing number kernel increase overhead data transfer kernel suggestion udate another computer intel core thread true ht maxkernel data table closekernels launchkernels n paralleltable mlength x x absolutetiming first n maxkernel enter image description see time decrease core thread time optimized second