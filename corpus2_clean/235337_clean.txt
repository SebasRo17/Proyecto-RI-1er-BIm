short summary branch managing master branch one many feature branch made mid long term development deploy able change merged master release branch made release branch kept maintaining deployed version next release occurs merged production order build tag deployed live environment first verse question actually necessary production branch step surely tag reliably created release branch point would merged production branch worth second verse question would suitable source control one production branch one master motivation soon internal project starting hopefully white label product use replace three separate internal application use currently well future application would one back end one library one api three team using managing user interface adding reusable functionality back end thought project could one repo one master various feature branch team need develop thing mid long term production branch three version product tag respective release branch could deploy independently others sprint requirement long break shared infrastructure p three application deploy independent live environment used different department company pps know versioning flow would better suited please tell edit reading answer think one big project application instead one big team working section used num department required ui flow feature etc may split three team working department feature base repo technical spec question per say rather one opinion experience preference etc