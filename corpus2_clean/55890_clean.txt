working ordering oscillator example dagger fairly stable code needed use inverse oscillator example expression like dagger n k hard order f dagger f dagger however expression like dagger n k attempt normal order solution infinite series rosenbaum j math phys choose particular type ordering get finite series dagger n sum k k k binom k frac gamma n k gamma n gamma k k dagger n k hold positive integer n plug expression mathematica get obvious infinite loop keep trying normal order e dagger left right way tell mathematica order particular form negative integer power dagger get finite sum edit function code long paste pastebin link full code edit since code long try explain gist problem short written function see term like aa dagger change dagger commutation relation achieve something follows func left dagger right func left dagger right similar tell function func left invep p invex n x right func left invex n x invep p right func left sum k k binomial k gamma n k gamma n gamma k func invex k x invep n k p invex x k right invex n x operator represents dagger n invep n p operator represents n func invep p invex x give invex x invep p invep p invex x invep p according commutation relation problem function try order second term since using fixedpoint definition function make sure everything properly ordered get infinite loop