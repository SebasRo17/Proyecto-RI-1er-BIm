reading another explanation halting problem got thinking problem seen given example involve infinite sequence never use infinite sequence program take long real world application lower upper bound even real truly real approximation stored num num bit etc question subset program determined halt good enough program build set language construct determine program sure studied somewhere pointer would appreciated language turing complete thing nearly turing complete good enough naturally enough construct would exclude recursion unbounded loop write program without easily enough reading standard example would bounded easy enough limit num num num character etc depending problem domain tia update reading comment answer perhaps restate question given program input bounded determine program halt constraint language limit set maximal set construct would determine language deduced halt study done update num answer yes way back num de file paper pdf halting problem least theoretically solved nite state system already argued num num nite state machine left completely fall eventually perfectly periodic repetitive pattern duration repeating pattern cannot exceed number internal state machine stick finite turing machine build oracle