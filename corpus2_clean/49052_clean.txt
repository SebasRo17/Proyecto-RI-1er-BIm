symbolic xml convenient way managing xml mathematica least casual use small task elsewhere find example xml handling mathematica including xslt xpath emulation opinion however must perform frequent search content extraction deep transformation e g web scraping symbolic xml quickly becames clumsy cumbersome work ever faced kind web programming probably aware convenient cs selector common choice xpath tackle aforementioned kind problem curious implementation cs selector xpath engine mathematica would feasible sensible implement like capability mathematica better stick ad hoc query follow example approach elegant code better thousand opinion could illustrate answer toy greatly simplified cs selector engine pattern match selector element universal e e element e element type e type e warning e element whose class warning class e myid e element id equal myid id e f f element descendant e element descendant e f f element child element e child e f f element immediately preceded sibling element e adjacent sibling e f f element preceded e element general sibling e foo e element foo attribute set whatever value attribute e foo bar e element whose foo attribute value exactly equal bar attribute selector chain one simple selector separated combinators combinators white space white space may appear combinator simple selector around simple selector either type selector universal selector followed immediately zero attribute selector id selector class selector order universal selector may omitted followed simple selector component simple selector match component match example div div element tag div div descendant level div element aclass attr val direct descendant attr equal val element class aclass need formal grammar take look w c spec illustration think prescind error handling stringent processing given context expression containing xmlelements selector string compliant toy cs grammar implement positionselector context selector return position format position built xmlelements matching selector xml importstring doctype html html h animal h xmlobject positionselector xml body positionselector xml extract xml positionselector xml h xmlelement h animal xml importstring body div id abc class aclass eh b id b div span span span id def doc span span id def doc span div b div div class bclass attr val attr val legen div class cclass div class dclass wait div div dary div div id abc div attr val b id b span span b div div father div div body xml normalizewhitespace false result positionselector xml div span extract xml result columnform xmlelement span xmlelement span id def doc xmlelement span id def doc result positionselector xml class div extract xml result columnform xmlelement div class dclass wait xmlelement div class cclass xmlelement div class dclass wait xml importstring doctype html html h animal h h class animal dog border collie id lillith span class christian name lillith gt span h h class animal dog mutt id maggie span class christian name maggie span span class nick name fatty span h html xmlobject result positionselector xml h dog extract xml result columnform xmlelement h class animal dog mutt id maggie xmlelement span class christian name maggie xmlelement span class nick name fatty result positionselector xml h maggie extract xml result columnform xmlelement h class animal dog mutt id maggie xmlelement span class christian name maggie xmlelement span class nick name fatty positionselector xml h dog positionselector xml h b clear looking full blown implementation strategy idiom mathematica resolve xml query way mathematica better equipped mainstream functional imperative language