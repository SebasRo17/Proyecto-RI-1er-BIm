trying come decent adjacency list graph implementation start tooling around kind graph problem algorithm like traveling salesman problem seem come decent implementation probably trying dust structure far implemented basically generic weight event graph indeed weighted public e private e private weight getters setter well constructor graph list edge number vertex edge well boolean whether directed brings first question graph indeed directed would need add another vertex linkedlist would imply directed graph 2x big undirected graph public graph private list edge private private private boolean directed getters setter well constructor finally anybody standard way initializing graph thinking reading pipe delimited file num public graph boolean directed file list edge graph g try count num filereader new filereader c user document javaee project bufferedreader new bufferedreader readline count edge new arraylist readline split num weight integer parseint split num e new edge add e g catch exception e guess adding edge boolean would adding second edge far depends file write wrote file following vertex weight num br num br new york num br c num br would obviously load list edge represent one vertex connected would need opposite vertex say representing highway connected city weighted un directed edge bi directional weight fictional distance unit would implementation best way found tutorial online graph tutorial connector appears collection vertex pointing would b weight would add list list connector graph strike somewhat cumbersome little adjacency list concept wrong novel solution inspired steve skiena algorithm design manual say pretty good far thanks help provide