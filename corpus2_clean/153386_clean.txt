undefined modifies x twice sequence point standard say undefined therefore undefined much know understanding forbidding allows compiler optimize better could made sense c invented seems like weak argument reinvent c today would way done better maybe deeper problem make hard define consistent rule expression best forbid suppose reinvent c today like suggest simple rule expression x x seem work better existing rule like get opinion suggested rule compared existing one suggestion suggested rule num sequence point order evaluation unspecified num side effect take place immediately undefined behavior involved expression evaluate surely format hard disk strangely never seen implementation x x format hard disk example expression num x x well defined change x first x incremented immediately x evaluated old stored x num x x increment x twice evaluates num x num though either side may evaluated first result either x x num left side first x num x num right side first num x x x num unspecified x set either x num num right side evaluated first x num also possible x num evaluated first num num either case x num assignment happens immediately x num evaluated stored overwritten assignment num x x num well defined set x num could argue shorthand expression say must executed x num two part read x evaluate x num add store new advantage comment raised good point certainly think expression x x used normal actually much strict think good usage x x alone however think language rule must simple possible otherwise programmer understand rule forbidding changing twice sequence point certainly rule programmer understand basic rule valid b valid combined valid way result valid x valid l x valid expression valid way combine l expression come x x legal c standard make exception exception complicates rule search stackoverflow com see much exception confuses people say get rid confusion summary answer num tried explain section want c rule simple num potential optimization take freedom see anything convinced might significant optimization still done example num b num reordered even though standard specifies order expression b still optimized similarly num change existing standard admit never thought actually go ahead change standard compiler wanted think thing could done differently