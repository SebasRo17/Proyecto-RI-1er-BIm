working wpf application view require numerous conversion initially philosophy inspired part lively debate xaml disciple make view model strictly supporting requirement view meant conversion required turn thing like size etc would handled converter multi converter conceptually seemed quite elegant view model view would distinct purpose nicely decoupled clear would drawn look well giving strategy old college try doubt whether want continue developing way actually strongly considering dumping converter placing responsibility almost conversion squarely hand view model reality using converter seem measuring apparent cleanly separated concern biggest issue converter tedious use create new implement ivalueconverter cast value correct test dependencyproperty unset least multi converter write conversion logic register converter resource dictionary see update finally hook converter using rather verbose xaml requires use magic string binding converter see update debugging process either message often cryptic especially visual studio design mode expression blend say alternative making view model responsible conversion improvement could well matter grass greener side besides losing elegant separation concern write bunch derived property make sure call raisepropertychanged setting base property could prove unpleasant maintenance issue following initial list put together pro con allowing view model handle conversion logic away converter pro fewer total binding since multi converter eliminated fewer magic string binding path converter resource name registering converter plus maintaining list less work write converter implementing interface casting required easily inject dependency help conversion e g color table xaml markup less verbose easier read converter reuse still possible although planning required mysterious issue dependencyproperty unset problem noticed multi converter indicate benefit disappear use markup extension see update con stronger coupling view model view e g property must deal concept like visibility total property allow direct mapping every binding view raisepropertychanged must called derived property see update num must still rely converter conversion based property ui element probably tell issue hesitant go road refactoring realize coding process inefficient tedious whether use converter expose numerous conversion property view model missing pro con tried mean conversion find worked better alternative disciple mentioned something descriptor provider get handle talking insight would appreciated update found today possible use something called markup extension eliminate need register converter fact eliminates need register actually provides intellisense selecting converter converter article got started ability use markup extension change balance somewhat pro con listing discussion see result revelation experimenting hybrid system use converter call view model conversion basically converter let check bound usually enum match one value specified xaml example visibility binding status converter vc visible hidden value1 finished value2 canceled basically check status either finished canceled visibility get set visible otherwise get set hidden turned common scenario converter saved num property view model plus associated raisepropertychanged statement note converter vc show intellisense menu noticeably reduces chance error make using converter less tedious remember look converter want case curious paste one important feature implementation check see bound enum check make sure value1 value2 etc also enums provides design time time check whether enum value mistyped improve compile time check use following instead typed hand please forgive made mistake visibility binding status converter vc x win visibility visible x win visibility hidden value1 x enum status finished value2 x enum status canceled safer verbose worth might well use property view model going anyway finding design time check perfectly adequate scenario tried far typeof typeof visibility public public get set public get set value1 public value1 get set value2 public value2 get set value3 public value3 get set public get set public get set public public value1 value2 value3 value1 value1 value2 value2 value3 value3 public override convert targettype parameter cultureinfo culture var tostring visibility var tostring visibility var value new value1 value2 value3 var value cast bool ismatch enum gettype var select v v enum parse gettype v ismatch tolist contains else ismatch contains tostring ismatch markup extension capability get wired public abstract markupextension ivalueconverter public override public abstract convert targettype parameter cultureinfo culture public virtual targettype parameter cultureinfo culture throw new notimplementedexception extension public static text enum parse typeof text update num since posted question come across open source project us il weaving inject notifypropertychanged property dependent property make implementing josh smith vision view model converter steroid absolute breeze use auto implemented property rest example enter public givenname get set public familyname get set public fullname get format num num givenname familyname get compiled public get givenname set givenname onpropertychanged givenname onpropertychanged fullname familyname public familyname get familyname set familyname familyname onpropertychanged familyname onpropertychanged fullname public fullname get format num num givenname familyname huge saving amount read scroll past etc importantly though save figure dependency add new property get like fullname without painstakingly go chain dependency add raisepropertychanged call open source project called original version called notifypropertyweaver owner simon since created platform called hosting whole series il equivalent notifypropertyweaver new platform called propertychanged setup instruction replace propertychanged propertychanged project site prefer go notifypropertyweaver little simpler install necessarily updated future beyond bug fix project site either way il solution completely change calculus debate view model steroid v converter