mathematica linux x able run external program parallel mathematica package however procedure break mathematica within mathematica package created artificial link sub kernel synchronized link created master kernel otherwise link numbering sub kernel coincide numbering created master kernel procedure different suggested run mathlink external command parallel relevant code used mathematica package job successfully mathematica sameq global paramode false sameq global notebookmode false false sameq global paramode false sameq global notebookmode true false sameq global paramode true sameq global notebookmode false kc kernelcount table linkcreate kc sameq global paramode true sameq global notebookmode true kc kernelcount table linkcreate kc let u see happen mathematica keep example small launch two sub kernel launchkernels kernelcount loading package master kernel sub kernel following link connection master kernel link linkobject pfs data software mathematica executables math subkernel noinit mathlink linkobject pfs data software mathematica executables math subkernel noinit mathlink linkobject pfs data home kit xxxx xxxx bin cddma thlink linkobject pfs data home kit xxxx xxxx bin cddmathlink g mp linkobject pfs data home kit xxxx xxxx bin cddmathlink link connection two sub kernel parallelevaluate link linkobject q shm linkobject xxx xxx xxx xxx xxx xx xx xx linkobject pfs data home kit xxxx xxxx bin cddmathlink linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkobject pfs data home kit xxxx xxxx bin cddmathlink linkobject c shm linkobject xxx xx xx xx xxx xx xx xx linkobject pfs data home kit xxxx xxxx bin cddmathlink linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkobject pfs data home kit xxxx xxxx bin cddmathlink first glance everything seems fine since link master kernel sub kernel synchronized intended want call function mathematica package parallel make use external program paralleltable strongepscore dv expgame epsstrvalues viewkernelsol true kernelcoord ker viewnucleolussol true nucleoluscoord mnuc viewshapleysol true shapleycoord shv showcore true showimputationset true detlow big surprise procedure failed strange thing sub kernel trying use connection build master kernel instead using connection kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed question follows modify code sub kernel using connection rather master kernel avoid unintended behavior might also helpful know change made mathlink protocol mathematica update meantime made small progress starting scratch without calling package defined function contrary first observation setting option distributedcontexts none might effect whenever function external program called directly see let u call first step external program directly without setting option distributedcontexts none still failure parallelize table allvertices string kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed calling function directly option distributedcontexts none help case got desired result parallelize table allvertices string distributedcontexts none nevertheless try invoke package function option distributedcontexts none call indirectly external program still get failure nothing improved seems option distributedcontexts none must put right place order effect update simulate package function call external program defined ceteris paribus following indirect function call callvert integer integer string allvertices string distributedefinitions callvert callvert observe function well defined call function first master kernel obtain callvert string coincides result however calling indirect function using parallelize option distributedcontexts none attain still failure parallelize table callvert string distributedcontexts none kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed kernelobject local linkobject linkn argument linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp linkwrite linkobject pfs data home kit xxxx xxxx bin cddmathlink gmp callpacket invalid linkobject number link may closed failed failed even tried distributedcontexts none map setoptions distributedcontexts none parallelize option parallelize method automatic distributedcontexts none without effect going possible apply option distributedcontexts none indirect function call external program