put another way ensure architecture quality suffer agile understanding handling architecture agile generally applies testing well architecture risk fall radar minimal design front pay horrible price reasonable change request enough architecture infrastructure per feature requirement found searching related stackoverflow question hypothetical example scenario requirement develop order processing module existing system guideline negotiated agreed upon num architecture module able handle processing num order span minute num time market num week planning done handle num sprint num week num business satisfied average performance expectation module delivered let say following improvement change requested improve processing num order per minute improve performance num time market num week assuming requirement customer business come welcome future iteration go architecture need overhauled testing quality module also becomes time consuming happy result estimation increase understandable inability meet expectation requirement quickly even done given timeframe sufficient quality wish could done something well face situation point time hindsight architecting scale first iteration would ideal goal focus focus always time market acheiving meeting business customer expectation given timeframe unfortunately long take toll development done avoid mentioned pitfall example improving architecture testing process iteratively