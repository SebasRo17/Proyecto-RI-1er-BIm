midst refactoring project recently read clean want heed advice within particular interest single responsibility principle srp currently called orderprocessor context manufacturing product order system currently performs following routine every n minute check database newly submitted unprocessed order via layer already phew gather detail order mark process iterate perform integrity checking call web service 3rd party system place order check status web service success fail email somebody web service return fail constantly log text file operation possible fail point started breaking new class like orderservice poor one wake every n minute call dl get order database seems forced poorly named call web service place order emailsender logger struggling find good name implementing srp reasonable way could separated new discrete responsibility