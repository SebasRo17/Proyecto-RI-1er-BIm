primarily work net wpf mvvm application used several framework mvvm light prism etc able break implementation crud mvvm three scenario scenario num web service return paged collection small object navigation property whirl wrapping needed logic place implement ieditableobject every crud operation want done keep listview ui sync current crud operation say user add item immediately added reflected ui cancel edit removed save added item stay list persisted server done two simple view model template thanks ieditableobject num num complex initial call web service return list reference dto containing simple property like id scenario num call web service load quick model item selected second call made web service retrieve actual graph mapped messaged pub sub separate detail view model scenario num property couple view model together seems alright really work without managing list becomes easier thing spot messaging still hard achieve simple without messaging view model summary scenario num easy implement work well requires minimal scenario num num harder implement becomes somewhat less clear crud operation keeping item reference list sync harder update information list edit successfully completed saved back web service currently keep crud operation one view model created base view model paged inherit crud view model base add command add edit remove cancel far working well