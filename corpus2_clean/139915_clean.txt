bit subjective hoping get clearer understanding factor make operator clear use v obtuse difficult considering language design recently one issue always circle back around make key operation language operator use keyword haskell somewhat notorious custom operator easy create often new come packaged several operator use parsec library example come ton operator combining parser together gem like even recall mean right remember easy work memorized actually mean would call parser1 parser2 better certainly verbose clearer way operator overload c like language similar issue additional problem overloading meaning familiar operator like unusual new meaning new language would seem like pretty tough issue f example casting us mathematically derived casting operator instead c style cast syntax verbose vb style c int32 x vb ctype x int32 f x int32 theory new language could operator built functionality instead def dec var declaration something similar certainly declaration followed binding x num instead declare x num let x num going require lot definition operator clear useful obscuring