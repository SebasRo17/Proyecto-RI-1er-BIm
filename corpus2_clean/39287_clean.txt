cost almost nothing use commit history maintained version control system however major project refactoring reorganization cleanup effort function class even namespaces moved around sometimes several file merged together file split change often lead loss original commit history file personal opinion keeping organization project important keeping source history good project organization allows new feature added continuously reasonable effort source history appears dubious furthermore use unit testing regression issue quickly identified long latest version continues satisfy software requirement actually need preserve history source understand shipped source must preserved need provide support customer without requiring perform major version upgrade aside keeping history source commits source commit history play role communication team member commit history instead rely source unit testing communication existence commit history make one complacent long term documentation important information project major design requirement change stream thought drove change