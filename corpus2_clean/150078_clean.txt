principle single django application reused two project providing functionality relevent implies database structure table relation created identically different database time problem assuming project database unrelated instance someone downloads complete app use project sometimes however model must tweaked little better fit problem need accomplished forking app wondered better option case app designer anticipate common customizations instance model could relate another one one one many could specify unique property parameter specified project setting model model model foreignkey unique setting model relate many others could create intermediate table thus enforcing referential integrity instead using generic fks related setting model related model related globals model model model model model foreignkey find model related model foreignkey property intersection table must etc let stress proposing change model runtime anything like parameter defined called first time parameter changed unless schema migration good design better way accomplish thing maybe drawback coulnd anticipate technique meant used sparingly apps meant reused wildly different context specific need customization detected app model designed