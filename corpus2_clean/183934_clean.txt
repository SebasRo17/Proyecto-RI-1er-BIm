writing enterprise web form frontend application house use direct access control masquerading role based access control rbac anonymization purpose let call unit information stored application document role company bos grunt c level executive also external e g somebody working business partner general guideline everybody external able read document c level exec write everything boss write document belonging department grunt write document personally assigned fairly standard thus far user actually want make arbitrary exception want person system granted write access document external granted read access document actually complicated role finer granularity permission including management propagate permission others description illustrates core problem well enough basically permission personal level role convenient way default setting personal level permission user document added system instead somebody fill whole row column access control matrix hand already designed permission table database user fk document fk column different type permission sure save table alternative num save permission table pure logic tier mimic rbac e g new bos added row document system added db read permission document write document department alternative num save deviation role guideline new bos added nothing written permission table executive give bos right write document different department single row added reflect information sure alternative would better first one feel closer textbook implementation principle made textbook normally good reason use case also hurt dry principle information c level exec write document x derivable role writing row information db redundant advantage disadvantage approach term application performance b complexity implementation headache expect keep mind num plan implement full logic tier whole application practically convenient crud frontend database db query page view instead keeping collection document object memory know advantage mvc pattern decided overkill project num programming asp net num closer stay role let framework heavy lifting num thought implementing group orthogonal role manage access make sense case