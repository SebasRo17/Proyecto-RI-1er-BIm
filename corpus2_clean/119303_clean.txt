though use like dvcs personal project totally see make managing contribution project others easier e g typical github scenario seems like traditional team could problem centralized approach employed solution like tfs perforce etc traditional mean team developer office working one project one person owns potentially everyone touching couple problem foreseen please chime consideration traditional system try check change server someone else previously checked conflicting change forced merge check dvcs model developer check change locally point push repo repo branch file num people changed seems someone must put charge dealing situation designated person team might sufficient knowledge entire codebase able handle merging conflict extra step added someone approach one developer tell pull merge push build infrastructure automates task furthermore since dvcs tends make working locally convenient probable developer could accumulate change local repos pushing making conflict common complicated obviously everyone team work different area issue curious case everyone working seems like centralized model force conflict dealt quickly frequently minimizing need large painful merges anyone police repo use dvcs team office handle case find daily likely weekly workflow affected negatively consideration aware recommending dvcs workplace