month learning playing lisp cl bit clojure still seeing compelling reason write anything instead c would really like compelling reason someone point missing something really big strength lisp per research compact expressive notation c yes seem able express idea c implicit support functional programming c linq extension method mapcar select lambda select lambda aggregate b union b car first first cdr rest skip num etc lambda higher order support c syntax arguably simpler lambda x body versus x body num num nice clojure dispatch separated object c extension method dispatch c natively could implement call hour macro maybe gotten macro seen single example idea macro implemented change language sure strength dsl composition work untyped exploratory programming structs class c work quite well easily escalate stronger typing go along run non window hardware yeah outside college known one person window home least vm window nix mac maybe important thought repl bottom design ok admit really really nice miss c thing missing lisp due mix c net visual studio resharper namespaces even static method like tie categorize context clojure seems cl seem great compile design time support system allows determine correctness datastructures pas around anything misspelled underlined realtime wait runtime know improvement using fp approach instead imperative one gui development tool winforms wpf know clojure access gui library entirely foreign gui debugging tool breakpoints step step inspector text xml custom watch thread conditional breakpoints call stack window ability jump level stack fair stint emacs slime seemed provide partial v gui driven approach really like hype surrounding lisp gave chance anything lisp well c might bit verbose c also autocomplete missing use clojure cl