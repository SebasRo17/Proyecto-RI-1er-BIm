speed mst algorithm work graph adopted prim algorithm need graph use dense number vertex v every vertex connected n vertex graph computer k ghz need second compute mst prim read performance tuning mathematica best way optimize code compile tried force work maybe change procedural part code functional possible prim seems procedural root change algorithm kruskal boruvka successfully use parallelize function compute many different graph parallel core make faster computing single graph code adopted need getmstprim metricmatrix module groupone grouptwo kk path current rule n n length metricmatrix groupone randominteger n initialaze point groupone inside point tree grouptwo complement range n groupone grouptwo outside point tree kk kk n kk path table metricmatrix j j groupone j grouptwo current possible connection group one two current last first sort flatten path sort shortest weight groupone union groupone current add current path goupe one grouptwo complement grouptwo current remove current path goupe two rule append rule current store path final use rule metricmatrix list list x