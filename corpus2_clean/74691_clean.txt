major objective software development focus delivery feature implemented good quality knowledgeable developer supposed write software good performance extent understanding software module working example able use appropriate algorithm structure implementing various part system word first implementation wrote satisfy unit test would good performance characteristic final product supposed however system large complex consisting many component written different people team include multiple vendor productive company separate role performance engineering software developer software developer focus feature correctness meet specification performance engineer focus measuring improving performance without affecting feature correctness put simply two different hat requiring two different mind set motivation answer got another question alternative requiring red tdd reverting change software development time meeting functional requirement must software performance nice test functional requirement deterministic outcome usually pas fail accept reject performance characteristic fixed accept reject target metric drive performance optimizing effort future change functional requirement may make necessary sacrifice adjust certain performance objective personally agree quick feedback cycle feature implementation software performance monitoring question arguing whether two separate specialization although people might specialized possible outcome feature implementation optimization done different developer num go conflict nothing get done contributed quant dev num resulting software better performance num resulting software poor performance related skill think performance engineer ask separate question soon possible software performance issue arise large software system cannot forecast even knowledgeable software developer dedicated performance engineer able solve