question regard usage decorator pattern add little functionality object large class following classic decorator pattern please consider following structure enter image description example imagine happens inside game instance meant add little functionality wrapping instance methoda return representing damage character enemy simply add thus need add methoda functionality methodb stay look like extends character public character character character public methoda num character methoda public methodb character methodb simply delegate wrapped problem small class containing two method defined num method would implement even though meant add little functionality end containing one add little functionality another num method simply delegate inner would look like extends character public character character character public methoda num character methoda public methodb character methodb simply delegate wrapped public methodc character methodc simply delegate wrapped public methodd character methodd simply delegate wrapped public methode character methode simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public character simply delegate wrapped public methodn character methodn simply delegate wrapped public character simply delegate wrapped obviously ugly probably first encounter problem decorator avoid