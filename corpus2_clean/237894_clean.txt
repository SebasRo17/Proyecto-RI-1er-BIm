carefully followed always write quality unless writing prototype advice career freelancer software developer convinced pretty early avoiding review testing qa refactoring make project faster slower book like mythical man month fred brook rapid development steve mcconnell confirmed thought professional experience medium scale company also showed much money time wasted even trying quality work time often heard colleague complaining constantly maintaining good quality simply achieving good quality complicated small scale company small team expensive get people able write maintain quality company hire either two person num num per month one person num num per month manager would consider two person productive one maybe factor two still small company hire one person num num per month spend remaining num num something else many aspect take account order able within small team single person hardly take care style readability architecture design ease testing testing reliability security ease use performance etc worth like piece remain base next fifteen year read thousand time hundred developer chance person maintain piece software next five year throw away write better one scratch usually reply one remember productivity factor num num among developer time spent writing maintaining mean low quality still way expensive every company matter scale try hire best possible developer afford encourage write quality scale quality becomes burden waste time money