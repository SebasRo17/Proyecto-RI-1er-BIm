according cppreference use release acquire semantics ensure write read precedence two thread follows thread num write x num atomic store std memory order release thread b num atomic load std memory order acquire num read x supposing num ordered num take given occurs according guaranteed write x visible b since establish total order event conveniently described enumeration num sequenced num synchronizes num sequenced num release acquire ensure writes visible b num however link explicitly state situation memory writes non atomic relaxed atomic become visible side effect thread b question visible side effect considered writes made b thread previously unaware writes word suppose third thread c another atomic thread num write x num atomic store std memory order release thread b num atomic load std memory order acquire num read x num atomic store z std memory order release thread c num atomic load z std memory order acquire num read x assume similarly num happens num would c read write x b visible side effect x considered write