learned relational database prof said one would almost always want artificial primary key table specify exception time stopped using junction table never problem making database lot lookup table wonder whether case leaving artificial key make cleaner design simple programming toy example assume mockup ui want achieve example ui view design option artificial id would foreign key title pooh num nightingale rose num num id typename num novel num fairy tale option without us key column properly declared foreign key title pooh novel nightingale rose fairy tale fairy tale typename novel fairy tale tend towards using second option would need one less join showing screen want get rid lookup table entirely want able restrict value user may enter example giving drop list bound lookup table disadvantage think stakeholder say want ui say story fairy tale would update row table live expect happen often case first design advantage missing two option considered best practice edit2 understand existing answer afraid trying break normalization title pooh novel yes nightingale rose fairy tale yes fairy tale yes make clear trying instead really information pertaining using id would record way title pooh novel nightingale rose fairy tale fairy tale typename novel yes fairy tale yes conference paper difference typical database design would id nvarchar integer certainly drawback storage needed pointed see normalization rule supposed hurt example aside trying use id actually information recorded considered entity right speaking case simple toy example gave beginning whole second table exists sql enum record consists nothing single word unique record