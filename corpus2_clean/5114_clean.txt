great answer compiled version nelder mead algorithm presented since work arbitrary dimension e arbitrary number argument use apply objective function problem apply directly supported inside compile overcome limitation following code used produce compiled code nelder mead algorithm objective function inlined clearall apply setattributes apply holdall apply f function compiledfunction var symbol applied f var function arglist block var var arglist applied seems work inside package idea work could somebody explain technique behind code snippet specifically setdelayed inside var appear twice argument block minimal example work believe mimic done mentioned answer clear b c x z objectivefunction cfunc objectivefunction compile b c x z x b c z cfunc f apply objectivefunction b c x z compile pt real f pt compiledfunctiontools compileprint cfunc edit working snippet note inlinecompiledfunctions must set true avoid call mainevaluate clearall b c x z apply objectivefunction cfunc produce inlinable code use inside compile apply supported directly setattributes apply holdrest apply f function compiledfunction var symbol function arglist block var var arglist f var objectivefunction compile b c x z x b c z apply objectivefunction b c x z cfunc f apply objectivefunction b c x z compile pt real f pt compilationoptions inlinecompiledfunctions true compiledfunctiontools compileprint cfunc