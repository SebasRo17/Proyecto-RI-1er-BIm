asked question believe question unclear however hard time extracting general problem specific case update answered question read like reading stuff maybe educational maybe writing music sequencer existing component sequence collection sequenceevents note meter tempo etc sequencer manages playback timing scoreview render sequence neckview show playback guitar neck gui manages smaller control including clock display current play position right component loosely coupled using pub sub send respond event exception sequencer hold reference sequence publishes event logical playhead move sequence event encountered sequence query need fast live playback single component manage query important planned feature require multiple component show related current playhead position well step region time slice larger single time position e g measure question arises best represent playhead step region like idea component would maintain duplicate state time position associated sequence event even component maintain reference playhead step region object feel like dry violation however simply consuming transient event work well consider example num sequencer advance measure num beat num dispatch publishes event num scoreview handle event moving playhead display num sequencer query sequence event num num find num note chord dispatch num note event num synth handle event playing note num neckview handle event animating note far work well num user edits score adding 4th note num num num sequence dispatch event neckview know added note current playhead time know added note current playhead within current step region also displayed one example illustrating problem broadly trying solve multiple component maintain playhead step region seems like redundant responsibility state transient event start feel like many event type great fit either best attempt genericize ask good way represent shared mutable state playhead step region represent slice time sequence within time slice sequence event could added removed observing component need know every way look feel wrong another thought actual object playhead comprises time point subset sequence event sequence could listen sequence added removed event publish however approach mean multiple component reference playhead feel like duplication responsibility sequencer hold object manages timing logically current playback position component know update note added removed within time region opposed time region sequence try ask question dumber sound ask answer obvious multiple choice solution num sequence dispatch playhead event sequence change either time slice dispatch new playhead event containing current corresponding sequence observing component like neckview treat event idempotent remain stateless regarding timing num add playhead class multiple component hold reference listen added removed event instance involves fair amount new object playback probably big gc concern smell bad num playhead singleton worse version num requires object maintain reference sequence well observe event sequencer publish event testing becomes problematic num sequence added removed event contain reference sequence seems like sane common approach invite multiple component potentially expensive querying redundantly sequence often every tick real time playback one reason sequencer directly manages sequence num observing component maintain time point playhead removed event handled ignored accordingly mean redundant state state completely updated via event long question thought