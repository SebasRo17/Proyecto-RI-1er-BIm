situation programming embedded device simple customizable led display num rgb led linearly setup led used display many different thing depending device mode started road feel spending lot time coding finding lot duplicate coding simplified abstraction wrapper method class bare minimum starting point led driver represents hardware driving led one primarily used tlc5940 display ushort size equal amount pin multiple num num per chip chip connected control pin individually allowing direct control led lead creating different extension method static different routine populating passing display work ok testing different method found lot duplicate populate rgb led consumes num physical pin num consecutive value control specific rgb led need write consecutive chunk three value control led came private static extension private static ref ushort ushort ushort ushort ushort short num ushort num logic shift physical pin layout num num else num num else throw new exception num num ushort ushort num num num simple make thing easier extension display method num num call write specific led one call deeper level thought make led would contain num value also offer function like led color red led color blue etc would represent color make coding easier fun moreover create led container contain led ex led led num color red could also generate demand one level complexity device user customizable created user setting contains device user setting many apply led like certain color overall brightness color scheme etc setting brightness would need applied whole sent display also read far thanks question point tool way control led looking rewrite wondering best way encapsulate functionality certain coding pattern style would apply thought writing getting head maybe new would contain instance led hardware setting class static singleton also concerned memory ram speed embedded device would appreciate feedback seems lot different dependency getting little lost brain