often use enum type switch apply logic case important enum implemented example public enum required duplicate unknown missing public perror switch perror case required case duplicate case missing case unknown throw new invalidargumentexception unsupported bottom added exception last resort check programmer remembered add new enum type switch statement new added exception could thrown updated problem generates unit test coverage num trigger exception could add generic unhandled call unhandled get num coverage feel like hack solve something problem get full coverage could remove safety check 99 problem base large uncovered move coverage always see 99 know missed two rewrite newly added enums added switch caught somehow programmer also covered test way without added dummy enum