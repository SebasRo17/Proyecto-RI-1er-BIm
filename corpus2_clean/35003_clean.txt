imagine n approx cloud point array form updated numclouds cloudlist table table randominteger randomreal randominteger randomreal j randominteger numclouds notice generate point first randomly snapping coordinate integer lattice adding real number valued noise listplot flatten cloudlist like move sliding window cloudlist size k e g k take point cloudlist cloudlist cloudlist k establish clique point within euclidean distance one another e place circle diameter set point clique replace point within clique median mean point value given clique would like without disturbing array structure cloudlist term finding fast way grab point within critical radius frac use poorly documented version nearest nearest data x n r give n nearest element x within radius r answer user ssch question selecting point within threshold distance upper lower bound number point update neglected specify occur point belong one clique user belisarius example asked clique point set tuples r four point belong clique list tuples nf nearest list nf list infinity n set point clique however set r binomial seperate clique overlapping point resolve like generate clique compute mean clique point fall multiple clique randomly assign point mean median value selected uniform probability clique however open simpler solution easier implement nd update changed method generating random test set first snap randomly generated test point bounded integer lattice coordinate add noise rd update note would fine employing simple greedy algorithm partition point cluster using findclusters euclideandistance distance function slightly less comfortable since exactly sure underlying algorithm