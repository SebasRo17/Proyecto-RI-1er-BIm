company considering rewriting business logic database better architecture year organic unforeseen growth leading inevitable maintenance nightmare business model one let say cookie flow multiple step changing state along way received raw get cooked potentially split two smaller cooky depending order point one two thing could happen one cookie cooky considered finished sent customer two cooky requires outside processing adding icing adding food coloring cutting design theoretical limit outside processing change cookie always change physical property sent straight customer back u shipment customer reject cooky find standard store attempt resell cooky less discerning customer send outside processing per customer whim way system currently work initially assigning raw cookie number baking cutting assigning resulting cookie finished cookie number one cookie however common ground type cooky resulting lot extra trying propose oriented approach fresh college coworkers close num year older know little hesitant change model pretty solid worked academically never practically especially monitoring form flow specific may bit understanding believe oo best choice problem uml diagram showing proposed hierarchy kind cookie instantiated access turn next step cookie correct way would better function accessed static abstract cookie worry much inherited placement trying understand object transform