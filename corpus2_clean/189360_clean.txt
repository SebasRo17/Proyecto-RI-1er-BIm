early stage writing emacs major mode stack exchange network use emacs regularly benefit end order minimize number call made stack exchange api capped num per ip per day generally responsible citizen want cache information receive network store memory waiting accessed really stuck structure store information obviously going list however structure choice must determined stored accessed would like able store information single symbol stack api cache without ado stack api cache list keyed last update would num site point done define simple association list course must go deeper site list api parameter unique followed list question codereview guessed con question last update time num question num question question con question structure list answer consed last update time question structure num answer structure structure likely accurately described tree know better way considering language emacs lisp different lisp know love explicit likely unnecessary help brain wrap around better pretty sure example would turn epoch time api param concern storing potentially huge structure like performance trade offs system would like avoid storing extraneous done could think dataset large first place normal use since human readable text reasonable proportion planning culling old using time head list inherits last update time child tree extent cull take place sure storing like performance trade offs must use set retrieve operation suffer size list suggestion better structure might look like