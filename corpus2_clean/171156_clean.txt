according article oriented programming design dependency injection involves dependent consumer declaration component dependency defined interface contract injector creates instance class implement given dependency interface request let u consider higher order functional programming language e g haskell filter bool list transforms list another list order perform job us consumes external predicate must provided caller e g expression filter x mod x num num num num num num num num num num num num selects even number list construction similar pattern illustrated filter dependent consumer signature bool argument interface contract expression us higher order injector particular case injects implementation x mod x num num contract general one relate higher order function usage pattern functional programming dependency injection pattern oriented language inverse direction dependency injection compared using kind higher order