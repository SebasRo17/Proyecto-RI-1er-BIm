suppose building blog want post comment create two table post table integer id column comment table foreign key post id want probably common query retrieve post comment rather new relational database approach appears obvious write query would look something like select id content select comment post id num comment post id num would give id content post want along relevant comment row packaged neatly nested representation like use json course sql relational database work like closest get join post comment lot unnecessary duplication post information repeated every row mean processing time spent database put together orm parse undo even instruct orm eagerly load post comment best dispatch one query post second query retrieve comment put together client side also inefficient understand relational database proven technology hell older ton research put decade sure really good reason sql standard designed way sure approach outlined possible seems simple obvious way implement one basic relationship record relational database offer something like disclaimer mostly write webapps using rail nosql datastores recently trying postgres actually like lot mean attack relational database perplexed edit since people seem confused asking optimize rail app hack way around problem particular database asking sql standard work way seems counterintuitive wasteful must historical reason original designer sql wanted result look like also think people saying two query missing point may know post id making query may eager load one relationship dozen used concrete example particular problem trying solve illustrates point people say database job ready display seems join database view perform basically functionality make denormalized db easier put together use necessarily display use think proposed basically equivalent join simpler developer parse make use