process developing extensible software company working product pricing production planning present scenario basically two type product manufactured traded simple buy sell conversion manufactured regular made order made order mostly regular model finite number product around num product got multiple attribute size color shade presently software order management inventory decent accounting package costing pricing done arbitary basis via sampling model adding overhead margin percentage required calculate product cost per unit convert valid pricing model pricing may differ upon quantity factor calculate exact cost profitability per product proactively plan production regular model made order unit based existing order management system inventory proposed design proposed following design store product information unique product document style based 5m production man material machine method money separate module four men machine material method term money primitive building block module merged combined compound block store metadata result set required along document separate layer parse metadata act upon based metadata result set defined similar dsl metadata result set redefined runtime separate pricing model work cost product separate production planning module work order management system product information using mapreduce aggregate analyze technology mongodb django numpy stored json format business logic written parse json file technically case dictionary produce based key value present software company recommended traditional box rdbms system could customized problem find system duplication product varying attribute lack analytical tool tight coupling product price many join complex query recommended better robustness better aggregate analysis xxxx always told market run approach since entire software used real time real time sytem link unique product proposed design truly orthogonal loose coupling product cost pricing work general approach kind problem mapreduce provide better way analyze kind problem along numpy traditional sql approach basically work number thinking generic model could extend future