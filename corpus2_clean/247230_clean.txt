c application c interface changing regularly development also c api designed stable spite change c api tighly focused operation client might want want add api make easy outside client team create script controlling application given volatility c design stable nature c api make sense build api c one know way provide extension module implemented c usable wrap c api function considering whether make extension module api thus make pythonic possible whether keep implementaion detail api build pure module top would serve actual external api extension module would thing wrapper around c function resigning nice see following pro con api c extension would efficient less intermediary layer time requires boilerplate provide pythonic behaviour c generally harder write maintain reference counting pointer table etc api module wrapping c extension allows u write pythonic easier less prone would probably lead richer complete api well since adding functionality easier faster c downside runtime memory overhead extra layer well need maintain two separate bit one thing primary question obvious upside downside approach failed consider especially one make one choice clearly superior also widely accepted best practice thing checklist help choose correct approach particular situation