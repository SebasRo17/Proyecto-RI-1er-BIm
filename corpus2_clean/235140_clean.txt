situation common access assembly contains class used project abstract class implemented access layer project project layered approach separated access business layer ui access class may inherit abstract class common abstract class contain execute business layer project reference access layer project reference project common assembly put abstract class reused time common business layer could longer call execute without reference common hope confusing want lot interdependency assembly need move abstract class back project access layer repeated potentially inconsistent behavior project keep business layer need able access common access assembly seems wrong thought architecture know might try say use entity framework orm project complex enough warrant much overhead especially given need fast performance found simple framework directly implementing ado net remarkably faster please advise separation concern inheritance issue try talk adding orm example common base public mustinherit protected property factory protected property connection dbconnection protected property command dbcommand protected property protected property providername protected sub new providername factory getfactory providername set connection connection factory createconnection connection connectionstring providername providername set command command factory createcommand end sub public mustoverride sub execute protected overridable sub setparameters nothing end sub protected mustoverride sub protected overridable sub command commandtype commandtype storedprocedure end sub protected sub command connection connection setparameters providername oracle dataaccess client end end sub protected overridable sub ctype command end sub end common second base search save version save version optionally allowing transaction public mustinherit inherits protected sub new providername mybase new providername end sub public override sub execute try using connection connection open using command try dim rdr idatareader command executereader fill rdr rdr close catch ex exception throw new exception search ex end try end using end using catch ex exception throw new exception search ex end try end sub protected mustoverride sub fill byref rdr system idatareader protected override sub mybase typeof factory dim p new p parametername result p direction parameterdirection ctype p oracledbtype oracledbtype refcursor command parameter add p end end sub protected sub key dim p command createparameter p direction parameterdirection p p parametername key command parameter add p end sub protected sub key system dim p command createparameter p direction parameterdirection p p parametername key command parameter add p end sub end simple implementation example access layer implementation public inherits common dataaccess private property public property result list nothing public sub new providername mybase new providername end sub protected override sub fill byref rdr system idatareader result new list rdr read result add ip end end sub protected override sub command commandtext get end sub protected override sub setparameters mybase ip end sub end problem would come business layer project would something like dim new providername num num execute execute compile business layer reference common access assembly sound like comment nothing wrong business layer containing reference