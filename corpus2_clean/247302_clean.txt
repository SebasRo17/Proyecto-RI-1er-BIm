perhaps scripting background perspective purpose contain class necessary provide template standard way classify construct object particular attribute standard protocol oriented design seems include business logic definition system depends state understand motivation behind binding method sole purpose altering retrieving state definition let exclude simple getters setter constructor scope conversation problem see start process bound consider simple equal accepts parameter return boolean indicating whether string equivalent think simple cause enormous problem let say inherited equal overridden follows boolean equal equal assume thousand different object different equal definition vastly different suddenly definition equality change class becomes extremely painful work equal definition need changed becomes painful work whether internal process called equal need changed eventually system expands hour wasted searching analyzing make far sense generic equal rule defined modifies behavior polymorphically depending input receives consider following definition public static boolean equal b list array aslist contains getclass getname contains b getclass getname equal b else stringutils equal b process defined externally change process would difficult correct provided generic rule could stored categorized logically would easy find would need change business logic change approach seems relatively simple straight forward generally rejected favor typical oriented coupling method