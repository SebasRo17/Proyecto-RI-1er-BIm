firstly please note using simply dynamic behavior illustrate question asking move disk make slider defining custom function allow interactive changing variable almost always gotten setting attribute holdfirst giving variable first argument wrapping dynamic appropriate code defining controller example setattributes myslider holdall myslider var range slider dynamic var range dynamicmodule myslider dynamic feel somewhat clashing compared interface build controller would like similar interface namely changing definition myslider var dynamic range slider var range dynamicmodule myslider dynamic temporary dynamic sense allows full specification dynamic used showing example use temporary setter simple example change rather painless however problem arises situation code pas variable need split way instance manual implementation movable disk mymovabledisk dynamic r fstart f fend eventhandler dynamic disk r mousedown fstart mouseposition graphic r mousedragged f mouseposition graphic r mouseup fend mouseposition graphic r match longest definition would rather like provide multiple definition mymovabledisk dynamic r f fend mymovabledisk dynamic r f way set holdall provide rewriting call definition mymovabledisk dynamic r mymovabledisk dynamic r none automatic none mymovabledisk dynamic r f mymovabledisk dynamic r none f none mymovabledisk dynamic r f mymovabledisk dynamic r none f none mymovabledisk dynamic r f fend mymovabledisk dynamic r none f fend mymovabledisk dynamic r temporary mymovabledisk dynamic r none temporary automatic seems like less elegant solution allow normal dynamic interactivity yet actually define instance temporary setter work wondering easier way carry definition something akin accepting dynamic argument query get value fstar f fend code actually defining mymovabledisk additionally wonder write something like interface definition dynamic essence answering function accepting dynamic var live expectation order mirror build function since really working help page