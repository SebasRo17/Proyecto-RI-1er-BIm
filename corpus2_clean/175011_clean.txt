many modern programming language support concept closure e piece block num treated therefore stored passed around different part defined one part program invoked totally different part program num capture variable context defined access later invoked possibly totally different context example closure written scala def x list lowerbound list x filter x x lowerbound literal x x lowerbound contains free lowerbound closed bound argument closure passed library filter invoke repeatedly normal reading lot question answer site far understand term closure often automatically associated functional programming functional programming style definition programming wikipedia read computer science functional programming programming paradigm treat computation evaluation mathematical function avoids state mutable emphasizes application function contrast imperative programming style emphasizes change state functional depends argument eliminating side effect make much easier understand predict behavior program one key motivation development functional programming hand many closure construct provided programming language allow closure capture non local variable change closure invoked thus producing side effect environment defined case closure implement first idea functional programming function first entity moved around like value neglect second idea avoiding side effect use closure side effect considered functional style closure considered general construct used functional non functional programming style literature topic important note questioning usefulness side effect closure side effect also interested discussion advantage disadvantage closure without side effect interested know using closure still considered functional style proponent functional programming contrary use discouraged using functional style