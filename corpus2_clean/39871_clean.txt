studying mr wizard answer question try identify elementary circle graph answer us dynamic programming technique simplify code underlying guideline code mathematica specific rule applied general rule thus three function name f case f x b x f nestlist rotateleft x b length x b x b case f circle signature circle case f circle vertex join f circle vertex replacelist vertex edge always checked evaluated order case case case circle initially nonexistent expression slightly modify variable name make code easier understand example evaluate f firstly pattern case apply come case also applicable due fact signature finally check case applicable duo setdelayed need temporarily leave evaluation f try compute f f instead use trace f trace f f get sense evaluation progress result nested expression easy recognize helpful u understand code better find way visualize dynamic progress first try made like op vertex union op edge rule op traceres trace f f traceresindex traceres mapindexed deleteduplicates flatten traceres po first position traceresindex flatten traceresindex po sort po length length po gather po length length length length po linkedvretices cmuopt systemoptions compileoptions internal withlocalsettings setsystemoptions compileoptions listablefunctioncompilelength infinity compileoptions mapcompilelength infinity length linkedvretices linkedvretices map block sublist sublength link var sublist po sublength length sublist sublist link select po sublength sublist thread rule var link var po range length po setsystemoptions cmuopt linkedvretices flatten linkedvretices linkedvretices apply traceres linkedvretices graphplot linkedvretices vertexlabeling true enter image description clearly understand progress graph however input data op get bit complex example op result graphplot linkedvretices vertexlabeling tooltip enter image description use communitygraphplot enter image description complex extracting useful information wonder find way clearly visualize progress like show local graph progress technique although important actually solving problem still valuable tracking