come across situation need shard database oracle particularly matter gist problem written large scale system fairly standard tdd style repository service hidden behind interface dependency injection used implement particular version service repository runtime functionality allowing crazy client requirement example migrated mssql oracle week would possible architecture properly decoupled problem arises need shard large portion separate archival system performance reason table structure remain due time constraint would like purity architecture remain one section system knowledge inner working another system need switched one shard another dynamically via user yet finalised two way think approach issue num pas required connection creation repository ideal mean service layer worse ui need know underlying sharding make design inflexible future require thing like sit front caching layer write cache implementation top iservice update method take connection parameter seems wrong num create new subsection system abstract connection information repository would ideal repository would remain self contained cannot think good way switch implementation without specify relevant interface parameter call go back service layer specifying connection use anyone experience issue opinion preferably low labor yet still fairly pure implementation situation