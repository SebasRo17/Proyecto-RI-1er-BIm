favor composition inheritance part clear least clear solution overwriting method simply implementing defined pure virtual form implemented obvious way wrap instance representing base instance representing sub major downside say num method want override single one still delegate every method anyway several layer inheritance several layer wrapping becomes less less efficient also solve problem client another call top wrapper thing happen like inheritance deepest instance base call method wrapped modified wrapping effect call performed instead highest wrapper one extreme alternative would solve problem would one instance per wrap method want overwrite pointless delegation end incredible amount class instance negative effect memory usage require lot coding alternative preferably alternative used result many level pointless delegation without change make sure client also aware implementation called result explosion class instance ideally put extra memory overhead required particular composition level static rather every pay memory overhead composition feeling tell instance representing base top stack layer receives call directly process directly overwritten know way edit seems many people reading question think debating use composition inheritance guiding one solve problem case always use inheritance simple fact composition requires coding also memory need convince inheritance evil good reason want use composition want create system model domain object change nature time gain loose functionality property time result action lot natural modeled composition component dynamically added removed composed property would easy fact already found num different possible design support case varying compromise complexity memory usage speed real problem come component need aware talk required bean sense want know hopefully several way allowing component talk specifically several component one serf base others progressively override method see two way simulate overriding present inheritance first base component overriding component built wrapper top another component like choose runtime hierarchy component want like pipe filter problem inheritance derived call method base work way around base declare pure virtual implemented sub base call see accomplish using whole component wrapping also n inheritance wrapping layer call base component get n level delegation even overwritten wrapping component alternative like said one extreme alternative like forcing component contain single case solve problem base seeing calling method derived class method except work correctly case except recursion price pay memory consumption high least functional lot syntax overhead turn every individual better alternative two mentioned would like know