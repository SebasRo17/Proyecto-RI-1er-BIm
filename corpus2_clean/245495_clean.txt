get string like bufferedreader readline new create new linkedhashset every token add arraylist linkedhashset linkedhashset new linkedhashset linkedhashset add setofstrings add linkedhashset always getting different string never finishing filling structure situation arraylist linkedhashset contains one linkedhashset split inside linkedhashset different present word unique example inside arraylist set x foo set foo call many time make different merges public arraylist operation arraylist linkedhashset setofstrings operation get num operation get num boolean boolean temporary linkedhashset reference used merge two set linkedhashset linkedhashset iterator linkedhashset iterator setofstrings iterator iterator hasnext linkedhashset subset iterator next subset contains subset contains break else subset contains subset iterator remove else subset contains subset break addall explanation example operation merge foo bar step first find foo bar located inside setofstrings situation position x bar tree hotel position foo lemon coffee find combine set contains foo set contains bar way position x bar tree hotel foo lemon coffee position deleted arraylist take parameter arraylist operation arraylist linkedhashset arraylist operation always get specific position operation get num refers set merge foo example operation get num refers set add foo set bar example iterate arraylist search set iterator linkedhashset iterator setofstrings iterator iterator hasnext statement check iterator specific set subset contains subset iterator remove else subset contains subset question could collision algorithm implemented time complexity n size arraylist