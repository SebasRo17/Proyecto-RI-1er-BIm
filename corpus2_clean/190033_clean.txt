working small functional library written mimic functional style programming stuck undesirable cast one definition would love help ok first function define object one apply like public abstract function2 r t1 t2 public abstract r apply final t1 final t2 define con function2 pas around like would another language support public static function2 list list con new function2 list list override public list apply x list x new x x omitted list structure brevity assume functional style list structure usual head tail etc operation want implement like reverse return list item reverse order use foldl1 fold non empty list left achieve pas con parameter foldl1 like public static list foldl function2 list list f list acc list x x isempty acc foldl f f apply x head acc x tail public static list reverse list x avoid cast foldl function2 con new emptylist x pas con reverse need cast function2 idea avoid tried manner messing around type feel simply lack experience part system anyone p aware functional library wanted small one learning experience edit ok using regular foldl get back list still perform cast con align foldl