looking way website remember sensitive without actually storing server side looking html5 localstorage plan see num user enters sensitive form submits num server encrypts via aes num strong key kept private source control num server responds providing encrypted rendered page num page run javascript save encrypted localstorage later num user visit page us javascript fetch encrypted localstorage sends server num server decrypts encrypted gaining access sensitive information request thinking allows either client server compromised thing stay secure client compromised hacker read encrypted key decrypt server database compromised simply stored obviously accessed hacker obviously type server hacking could read sensitive coming initially hack would work whether client storing apply discussion also client hack log key whatnot would still work simply talking storage getting compromised either side security expert wondering plan hole glaring security vulnerability missing