existing scala application trying refactor order use akka one problem manage checking actor based application usually checking done one two mechanism either one return indicating condition option failure use exception neither style seems useful one hand actor message usually fire forget hence value one using future certainly customary ask future every message hand processing message usually happens another thread one cannot catch exception arising processing message one could simulate first mechanism sending back confirmation message extends actor def receive case foo sender errormessage one every actor becomes lot boilerplate seems poor man simulation stack unwinding good strategy recover error actor based application