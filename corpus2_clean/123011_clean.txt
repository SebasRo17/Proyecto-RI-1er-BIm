since question seems pretty subjective posting let say writing version stackoverflow using asp net mvc class like question answer user etc since lazy decided use entity framework class mentioned navigation property question know answer answer know user posted etc read lot martin fowler book sure going service layer implement business logic going use asp net mvc ui application logic related functionality num question num directly expose object question answer others controller num view basically neither going provide rest api application conservative fear like hey view aware question know bad like especially curious case question field like bind view know case binding field control page posted field set got controller side considered fine bad idea num opposite approach thinking using dtos viewmodels everywhere wtf less class always better think right approach know direct answer question fact one consider decide whether using dtos viewmodels whatever else good app architecture also please note considering simplified clone stackoverflow num web project going expose rest api whatever else num user question answer tag search functionality outstanding business logic num like num active user per day special performance requirement num readable surprise place special interest case new member join dev team may also express thought case first num point get changed customer want service allow num simultaneous user need allow every single user post per num minute etc thanks