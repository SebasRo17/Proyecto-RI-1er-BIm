less question nature duck typing staying pythonic suppose first dealing dicts particular structure dict fairly predictable given key typically present sometimes first think two approach mykey dict work dict mykey else pas course ye olde forgiveness v permission approach try work dict mykey except keyerror pas journeyman guy feel like see latter preferred lot feel odd guess doc try excepts seem preferred actual mistake opposed um absence success occasional dict key mydict known always key try except misleading programming fact dict particular key seems particularly important look try except else syntax look really useful come making sure try catching many error able something like try foo bar except typeerror pas else work foo going lead swallowing kind weird error probably result bad might preventing seeing trying add num may never realize part gone horribly wrong suggest check type javascript context try except seems like supposed catch program something instead enabling carry realize example something straw man argument fact intentionally bad given pythonic better ask forgiveness permission help feel like begs question sand actually correct application else v try except particular know expect working even talking speed concern best practice sort quietly confused perceived diagram case look like could go either way people err side try except someone somewhere said pythonic drawn wrong conclusion application syntax