designing prototyping server following characteristic daemon initialization spawn nine manager server solves one part overall problem initialization daemon accepts connection client forking slave server connects manager accepts request client farm manager assembles result sends back client ad infinitum daemon manager slave ability concurrently accept control connection terminal receive process command e g query performance stats concurrency process socket managed select problem complexity coding one thing program least two phase initialization variously establishing connection parent accepting connection child sending asynchronously awaiting child various point want say accept client connection initializing want accept control session even midst regular processing mention managing protocol connection given enough time could probably massage reasonably well factored set subroutine call remember heard entirely different approach sort problem involving libevent callback finite state machine hoping someone reading might say yes perfect example event callback far superior looping select great introductory article nutshell possibly libevent intended