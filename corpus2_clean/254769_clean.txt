find really odd throwable called even constructor accepting throwable used make exception chaining easy think private throwable cause public throwable message throwable cause cause cause public throwable cause cause public synchronized throwable throwable cause cause throw new illegalstateexception overwrite cause cause throw new illegalargumentexception self causation permitted cause cause lead ugly boilerplate take care edge case may already called part want call sure worse correctly tell whether called someone else could called would make time fail illegalstateexception result boilerplate follows try catch illegalstateexception something ignore catch illegalargumentexception something ignore whereas able simply call without caring whether exception already called let take care either condition example simply ignore new cause reason behind odd design edit would like clarify problem cause immutable problem ensuring immutability violated made burden programmer rather handled automatically implementation would made sense cause implemented follows private throwable cause mean cause public throwable message throwable cause cause cause public throwable cause public synchronized throwable throwable cause cause cause cause even original implementation kept handy could added public boolean cause could reduce boilerplate simply would also like clarify question version using whether continue using version reached support end life many reason older version continue used lazy upgrade care security