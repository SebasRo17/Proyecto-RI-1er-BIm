come transaction script world starting take look ddd unsure correct way integrate ddd design database persistence service called organisationservice whose interface contains method retrieving saving away instance organisation domain object organisation aggregate root related member license ef6 database first dbcontext used within organisationservice retrieve entity related entity get transformed domain equivalent retrieved organisationservice loaded organisation domain look like public organisation public ilist member member get set public ilist license license get set using repository pattern organisationservice using ef repository seems ef6 largely made repository redundant point design organisation domain anaemic look like ef poco organisation organisationservice look lot like repository need start adding logic logic includes managing organisation license member transaction script day would add method organisationservice handling operation call repository interact db ddd believe logic encapsulated within organisation domain unsure need persist back database part logic mean use dbcontext within organisation domain using repository ef within domain bad practice persistence belong public organisation public ilist member member get set public ilist license license get set public ilist license validation stuff save db using var context new context license add add license collection memory license addrange instead mutating organisation domain memory pushing back organisationservice persistence track actually changed ef pocos kind coming feel ef repository replacement also could domain layer guidance appreciated