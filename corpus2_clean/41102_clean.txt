working project mine noticed cudalink show poor performance calling cuda kernel multiple time loop construct demonstrate put together little example call simple array addition kernel multiple time cudalink src global void addkernel float c const float const float b int threadidx x blockidx x blockdim x c b fun cudafunctionload src addkernel float output float input float input targetprecision single constantarray b constantarray c constantarray gpua cudamemoryload targetprecision single gpub cudamemoryload b targetprecision single gpuc cudamemoryload c targetprecision single cudamemorycopytodevice gpua cudamemorycopytodevice gpub cudamemorycopytodevice gpuc runtimes max max max max fun gpuc gpua gpub absolutetiming first appendto runtimes called kernel code using c compiler visual studio array length number iteration essentially nvidia sample code come start cuda project include cuda runtime h include device launch parameter h include time h include stdio h include fstream include iomanip cudaerror addwithcuda int c const int const int b unsigned int size global void addkernel float c const float const float b int threadidx x blockidx x blockdim x c b int main const int arraysize float arraysize float b arraysize float c arraysize int arraysize f b f c f float dev float dev b float dev c cudaerror cudastatus std fstream runtimes runtimes open runtimes txt std fstream choose gpu run change multi gpu system cudastatus cudasetdevice cudastatus cudasuccess fprintf stderr cudasetdevice failed cuda capable gpu installed goto error allocate gpu buffer three vector two input one output cudastatus cudamalloc void dev c arraysize sizeof float cudastatus cudasuccess fprintf stderr cudamalloc failed goto error cudastatus cudamalloc void dev arraysize sizeof float cudastatus cudasuccess fprintf stderr cudamalloc failed goto error cudastatus cudamalloc void dev b arraysize sizeof float cudastatus cudasuccess fprintf stderr cudamalloc failed goto error copy input vector host memory gpu buffer cudastatus cudamemcpy dev arraysize sizeof float cudamemcpyhosttodevice cudastatus cudasuccess fprintf stderr cudamemcpy failed goto error cudastatus cudamemcpy dev b b arraysize sizeof float cudamemcpyhosttodevice cudastatus cudasuccess fprintf stderr cudamemcpy failed goto error clock timer get runtimes int max max max cudadevicesynchronize timer clock int max add vector parallel launch kernel gpu one thread element addkernel dev c dev dev b check error launching kernel cudastatus cudagetlasterror cudastatus cudasuccess fprintf stderr addkernel launch failed n cudageterrorstring cudastatus goto error cudadevicesynchronize wait kernel finish return error encountered launch cudastatus cudadevicesynchronize cudastatus cudasuccess fprintf stderr cudadevicesynchronize returned error code launching addkernel n cudastatus goto error timer clock timer runtimes std setprecision double timer double clock per sec std endl copy output vector gpu buffer host memory cudastatus cudamemcpy c dev c arraysize sizeof float cudamemcpydevicetohost cudastatus cudasuccess fprintf stderr cudamemcpy failed goto error error cudafree dev c cudafree dev cudafree dev b runtimes close cudadevicereset must called exiting order profiling tracing tool nsight visual profiler show complete trace cudastatus cudadevicereset cudastatus cudasuccess fprintf stderr cudadevicereset failed return return resulting runtimes gt runtime comparison anybody explain behavior adjust mathematica code prevent effect