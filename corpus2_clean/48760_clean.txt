like hear used doctrine num later propel num later comparison two relational mapper based old version doctrine num versus propel num num orms went significant redesigns recent revision example criticism propel seems center around peer class deprecated num case accumulated far tried make list balanced possible propel pro extremely ide friendly actual generated instead relying php magic method mean ide feature like completion actually helpful fast term database usage runtime introspection done database clean migration schema version least num beta generate php num model e namespaces easy chain lot thing single database query thing like method see completion video con requires extra build step namely building model class generated need rebuilt whenever propel version changed setting changed schema change might unintuitive custom method applied model lost think custom method lost generated base propel provides entity specifically extension useful feature e version behavior schema migration beta status doctrine pro popular doctrine query language express potentially complicated relationship easily possible propel activerecord strategy easier add reusable behavior compared propel docblock based commenting building schema embedded actual php instead separate xml file us php num namespaces everywhere con requires learning entirely new programming language doctrine query language implemented term magic method several place making ide autocomplete worthless requires database introspection thus slightly slower propel default caching remove caching add considerable complexity fewer behavior included core codebase several feature propel provides box nested set available extension huge gleaned though reading documentation available tool actually built anything yet like hear used tool though share experience pro con library recommendation point