work analog company proprietary sequencer byte free ram maybe num byte kb byte maybe num byte statically allocated num register including pc indirection c pointer stack write num application assembly num business depends legacy meaning new must neatly fit existing assembly write assembly verify written tested superior sequencer would considered primitive num mov instruction move k must write orx stx k much complicates dependency resolution least optimization many operation work specific register example num bit right shift us k upper word lower word sequencer used extremely low power application rom program chip sell num large quantity hope need justify higher level language however management convinced worth effort developing porting existing feel confident could write little lisp evaluator produce machine would get feel like immense waste time money mention professional development authoritative resource show bos bos make understand seems like common sense studied software superior studied analog able write single c hard convey idea put round block square hole fit somebody know block hole round square