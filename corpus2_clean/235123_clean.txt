working website multiple brand core functionality brand however number difference difference may appear obviously asset model view setting one example would one brand one extra field one model mean need extra database column brand together proper validation within model modified view question would best way implement number way think none perfect num conditionals previous implementation application start set global called brand fork logic depending constant obviously looking clutter terribly planning large number brand num load path precedence current implementation one folder core functionality another brand specific override application start prepend load path brand specific folder path way always try load brand specific model fall back onto core none defined downside approach need duplicate file want modify given brand want add extra field brand need copy core view brand folder modify point would like change core view change need added branded view well manually num using git branch proposed core implementation sits git master branch brand occupies branch brand specific change committed underlying brand branch need modify brand modify master branch merge change brand downside large number brand merging change might quite long conflict prone process way implement flexible branding ruby rail application definitively favour git option obvious solution