considering using delegate pattern get necessary operation different piece algorithm need default value used explicitly set use delegate pattern would define interface defines piece information algorithm would use retrieve need option see setter algorithm property set explicitly instead waiting requested delegate pattern many advantage using delegate pattern feel many really apply situation one biggest thing eliminates need make specialized subclass case using setter also remove need also delegate pattern allows reuse delegate like configuration use setter everything explicitly set whenever reconfiguring instead changing delegate around would definitely lean towards using delegate pattern issue public interface used people necessarily familiar pattern feel using setter would natural way someone without knowledge design pattern simple example trying would following algorithm going determine certain range character exit configurable option algorithm first character e g k last character e g p make search k l n p number character range need match stack overflow searching character range k p requiring least num character match contains k l using delegate pattern would look necessarily efficient delegate delegate targetcount delegate num c c c targetcount otherwise algorithm would require member function variable defined set store value algorithm would look like num c c c variable may may changed often definitely reuse configuration advantage delegate pattern missing disadvantage using setter missing comment suggestion thanks