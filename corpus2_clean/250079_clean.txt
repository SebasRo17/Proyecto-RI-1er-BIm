good day told good practice writing method make responsible one thing made sense look back upon retrospect couple reason like coding way num manageable num human readable num better understanding maintained come issue concern sometimes performing task requires num action performed lot developer look every day num num thing per could broken assigned delegate method sequentially working huge project implication using lot delegate method sequentially concerned using lot delegate example private delegate factory factory factory protected page load sender eventargs e try factory factory factory factory factory factory invoke catch exception ex ex message newline ex stacktrace replace newline replace newline region test process method private catalog new jam successfully initialized private helper new jam successfully private accesstoken jam accesstoken isnullorempty accesstoken catalog accesstoken jam accesstoken accesstoken retrieved newline accesstoken private catalog country num helper catalog page country accesstoken private var fulfillment new jam guid newguid tostring result fulfillment abc num num za num num jam accesstoken result var product newline foreach var p result product p productname br foreach var l p link l uri br else product found endregion region logging page private text result innerhtml concat strong datetime tostring strong text newline endregion one test page num delegate project work sometimes num num delegate set similarly perform method sequentially try keep method num action