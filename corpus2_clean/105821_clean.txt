programmer come talk popular pattern enterprise application preach interface remove strong relation component aid changing concrete type minimizing change area application underlying assumption interface abstraction come real life almost impossible let use example let say currently use orm framework application abstracted applying repository pattern really change orm framework seamlessly public interface irepository getbyid id add entity remove entity update entity iqueryable query expression func bool filter theoretically implementation applied rest application many question remain actual application pattern num pattern shield internal process library num abstraction deal variation exception thrown library num selected orm provides caching mechanism internally later decide switch alternative orm support pattern handle believe project architecture strongly influenced library used anything wrong assuming much pattern