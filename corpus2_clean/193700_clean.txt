difficulty evaluate revision software software paid customer year ago never used customer noticed work expected customer asked evaluate project source give estimation time fix probably maintenance contract however analysed day notice source base bad crucial characteristic lot source line c without class statically allocated extern public poor comment poor documentation bunch warning counted 7k time warning spread unsigned signed mismatch aliased variable till uninitialized variable static analysis tool signaled buffer overflow unassigned variable suspect operation lot multithreading critical section compile version able short time suspect buffer overflow working enough already encountered like surprised working expected thinking face task convenient way thought fix warning fix static analysis warning ensure exclusive access shared across multiple thread enable iterator debugging debugging std vector access vector used lot imply upgrade v num least us crt heap debugging much possible even imply move global variable allocated heap extensive use assertion along post mortem analysis exhaustive test case prove test software robustness would like prepare unit testing refactor method num line would add enough pain give think good plan maybe right direction think missing measurement actually evaluate work could face thought