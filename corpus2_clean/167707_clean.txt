header file supplied vendor something one must interact deficient way case better num work around header deficiency num copy header file local project fix num fix header file spot stored vendor supplied tool num fix header file central spot also make local copy try always two match num something else example header file supplied st micro series contains line typedef struct io uint32 moder io uint16 uint16 io uint16 register split num num bit field io uint16 register split num num bit field gpio typedef hardware hardware documentation described single num bit register num time one want write one interested writing upper half lower half thus convenient able use mean writing half register hand occasion necessary entire num bit register written single atomic operation optimal way write setting aside white spacing issue would typedef struct io uint32 moder io uint16 uint16 union allow access num bit register two num bit register io uint32 num bit register whole struct io uint16 two num bit part gpio typedef struct defined way could use necessary write num bit writing num bit given header way would better practice use header apply icky typecast writing would idiomatically written uint32 would better use patched header file latter patched file stored managed edit vendor file device register defined using structure definition like macro definition like define struct gpio typedef gpio base etc defined macro rather identifier macro substitution gpio typedef go effect structure defined would affect future us also apply etc thus present inclination would define project wide header file include vendor file defines structure macro substitute structure vendor would allow written use register normal idiomatic fashion using vendor supplied definition everything else providing clear patch point