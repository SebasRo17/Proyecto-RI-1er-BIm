currently writing medium sized web application find asking question many time example let say user file one many ui access one extreme would let service layer take care lazy loading e public interface userservice public user createuser loginname password public set mediafile user user hand never entity id public interface userservice public long createuser loginname password public set long long userid implies service would need method querying setting basic attribute public interface userservice public long createuser loginname password public set long long userid public long userid public long userid add quite bit possibly additional load db also protects subquestion using first case updating fetching etc implemented two method come mind first could try manually update original reference thing like collection proxy version etc get updated returned original reference simplifies using entity directly ui public set mediafile user user set mediafile file user getfiles hibernate isinitialized file user userdao user getid getfiles attach session immutableset mediafile file also public set mediafile user user immutableset mediafile getuser user getid getfiles major difference come show using versioning former case update version etc manually user getversion every update latter update call fetch entity every time set public update user user user getuser user getid setname user getname user getpasswordhash etc etc userdao save seem efficient unintuitive correct way go edit idea related id service could expose public get byid long id used least read basic value entity additionally one could implement get long id initialized entity think bad idea