module equipment written c think module bad smell number symptom new feature added module original feature go wrong weird problem finally orientated buffer overflow module difficult add new module although unit test integration test cover new error flaw concealed original come surface mean review found quality extremely bad module tested many round error concealed surface found qa engineer problem hidden deeper difficult find well virus body easy bring misunderstanding delete summarize status quo lay reason original corrupted loose process monitoring fact many self testing ignored partial executed first programmer module lack programming ability team leader find problem risk time many improvement approach stay plan phase due team leader suspicion project came new version team leader want change situation discussed procedure many time everyone agreed revise module decide rewriting module mean throwing module trash rewriting without changing interface refactoring module mean one step time need retain beginning build solid set test dig revise small piece relying test tell u whether introduce bug process repeated refactoring complete agree rewriting already rewriting experience system proven best choice project manager wish refactor module account limited time available required complete detailed design coding review unit test integration testing three month think time scale tight full rewrite rewritten refactored edit joel said thing never part idea new better old patently absurd agree viewpoint puzzle rewriting case project proved wise choice maybe relies new programmer outstanding previous programmer testing sufficient