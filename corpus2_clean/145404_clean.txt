strategy involves replacing like public public const num public const num public const num public const murder num public const num public get set public public get set public public static readonly new num public static readonly new num public static readonly new num public static readonly murder new num public static readonly new num public get private set private exactly preferable making enumeration like public public get set public enum num num num murder num num behavior associated would using different refactoring anyways example replace subclass replace conditional polymorphism however author explain frown numeric code enumeration common feature c based language symbolic name quite readable problem symbolic alias still see underlying number check using number num symbolic take argument expects number nothing force symbolic used reduce readability source bug trying apply statement c statement appear accept number enumeration actually considered following public test public var temp new num compile refactoring considered unecessary newer high level language like c considering something