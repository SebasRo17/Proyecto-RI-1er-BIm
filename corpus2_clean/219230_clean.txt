trying design small c geometric api learning purpose came across problem dealing intersection geometric entity example intersection sphere three different type couple point point nothing found several way deal problem know seems best cgal first tried see done geometric library complete found cgal cgal intersection function generic hold anything like boost try assign another example foo cgal segment 2 kernel cgal 2 kernel cgal result cgal point 2 kernel cgal segment 2 kernel result cgal intersection cgal assign result handle point intersection case else cgal assign result handle segment intersection case else handle intersection case way assign us dynamic cast check whether two variable assignable everybody love rtti union union also used mean using id every geometric kind variant cover problem struct variant id union point point std pair point point pair point point std pair point point pair variant v intersection sphere v id id point point v point something point else v id id variant pair v pair something pair else intersection avoiding intersection problem order split intersection case problem library used require user check whether intersection trying find intersection looked like sphere sphere intersects sphere auto ret intersection sphere something ret another way split intersection case rest problem would use optional std optional ret intersection sphere ret something ret using exception control already see cry yet another way handle problem different type would throw result instead returning intersection could still use one technique previous paragraph try intersection sphere catch const point point something point catch const std pair point point pair something pair still catch error intersection special throwing one another way would intersection let say std pair point point considering type exceptional give meaning use exception still quite gestion hand could seem strange handle differently others try auto pair intersection sphere something pair catch const point point chance sphere meet single point small case already considered exceptional left error gestion intersection case last example since many technique already described could used handle want number example exponential one though try re optional pair point point auto re intersection sphere std cout intersection two point n std get num re x std get num re n std get num re x std get num re n else std cout intersection n catch const point point exceptional case std cout intersection one point n point x point n since case result thrown exceptional add runtime overhead program underlying system us zero cost exception instead old exception system actual question well pretty long introduction question idiomatic solution problem example least example could banned without second thought well could give second thought exception example though note something seemed evident apparently entity returned intersection two geometric entity limited nothing point set point intersection pretty much geometric entity therefore using container hold value sound like good idea