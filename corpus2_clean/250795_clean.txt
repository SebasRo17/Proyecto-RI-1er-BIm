background developing wpf project basic structure user interface wpf project interface library contains interface entity used application module every module contains logic specific argument e g file management eventually contains wpf user control wpf control facilitate binding operation created baseviewmodel contains raise automates binding mechanism detail used technique similar one described article problem understand best way separate presentation form business form entity class case interface project instance user public user public virtual get set property one module need use user bind property user interface control use custom implementation get set keywords first point thought create module called instance override property need public user private public override get set raise property problem raise declared baseviewmodel due c single inheritance constraint inherit class right way implement architecture