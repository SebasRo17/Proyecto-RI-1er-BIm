pack list overhead therefore packing list say element likely cost get back efficiency mathematica default list length function creating list pack list e list length less number shown list packed systemoptions compileoptions compileoptions applycompilelength infinity arraycompilelength autocompileallowcoercion false autocompileprotectvalues false automaticcompile false binarytensorarithmetic false compileallowcoercion true compileconfirminitializedvariables true compiledfunctionargumentcoerciontolerance compiledfunctionmaxfailures compiledynamicscoping false compileevaluateconstants true compileoptimizeregisters false compilereportcoercion false compilereportexternal false compilereportfailure false compilevalueslast true foldcompilelength internalcompilemessages false listablefunctioncompilelength mapcompilelength nestcompilelength numericalallowexternal false productcompilelength reusetensorregisters true sumcompilelength systemcompileoptimizations tablecompilelength example make list using table developer packedarrayq table false developer packedarrayq table true assuming plotted time make uncompiled list using table v making compiled list line would intersect beyond packed list become efficient correct interpetation autocompilation length represents would expect optimal length compilation incl packing vary system system therefore want know best way construct set test test proposition determine optimal list length packing function listed edit clarity per albert comment case evaluation taking place prevent compilation discussion redundant e compilation prevented regardless default setting curious optimal list length case compilation occurs