reading blog post morning stumbled across one ever implement customer interface really polymorphism substitutability nothing practice substitute runtime fake generality make sense implementing interface add complexity ever one implementation one might argue add needless complexity writing abstract need often considered smell called speculative generality also mentioned post following tdd easily create test double without speculative generality whether form interface implementation polymorphic option making inheritable method virtual reconcile tradeoff worth general facilitate testing tdd using test double count second implementation thus make generality longer speculative consider heavyweight mocking framework allows mocking concrete collaborator e g mole versus moq c world test concrete class write could considered integration test time design naturally requires polymorphism curious read people take matter thanks advance opinion