tl dr generating handling strategy use multithreaded intended use others use applicable state programming paradigm useful interested imperative concurrent environment general useful writing little concurrency library currently pet c num learning project may used internally work later term domain realm dsp medium streaming since used game engine need fairly strong handling big block moment getting head around parallel structure handling reporting experience large system game usually using library designing looking different strategy might used different situation rather big gap knowledge biggest area concern employing strategy program recover recover way notify user happened kind mechanism already structure although recover memory may leaked destructor fails example approach handle exception safely recover inside library let fatal exception propagate user library indicate undefined state preferred approach single threaded environment approach communicate bad state thread exception occurs would put structure unrecoverable state tear structure set flag block operation structure raise general exception end user hard lock free algorithm forward state parallel computation work well process network high level concurrency model helpful primitive supporting high level model failed terminate thread task caused exception work well thread local computation much solution shared note know good library probably use mix listed experience know strategy good sufficiently large system