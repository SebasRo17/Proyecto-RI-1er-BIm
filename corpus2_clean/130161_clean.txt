taken base ruby rail application relies heavily activerecord callback perform domain rule application compared bank application customer account account register transaction amount money either inserted removed account account account balance updated every time transaction created update happens activerecord callback account activerecord base many transaction def update account balance account balance num self transaction log transaction account balance account balance transaction amount transaction commission end self account balance account balance end end transaction activerecord base belongs account save update account def update account self account update account balance self account save end end find way coding make difficult figure happens go wrong bug occurs also since account need load transaction heavier transaction added developing application like net much familiar would created something like public account public addtransaction decimal amount transaction add new transaction amount amount made sure transaction immutable tempted refactor system something like would rail way drawback far tell controller need explicitly handle controlling database transaction something happened implicitly transaction save call currently called application factor aware