hypothetical scenario codebase exercised unit test teamcity build bot also us built dotcover tool provide coverage metric build fail less x covered unscrupulous developer running pre tested commit tc see next checkin drop coverage percentage threshold break build write good unit test tdd otherwise writes new test run line show covered make assertion behavior test pas default executed throw exception coverage stay x find problem someone must discover test inspect see assertion meaningful assertion made execution since currently review process would detrimental productivity perform review prior every commit want behavior break build test runner run marked test attribute using nunit upon completion see made call nunit assert method thrown expectedexception tc raise ideally tool would smart enough also discover assertion definition assert areequal num num fail build similar way something shelf plug teamcity way configure built runner coverage metric find bad behavior short performing custom static analysis course find eventually environment small house dev team may one two developer familiar full codebase given application blatant end around test quality check may happen guy responsible long gone someone else take primary ownership codebase