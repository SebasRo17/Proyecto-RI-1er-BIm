author designer melt domain specific language extend gcc gnu collection implementation available free software gplv3 licensed want detailed description point view domain specific language read paper melt chosen lisp like syntax melt lisp scheme every operation written lot stupid parenthesis application f argument b written f b like scheme lisp course f application without argument f simple thing denoted melt share many lisp scheme usual control operator like let defun define cond lambda list etc melt use common name primitive operation car melt pair head list first iv different meaning melt deal first value like scheme stuff raw gcc like gimple detail paper reason chosen lisp like syntax includes first lame wanted quick implementation parsing lisp trivial able use e g emacs lisp mode melt without trouble small melt implementation originally prototyped common lisp current melt translator bootstrapped written melt implementation us classical lisp trick expression expanded macro mechanism sort internal abstract syntax tree normalized finally translated c gcc several lisp like formalism inside notably back end machine description file gnu project emacs lisp guile lisp like dialect able use technical reason detailed paper question offer alternative infix like syntax bit pythonic lua esque one one hand afraid people particularly young one never met lisp like programming language course lisp num completely allergic lisp even try melt look hand thing could simple parser producing ast melt today syntax ad hoc probably pretty also working alternative syntax use distract take time effort writing documentation tutorial making good example melt debugging improving implementation young person particular pierre able learn melt without prior exposure melt lisp dialect scheme even compilation would alternative syntax attract people allergic lisp nice guy told syntax matter really dsl adopted bring even sexy syntax