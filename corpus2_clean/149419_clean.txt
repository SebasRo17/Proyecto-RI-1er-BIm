first realize question may somewhat long vague apologize probably basic problem short anybody got find lacking regard please bear describing problem programming way since num year old mean mostly teaching everything start received technical education strictly computer science graduated degree engineering programming course course mostly basic stuff learn much new thing kept educating along way joy always knew would pursue career programming project quite small time trouble keeping mind maintaining find lead team corporate environment work university developing scientific software c engineering application suddenly project growing relatively big trouble wrapping mind around time losing lot time effort two thing mostly num section worked difficulty remembering worked spend lot time reviewing header file relevant class reading comment placed along way source file wish form schematic could glimpse regain picture easily num introduce change sometimes realize half way trying break thing somewhere else worse show runtime surprise revert start differently find neglected influence component wish architecture diagram could see thing get done trying influence component way plan detail start implementing change people work similar story strong technical orientation sometimes great skill way organizing work however project usually much smaller mine cope somehow anyway mean nobody learn good practice took postgraduate course managing find quite satisfying mostly targeted non programmer teaching project management methodology budget schedule estimation enterprise architecture etc software design planning ok trying learn stuff course tool like uml type sofware development process cascade iterative agile introduced obviously great detail hard time deciding pick use extent reading many question answer software design many using particular tool methodology convinced uml documentation would solve problem pick start using people swear others say useless looking answer higher level abstraction way solve two problem personally learn able possibly without bound one particular tool come go style time time expect applicability varies depending project thanks lot reading unable say mean briefly lacking software design experience vocabulary