team experiencing difficulty releasing software frequent basis every week follows typical release timeline iteration developer work story backlog short lived enthusiastically enforced feature branch based master branch developer frequently pull feature branch integration branch continually built tested far test coverage go automatically tester ability auto deploy integration staging environment occurs multiple time per week enabling continual running test suite every monday release planning meeting determine story known good based tester work hence release known issue story source branch pulled integration new bug fix requested tester may pulled integration monday ensure tester stable codebase cut release every tuesday tester tested integration branch much possibly given time available known bug release cut pushed production node slowly sound ok practise found incredibly difficult achieve team see following symptom subtle bug found production identified staging environment last minute hot fix continue tuesday problem production environment require roll back block continued development successful live deployment achieved master branch updated hence branched think test coverage quality ability regression test quickly last minute change environmental difference play anyone offer advice regarding best achieve continual delivery