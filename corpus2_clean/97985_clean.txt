thinking today paul graham book hacker painter specifically two paragraph taught college one ought figure program completely paper even going near computer found program way found liked program sitting front computer piece paper worse still instead patiently writing complete program assuring correct tended hopelessly broken gradually beat shape debugging kind final pas caught typo oversight seemed like programming consisted debugging far tell way taught program college wrong figure program writing writer painter architect taught college pretty sure college well figure program figure sometimes make basic version add functionality idea think sort reminds chapter feynman book called solves radio thinking paced around thinking radio could broken fix programming thinking finding solution prevalent approach coding people hack away put program together without idea going look like advantage disadvantage think v beat