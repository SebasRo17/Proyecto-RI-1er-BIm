long time worked almost exclusively stream however year ago started exploring async well e g running jboss netty however working async world could reuse sync utility also start rather large library new utility sure whether aim blocking non blocking thing go wrote api top existing support blocking non blocking utility written however pervasive thing unsure whether wise thing example take base64 encoder yes apache sync version yes num finally async encoder needed encoder could quoted printable deflate course work socket regular ssl file single threaded multithreaded situation needed utility chain together source use delimiter based fixed length wrapper needed protocol handler ftp many problem expressed blocking neutral fashion given enough thought could support async sync allowing wide reusability short wise introduce abstraction top forcing basically every library us directly indirectly use well update core discerning eye look like cross stream channel public interface extends closeable public read byte byte public read byte byte offset length public interface extends closeable public write byte byte public write byte byte offset length public flush one utils built api public interface public public flush allows something like container container wrap container container new container write test getbytes system println new container base64 encoded byte test thing capable encoding asynchronous manner block container report written block container report available continue calling work jboss netty context get content piece asynchronous piece streaming world everything block read write