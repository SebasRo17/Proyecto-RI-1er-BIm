recently often read since trend build processor multiple core increasingly important programming language support concurrent parallel programming order better exploit parallelism offered processor see e g video background respect certain programming paradigm model considered well suited writing robust concurrent software functional programming language e g haskell scala etc actor model erlang also available scala akka c theron casablanca programming language question state art regarding development concurrent application e g using multi threading using language model area still explored well established practice already complex program application higher level concurrency matter learning new paradigm practice performance highly concurrent software compare performance traditional software executed multiple core processor example anyone implemented desktop application using c theron akka boost performance multiple core processor due higher parallelism edit note asking opinion debate concrete experience information example anyone written scala haskell program compiled existing state art compiler num intel core i3 measured certain performance e g num second certain num bytecode binary intel core i5 observed performance boost e g num second running time due parallel computation sub expression possible functional edit num summarizing making faster processor meant increasing clock speed change programming paradigm needed last year making faster processor meant adding core requires write software differently question whether software developer starting switch new programming paradigm whether bringing expected performance boost multiple core processor