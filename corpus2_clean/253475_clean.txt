looking good way define store reference normalized set well defined set reason short descriptive string certain object created persisted need efficient way store reference also need flexibility add new reason future oh need implement way please developer well database guy context working rail app relational database event payment well many model payment created include reference causation similarly event canceled reference cause cancellation case canceled event current implementation store index cause pulled possible cause defined event model implicit probably unwise assumption change way would break reference also overlap similar cause array model attempt normalize store causation built causation model accompanying table table entry form unique list cause referenced id model drawback whenever want define new causation add database reference bit cumbersome especially deploying testing environment maybe price paid enforced normalization coworker suggested moving definition causation model rather storing database wonder good middle ground overly brittle disorganized original cumbersome restrictive solution maybe something like module causation module refund unhappy customer num unused supply num end module fee shipping num extra food num end mapping refund unhappy customer customer dissatisfied refund unused supply extra unused supply returned fee shipping shipping cost fee extra food ordered extra food end payment causation causation refund unused supply payment save causation mapping payment causation extra unused supply returned see absurd number figured elegant way ensure uniqueness prevent collision also notice need able group category namespaced module approach better way go way avoid using magic number like stick database implementation maybe something better either two