worked lone developer long time time developed way formulating ordering commit message refactor first describe exactly reason commit message link issue tracker even script create several sort change log public company internal developer commit history way always know codebase changed state advent interactive rebase commit reordering easily make sure history thus documentation look exactly way want bad even get history every commit well defined purpose took year evolve practice consider good one however applying someone else change e rewriting history someone else change painfully time consuming task tried order identify unnecessary even faulty change total size patch question slightly big reviewed single unit questionable change fact turn cannot afford control base dictator cost much time like lose control maintaining good quality currently see achieve clean history project format granularity commits require ask developer reformat history e g split commit even would require education split commit fact teach developer work feature branch commit template help frequently change others reviewed