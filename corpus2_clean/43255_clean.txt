new mathematica suggested go project euler problem order learn however quite figure solution slow problem smallest positive number evenly divisible number mathematica solution n max fold time range fold plus table mod n x x n max null n print n work take long time finish give idea time eat supper still done comparison wrote close analogue code c include algorithm include array include iostream include numeric int main int argc char argv std array int divisor std iota std begin divisor std end divisor auto ismultipleof unsigned long long x return std std begin divisor std end divisor int return x unsigned long long n ismultipleof n n std cout n std endl std cin get return follows structure loop stop modulo return divisor give idea much faster benchmarked using nonius following setup define nonius runner include nonius h include algorithm include array include iostream include numeric nonius benchmark project euler nonius chronometer meter std vector unsigned long long result meter run std array int divisor std iota std begin divisor std end divisor auto ismultipleof unsigned long long x return std std begin divisor std end divisor int return x std vector int storage meter run meter measure int unsigned long long n ismultipleof n n result n result html enter image description see average second per run fact whole benchmark took less time one run mathematica really curious