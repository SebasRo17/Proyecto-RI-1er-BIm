refactoring old codeigniter library php framework agnostic core part connection come user ie framework connection connection library library want know except first pdo conn thing written handle native driver model run query return result lib thin transaction query building actual db query model interface big fan interface see model swappable nosql model example library current ci library num receives request num validates params passed num request model num creates response includes code message multilingual configurable really part question summary way work controller calling page num call lib num lib call model num model return lib num lib return controller start real design pattern question would like pas conn via di library also like pas model via di library keep thing flexible flexibility goal would allow people create native db nosql model pas non pdo keeping decoupled seems optimal thing think would end controller might actually execute query lib model conn user model new mymodel lib new mylib conn model conn user model new mymodel conn lib new mylib model feel natural since query conn tend work together either case feel pretty clumsy user help wonder either overdoing whole di thing picked wrong design pattern go guidance best set would greatly appreciated spent time thinking take refactor actual tia