run service return html website supplied url public interface proxy get set useragent get set gethtml url public webclient client public proxy get client proxy set client proxy public useragent get client header useragent tostring set client header useragent public client new webclient public gethtml url url var client downloadstring url sure exactly validate url know whitespace anything else validate indeed properly built url would result would perform validation could simply create public static inside caller validate url maybe even static one geturl url called instantiated would wrong least two reason num would validator applicable many place available class num contract static interface furthermore made static rather service could unit test service would injected constructor idea quite dreadful starting think validate anything simply create try catch block would catch proper exception throw original exception supplied still would nice check validity url caller injected proper service url generated higher caller caller simply pass validate url simple fact url passed level smell