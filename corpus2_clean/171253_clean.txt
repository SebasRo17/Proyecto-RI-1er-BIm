part num clearly immutability minimizes need lock multi processor programming eliminate need instance immutability alone enough seems defer processing encapsulate state long program actually something update store produce report throw exception etc action always done without lock mere action throwing creating new one instead changing original crude view immutability provide absolute protection inter process contention corner case still require locking know lot functional programmer mathematician like talk side effect real world everything side effect even time take execute machine instruction interested theoretical academic answer practical real world answer immutability safe given certain bound assumption want know border safety zone exactly example possible boundary exception error interaction program written language interaction machine physical virtual theoretical special thanks comment started question part num multi processor programming often used optimization technique make faster faster use lock v immutable object given limit set amdahl law achieve better performance without garbage collector taken account immutable object v locking mutable one summary combining two question one try get bounding box immutability solution threading problem