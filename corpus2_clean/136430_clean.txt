writing parser markup language created writing really relevant question fact seems like bad idea love suggestion better path reading parser working writing lexer understand correctly split content token trouble understanding token type use create example token type example linked identifier number whitespace comment eof many symbol count token problem general token type seem bit arbitrary example separate token v identifier could represented start identifier whitespace start may also difficulty language example declaration written var var deployed var seems like token var var eligible token type would fall identifier var actually contain whitespace whitespace var used signify start declaration whitespace part whitespace become token whitespace meaning context moreover may start declaration depends context word start declaration even used part language similar block created indentation reading us lexer create indent dedent token serve less would lot language claim context free mean least lexer care stream creating token lexer know building indent token specific length without knowing previous character e g previous newline start creating space indent ask need know final question stupidest one lexer even necessary seems parser could go character character figure expects lexer add benefit simplicity