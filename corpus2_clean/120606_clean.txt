prematurely introducing complexity implementing design pattern needed good practice follow even solid principle use common design pattern introduce complexity feature requirement added changed keep design maintainable flexible needed however complexity introduced working like removed example application written client originally created several way give raise employee used strategy pattern factory keep whole process nice clean time certain raise method added removed application owner time pass new owner take new owner hard keep everything simple one single way give raise complexity needed strategy pattern longer needed requirement would introduce extra complexity make sure could introduce little work need arise remove strategy implementation think new owner ever change raise given application demonstrated could happen course one example application new owner take simplified many process could remove dozen class interface factory make whole application much simple note current implementation work fine owner happy surprised even happier able implement change quickly discussed complexity admit small part doubt highly likely new owner going use longer really care somebody else take since big income generator care num related thing num care bit new maintainer think bit harder trying understand complexity complexity want anger psycho maniac coming num even worry competitor seeing complexity thinking implement design pattern pad hour job spreading hurt business heard mentioned general previously needed complexity removed even though work historically demonstrated need complexity indication needed future even question generally answered wise remove un needed complexity handing project competitor stranger