understand concept programmer feel oo paradigm come rather naturally practice however recently found thinking wait second actually practical benefit using using static proper encapsulation oo practice could think two benefit using significant powerful num polymorphism allows swap functionality dynamically flexibly runtime also allows add new functionality part alternative system easily example car designed work engine object want add new engine system car use create new engine subclass simply pas car without change anything car decide runtime num able pas functionality around pas around system dynamically advantage object static class often add new part system creating new instantiating object recently stopped thought realized static would lot place normally use example working adding save load file mechanism app calling look like thing thing load file static would look like thing thing load file difference fairly often think reason instantiate plain old static would act oo system static class fairly rare must missing something advantage object two listed please explain edit clarify find object useful swapping functionality passing around example wrote app make melody melodygenerator several subclass create melody differently object class interchangable strategy pattern melody object since useful pas around chord scale static part system going passed around example save file mechanism implement static