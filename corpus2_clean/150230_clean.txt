post follow question php atomic memcache stackoverflow considering using memcache end php num num implemented custom locking system client wait lock key destroyed begin modify key memcache client num connects check active lock key num find none get client num connects microsecond client num request key num find lock client num enters retry client num release lock client num save new key num release lock client num get fresh set lock key num continues work num time would work num time two request made far apart say 500ms let say two request made almost time num num microsecond apart solution fails client write key resulting incorrect tried many thing including varies wait time every iteration lock key exists usleep mt rand num num help little would solution particular issue process must atomic willing tolerate num failure rate since mean need work little harder make num anything risky broken head trying figure possibility upgrade memcached change simple increment