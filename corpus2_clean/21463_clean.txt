tdd writing unit test one resist urge cheat writing first iteration implementation testing example let need calculate factorial number start unit test using mstest something like testclass public testmethod public 5 return arrange var mymath new mymath act long mymath num assert assert areequal num fails since even exist write first iteration implement test writing minimum required pas test thing continually tempted write following public mymath public long long num technically correct really minimum required make specific test pas go green although clearly cheat since really even attempt perform calculating factorial course refactoring part becomes exercise writing correct functionality rather refactoring implementation obviously adding additional test different parameter fail force refactoring start one test question get balance writing minimum pas test whilst still keeping functional spirit actually trying achieve