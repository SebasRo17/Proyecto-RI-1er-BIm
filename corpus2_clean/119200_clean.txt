problem mvc based framework allow u cache part ideally want cache static semi static part dynamic part addition need consider caching reacts database change idea concept came represent page tree xml fragment object fragment dynamic pull directly model source fragment static scaffolding subtree fragment completely static imagine could unfold xml would cached text representation parent element process would ideally continue left root element contains static xml couple dynamic xml fragment resolved attached relevant node xml tree page displayed addition separating content dynamic static fragment fragment could dynamic cached simple expiry time propagates xml fragment tree would indicate specific fragment periodically refreshed newspaper section front page need updated second minute sometimes even longer sufficient fragment would dynamic uncached typically many article viewed cached cache would overflow individual article may cached extremely popular functional note folding mechanism could smart enough judge would profitable fold dynamic cached fragment propagate expiry date parent fragment keep separate simply attach xml tree resolving page dynamic cached fragment associated database object mechanism like globally unique content id change database could trigger change cache fragment store identifier parent fragment could trigger process would include updated set pure xml ordered fragment object store identifying information node attached resolved fairly simple way walking xml tree merging fragment necessary parse construct entire tree memory attaching node processing fairly fast identifier fragment would combination relevant identity fragment cached parent fragment would contain reference identifier order either pull fragment cache controller responsibility reduced making change database telling root xml fragment render would like make clear say xml really mean xhtml design generates fold xhtml start without trying add additional step transform xml xhtml functionally equivalent xml update modified mvc design still essentially mvc traditionally web application controller make change model directly load model send view problem hard partial page caching web application spend time db controller load model time caching view point unless cache whole view database query however smalltalk mvc pattern originally came view pulled model directly view get model mvc wikipedia view pull model view composed view becomes trivial cache view need loading load contact db treating view xml xhtml couple tool allow u manipulate xml quite well making static dynamic fragment fairly simple question question two part num good design obvious flaw missing num somebody else thought reference num existing alternative consider cool templating engine maybe