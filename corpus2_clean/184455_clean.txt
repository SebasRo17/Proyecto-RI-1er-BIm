building rest api expose functionality existing api apis internal use within organization design external use influence apis implementing rest one api continue used local application retired rest api used significant new development api class simply bean property getters setter least make sense transmit form rest api marshalled xml json example store info server machine faced following choice class num expose original subclass directly rest api num make new transfer dto pattern specifically rest api either way rest transfer class question whether annotate create new one may near copy may choice focus mainly two argument num dry repeat faster implement easier upgrade rest api argument num rest api need versioned separately api somewhat likely significant change class removal property adding behavior change hierarchy also somewhat likely bottom seems like tradeoff dry num decoupling num leaning toward starting num problem arise moving num later following agile guideline building prove need bad idea start num think may end anyway major argument consequence missing list