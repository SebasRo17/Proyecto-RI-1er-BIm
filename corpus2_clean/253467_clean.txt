project structure like following module shared module depends module database module module depend module shared module depends module database dml sql script stored module shared ddl stored module database advantage design release database change around dml module shared use database integration test make sure still compatible disadvantage creates confusion version example module shared num num depends module database num num eventually forget version compatible question would better design module database contains ddl dml database operation module shared contains everything except database operation experience multi tier architecture always use module segregate tier experience may dao service module keep ddl schema script update forget mention ddl versioned using database script versioning system flyway ddl change incremental note e g module could gradle module maven module etc note trying best biased asking question please assume preference either solution