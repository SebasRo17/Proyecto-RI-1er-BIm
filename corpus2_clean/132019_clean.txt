background big fan abstraction admit one benefit adaptability portability usability interface etc real benefit wish question let ignore major benefit abstraction hide implementation logic detail user abstraction argument need know detail one concentrate logic point make sense theory however whenever maintaining large enterprise application always need know detail becomes huge hassle digging deeper deeper abstraction every turn find exactly something e open declaration num time finding stored procedure used hide detail mentality seems get way always wishing transparent interface less abstraction read high level source know never know really need know going every system ever worked badly designed perspective least philosophy develop software feel like try follow philosophy feel closely related archlinux philosophy arch linux retains inherent complexity gnu linux system keeping well organized transparent arch linux developer user believe trying hide complexity system actually result even complex system therefore avoided therefore never try hide complexity software behind abstraction layer try abuse abstraction become slave question heart num real hiding detail num sacrificing transparency num transparency valuable