using light weight php fat free framework base form simple mvc based app ddd philosophy model layer aware ddd suitable enterprise solution applying ddd simple mostly driven apps kind overkill concept ddd find appealing like repository pattern business logic entity etc like apply app fat free base represents application singleton instance base hold lot useful tool method registry global framework variable hive used among thing configuration writing app find using lot base tool inside class model layer bit confused reference base instance class simply call base instance inside model class inject constructor dependency dependency injection seems like proper way since app depend whole reference passing constructor seems unnecessary also pas example database config persistance class stored hive passed controller instantiating repository called directly repository mapper looking way fire back looking insight advice second part problem trying write app entity business logic related configurable entity idea inspired j still testing example getproperties return user defined configuration entity property e g title text num association child entity childclass relation onetomany might look bit controversial tested business logic functionality far work ok client communicates entity via usual get set method idea behind configuration able automatically generate scaffolding administration interface entity configure mapper repository based related entity getproperties bugging want one place configuration exists place non business domain logic entity exceptional database table whether field requires rich text editor whether checkbox checked default certain field used entity identity admin web interface etc realise problem tradeoff clean model single place configuration idea probably pollute entity storing non business domain entites thought perhaps someone might idea approach different better way thanks reading