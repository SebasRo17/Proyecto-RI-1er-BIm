package suppose tell allocate element add new element may require repositioning existing element keep tree format promise log n search ultimately hand current system new element add get list add new element old element moved want test set returned valid certain easily test element placed valid location ie location break assumption tree ensure minimal efficent movement element however think check move efficent without essentially rewriting large part package test result since wrote package know implementation specific detail know moved b know exactly logic used decide move implementation specific case multuple equally valid choice pick one way could pick another right sort functional testing utilizing understanding algorithm specify moved else would write test idea making inefficent valid move possible