complex call businesslogic provides rpc interface semi trusted user function rpc interface decide procedure call check authorisation perform argument checking call private function carry required functionality result caller decided implement rpc function separate stateless call separate concern somewhat businesslogic move around decides method businesslogic call implement functionality expose work well part however feel bit wrong businesslogic benefited worry authorisation argument checking etc good since implement functionality term businesslogic thin wrapper procedure make question necessity complex wrapper procedure make wonder whether complexity pushed back businesslogic given businesslogic information needed perform task also mean need access method businesslogic would otherwise private nothing else us think friend function c finally mean effectively unit test without using full businesslogic practical way get valid happy leave system work curious whether obvious improvement make system worth using num primarily oriented style