inching way tdd ladder got point like get advice next move realize might single answer logical suggestion would great thing think stuck knowing weather force duplication proceed primary functionality implemented minimal temporary due general trying go strict green red factor cycle also example simple require mocked object think still valid example please correct wrong gone kind trivial case worth working update continued almost conclusion suppose leave see anyone comment delete test using nspec namespace tictactoe public new game nspec protected game private game new private game start board clear game x turn game x winner yet game winner public specify game new game private first move context x center act game move x num num board x center game x turn game context center throw expect game move num num winner yet game winner context upper left act game move num num const x correct board state game x turn game x winner yet game winner context x middle top act game move x num num const yx x correct board state game winner yet game winner context right top act game move num num const x correct board state game winner yet game winner context x middle bottom act game move x num num const x x correct board state game x win game winner x context center throw expect game move num num implementation using system linq using system text using system text namespace tictactoe public private readonly grid new num num private bool public num num j num j num j grid j public get var sb new stringbuilder num num j num j num j sb append grid j num sb append sb tostring public get x public move player num num player throw new grid throw new grid player public winner get var new xxx xxx xxx x x x x x x x x x x x x x x x x x x var new yyy yyy yyy win regex ismatch win x win regex ismatch win pm exe tictactoe bin tictactoe dll new game game start board clear x turn winner yet specify game first move x center board x center turn center throw winner yet upper left correct board state x x turn winner yet x middle top correct board state yx x winner yet right top correct board state x winner yet x middle bottom correct board state x x x win center throw num example num failed num pending