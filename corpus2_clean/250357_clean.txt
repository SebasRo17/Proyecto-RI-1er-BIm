many question asked nature elegant design underlying assumption seems elegance good thing therefore acceptable even desirable make extra effort create elegant solution really worth asking elegant neither asking good assume know see also vaguely characterized verifying nothing left take away sense mental model mind expressed directly language choice programming language oriented design relational schema etc without distraction however corollary elegance always relative way subjective depends think problem solution look like problem course problem domain understanding constantly change additionally knowledge programming language pattern tool develops mainly concerned implies order keep design elegant constantly rethink problem undestanding evolves practically would result almost endless refactoring furthermore even maintain striving develop elegant solution maintainability necessarily suffers elegant solution tightly coupled problem domain would something take away hence would elegant anymore something abundant solution simplify make elegant removing abundant part right sometimes really elegant design required implement change first solution order able make unforeseen change however open closed principle state necessary another concrete formulation question degree elegance open closed principle odds think