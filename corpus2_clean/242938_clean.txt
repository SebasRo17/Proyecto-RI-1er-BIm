trying write tail recursive implementation take scheme exercise done another language well first attempt define take p x x p car x con car x take p cdr x work correctly tail recursive next attempt define take tr p x let acc y x y p car y reverse acc con car y acc cdr y tail recursive need call reverse last step order result list proper order cannot come solution num tail recursive num use reverse num us list structure using functional structure like haskell sequence allows append element option num complexity linear size prefix least quadratic complexity thanks delnan pointing alternative solution satisfying property intuition tell impossible accumulate prefix list tail recursive fashion maintaining original order element e without need using reverse adjust result able prove note solution using reverse satisfies condition num num num