recently appointed leader newly formed architecture team similar system enterprise architecture explicitly software architecture company medium sized num different engineering group stack culture part org many group going consolidated part team job figure bring stack alignment thinking new team charter struggled num architecture team engage interact engineering team without stepping toe remaining effective architecture stand back let engineering thing num related appropriate architecture team build something versus architecture team provide guidance allow engineering team build num organization measure success architecture group none goal architecture seem easily quantifiable example architecture team involved setting coding standard theoretically something engineer use day day could set engineering leadership could also tied architectural need example architecture defines directory structure standard project build set fit within ci mandated also say documentation coding standard order consistent directory structure maybe inelegant example think illustrates thinking another example determined need new key store support need particular project clear requirement project ever felt future project everyone else k v store work fine clearly architecture involved decision technology use vet whether new technology fact really needed architecture team charged building infrastructure new tech likely know mean likely used different project seems like answer given parenthetical inclined towards yes architecture involved project level tech decision level involved initial thought architecture team prototype new technology system espouses transition relevant team large architecture try avoid getting involved project level problem use new charting package think cool trying get everyone onto uniform front end framework need use form architecture committee includes engineer business leader make sure engineer part decision making process architecture must stay tightly linked business need goal without stepping product toe core responsibility architecture inform business un der utilized tech offer potential upside architecture ultimately make life engineer better goal solve problem get solved many time mean engineer time work fun stuff sorry long winded love feedback especially worked organization impactful effective architecture team