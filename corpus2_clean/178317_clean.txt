problem summary long story short inherited base development team allowed replace use god object big issue going forward want u factor thing getting push back team want everything god object easier mean would allowed factor pushed back citing year dev experience new bos hired know thing etc third party offshore company account sale rep executive level meeting tomorrow want go lot technical ammo advocate best practice feel cheaper long personally feel third party worried company issue technical level know good long term trouble ultra short term num month term something know cant prove reference cited resource outside one person robert c martin aka uncle bob asked told one person one person robert c martin good enough argument question resource cite directly title year published page number quote well known expert field explicitly say use god object class system bad good since looking technically valid solution research already done num number book searched index use word god god found oddly almost never used copy gof book example never us least according index front found num book per want use num checked wikipedia page god currently stub little reference link although personally agree say much use environment personal experience considered valid book cited also considered old valid people debating technical point argument making thought bad nobody could prove modern software say god object good use personally believe statement incorrect want prove truth whatever num robert c martin agile principle pattern practice c isbn num num num num hardcover page num state everybody know god class bad idea want concentrate intelligence system single single one goal ood partitioning distribution behavior many class many go say sometimes better use god class anyway sometimes citing micro controller example num robert c martin clean handbook agile software craftsmanship page num page talk god call prime example violation class small rule us promote single responsibility principle starting page num problem reference citation come person robert c martin single person source told one guy desire use god class invalid accepted standard best practice software industry thing wrong technical perspective trying keep teaching uncle bob god object oriented programming design think think something learn study oop never explicitly called implicit good design thinking feel free correct please want learn problem know everybody case considered valid argument effectively calling universal truth fact people statistically ignorant since statistically people programmer conclusion loss search get best additional result cite since making technical claim want know truth able prove citation like real engineer scientist even biased god object due personal experience used assistance citation would deeply appreciated