given number n find permutation number num n adjacent entry sum prime permutation exist throw purely functional way problem solution apparently us backtracking given us c language familiar loop loop loop badly named name whole lot mutation even solution requires mutation nested loop really difficult translate racket language currently use general question would backtracking algorithm purely functionally concept backtracking seems always involve maintaining state currently big history breadcrumb global state keep getting mutated course dumb way would generate permutation test one one efficient way preferably implementing backtracking functionally since use racket solution might purely functional preferably mostly functional e repeatedly mutating counter var loop