say game engine different component one rendercomponent either mesh sprite light vastly different class non interface deriving rendercomponent make little sense also one rendercomponent time saving three pointer two must always nullptr seems wasteful came using rendercomponent store pointer rendercomponent public enum mesh sprite light gettype mesh mesh static cast mesh pointer get else nullptr stuff sprite light rendercomponent unique ptr mesh pointer pointer std move pointer mesh stuff sprite light private unique ptr pointer work intended feel like anti pattern basically discarding typesafe aspect c reimplement right anti pattern common workarounds problem missing something obvious known good reason rarely used pattern