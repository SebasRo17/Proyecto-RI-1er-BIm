tl dr structure quickly let match word point e g foo match foobar ideally return list character show needle e g foo b implementing algorithm generates random word training set word simple term basically like num choose arbitrary starting point num choose longest suffix current word contained least num word num choose one word random append next character current num goto num next character e g current word valid option would potato tattoo current word option search word contain tried couple implementation one used trie populated every suffix every word fast generating word populating trie slow num million word finished num hour another generated hash word word suffix tail word prefix suffix prefix word prefix foo f oo fo foo prefix add suffix set much faster reading training set fast generating take lot ram finally dumb option simply searching candidate word word word word take little memory much slower structure behaviour need