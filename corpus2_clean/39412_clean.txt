generating plot root certain class polynomial spirit multicolored visuals wiki page algebraic number thus far able make extremely spectacular plot x image root monic quadratic cubics low re preview enter image description x image root cubics lead coefficient low re preview enter image description x image root cubics lead coefficient low re preview enter image description running ram usage bottleneck export step try make detailed visuals make image essentially execute export imagename png image roughly time time rank array specifying rgb color channel issue mathkernel swallowing many gigabyte ram initially thought image export step turn due tensorproduct used generate begun observe array generated via tensorproduct occupy time much ram would naively expect example historylength l randomreal l l b randomreal c tensorproduct b randomreal l l bytecount bytecount b bytecount c bytecount quit indicates c occupies mb ram occupies mb ram choosing l show c occupies gb ram occupies mb ram changing range randomreal number significantly alter result bit unexpected since c dimension machineprecision entry type yet manner array generation seems strongly impact space occupies ram question anyone know using tensorproduct generate array creates array object occupies time normal ram amount comparable array generated via mean edit applying packed array fix thing work well link two notebook used generate image used root generator used compute export polynomial root one choice sparse matrix format root visualizer import sparse matrix export image use packed array ram intensive part compile convolution kernel used blur image anyone see obvious improvement could made love hear