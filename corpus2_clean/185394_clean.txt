independent research study professor functional guy goal examine happening behind scene functional language normally would course also taking writing interpreter independent course go beyond interpreter level look might translate concept hardware machine specifically professor mentioned two book functional programming application implementation peter henderson cover machine idealized machine functional computing implementation functional programming language simon peyton jones cover machine course combinators poking around done two book seem pretty legendary functional programming world great still think k r one best c book book also num year old curious research instructive literature produced regarding topic would also interesting know concept making way modern compiler close kernel interpreter