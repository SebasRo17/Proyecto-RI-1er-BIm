suppose collection block certain height certain weight example sample num num num num num num num num num num num num num num num num sample num want find maximum number block pile num constraint block must lighter one must also shorter one solve approach solve less like knapsack problem order block light heavier start end block considering find maximum piling block piling c block block base case num block left consider block num num height num weight num else num case current block piled check max piling block height block weight max num num block height block weight block num case current block piled move next else block num algorithm seems solve problem correctly problem might guessed overlapping sub problem complexity exponential usual way solve dynamic programming hard time implement specifically num constraint single constraint say weight would build num dimensional row would represent sub set block working column would represent max weight available num constraint would need num dimensional store solution subproblems soon dataset grows bit becomes unfeasible another idea considered take num factor current block max weight max height pas hash store result hash table reason working idea add dynamic programming solution solve efficiently update seems also necessary sort second constraint e height case cause order maximum might larger