know exception thrown exceptional case e g memory programmer case need worry performance throwing exception happen use exception normal path case use stop user supplied given foo better foo2 better likely throw exception library provided foo std std bool user suppose use foo std bool condition user check stop work library provided foo2 std std user suppose use foo2 std condition throw exception handled internally stop user check need write exception safe case use exception eliminate possible programmer checking make easier write need check exception throw catch internally user required deal except need write exception safe lambda always write exception safe