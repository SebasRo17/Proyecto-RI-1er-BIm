currently working qt application try use multi threading accomplish two task prevent thread event blocked increase computation efficiency would think good idea turn might inefficient qt client permitted instantiate qwidget subclass thread seen far seems really messy program executive thread word background thread manages user request ie button click new gui panel course num thread networking script processing ofcourse thread setup kind funky say least action event ie button click signaled executive thread sends functor thread instantiate user requested gui panel described make sense guessing original designer concerned thread blocked matter regardless thread instantiated still end back thread blocking anyway might best design choice sure maybe someone experience shed light personally think would better let one thread handle user interaction intensive user processing threaded threaded part make sense seperate thread processing script networking actually could increase efficiency blocking event gui remain interactive also could one also elaborate multithreading good choice gui regular circumstance thanks