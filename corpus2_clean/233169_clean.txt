hired year ago lead well really developer new project product call product b product b designed pursue new market company company great success similar product different market call product almost num year old reliable two market necessarily overlap lot core functionality could purposed work b deadline pursue new market product b pretty aggressive demonstrate certain capability potential client quickly show serious competitor new market expedite development took shortest route create new product started deep copy branch company product purposed b approach made lot sense given time constraint inherited lot overlapping core functionality infrastructure free removed bunch feature option apply left thing carried added bunch new feature needed secure customer perfect transition good enough product b around year thing looking good secured two customer several potential customer horizon next step best practice perspective seem like good strategy continue developing product b copy product solid foundation build new product accomplished immediate goal creating product demonstrating potential client take step back find user really want refine design really new product created couple demo installs unfortunately get impression management think new product develop sell time step back refactor refine would spend time money redesigning already something use sell issue since created copy product b base littered artifact technical debt product longer reachable reachable maybe business logic make sense product b example may lookup empty table database check thing exist logic hurt performance also maintenance nightmare going estimate actually using num product base rest baggage management think smart create b copy save money since reused product bug fixed merged b develop new feature b merged argument flawed although b created done year ago dedicated team num developer alone product b branch continues diverge b difficult merge anything finally feel put unnecessary constraint starting product already num year old aspect designed poorly doubt create problem new user base let take lesson learned use opportunity improve design instead copying crap also let utilize new technology make sense lot thing changed num year convince management need refine product likely ground bos think term time dollar feel going lose debate careful effort quantified put management term reading emergent design trying approach argument angle deliver everything let focus small piece working business