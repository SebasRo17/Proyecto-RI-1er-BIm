developing programme generate larp character hit snag initially planned use decorator iterate potential role effectively class work cost skill depending combination role store character e might coder two role might sysadmin role etc prototyped way buy skill required looking skill base contained cost snag cost ever need look database change db pushed skill cost sysadmin go like know well may buy fraction available skill storing unnecessary skill cost besides character know skill skill decorator would decorate skill cost nothing instead feel need factory two option constructing character something like public static role role go public static role role go seems far less extensible compared decorator game ever change twice coder sysadmin allowed role need rework top add new factory also quite know factory differs besides perhaps flag say another hold seem much seems either way lose decorator add extensibility long whilst bogging class object factory work start resist change know one pick way combine two edit really interested learning why hows know next time option go