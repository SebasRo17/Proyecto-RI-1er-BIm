question best practice architecture current architecture php access mysql user info let call user user accessed many time implemented layer caching reduce load first layer call per request cache retrieved mysql store private property user subsequent request return property instead requesting mysql since web request life dy per request basis cache prevents application accessing mysql single request second layer memcached private property empty first check memcached memcached empty query mysql update memcached update private property user question application game sometimes imperative date possible span five minute read request user may happen num num time update may occur subsequent read request need date game mechanic fail done implement piece executed database update happens set key memcached updated subsequent request memcached date optimal performance concern gotchas aware trying maintain sort living cache like