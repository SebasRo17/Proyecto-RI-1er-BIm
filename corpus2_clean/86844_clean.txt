recently tdding factory create either plain wrapped decorator decorated could one several type extending test wanted check returned expected easy plain o returned wrapped within decorator php could use ext reflection find wrapped seemed overcomplicating thing somewhat agains rule tdd instead decided introduce getclassname would called called decorator however would returned decorated make clear interface public getclassname abstract implement public getclassname get abstract implement private decorated public construct decorated decorated decorated public getclassname decorated getclassname phpunit test dataprovider param argument param expected public argument expected assertequals namespace expected argument getclassname another test check proper decorator used point ok introduce method use make unit test easier somehow feel right