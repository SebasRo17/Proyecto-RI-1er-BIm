used declaring collection using abstract interface possible constructing using concrete implementation make sense time usually look something like public mystuff private map address private list task private set person people public mystuff new hashmap address task new arraylist people new hashset person allows flexibility change collection implementation later really depend high level interface e need something store key pair something store ordered generally considered standard best practice starting program c though sure equivalent practice c collection hierarchy collection c differ collection several way collection concrete icollection interface expose similar method set iset interface specifies lot feature key set set dictionary iset make sense something like c public mystuff private idictionary address private ilist task private iset person people public mystuff new dictionary address task new list people new hashset person different standard interface implementation use collection using icollection collection place either set list tempted use c class interface look closest one used rather use setup better fit c paradigm standard