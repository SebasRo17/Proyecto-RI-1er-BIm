considering project migrate part wcf based soa service bus model probably nservicebus using basic pub sub achieve command query separation new soa even service bus model confess recently concept separation limited mill database mirroring replication still attracted idea seems provide benefit eventually consistent system many obvious drawback notably lack proper transactional support read lot subject udi dahan basically guru esb architecture least microsoft world one thing say really puzzle get larger entity field also get actor working entity higher likelihood something touch attribute given time increasing number concurrency conflict core element cqrs rethinking design user interface enable u capture user intent making customer preferred different unit work user indicating customer moved gotten married using excel like ui change capture intent saw udi dahan clarified cqrs perspective described quotation hard argue logic seems go grain respect soas soa really service general supposed deal coarse grained message minimize network chatter among many benefit realize network chatter less issue got highly distributed system good message queuing none baggage rpc seem wise dismiss issue entirely udi almost seems saying every attribute change e field update ought command hard imagine context one user potentially updating hundred thousand combined entity attribute often traditional web service one batch update sql server may take fraction second given good highly parameterized query table valued parameter bulk insert staging table processing update one time slow slow slow oltp database hardware expensive scale way reconcile competing concern thinking wrong way problem well known solution cqs esb world one decide right level granularity command standard one use starting point sort like 3nf database deviate careful profiling suggests potentially significant performance benefit possibly one thing despite several strong opinion expressed various expert really matter opinion