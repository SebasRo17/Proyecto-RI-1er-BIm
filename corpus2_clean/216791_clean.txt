noticing trend towards using dictionary sometimes instead strongly typed object example new katana project make heavy use idictionary approach avoids need continually update entity class dtos database table persist new property also avoids need create new derived entity type support new type entity since dictionary flexible enough store arbitrary property contrived example public id get set public get set public path get set public loginname get set public password get set public get set public containername get set public portnumber get set public guid apikey get set versus public idictionary property get set basically lookout talk book article approach pick best practice difficulty avoid question approach thing heard used far self describing object best practice persisting dictionary relational database especially challenge deserializing successfully strongly typed language like c change anything object dictionary list strongly typed entity second dictionary used want temporarily store object persisted serialized across network use kind namespacing key indicate