following purely hypothetical particular portion may may accurately describe real person situation whether living dead pretending let say senior dev architect charge dev team working project project includes security library user authentication authorization application development library must available developer edit however wish trust verify coder thing could compromise security finished system responsibility want done automated way one example let say interface represents user authenticated system security library interface expose basic user info list thing user authorized client app keep asking server immutable fashion course one implementation interface production purpose post say appropriate measure taken ensure implementation used one part need able create concretion interface coder instructed interface implementation sacrosanct change must go however word security library source open editing necessity devs could decide secured private hash checked implementation need public could x alternately could create implementation public interface different library exposing hashing algorithm provides secure checksum order may made aware change beat developer head attacker could find little nugget unobfuscated library compiled product exploit provide fake user falsely elevated administrative permission bypassing entire security system possibility keep awake couple night create automated test reflectively check codebase type deriving interface fails find exactly expect compile test project separate folder vcs right commit ci compile external library project set part ci test suite user commits automated test complete control tell everyone else number implementation increase without involvement implementation know anything new added modifier member changed investigate regain opportunity beat developer head necessary considered reasonable want situation like going seen negative light going behind devs back ensure something