many respect really like idea fluent interface modern feature c initializers lambda named parameter find thinking worth right pattern use could anyone give accepted practice least experience decision matrix use fluent pattern conclusion good rule thumb answer far fluent interface help greatly action setter since call benefit context pas fluent interface thought layer top api sole mean use modern feature lambda initializers named parameter work hand hand make fluent interface even friendly example mean modern feature making feel less needed take example perhaps poor example fluent interface allows create employee like employee createnew peter gibbon bill manager y2k could easily written initializers like employee add new employee firstname peter lastname gibbon manager new employee firstname bill lastname title manager department y2k could also used named parameter constructor example