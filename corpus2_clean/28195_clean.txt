wrote simulation approximate law stochastic differential equation via monte carlo method using stochastic euler scheme thought would good idea speed thing mean parallelization although think easy example similar problem discussed lot time none attempt successful first code find explanation parameter sde radius ball sigma z r w denotes noise h step size euler x w h x x h sigma w noise list list random number mceuler h stepsmc noise quiet check total table fold euler h z noise stepsmc stepsmc indeterminate mceulermt h stepsmc noise total table catch fold ab euler h r throw euler h z noise stepsmc stepsmc comparison h stepsmc module noise noise table randomreal normaldistribution sqrt h h stepsmc return stepsmc h mceuler h stepsmc noise mceulermt h stepsmc noise result table table comparison h stepsmc h stepsmc mceuler implement monte carlo simulation using standard stochastic euler scheme since coefficient stochastic differential equation fulfill standard assumption like lipschitz continuity possible discrete trajectory explode therefore added quiet check command mceulermt us euler scheme discrete trajectory leaf ball radius r set value zero comparison method test procedure noise replaced table command mceuler mceulermt last line code use creating noise think side effect paralleltable runtime awful much slower code tried implementation command e g parallelize make progress perhaps guy could explain wrong idea could fix