start simulation modelling project already know oop used kind project however studying haskell made consider using fp paradigm modelling system component let elaborate let say component characterised set parameter like temperature pressure pde boundary condition etc component b characterised different set different parameter different pde boundary condition let also assume function method going applied component example mutable state would used non constant parameter use oop approach would create two object would encapsulate method solving pde inheritance would used reuse solution pde hand use fp approach component would broken part function would act upon order get solution pde non constant parameter would passed function something else time example expressed kind mutability emulation mutability etc approach seems simpler assuming linear operation would trivial conclude would implementing fp approach actually simpler easier manage add different component new solve pde compared oop one come c fortran background plus professional programmer correct anything got wrong