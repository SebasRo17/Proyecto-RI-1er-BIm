occasionally project excel file xlsx format process usually num user click button application num run db query process result somehow num generates xlsx file using either excel com interop library third party library e g aspose cell easily find example online looking robust way like follow design principle ensure maintainable easily understandable initial attempt generate xlsx file looked like var wb new workbook var w wb worksheet num w cell num num header w cell num num row num w cell num num row num w cell num num row num wb save path pro much work good con cell reference hardcoded magic number littered throughout difficult add remove column row without updating many cell reference need learn third party library library used like library still problem problem com interop library use num based cell referencing whereas aspose cell us num based cell referencing one solution address con listed wanted treat table moved around changed without digging cell manipulation disturbing cell reference pseudocode var header new block new col num col num col num var body new block new row num row num row num row num row num row num row num row num row num body header part solution take container block performs cell manipulation required xlsx file block formatting attached pro remove magic number initial hide lot cell manipulation although cell manipulation still required mentioned much easier add remove row without effecting part spreadsheet con still difficult add remove column wanted swap position column two three directly swap cell content case eight edits thus eight opportunity make mistake formatting place two column update well solution support horizontal block placement place one block another sure could would cause problem different number row place table engine would aware every table seems unnecessarily complicated still need learn third party though layer abstraction via block object less tightly coupled third party library initial attempt wanted support lot different formatting option loosely coupled way probably write lot would huge mess solution take different route process num take report generate xml file format choose num use xsl transformation convert xml file excel num xml spreadsheet file num simply convert xml spreadsheet xlsx file using third party library pro solution requires almost cell manipulation instead use xsl xpath manipulation order swap two column table move whole column xsl file unlike solution would require cell swapping still need third party library convert excel num xml spreadsheet xlsx file need library amount need write would call third party library tiny think solution easiest understand requires least amount creates xml format simple xsl file complicated excel num xml spreadsheet complicated however easy check xsl file open excel check message easy generate sample excel num xml spreadsheet file create spreadsheet look like desired xlsx file save excel num xml spreadsheet con excel num xml spreadsheet support certain feature column width instance include image header footer going export resultant xlsx file pdf set pdf bookmark hacked together fix using cell comment using third party library requires library support excel num xml spreadsheet us num year old m office file format note realize xlsx file actually zip file containing xml file xml formatting seems complicated purpose finally looked solution involving ssrs seems bloated purpose back initial question good design pattern generating excel file think solution none seem stick ideal drawback