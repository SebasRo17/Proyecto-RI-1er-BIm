obviously testing method language independent integration test stay integration test matter technology platform implement kind testing support detail vary implementation programmer learn use tool framework platform evolve best practice one version may become obsolete least inefficient next version see example stackoverflow question unit test least first three answer seem valid one describing correct solution current version one describing solution used best net framework included expectedexception attribute one describing generic solution tool independent question major testing related change net framework version num num something disruptive testing introducing generic programming general introducing membership framework authentication small enhancing change asking wonder whether learning material written num still reasonably valid today