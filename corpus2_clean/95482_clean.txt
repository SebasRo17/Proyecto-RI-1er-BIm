lot conversation regarding best software development seen least three major point get lot discussion se elsewhere qualifies best practice best practice even worth discussing first place reasonable assert practice best practice forego best practice perhaps best practice either seem applicable external constraint time money etc make trade impractical something seems come far less often never notion common sense software development recent experience brought notion front mind initial impression different discussion best practice perhaps cross think common sense general think set rule either picked taught give baseline reason make decision following common sense good way avoid shooting entire leg beyond pretty low baseline common sense give way need make educated decision educated decision even override common sense evidence seems compelling enough might playing little loose definition think close enough spearhead example think common sense software development think rule basic hygiene prevent codebase rapidly incomprehensible mess example thing like using single global structure maintain communicate state within non trivial program using variable name random gibberish thing probably resemble come call anti pattern quite closely applying best practice practical analogue learning pattern applying common sense could seen practical analogue learning anti pattern mind like pose question seeing answer others might help reason way others believe notion common sense software development would interested knowing reasoning either way notion worth discussing something push much sometimes best practice something worth pushing even harder analogy anti pattern seems reasonable general rule anti pattern employed way even limited circumstance flexible one allowing codebase deviate common sense seems unreasonable answer sometimes demand deviation seems like different sort argument employ best practice maybe think like learn far opened ended maybe worthy follow question sort recommendation would point seem like matter common sense thought also welcome would better call commonly recurring domain pattern best practice common enough everyone know even agree best part bother imagine replaced best practice something less authoritative sounding