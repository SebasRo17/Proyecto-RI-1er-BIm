following code book mathematica colmean col str string col str mean case col numberq replacestring matrix str string transpose map colmean str transpose matrix giving matrix numeric string entry column replaces string entry mean average remaing numeric element column test efficiency size mat randomreal size size rmat replacepart mat randominteger size size non timing replacestring rmat non null respective time performance appears book far everything sound normal author may faster computer mine however order check efficiency code author compare performance highly optimized built linear algebra function mat randomreal timing inverse mat timing det mat time respectively sec strange thing least machine time performance particular mat randomreal timing inverse mat timing det mat null null come first question possible big difference performance user defined code almost identical timing performance relevant built function issue affect performance code second query order increase efficiency replacestring tried use parallel computing clear replacestring launchkernels replacestring matrix str string transpose parallelmap colmean str transpose matrix nevertheless get change perfomance function replacestring processorcount machine computation performed two processor mathematica run kernel actually machine two physical processor two virtual one processorcount return increase efficiency function missing