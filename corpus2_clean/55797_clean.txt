question asked many time specific slant mvc development good boy coding controller action corresponding unit test great little read lot repetitive time honest actually created little t4 template write bare bone intial unit test tweaked appropriate per usage admit quite sure handle test view contain story another question difficult part decide upon deep coverage service layer reason service method better worse actually perform variety linq query supply discreet information subsequent logic within know could break method call required logic linq statement apply within however many instance never reuse linq function therefore feel would refactor level far asking complex logic occurring within good enough test simply asserts required result expected every logic tested way seeing testing correctly logic getting sort coverage however naive opinion could lead never ending cycle trying keep test implemented closely aligned know create industry test know question may offend tdd devotee see brainer tdd camp yes brainer hence question btw checked idea mvc num visual studio num part num aspx looking steady downvotes edit benefit single well moment single close voter question subjective looking concensus focussed subject attempting stir negative passion looking expose flaw technology huge fan please drop polite comment benefit voting close may help restructure question ambiguity misinformation question could benefit large chunk mvc population thank jim