currently working project requires complicated model structure struggling picking right architecture first several interdependent model change one model trigger change several model example user input query first model check database query second model request depending query secondly model several source source used conditionally dependent system configuration app need seamlessly example one source required information model must try use another one important thing also codebase eventually expanded model model source etc must modular currently several way organise model layer num dumb model created factory object related model change model dependency resolved operation encapsulating whole update routine operation configured domain model know inject source though num smart model update logic encapsulated model query sort mapper source manager work proxy different source model report update domain model dependency resolved model controller dependency manager architecture appropriate leaning towards first one mind better work immutable model updating whole tree change approach give several benefit example easier serialize presence model equal finite state really unsure source