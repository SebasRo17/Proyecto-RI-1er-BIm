possible duplicate difference static method applying singleton pattern c static method long served purpose allowing u call without instantiating class later year became aware problem using static method class use interface use inheritance hard test make mock stub better way obviously need able access library method without instantiated class time otherwise would become pretty cluttered one possibly solution use new keyword old concept singleton singleton global instance since instance use would normal class order make use nice practical need syntactic sugar however say math would singleton instead actual actual containing default method math singleton implement interface singleton would declared singleton math public math new wanted substitute math operation could make new mymath inherits could inherit interface create whole new make active math simple assignment math new mymath voil next time call math floor call note normal singleton write something like math instance floor eliminates need instance property another idea would able define singleton lazy get instantiated first called like lazy singleton math think would better solution static method class problem approach addendum point raised one benefit static method method stateless thus side effect free extent concurrency point view wholeheartedly agree valid point however mixing two different issue problem one making method globally accessible without explicitly create instance method stateless second problem could solved something like stateless keyword similarily static prevented calling perhaps even enforce side singleton rather static class something like stateless class method think following pro con pro static method class framework class could easily designed overridable class would easier test using instance instead static class mean design pattern work better thing like factory limitation inheritance polymorphism contrast static con perhaps slightly worse performance bad programmer everything singleton globally accessible instead using dependency injection perhaps able access singleton method property field avoid global variable perhaps math bad example imagine net method inefficient could easily replace using third party singleton wanted alter slightly could inherit alter