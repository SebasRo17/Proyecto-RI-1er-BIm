suppose x language z language f written language f x z since f program think language right compiler f1 f2 written y1 y2 f1 f y1 f2 f y2 g z h g f get x take cpython example x z vm c cpython c interpreter nothing source compiled vm pyc file interpreted interpreter look like possible exists directly though much hard implement cpython also write another work another language say ruby complicated example pypy newbie pypy correct wrong pypy doc framework goal provide possible solution problem language implementers write l p interpreter l dynamic language p platform crucial design decision think l x p exists program translates program c c pypy nothing translate compile program pypy written using c program like vm instruction vm q1 pypy interpreter program interpret language consider right added found even translating pypy still interpreter time written c look deep interpreter pypy believe must exist kind compiles source ast execute like inside pypy ast q2 exist transforming program language written irrelevant yes get another difference pypy nature much harder write pypy q3 general rule theory available compiler gcc c c asm c sure gimple rtl g c asm c clang c llvm ir c jython ironpython cli c q4 given f x z program p written x want speed p possbile way rewrite p efficient algorithm rewrite f generate better z z interpreted write better z interpreter pypy speed program written z recursively get better machine p question tech stuff write feasibility complexity write certain kind