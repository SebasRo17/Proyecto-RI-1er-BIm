using mma win creating large number java object noticed memory consumed huge quantity several gb memory returned deallocated call completes non linear problem size large problem unmanageable reduced problem example requires jlink installjava mem reap javablock sow memoryinuse javanew java util date listplot rest difference mem frame true framelabel object created extra memory allocated object enter image description listplot mem frame true framelabel object created total memory allocated epilog text linear scaled enter image description see hope increment memoryinuse time object created constant would expect increase first time date object created cost kb seems lot case date object cost kb memory load constant per object workaround wrap javaobject creation javablock forcing retention mem reap javablock sow memoryinuse javablock keepjavaobject javanew java lang long appears force mathematica tidy memory management probably cost bit performance