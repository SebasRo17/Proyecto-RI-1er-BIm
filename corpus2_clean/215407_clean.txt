keep simple let suppose application account user account may number user also num consumer userrepository admin interface may list user public front end may list user account authenticated api list user assuming userrepository something like extends private query database select user public getall query exec important ton method searching filtering joining table ordering keeping mind comment necessity abstract user querying condition handle querying user filtering account id picture three possible road num create extends userrepository public construct account account account account private query parent query account id account id advantage reducing duplication method quite fit anything read ddd far rookie way num put extends public account account database select user account id account id exec requires duplication userrepository method may need another userquery layer implement querying logic chainable way num query userrepository within account entity account extends entity public getusers userrepository id feel like aggregate root introduces dependency userrepository account entity may violate principle num missing point completely maybe even better solution footnote besides permission service concern understanding implement sql query leave repository since may even sql driven