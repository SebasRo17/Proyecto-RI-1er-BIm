trying simulate sql join using large text file inner right outer left outer file already sorted using external sort routine issue trying find efficient way deal inner join part algorithm right using two list store line key iterate set line right file every left file provided key still match word join key unique file would need account cartesian product situation left 01 num left 02 num right 01 num right 02 num right 03 num left 01 join right 01 using key num left 01 join right 02 using key num left 01 join right 03 using key num left 02 join right 01 using key num left 02 join right 02 using key num left 02 join right 03 using key num concern one memory memory use approach still want inner join part work fairly quickly best approach deal inner join part keeping mind file may potentially huge public private join bufferedreader left bufferedreader right throw throwable bufferedreader left left bufferedreader right right record record read left read right getkey getkey write read left else getkey getkey write read right else list record leftlist new arraylist record list record rightlist new arraylist record leftlist left rightlist right record leftlist record rightlist write write read left write read left else write read right write read right left close right close flush close private record read bufferedreader reader throw throwable record record reader readline record new record split record private record list record list record record bufferedreader reader throw throwable key record getkey list add record record read reader record record getkey key list add record record read reader record private write writer record left record right throw throwable left integer tostring left getkey left left getdata right integer tostring right getkey right right getdata writer write n public static try bufferedreader new bufferedreader new filereader left dat bufferedreader new bufferedreader new filereader right dat new new filewriter dat new join catch throwable e e printstacktrace applying idea proposed answer changed private join randomaccessfile left randomaccessfile right throw throwable long pointer num randomaccessfile left left randomaccessfile right right record record read left read right getkey getkey write read left else getkey getkey write pointer right getfilepointer read right else long num key getkey getkey key right seek pointer read right getkey key write right getfilepointer read right read left pointer write read left write read left else write read right write read right left close right close flush close update approach worked terribly slow modified create file buffer work well update private long file file throw throwable long runtime getruntime num file length getlinecount file private join file left file right file throw throwable bufferedreader new bufferedreader new filereader left bufferedreader new bufferedreader new filereader right new new filewriter long right record record read read getkey compareto getkey num write read else getkey compareto getkey num write read else getkey compareto getkey num key getkey list file new arraylist file list record new arraylist record add consume key getkey compareto key num read need dispose deleting file list else throw new exception sorted write read write read else write read write read close close flush close public record list file list record throw throwable file bufferedreader new bufferedreader new filereader record read innerjoin write read close record innerjoin write consume record key either single list multiple file file store buffer full right record returned represents outside flow key already positioned next one use record within block general comparing current key trick keep consuming list becomes empty fill next file file consumed last node list read next outside iteration ready processed either point next biggest key throw throwable private record consume key bufferedreader reader list record record list file file long throw throwable boolean record record record get record size num long record size record getkey compareto key num record read reader record record getkey compareto key num record add record record read reader record done record key changed done record getkey compareto key num key mean exhausted buffer dump entire buffer file list file pointer keep track file record file record clear record add record record dump record list record object file add file list file object need place limit number file pointer check size file list param record param file throw throwable private list record record list file file throw throwable prefix file size num suffix dat file file file prefix suffix new file cache writer new new filewriter file record record record writer write record dump file add file writer flush writer close