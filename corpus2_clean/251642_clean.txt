creating interface would like implementer interface throw exception case something go wrong let call implementer plugin director call one plugins rather plugin throwing random exception would like plugins throw specific exception director handle example plugins fail authenticate credential provided director requested action time plugin plugin throw exception rather plugin throw random exception would like plugins throw specific exception director know handle exception fatal like authentication failed want retry whereas timeout director may decide retry confused following way better idea num create custom exception let say enum different type exception etc director catch handle exception case case idea num create abstract exception let say specific exception type derive abstract exception like timeoutexception etc director listen specific exception interested also listen broader none exception type match exception thrown plugins