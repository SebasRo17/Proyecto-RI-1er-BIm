early day fortran basic essentially program written goto statement result spaghetti solution structured programming similarly pointer difficult control characteristic program c started plenty pointer use reference recommended library like stl reduce dependency also idiom create smart pointer better characteristic version c permit reference managed programming practice like inheritance polymorphism use lot pointer behind scene structured programming generates filled branch instruction language like eliminate pointer use garbage collection manage dynamically allocated instead depending programmer match new delete statement reading seen example multi process multi thread programming seem use semaphore use thing different name new way structuring protection resource concurrent use example specific example system multithread programming multicore processor openmp represents critical region follows without use semaphore seem included environment th id get thread num pragma critical cout hello world thread th id n example excerpt alternatively similar protection thread using semaphore function wait signal might look like wait sem th id get thread num cout hello world thread th id n signal sem example thing pretty simple simple review enough show wait signal call matched even lot concurrency thread safety provided algorithm complicated use multiple semaphore binary counting spread across multiple function complex condition called many thread consequence creating deadlock failing make thing thread safe hard manage system like openmp eliminate problem semaphore move problem somewhere else transform favorite semaphore using algorithm use semaphore anymore