recently discovered design contract dbc find extremely interesting way write among thing would seem offer better documentation since contract documentation impossible one date additionally contract specifies exactly routine help support reuse simpler debugging since program execution stop moment contract fails error propagate specific assertion violated presumably highlighted offer support development maintenance better static analysis dbc basically implementation hoare logic principle apply cost comparison seem rather small extra finger typing since contract spelled take amount training get comfortable writing contract familiar primarily realize fact possible write precondition throwing exception inappropriate even possible use assertion test certain postconditions possible simulate certain feature old result without extra magic would ultimately considered un pythonic addition library offer support ultimately get vibe would wrong use developer assume similar problem language except course eiffel intuition tell lack support must result kind rejection practice searching online fruitful wondering someone clarify modern language seem offer little support dbc flawed overly expensive obsolete due extreme programming methodology