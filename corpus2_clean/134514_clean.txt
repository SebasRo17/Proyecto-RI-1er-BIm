major edit added info devs setup dvcs would help second guess dvcs still welcome p started new job currently process trying introduce dvcs mercurial actual dvcs really matter discussion point could also git company big multinational far gotten nothing positive attention even managerial directive level want make sure disruptive organization anyone job way developer setup team room lot communication going also integrator communicates daily basis two three time team leader also dev team part world maybe num office num num country company culture open would problem pilot testing tool thanks answer already 1d real question capital letter convince management around office world sane thing actually bring happiness productivity developer say pilot testing showing work one part answer elaborating context make sense make switch yes note current scm perforce witnessed several source frustration classic centralized source control management including people accidentally breaking build stepping others toe submitting revision often responsible must wear pink hat stuff build fixed hat still build get broken affect office around world dvcs rescue build broken single office people lose fear use version control actually second guess check peer sharing change easier necessarily rest group unnecessary bureaucracy come granting access e g look like everyone granted access dedicated group admins take num num day grant access meanwhile devs must ask peer look afaik often wait instead dvcs rescue administration centralized little group people new employee get project responsible 1st level peer repository access 2nd level could even review submit along change complaint regard slowness due network latency directly sometimes perforce server b internet c internet perforce server slow yes often annoying enough kick train thought sometimes dvcs rescue using dvcs obviously need network connection worst case scenario share change lan patch queue trouble trying collaborate external provider necessarily belong organization happens often enough security concern afaik client suffer access bureaucracy dvcs rescue granting access would ideal solution also client could use version control among without needing setup server would able integrate better internal workflow currently perforce access access local network thus bureaucracy necessarily security external collaborator still access email actual security would external work dungeon something la way make sure getting workaround integrate module repository requires additional maintenance effort developer guy actually wrote think plugin make perforce fetch file repository part dvcs rescue solution look lot like mercurial feature wich us file indicate go maintain repository state file done separately automatically mercurial file working source requires mark file edit advance add annoying extra step imho file read mode able edit ide also imho make local copy prone low integrity trait perforce make think lazy developer want make client check file repo versioning change also make think perforce idiot paranoid say dont change file without telling squirrel come eat dvcs rescue well guess scm software know carnivore squirrel little project integrity developer machine see previous point harder add change without previously indicating perforce need dvcs make change locally reason forgot add going hard time detecting detect two step command instruction thing saw somewhere detect change without telling perforce given context would say best way num know demonstrate migration would actually benefit employee company num ease change least make look like worth effort num complicate others job num convince management worldwide num avoid making integrator job royal pain second question focusing last point always dvcs evangelist mainly eas work collaboration developer point never faced consider integrator perspective one charge coordinating team source creating releasing build across globe point might face two scm source least migration migration process affect integrator least