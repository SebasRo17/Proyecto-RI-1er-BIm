problem automatic gpu memory management using cuda situation following create simple cuda function operates array image take much memory space array passed input modified output function loaded mathematica using cudafuncitonload pseudocode cudatestfunction cudafunctionload float inputoutput function compiles fine work create sort loop involves calling cuda function mentioned assigning output new variable whole thing till number iteration reached pseudocode array dold imagedata assign raw image data maxiter array dnew cudatestfunction array dold array dold array dnew problem number iteration get high running gpu memory get error message cudafunction outmem cudalink ran available memory possibly due freeing memory using memory manager anybody know happens guess mathematica reason keep array dold modified version calculation cuda gpu memory free memory cuda funtion cudatestfunction finished know cudalink memory manager read mathematica documentation mathematica least able handle situation automatically way lead memory overflow real code actual problem modification simplify input change occurring problem data initialization imagedata table randomreal j would usually grayscale imagedata f table randomreal j would function evaluated imagedata maxiter testimagedata table randomreal randomreal j would gradient imagedata loop lead memory overflow maxiter test first cudatestfunction testimagedata f imagegradientnormalized sequence dimension imagedata testimagedata test cudacode cudatestfunction cudafunctionload device float length const float return sqrtf x x device float operator const float const float b return make float x b x b device float operator const float const float b return make float x b x b device float operator const float const float b return make float b x b device float operator const float const float b return make float x b b global void resolvfs float p float sigma float f float imagegradientnormalized float lambda mint width mint height int xindex threadidx x blockidx x blockdim x int yindex threadidx blockidx blockdim int index xindex yindex width xindex width yindex height float vecp make float p index p index float vecn make float imagegradientnormalized index imagegradientnormalized index vecp vecp sqrtf lambda vecn vecp vecp fmaxf length vecp sqrtf f index lambda vecp vecp sqrtf lambda vecn p index vecp x p index vecp resolvfs float inputoutput float float input float input float integer integer