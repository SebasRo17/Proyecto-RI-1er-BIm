currently early stage building substantial system aiming much several existing system flexible extensible maintainable way support multiple complete instance different customer one thing keep coming across whole system component x sit could completely centralise single separate web service shared instance configuration would held centrally could give instance needed may include instance specific plugins b separate service install multiple time configured individually instance solution service might used several co operating component within one instance c create functionality library incorporate directly component clear pro con resource efficient easily allows e g monitoring activity across whole solution making single service sufficiently configurable flexible create additional development challenge upgrade might impact across whole solution term time testing deployment planning whether change intended improve every instance b us resource configuration may less complex change rolled manageable way effort required roll one place c remove need separate service offer potential maximum flexibility calling restricted carrying function via web service api upgrade would require redeployment dlls everywhere used could every component instance rather per instance b specifically thinking functionality pov worrying e g actually stored ignored option copy paste place reimplement willy wondering applies whole range component specific business function broader thing like logging handling access etc etc realise final answer always depend heavily example consideration mentioned could big impact example absolute brainer systematic way help make decision completely missed entire option edit little detail case make difference historically lack forethought catered need several similar also substantially different customer basically forking entire codebase apart handful trivial library definitely committed kind soa approach rewrite certainly dramatically shared codebase may still benefit requirement maintaining separation instance mean entire collection service providing everything needed one customer customer may require logically physically even geographically separate install one customer instance may consist module b another b c e feel instinctively sort two way soa one literally one everything let work together different way different customer alternatively one needed module within customer loosely coupled nature service would still allow add one module existing customer easily move resource intensive module hardware one customer get wrong appreciate point made think quite mental place merely fact something certain way could definitely offer benefit situation could also lead problem managed poorly wholly unacceptable best even let possibility exist even lead complexity effort etc kind like allowing booze house know might drink street even though quiet drink unwind work might nice probably stop