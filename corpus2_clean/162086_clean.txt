suppose two peer node first node send connection request second one also second one send connection request first one avoid double connection two node resolve issue would sufficient make sequential operation performed creating inbound outbound tcp connection mean node process sequentially new connection creation operation incoming connection outgoing connection way maintaining list connected node accepting new incoming connection node sending connection request node sufficient check node already present list order make sequential operation creating connection sufficient perform lock list connected node fact new connection identifier new connected node added list however wonder approach cause distributed deadlock first node could send connection request second one second node could send connection request first one assuming two connection request asynchronous node lock incoming connection request could solve problem update however still lock list every time new incoming outgoing connection created since thread may access list problem deadlock would still remain update num based advice wrote algorithm prevent mutual acceptance login request since node peer could client routine send new connection request server routine accept incoming connection address cache lock neighbor table neighbor table contains address already neighbor address continue neighbor table add address status connecting end lock node try establish tcp connection remote address perform login procedure sending listening address ip port boolean login result login result lock neighbor table neighbor table add address status connected end initialization structure needed communication queue etc lock neighbor table neighbor table contains status connecting case client side node already initiated procedure logging remote node neighbor table add status connected end lock example ip port node num ip port node b b num suppose node sent login request node b num case node call login routine sending sending listening address num consequence neighbor table node contains address remote node b num address associated connecting state node waiting node b accept deny login request meanwhile node b also may sent connection request address node num node may processing request node b neighbor table node b contains address remote node num address associated connecting state node b waiting node accept deny login request server side node reject request b num must sure server side node b accept request num similarly server side node b reject request num must sure server side node accept request b num according small address rule case node reject login request node b node b accept request node think