thinking better way design technical interview meaning based social skill purely technical one started think possible way without possibility test num determine kind problem high low level abstraction architecture bitwise manipulation shop business solving every day application work example suppose pc game development company produce game based extension via module num write simple application solve problem let say simple game scale one working would num add bug architecture bug language knowledge related bug critical example important know virtual destructors c make obviously buggy maybe make crash first buggy make sure work tool people use domain like cross platform c simple game providing library rest num provide full source application candidate tell fix b add functionality related position necessary candidate would limited time send something back example one week two time would several time time needed work full time fair num maybe different way would provide application source publicly online start meet candidate sent working application additional feature would work differently sure really interesting num b assuming functionality add simple requires basic understanding overall organisation would adding content num make candidate explain process would kind interview screening would meeting candidate provide something feel like parallel screening screen several people time without spending time sequentially meeting discussion obviously really necessary question think would pertinent think experienced interviewing relying experience b would considered paid work even work done product interview specific application c assuming candidate use whatever available solve problem even friend helping think reflect better real development environmental something wrong assuming yes questioning way thinking say sane wrong variant would interesting