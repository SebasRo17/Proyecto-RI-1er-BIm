process creating programming language learning purpose already wrote lexer recursive descent parser subset language currently support mathematical expression parenthesis parser hand back abstract syntax tree call evaluate get result expression everything work fine approximately current situation example c although pretty much language agnostic public abstract node public abstract double evaluate public node public node left get set private operator get set private node right get set public double evaluate operator left evaluate right evaluate logic operator public node public double get set public double evaluate however would like decouple algorithm tree node want apply open closed principle reopen every node want implement generation example read visitor pattern good good understanding pattern work using double dispatch way go due recursive nature tree sure approach visitor would look like public public node operate operation node implement two child node may child work visitor pattern around recursive structure access child node call accept get visited accept called parent accept visit implementation node problem want tackle immediately language support lot functionnality avoid bigger problem later post stackoverflow want provide implementation want share idea concept might missed approach