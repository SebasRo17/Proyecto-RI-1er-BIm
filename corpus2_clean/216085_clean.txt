trying figure algorithm resolving appointment time currently naive algorithm push conflicting appointment repeatedly appointment appointment list always sorted start time appointment list appointment num num num num appointment num num num num appointment num num num num appointment num num num num constraint appointment cannot num num cannot num num naive algorithm app enumerate appointment list possible conflict appointment list num possible conflict start app end difference app end possible conflict start possible conflict end difference possible conflict start difference else break result following resolution obviously break constraint last appointment pushed following day appointment list appointment num num num num appointment num num num num appointment num num num num appointment num num num num obviously sub optimal performs num appointment move could resolved one able push first appointment backwards could avoid moving subsequent appointment thinking sort edit distance approach would calculate least number appointment moved order resolve scheduling conflict get handle methodology breadth first depth first solution search know solution good enough