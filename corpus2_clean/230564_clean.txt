trying understand thread realize mix hardware o decision also know thread process set register stack variable function thread get duplicated forked packed running unpacked back register start use fairly decently thing know happens interrupt thread eg thread bug called interrupt interrupt thread order one go back stack variable pack even basically thread interrupted happens stack var stack game event continuous started accept idea halfway could stop switch another thread context also know every may may say waiting timer event sleep m try interrupt random time tell loop stop wait want keep certain pace realize might book o know part basically thread sleep really interrupted halfway task surprising always thought program continuous set thing like change mindset completely understand really work far aware sync ing ensures across register first q register stack thread interrupted must sync anything different thread wake others sync variable thread stay asleep betting point heap var could difference arise besides pointer pointing old address realize knew read maybe could infer half apologize sound basic reading lot get would like use gcd lot hide detail know sync gate absolutely idea threaded variable going learned socket programming o book reading obviously missing critical detail thank stephen