tricky question project using hibernate model containing bi directional relationship small project user entity row involved relationship num num n relationship really need 2nd level cache operation done entity simple inserting removing performing computation entity involving relationship loading let say two entity room furniture item furniture one room room many item furniture furniture reference room room list furniture delete furniture action easiest thing retrieve right furniture tell entitymanager remove furniture ensure instance remain coherent also remove furniture instance list furniture associated room unfortunately room instance loaded request done database nothing cache would better choice keeping simple general relationship instance coherence 2nd level cache well document fact cache per action specific computation must done relationship coherence within action action must take care coherence boilerplate relationship coherence management needed overhead loading non necessary entites 2nd level cache must added big effort refactoring done b keeping coherent always maintain relationship coherence enable 2nd level cache