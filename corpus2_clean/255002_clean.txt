making queue c would like find best interface try dequeue would concerned implementation like provide block queue empty like dequeue somehow notifies caller provide bool empty const well unfortunately good multithreaded queue something along line queue empty queue dequeue provides guarantee currently try dequeue throw exception queue empty seems offer intuitive interface empty queue hardly exceptional situation seems awful lot like using exception control flow another option would bool try dequeue would write queue empty written using exception seems probably least intrusive would require default constructible manner trivially constructible caller queue try dequeue assignable want force requirement though perhaps like approach optional try dequeue order one minor issue implement use boost perhaps importantly make interface seem bloated sense dragging another would hopefully avoidable much like situation stl set insert requires u copy pair unfold argument force user clumsy long ritual repeated every time us perhaps worrying much optional usability given serious problem two approach wondering would best approach optional one edit occurred also bit bool try dequeue std option actually seems pretty nice fact one actually minimal interface need external logic setting local returned unfortunately prefer avoid overhead incurred calling actual std using template template f bool try deque const f option either since derived generic queue interface