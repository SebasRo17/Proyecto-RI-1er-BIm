talking based experience c know language different exception handling implementation order achieve loose coupling need programmed use abstraction rather implementation however exception handling case opposite best practice need handle specific exception sqlexception stackoverflowexception etc thing may better thanks checked exception kind contract interface consumer c unchecked exception contract exception thrown interface example say use repository pattern decouple dal bll simple catch exception usually used like public consume try productrepository get k k id num catch exception e handle specific case usually use sqlexception however mean must know productrepository repository database server implementation changed use file repository instead need catch filenotfoundexception something like violates abstraction principle prevent