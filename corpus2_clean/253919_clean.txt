one two developer system make commits time period current git workflow master branch develop release make new branch want feature lot commits done merge branch back master usually push remote except usually done often come back alter one thing another every time think done num num commits really done move onto something else problem problem feature branch tree merged pushed master remote master realize really done feature finishing touch want add finishing touch may cosmetic may significant still belong one feature worked currently extra fact commits like solve problem rolling back merge merging feature branch master new commits git tree look clean one clean feature branch branched master merged back push force change origin since origin see much traffic moment almost count thing safe even talk dev coordinate know good way general rewrite others may already pulled causing potential issue happen even dev git extra weird merge tree diverged way solve deem great next best way make extra commits master branch directly fast forward merge make tree look pretty current way solving rewriting history yet another way wait maybe wait num hour push thing origin way rewrite thing see fit con approach time wasted waiting people may waiting fix yet another way make new feature branch every time realize need fix something extra may end thing like feature branch feature branch html fix feature branch checkbox fix kind polluting git tree somewhat way manage trying without drawback described going clean looking history maybe need drop goal technically possibility sample fact commit message commits alter module behavior give user information thought done check merge master oops forgot oft oft enhancement added better message okay done later user come back asks enhancement feature turn certain number order revision associated really two number one oft feature add fix order accept revision done oft bug fix bug two number fix sql okay done oft enhancement oh wait improved message clarity