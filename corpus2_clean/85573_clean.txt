possible duplicate question ask company deciding work already familiar joel test experience question answer make company seem better several job past instance claimed qa process unit testing really meant programmer test app test debugger via trial said used svn lumped everything one giant repository concept branching merging anything complicated updating committing said build one step really mean one step copy dozen file hand programmer pc live server go properly gauging company environment make sure well evolved company stuck thing certain way done year ignorant change almost never ask see source stuck trying figure interviewer answer accurate b make company seem good besides joel test good question get proper feel company importantly good bad answer could indicate good bad company mean something like take face please could think short notice question software team apply solid principle inversion control good answer adhere solid wherever possible use tdd kind force u write abstract testable use ninject ioc container fairly easy configure structuremap find ninject bit intuitive like ninja pirate bad answer pretty secure yeah inversion control thing never heard see good answer us fact back bit crowd humor bad answer show complete ignorance question necessarily bad thing interviewing director position terrible answer huge red flag interviewing developer talking senior developer manager biggest problem moment able take generic response gauge whether good bad answer often bad kind find frustrated almost day one new job suppose could drop ask specific thing e g write unit test answer yes ask use nunit something else mention access ask use clean orm like nhibernate something coupled like ef linq another way short resolute actually call interview thing almost certainly result getting job skirting question probably job want