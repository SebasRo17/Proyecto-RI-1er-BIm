new oop design pattern simple app handle generation table column belong table row belong table column value belong row collection property turn defined enum interface used factory get concrete instance product depending facing problem extending class let say need another product called turn special property new method like extended set property way extend specialize element ie build interface concrete let say plan use standard method like addrow column column need specialized like idea inherit factory interface since method table guess cannot share factory wrong another question need define product property time table upgraded runtime guess use decorator possible combine factory decorator design better use state strategy pattern instead