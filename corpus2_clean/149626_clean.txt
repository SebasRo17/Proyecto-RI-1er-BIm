reading article humbly named commandment best practice objective c coding robert little less two year ago adopted practice using property pretty much every member objective c class 3rd commandment may num list reason emphasis num property enforce access restriction readonly num property enforce memory management policy strong weak num property provide opportunity transparently implement custom setter getters num property custom setter getters used enforce thread safety strategy num single way access instance variable increase readability put property private category number num num usually issue argument num num soft right tool consistency could become non issue finally influential argument number num memory management ever since property nonatomic strong id property became friend last project switched using arc made doubt whether creating property pretty much anything still good idea maybe little superfluous arc take care memory managing objective c object strong member work fine declare ivars c type manually manage anyway arc weak property mostly public one course still use property anything need access outside mostly handful property member listed ivars implementation header implementation experiment bit rigorously move away property everything nice positive side effect num member requirement property synthesize shrunk ivar declaration num self something reference cleaned something num easily distinguishable member private ivars public property num lastly feel like purpose apple intended property subjective speculation question slowly sliding towards dark side using less less property favor implementation ivars provide bit reasoning stick using property everything confirm current train thought use ivars less property needed persuasive answer either side receive mark edit weighs twitter saying think reason sticking property one way everything everything including kvc kvo