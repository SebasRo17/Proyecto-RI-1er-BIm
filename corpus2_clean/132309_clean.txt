noticed functional language employ singly linked list con list fundamental list type example include clisp haskell f different mainstream language native list type array clisp dynamically typed get idea con general enough also base list tree etc might tiny reason statically typed language though find good reasoning even find counter argument functional style encourages immutability linked list ease insertion less advantage functional style encourages immutability also sharing easier share partially linked list could pattern matching regular well even better could easily fold right left example top get random access free practical advantage language statically typed employ regular memory layout get speed boost cache prefer linked list