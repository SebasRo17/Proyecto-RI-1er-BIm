ask question preface environment team consists num programmer working multiple different project due use testing mostly limited general black box testing take following assumption also unit test eventually written strict order refactor first ignore common test driven development technique given environment time limited understand done correctly team would actually save money long term building unit test hand refactor fairly large portion critical believe accurately work done black box testing realize new new might able handle wanted know keep old function num time call subroutine case new work properly right thinking separating old separate file adding config tell program use better way handle note use revision control archived build client could always revert previous build would like see decent way besides reverting want use new functionality delivered new build edit agree need write unit test believe capture everything looking way easily able revert old functional anything happen know poor practice planning removing team guarantee new work standard old