disclaimer intent question discern better individual developer system whole worked environment small team managed certain area example would small team every one function num ui num framework num business application logic num database also worked team developer responsible area qa etc current environment promotes agile development specifically scrum everyone hand every area mentioned pro con approach curious know pro con list also generally feeling approach better devs pro num developer may well rounded num developer know system con num everyone hand area increasing probability creating less optimal result area num take longer something unfamiliar jack trade master none devs specialize pro num developer create policy procedure area expertise easily enforce num developer chance become deeply knowledgeable specific area make best num developer cross boundary degrade another area con num one colleague put would want pigeon hole like meaning developer get chance work certain area easy say wonderful agile somewhat fan area expertise without expertise seen degrade database schema become difficult manage hack ui etc let face people make career ui work database work easy fill good job expert area