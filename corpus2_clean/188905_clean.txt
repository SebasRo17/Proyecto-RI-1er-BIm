long question know option want want know obviously best maybe pro con may missing option well option unaware application seperately multuple daemon seperate jvm right sql used store shared memory luckily much dynamic memory soon dynamically creating destroying connection mean dynamic change happening semi fast need something better sql database think dynamic stuff happen one daemon certain need faster saving loading state going disk time slow current database need overhaul change anyways open modification tossing well learn state keep memory slow process persisting db run save time learning state bootup nice certain get persisted right ability easily query database see current state debugging major plus solution considered pro con num sort hibernate solution combined memory sql database used hibernate yet really want think address persistance avoid stale object jvm u sql still close speed option memory know much overhead scale multuple jvm possible semi fast change slower option think fast enough need num jvm store internal state without shared system use reliable probably jvm try keep state consistent important state one daemon much sharing dynamic state still need address inconsistent state occure uncertain would want record persistant state allow fast reboot even daemon dy unexpectedly also solution would require implementing quick message allow fetching description memory state help debugging would offer highest performance get right probably time consuming implement anticipate obscure bug due race inconsistent num use system allow shared memory jvms quick research suggested mappedbytebuffer possible option could looked little far fully know pro con yet slightly afraid creating single point failure memory shared num sort alternative know possible merging two idea