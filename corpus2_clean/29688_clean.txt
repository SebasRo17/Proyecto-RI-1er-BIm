wish compute pseudo inverse rectangular square matrix cubically method chebyshev given x k x k ax k ax k x frac f procedure simple wrote following sample example clear global seedrandom n id sparsearray randomreal n x norm frobenius conjugatetranspose max k stop k max stop ax x k x k x k id ax id ax stop norm x k x k frobenius norm x k frobenius k absolutetiming k norm chop x k pseudoinverse running piece code produce pseudo inverse number iterationsin second computer problem chebyshev method slow beginning process mean third order convergence seen last four iteration hand aim question reduce computational time effort implementing method mma since method asymptotically stable think one way reducing computational time use adaptive precision way apply adaptive precision implementation piece code mean would nice could run method single precision beginning process stopping termination stop reach pre tolerance back machine precision double precision note used setaccuracy exp digit think costly matrix matrix multiplication useful idea could helpful fully appreciated