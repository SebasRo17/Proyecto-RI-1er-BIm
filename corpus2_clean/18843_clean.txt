trying understand landscape different approach best practice around development complex client side javascript sure label application perhaps heavy ajax ria plugins like flash silverlight referring web apps characteristic emulate rich native desktop ux javascript contain behavior client side j using server api json html template contrast using web server ui rendering producing html page refresh model example google doc gmail mindmeister pivotal tracker move forward html5 see style ria development heavy javascript becoming ever common necessary compete question common approach emerging around managing kind heavy j development client side app grows feature complicated problem scaling development effort across multiple team raw j hear well believe google approached problem building gwt compiles higher level language j leaning existing development infrastructure higher level language eclipse strong typing refactoring tool along abstracting browser compatibility issue away developer tool like script c something similar put j role il intermediate language ie never really write low level language anymore compile j approach apparent gwt dominant approach indeed become people rich client javascript orienting question shop crafting j manually atop libs like jquery et al many many different approach clear best practice emerging shop avoiding ria scale development favor simpler developer server side page redraw model last compiling j perhaps emerging future trend wrong headed manage complexity refactoring client j modularization distribution work across team application enforcement testing client side pattern like mvc mvp etc emerging trend heavy javascript html5 future thanks