currently working project client application communicating server process client application could local machine server process network internet written single threaded asynchronous rpc module server process using boost asio google protobuf used rpc message serialization architecture pretty simple client server model client would pack request protobuf message send server would send back response server process written c client application varying language use case present gui allow user monitor interact server process future server process going separated functionally separate process instead one monolithic process present issue wherein multiple process client application connect think would problem case local lan client application internet could become unwieldy number process grow furthermore may want enable ipc server process sending rpc message sure distributed application architecture would best fit system going forward want reinvent wheel necessary taken cursory glance bus zeromq seeing really architecture settled thought ask fellow programmer would wise single server process handling communication client application server process better architecture style considering want enable ipc server process directly send message use single server process mentioned previously looking something like publish subscribe model