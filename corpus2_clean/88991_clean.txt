need design hierarchy c project basically functionality similar winforms class let take winforms toolkit example however use winforms wpf core property functionality every need provide dimension position color visibility draw etc need design advice used design abstract base interface really type like behavior good design would better design look like abstract control public width get set public height get set public get set public x get set public get set public get set public get set public bool visible get set public rectangle get protected set abstract public draw control contain control contained child thinking making two interface functionality interface ichild icontainer parent get set internal interface icontainer addchild child ichild removechild child ichild ichild getchild index winforms control display text also go interface interface text get set get set get set get get drawtext control docked inside parent control enum docking none left right top bottom fill interface docking dock get set let create concrete class panel control icontainer ichild label control ichild button control ichild window control icontainer first problem think interface basically set stone get published let assume able make interface good enough avoid need making change future another issue see design every class would need implement interface duplication quickly occur example label button drawtext derives interface every derived icontainer management child solution issue implement duplicated functionality dedicated adapter forward call label button would member would called inside method inherited interface think design shield many common functionality base could quickly get bloated virtual method unnecessary noise change behavior would accomplished extending adapter control derived class think called strategy pattern although million question answer topic would like ask opinion take consideration design flaw think approach add almost num chance future requirement call new class new functionality