recently implemented damerau levenshtein distance algorithm pseudocode wikipedia find explanation exactly work pseudocode us completely uninformative name like da db i1 j1 left scratching head implementation num implementation helped walk program figure happening renaming variable helpful name familiar enough wagner fischer approach calculating levenshtein distance frame reference risk overly lengthy understand damerau levenshtein mystery variable da last row kind map holding last row element seen actual dictionary db last match col hold last column letter b matched letter current row i1 last matching row row number da current letter b j1 copy db last match col potentially updated moved last match col updated eliminated transposition cost h i1 j1 i1 num num j j1 num calculating cost swapping current character b last character b known last match treating character either addition deletion component cost h i1 j1 reverts base cost point calculation transposition since finding transposition invalidates previous work i1 num distance current row last row matching current character number deletion would required j j1 num distance current column last column match number addition extra num cost transposition analysis incorrect love know went wrong said find detailed explanation algorithm work online improved version figured though struck calculating cost addition deletion transposed letter seemed flawed one addition one deletion equivalent substitution checking correct solution trivial cost letter transposed letter higher addition deletion convert many substitution possible add addition deletion left cost would h i1 j1 max i1 num j j1 num num version num simple test seems correct example abcdef give edit distance num transpose f change e original algorithm give distance num either last three letter substitution num transposition num addition num deletion cannot first person thought across search long enough subtle flaw prevents actually working