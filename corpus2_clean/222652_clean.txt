c99 standard say num num num assignment operator shall modifiable lvalue left operand num num num modifiable lvalue lvalue incomplete const qualified structure union member including recursively member element contained aggregate union const qualified let consider non const struct const field typedef struct const standard following undefined behavior ub s1 s2 num s1 s2 semantic problem enclosing entity struct considered writable non read judging declared entity s1 considered writable wording standard num clause top const field standard make unclear programmer reading assignment actually ub impossible tell w definition struct moreover read access field enforced syntactically anyway way const field non const struct going really placed read storage wording standard deliberately cast away const qualifier field accessor procedure field like good idea const qualify field structure c include stdlib h include stdio h typedef struct const create calloc sizeof num destroy free const get const set const p p s1 s1 num set s1 num ok s2 create s2 num set s2 num ok printf s1 n get s1 printf s2 n get s2 destroy s2 reason entire struct read enough declare const const s3 entire struct non read enough declare w const think would better either num constrain creation non const structure const field issue diagnostic case would make clear struct containing read field read num define behavior case write const field belonging non const struct make compliant standard otherwise behavior consistent hard understand reason c standard consider const ness recursively put