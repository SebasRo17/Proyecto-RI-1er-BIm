week thinking relation object especially oop object instance c used representing layering pointer container pointer structure need access need access b uncommon find b c programmer anymore write program using functional language especially haskell pure functional language possible use pointer reference kind stuff feel strange like non haskell way thought bit deeper relation stuff came point even represent relation layering read folk already thought point view representing relation explicit way better since enables u focus core express relation later combinators bit like sql core mean define expect define made depends instance video game character legit talk trait skill kind stuff talk weapon item sure anymore character skill trait weapon whatever item ditto sound really wrong term design rather prefer something like character skill trait link character weapon using graph character weapon link character item using graph character item kind stuff furthermore day come add new feature create new type new graph link first design break character use kind work around extend think idea think best deal kind issue haskell pure functional language