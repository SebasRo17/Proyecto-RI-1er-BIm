company relatively long history database backed application begun experimenting dependency injection looking advice convert existing access pattern one suited dependency injection specific question create one access per table given table represents entity collection one interface per table would need low level access injected right dozen table make composition root nightmare would instead single interface defines thing like getcustomer getorder etc took example entityframework would one container expose table container conform interface seem like compatible di case help way normally manage access generic layer expose crud transaction capability provider specific subclass handle creation idbconnection etc actual table access us table class perform crud operation associated particular table accept domain object rest system deal table class expose static method utilise static dataaccess singleton instantiated config file