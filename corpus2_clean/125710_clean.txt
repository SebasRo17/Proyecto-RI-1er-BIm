assigned task implementing domain specific language tool may become quite important company language simple trivial already allows nested loop concatenation etc practically sure construct added project advance know experience writing lexer parser hand unless grammar trivial time consuming prone process left two option parser generator la yacc combinator library like parsec former good well picked latter various reason implemented solution functional language result pretty spectacular eye concise elegant readable fluent concede may look bit weird never programmed anything c would anything written c point however literally attacked co worker quick glance screen declared reinvent parsing use stack split like everybody made lot noise could convince partially taken surprise clear explanation partially opinion immutable pun intended even offered explain language avail positive discussion going surface front management preparing solid argument first reason come mind avoid split based solution need lot ifs handle special case thing quickly spiral control lot hardcoded index make maintenance painful extremely difficult handle thing like call argument ex add add b c difficult provide meaningful message case syntax error likely happen simplicity clarity avoiding unnecessary smart cryptic stuff also believe mistake dumb every part codebase even burger understand argument hear using interface adopting separation concern copying pasting around etc minimum technical competence willingness learn required work software project use argument probably sound offensive starting war going help anybody favorite argument cthulhu way course convince right perfectly happy well