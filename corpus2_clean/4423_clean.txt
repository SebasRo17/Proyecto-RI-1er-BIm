trying implement total variation regularized numerical differentiation tvdiff code mma found answer essentially want differentiate noisy data full paper behind idea available lanl related idea see wikipedia article problem currently long time take solve solve function full tvd function follows tvd data dx module n ep c dd ddt u u atb ofst kernel alph ng stoptol iter x q l g tol maxit p time n length data ep c table dx n dd sparsearray band c band c n n ddt dd transpose list dx drop accumulate list list list list dx total list table n join total list accumulate list list ofst data atb ofst data kernel join table exp besseli n n total join table exp besseli n n u join difference data u sparsearray u alph standarddeviation listconvolve kernel data standarddeviation data ng infinity stoptol iter x table symbol x tostring n iter q sparsearray band sqrt dd u ep n n l dx ddt q dd g u atb alph l u tol maxit preconditioner p alph sparsearray band diagonal l n n time absolutetiming x first solve thread alph l x x g x method krylov method conjugategradient preconditioner p tolerance tol maxiterations maxit u u norm norm u stoptol break u note lower stoptol value ensure better resulting derivative comparison matlab code translated mma available first link solve portion follows pcg v alph l v v g tol maxit p matlab defines solver pcg pcg b tol maxit pcg b tol maxit use symmetric positive definite preconditioner effectively solve system inv x inv b x pcg applies preconditioner function handle mfun mfun x return x note also v pure function matlab term allowed per function handle afun afun x return x run two code matlab end time faster corresponding mma code mma implementation us less entire cpu time solve function tried find best corresponding mma solver routine matched matlab description via doc two different mathgroup archived message none option whether given without quote seem help testing purpose data data make bigger also coincidentally crash mma big data join data reverse data data reverse data data reverse data data rinse repeat necessary data look like mathematica graphic function tvd data length data look like mathematica graphic speed solver matlab much better sparse array type calculation define right sparsearrays way use linearsolve matrix equation simple x left hand side speed improvement would great