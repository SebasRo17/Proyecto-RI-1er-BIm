started application choice going traditional m sql normalized database nosql database ravendb tried simplified version schema order ordernumber num num product product price num quantity num product price num quantity num product contact contact contact contact order could went m sql database wanted order kept historically want fk contact even address might change order contact info time purchase also yes could fk product instead using reference product product never get deleted updated want capture information time purchase basically every order seems self contained document never rely fks keep track process version order created could easily used orderdate track versioning anyways decision go ravendb built application website internally testing one scenario running problem bulk update record good sql example pushed production offline maintenance somehow record zipcodes leading zero num zero trimmed e zip read num instead num normally would patch thing immediately one fail server time updating record would easy update c set c zipcode contact c inner join order c orderid orderid version num seems best solution could come use ravendb get document programmatically update record custom c app seems tsql much easier faster sure better way unaware common shortcoming using ravendb nosql document store biggest worry app seemed fine enough sample 100k order happens get point 50m order also issue sql would eventually example gave