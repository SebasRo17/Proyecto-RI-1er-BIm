currently high performance computing taught c usually work c meaning everything taken care optimization come behind maintainability higher level feature like nice productivity keep nice warm programming project winter expense cpu cycle cache miss electricity bill however c efficient algorithm land stuff take back seat optimization since work c oriented programming sort style however reading hearing oriented enemy performance understanding software architecture shift exclusively structure encapsulation understanding thing disposed l1 cache pipelining trying understand real reason oriented design especially applies c cause waste hardware resource guy give basic reason impact computer performance know debate oop like keep performance hardware algorithmic level