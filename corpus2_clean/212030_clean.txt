got neat thought way module produce unit test executable compiled flag flag guard access static function module without including c file readme module various module written tested separately coupled together achieve necessary basic functionality module retains unit test guarded ifdef make test compile execute unit test producing copious importantly appropriate success failure make test command fail test fail module toc test obj src header structure constant c h c h stack v v v c v h f f c f h file ob ob ob c ob h ar ar ar c ar h st st st c st h di di di c di h dictionary nm nm nm c nm h gc gc gc c gc h garbage collector c h context c h unix dependent function compile tricky bit makefile c ob h ob err core op cc cflags err ob ar st v di gc nm op f module compiled c file plus every file except creating difficulty kindly programmer offered write autotools file obvious way make less weird would bust function separate source file gotta