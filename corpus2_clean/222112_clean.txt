want create lookup table variable used lookup num different double take num num number number range num num num possible number num possible number known double num decimal place one four changed would slightly change variable also num integer enum really take num num condition num variable num x num num z must less num could used hashing algorithm variable returned num double mostly num decimal place one num decimal place packaged ranging num num num decimal place expect num million record use big dictionary load memory start program would database linq best use tree hashing way speed never make big speed major factor clarification condition num x num num z must less num see num million combination variable num num update looked stats min max observed value discovered relationship variable found call num double b c b num possible value c num possible value num possible value several relationship mean num million combination rather num million originally thought num million record also definitely relationship able figure b c also bring number combination would optimal ram reduced entry num num million probably lower num million would storing ints multiplying num num decimal place still optimal suggested store double ints multiply num num decimal place combine num different ints num double see num enum num num key unique combination num variable num ints open expansion variable e need expand double c combination num instead num need unique key value new entry result expanded number total combination variable