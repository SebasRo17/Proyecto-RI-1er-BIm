generally accepted top tier programmer produce order magnitude better average peer also generally accepted rate error made relatively constant programmer instead tends impacted process used writing written understand human tend make mistake fairly constant rate better programmer notice quicker fix note assertion come complete steve mcconnell matter differing perspective started see recently hammer num 5x amount many peer measured story point estimated team higher quality based performance metric number change made check still make mistake better unit test better understanding better eye issue review producing num 5x number bug still producing twice many bug found qa developer team might imagine cause problem non technical folk metric measurement read bos tried point producing bug half rate peer fix twice many hard sell graph saying produce twice many bug deal fact increased productivity lead increased number bug