suppose following hierarchy public virtual update update position rocket public public virtual update update orientate towards target public rocket public virtual update rocket update create sparkling particle obvious reason good idea instance class might forget call base update behaviour program would incomplete see function implement important behaviour made virtual something better reserved replaceable behaviour would probably change architecture like public update update position protected virtual rocket public protected virtual final override orientate towards target virtual public rocket protected virtual final create sparkling particle virtual pretty much want public interface class non virtual update called ensured every update submethod called even one forgets call hierarchy stable base way api could ensure integrity whilst first would rely user call base update dislike one thing though part update methodname seems like think general goal keeping virtual call hierarchy stable uncommon commonly applied solution come across yet