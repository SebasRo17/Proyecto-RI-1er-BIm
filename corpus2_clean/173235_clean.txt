question people still use old programming language understand quite well fact two programming language know best c scheme date back 70 recently reading change c99 c11 versus c89 seems still used version c practice version learned k r looking around seems like every programming language heavy use get new specification least per decade even fortran still getting new revision despite fact people using still using fortran num contrast approach say typesetting system tex num release tex num donald knuth declared tex feature complete future release would contain bug fix even beyond stated upon death remaining bug become feature absolutely update made others free fork tex done resulting system renamed indicate different official tex knuth think tex perfect understands stable predictable system thing fifty year programming language designer follow principle course language relatively new make sense go period rapid change settling one really minor change much codify existing pseudo standard correct unintended reading language still seems need improvement ten twenty year fork start rather try change already use people really want oriented programming fortran create objective fortran purpose leave fortran alone suppose one could say regardless future revision c89 already standard nothing stop people continuing use sort connotation consequence gcc pedantic mode warn syntax either deprecated subtly different meaning c99 mean c89 programmer totally ignore new standard must benefit c99 sufficient impose overhead everyone us language real question invitation argue obviously opinion moment trying understand thing done already suppose question real perceived advantage updating language standard opposed creating new language based old