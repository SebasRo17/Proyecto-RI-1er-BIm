wondering whether using almost empty derived class give additional semantics hierarchy good idea practice short example always better long speech let assume writing hierarchy sql generation want represent manipulation command insert update delete two alternative first version switch statement enum commandtype insert update delete sqlcommand tablename get get commandtype commandtype get ienumerable column get sqlcommand command switch command commandtype case commandtype insert command case commandtype update command case commandtype delete command default throw new notsupportedexception second version visitorpattern note question whether visitor pattern used adding new operation abstract sqlcommand tablename get get ienumerable column get abstract accept visitor sqlcommand override accept visitor visitor deletecommand sqlcommand override accept visitor visitor sqlcommand command command accept visit sqlcommand command command deletecommand command command example achieve result first version feel dry even though polymorphism generally preferable switch statement second version feel like needlessly deriving sqlcommand carry meaning another similar case deriving generic give additionnal meaning collection eg list customer left wondering whether good idea pitfall personally prefer second version exactly add meaning help read later clearly lack experience see downside pattern