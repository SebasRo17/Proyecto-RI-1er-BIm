discussion colleague using automated refactoring tool ides eclipse netbeans intellij xcode visual studio etc surprised many uncomfortable using tool one seasoned developer smalltalk c c javascript num year seldom us ide even use automated refactoring tool lot refactorings hand personally rely lot refactoring tool whenever work project try pick ide support automated refactorings use refactorings whenever possible interested finding professional developer stack exchange use automated refactoring tool get thing started reason colleague use automated refactoring tool num trust sometimes trust tool especially complex refactoring like pull might affect multiple file worried tool might introduce subtle bug num discoverability sometimes even realize refactoring available ide immediately obvious num flexibility sometimes tool rigid always feel like configure much get work way want updated summary based response far think summarize three thing num developer time try different refactorings available try suspicious corner case suspicion warranted production time pressure even test check perhaps better ui tool alleviate num developer also frustrated limitation refactoring tool especially use metaprogramming reflection external file xml configuration property automated refactoring tool keep improving always limitation sometimes limitation acceptable time spoken several colleague tolerant limitation instance rename refactoring rename file good job renaming num still happy use tool fix remaining num hand still save time effort num opinion gathered developer feel refactoring tool nice feature work first time something unacceptable seem incline abandon make change hand compare tool like compiler debugger also limitation bug developer likely stick despite limitation essential feature abandon workflow thanks response topic interest people suggest turning community wiki would interesting find whether size project availability test maturity ide affect people decision use automated refactoring tool