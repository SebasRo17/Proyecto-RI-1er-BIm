user interface numerous control input button text field checkboxes etc imagine following rule exist sample ui num control b2 cannot used tf2 value tf2 cannot entered cannot checked unless cannot checked unless checked rule arbitrary variety business rule ultimately govern ui functionality would like implement logic ui enforce rule however hard time determining good way think two primary way really fan either num adding logic control callback one way would add logical check callback first rule associated b2 include hard coded check like tf2 fan idea going scatter sequencing logic everywhere ui seems inevitable sometime process result obscure impossible track bug also seems like maintenance impossibly complex num build collection rule way leaning towards building collection rule first step would defining set rule passing control associated lookup checkboxes pass check fails textboxes pass empty fails create collection prerequisite pas fail check ui component associated component abstracted single check called ui action like iterates list matching rule check return based whether rule pas could called ui control control specific logic take place nice seems creating rule forgetting might even complex first additionally control type pas fail criterion might become ridiculously complex lot hard read statement missing something clearly defined pattern better strategy incorporating sort validation rule ui