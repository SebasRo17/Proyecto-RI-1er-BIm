tl dr functional language handle recursion better non functional one currently reading complete num point book author warns u recursion say avoided possible function using recursion generally less effective solution using loop example author wrote using recursion compute factorial number like may exactly since book moment public factorial x x num num else x factorial x num presented bad solution however functional language using recursion often preferred way thing example factorial haskell using recursion factorial integer integer factorial num num factorial n n factorial n num widely accepted good solution seen haskell us recursion often see anywhere frowned upon question basically functional language handle recursion better non functional one edit aware example used best illustrate question wanted point haskell functional language general us recursion much often non functional language