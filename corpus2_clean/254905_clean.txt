consider legacy public interface con genericized could become something like public interface con clearly adding new item mutable collection change existing collection unlike collection con return completely new immutable collection leaving old collection unchanged opening possibility could meaningfully take different original collection num obviously able con ford collection car get collection car back think covered generic example num car train extended vehicle would handy able con train collection car get collection vehicle back contravariance would even write thought declaring new bounded variable e vehicle train example illegal super super e extends con e simpler still illegal disallows super super con num want assume programmer know allowed con something totally unrelated collection get collection object back think extreme case contravariance sure even dynamic language maybe think num legal would cover case num num question degree possible num b num possible easier language scala haskell ml c theory system preferred specific version example num could handle definition like book read system without phd math type programming language pierce best place start sample would appreciated using term like contravariance incorrectly would appreciate politely corrected