consider ddd expert solution architect try apply best practice whenever possible know lot discussion around pro con public setter style ddd see side argument problem work team wide diversity skill knowledge experience meaning cannot trust every developer thing right way instance domain object designed change internal state performed provide public property setter someone inevitable set property instead calling use example public myclass public boolean get public datetime get set public publish throw new invalidoperationexception already published datetime today raise new solution make property setter private possible orm using hydrate object us reflection able access private setter however present problem trying write unit test example want write unit test verifies requirement publish need indicate already published certainly calling publish twice test assuming publish implemented correctly first call seems little smelly let make scenario little real world following public document public document title isnullorwhitespace title throw new argumentexception title title title public approvedby get private set public datetime approvedon get private set public boolean isapproved get private set public boolean get private set public get private set public datetime get private set public title get private set public approve isapproved throw new invalidoperationexception already approved approvedby approvedon datetime today isapproved raise new title public publish throw new invalidoperationexception already published isapproved throw new invalidoperationexception cannot publish approved datetime today raise new title want write unit test verify cannot publish unless document approved cannot publish document published value properly set raised without access setter cannot put state needed perform test opening access setter defeat purpose preventing access solve problem