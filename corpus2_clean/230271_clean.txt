read working effectively legacy clean refactoring improving design existing design pattern get mean many example topic discussed book aim improved quality design observation problem mentioned book revolve around turning procedural semi procedural well structured oriented think god object long switch case hard coded dependency etc actually drove ask question often hear people talking functional programming good learn language even oriented programming affect mindset perspective keep topic constructive focused objective much possible num study evidence learning procedural programming oriented programming lead infamous oriented anti pattern num problem occur learning oop fp num proper proven way approach oop general avoid pitfall