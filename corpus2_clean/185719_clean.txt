let say writing game tdd style want test part determines whether set five die roll full house far know tdd follow principle write test first write simplest thing possible work refine refactor initial test might look something like public return roll full house sut new var actual sut isfullhouse num num num num num assert istrue actual following write simplest thing possible work write isfullhouse like public bool isfullhouse num num num num num result green test implementation incomplete unit test every possible valid combination value position full house look like way absolutely sure isfullhouse completely tested correct also sound quite insane would unit test something like update erik kilian point using literal initial implementation get green test might best idea like explain explanation fit comment practical experience unit testing especially using tdd approach limited remember watching recording roy osherove tdd tekpub one episode build calculator tdd style full specification calculator found num start test like public add empty zero sut new result sut add assert areequal num result result first implementation add public add num test added public add one number number sut new result sut add num assert areequal num result add refactored public add length num num num step roy say write simplest thing work thought would give approach try trying tdd style game