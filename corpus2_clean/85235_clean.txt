something thinking ever since read answer controversial programming opinion thread job put work writing software employer software create written way picked developer understood minimal amount effort well designed clearly consistently written formatted cleanly documented need build daily expected checked repository appropriately versioned get hit bus laid fired walk job employer able replace moment notice next guy could step role pick running within week top failed miserably interestingly found goal made valuable employer strive disposable valuable become discussed bit question one wanted bring discus point blank smell point view really covered depth yet professional developer ten year one job well written enough picked relatively quickly decent new developer case industry seems high level ownership individual team ownership norm base seem lack documentation process openness would allow new developer pick get working quickly always seem lot unwritten little trick hack someone know base well owns would know course obvious problem person quits get hit bus team level whole team get food poisoning go team lunch die would able replace team fresh set new random developer relatively painlessly several past job imagine happening system full trick hack know new team hire would take far longer profitable business cycle eg new stable release get thing going short surprised product would abandoned obviously losing entire team would rare think subtle sinister thing point got thinking start thread seen discussed term basically think high need ownership often indicator technical debt lack process communication good design lot little trick hack system know etc usually mean system getting progressively deeper deeper technical debt thing ownership often presented kind loyalty project company positive form taking responsibility work unpopular outright condemn time technical debt side equation often mean base getting progressively less open difficult work especially people move new developer take place technical debt ie maintenance cost start soar sense actually think would good thing profession high level need ownership openly seen job smell popular programmer imagination instead seen taking responsibility pride work seen oneself creating artificial job security via technical debt think test thought experiment basically person indeed whole team vanish face earth tomorrow would gigantic possibly fatal injury project would able bring new people get read help file play around day back business week back full productivity month