macro defined global header better command parameter define usage example header h inline update cpp include header h public setx x x x update update num line update x access member always using accessing global identifier always use give reader familiar probably month localized information accessed without need look somewhere else want define find using everywhere noisy ugly define considered good c practice practical problematic point macro c programmer reader using macro would like edit many people arguing specificaly contra using generaly contra explicit think may clear benefit explicit everywhere benefit explicit everywhere reader certainty accessed concentrate different thing verify distant really accessed think accessed use search specifically search x give wanted result search x deleting renaming member reliably notifies place member used global exist chance introduce using explicit refactoring making non member member make better encapsulation explicit show place must edit easily replace pointer instance given non member parameter generally changing posibilities error using explicit use explicit everywhere explicit less noisy explicit member outside member v member thanks spot point explicit solves problem member attribute method whereas prefix usable attribute would like polish extend list tell know advantage use case explicit everywhere