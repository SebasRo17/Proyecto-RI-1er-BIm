known pattern implement simple controller mvc design pure c switch case approach standard background embedded application pleased business logic turned also finished ui boil basically num function uint8 getinput display logger message input come multiple source output sent several destination taken care application idea pc device also idea event come human faked unit test struggle application logic view charge display output driver regrouped behavioral model providing clear feature know job well functional rough draft opinion violates principle like dry cohesion flexibility may present scalability problem rough draft faked name reduced size get idea menu h entry point application everything setup correctly last level one call business logic functionality nested sub sub menu arg1 arg2 arg3 sub menu option prototype indented reflect logical level menu function roughly look like menu c uint8 choice num display press num go sub menu num endl display press num go sub menu num endl display press num something driver endl display press z go back endl choice getchar blocking thread waiting event pop thread choice num else choice num else choice num choice z submenu return taken parent menu good way thing small medium system could improved considering limit c embedded tried tried n ary tree approach node menu leaf functionality without polymorphism hard define behave input strongly typed system also make hard simple callback system end needing ton wrapper around driver single callback signature also seem overkill simple state flow feel like working kiss productivity hammered chain elses devil would like higher level language usually bind event callback something along line bind whenever focused event raised called unsure c without going way overboard