read several source including mark seemann blog appropriate placement composition root ioc container close possible entry point application net world application seem commonly thought web project wpf project application thing typical ui read library project really going sage advice place composition root entry point library project represents logical entry point group library project client project group someone else work whose author add composition root project ui project yet another library project even familiar ninject ioc container implementation imagine many others work way scan module containing necessary binding configuration mean could put binding module library project compile library project client wanted change configuration unlikely scenario case could drop replacement dll replace library binding module seems avoid common client deal dependency injection composition root would make cleanest api library project group yet seems fly face conventional wisdom issue advice make assumption developer coordination development ui project well rather case developing library others use