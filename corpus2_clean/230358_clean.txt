building framework work purpose astronomy pipeline get far development hoping need see optimization pitfall missing long one thank anyone take time look need follows order num cross platform easy install without lot dependency astronomer work good understanding physic astronomy weaker programming ability due time constraint unlikely adopt new solution reduce unless lightweight easy install choice o something look complicated install setup likely look something else continue using decade old software currently using also like using since growing number people community using num centrally located server currently open source solution reducing sit user machine mean user group must download server wasting disk space time often file size 100mb also mean install setup variety program written different people take week get one machine fully configured next software update something break procedure must started want use web based solution image located server majority processing application basically ui web browser interact nastiness open source astronomy command software num ability short long runtime function example viewer convert fit image bunch png tile sends client viewed canvas must done quickly possible task routine like reduction may take hour depending task dataset important able routine asynchronously like building loading image task queued like finding bright isolated star given image num modular structure plan building basic ui framework easily extended user allow community share install piece needed individual group research function essentially become webpage image viewer instruction interface parameter minimize time take new student learn use software num small group user num people using server concurrently usually lot possible would nice something scale rather easily larger project could adapt need num processing multiple core necessary group server cpu member group would nice user could log core job without interfering user begun develop tornado server mongodb solution server client connect server via web socket send job processed job server run routine specified client sends result client sends link image large file ready downloaded database optional handy part implementing typically image file deal contain header num keywords new set image downloaded user load header database could num file number reason user may want search file one hundred keywords key index dump header 100mb take minute load hoping mongodb db interface faster allow multiple user access concurrently learned database different performance vary greatly depending need additional database keep track user account directory image allowed see example collaborator another university may access set taken together datasets internal use one thing thought writing general db api since search fairly simple function could call getfiles routine allows list selection criterion user simply need add correct syntax particular db get perhaps overkill one thing trying combat tendency astronomy use outdated technology one want take time update hope making flexible possible easily change new tool available better suited web server database even commonly used programing language keeping mind many collaborator still use fortran num written born also considered running multiple job server one task need quickly accessed job long time would nice single server solution put month building framework far unless good reason switch web application server like stick tornado lightweight easy use seems meet need started looking database much flexible open option thank anyone read skimmed advice greatly appreciated