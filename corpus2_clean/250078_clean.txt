writing oriented scratch try follow step num write test fails num write make test pas num enough test function complete refactor function similar signature num functionality complete make private many method possible last step seems sound since orientation hiding complexity behind abstraction keeping public part abstraction small possible however lead discard many test wrote still working plain function since testing private part api make uncomfortable remaining test suddenly forced cover complexity instance wrote swap row matrix inverting private used public invert test invert somehow convey reader swapping row happens inverting importantly remaining test possibly pinpoint swapping row broken careless change part inverting process private method may become public writing client reasonable cause access result difficult foresee recovering test previous commit possible feel like wasted time solution would refactor method helper package private however look like abusing oriented principle sake tdd principle also make wonder ever good reason make something private realize asking grow architectural design cannot done completely bottom approach would like practical advice keeping discarding early test still figuring shape piece software question similar question possible get initial public api right tdd seek good advice get answer useful think trying adapt coding test rather test still uncertain design summarize keep discard early test writing oriented scratch still strive make many method possible private leading bad design forced removal test symptom thereof