integrand look like enter image description detail computation complicated know integrand numerically use ndsolve solve second order ode integrand simply solution ode either calling two solution ode osc osc schematically integrand look something like exp g osc osc c f osc osc c exp bit slowly oscillating integration range really osc osc give wild oscillation certain parameter depend get larger explicitely rstar r r log r rinf rh r wp ac wp lambda l l l eq omega l capitalphi r r r r capitalphi r omega r r lambda l r r capitalphi r init dinit osc capitalphi block maxextraprecision ndsolve eq capitalphi rinf init capitalphi rinf dinit capitalphi r r rinf workingprecision wp accuracygoal ac maxsteps infinity osc obtained simiarly note non problematic params run quick quickly badly behaved problem know integrand maybe digit precision dp depending parameter computing ndsolve workingprecision accuracygoal take around hr want integrate nintegrate parameter large oscillation high usually know integrand around dp end scale nintegrate want greater workingprecision otherwise complains since oscillation also getting large force integral making workingprecision higher think cheating believe integrand higher dp idea far try different rule rule people would recommend oscillatory integrands far tried levinrule clenshawcurtisrule gausskronrodrule none seem compute quicker default agree reasonable number dp idea stick default something better one could integrand speed concern accuracy update let say managed split integral different integral first give definition vbar tau numericq tau tauh exp tau tauh tau tauh tau tauh ubar tau numericq tau tauh exp tau tauh tau tauh tau tauh rtau tau numericq tau tauh addition made think give integral sum integrands look like exp ubar tau f exp rstar tau f osc rtau tauf tau f constant first part amplitude osc satisfies linear ode given think levin potential work input levinrules given second order ode fix parameter ode depends simplify giving ic detracts main problem would need work kernal ode