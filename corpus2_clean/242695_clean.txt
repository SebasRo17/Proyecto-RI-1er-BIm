looking commonly used programming term describe software engineering phenomenon lack better way describe illustrate first couple example analogy scenario num want build extend subway system small town wyoming usual subway problem solve course hiring right construction company choosing best route buying subway car pretty straightforward implement system huge number constraint satisfy scenario num except need build extend subway system downtown los face problem case num also additional problem applicable space already use vocal protest loudly inconvenience repurposing redesigning otherwise modifying infrastructure rely extension system happen either slowly happen sometimes see similar pattern software development adding new feature small simple program straightforward program grows adding new feature becomes difficult difficult integrate new feature without adversely affecting large number existing use case user even robust adaptable program design problem user interface becoming elaborate program becomes difficult learn use term phenomenon