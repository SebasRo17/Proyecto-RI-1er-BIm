ever talk called nosql database without bringing cap theorem consistency availability partition pick two pick say mongodb partition consistency couchdb availability partition first need think need correct need access time new database made partitioned think pretty cool key column document whatever database instead relational one create one server instance never shard case availability consistency mongodb need replicate anything would available couchdb would one source would pretty consistent would mean case mongodb couchdb would little difference term use case well except course performance api al would like choosing postgresql mysql two fundamentally different set requirement right change ap cp database ac one creating one instance something missing let ask question reverse take relational database let say mysql put master slave configuration use acid transaction require write synchronized slave immediately make cp database synchronise predefined interval matter client read stale slave make ap database mean give acid compliance still use model database essence scalability ready give cap theorem underlying model column document key whatever give boost scalability relational model could design relational database designed ground partition tolerance maybe already exists could make nosql database acid compliant sorry lot question read lot nosql database recently seem biggest benefit using fit better shape rather partition cap giving acid compliance everyone much need partition performance scalability benefit using relational model even think partitioning