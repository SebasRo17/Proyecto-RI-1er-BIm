edge list undirected graph consists disjoint cycle example mathematica graphic vertex exactly two edge connecting cycle least three vertex vertex denoted integer n edge list given random order edge appear random orientation e might given need break graph cycle sort vertex order connected example input want output first sublist corresponds tetragon second one corresponds triangle vertex must appear order connected performance requirement maximum vertex count thousand run near instantaneously input size n log n solution possible however interested concise elegant solution performant one using e g compile note easiest state problem term graph really graph theoretical problem feel compelled use graph unless really advantageous clarification question finding connected component ordering vertex along cycle actually practical problem edge polygon random order orientation need sort use polygon related primitive sample dataset downloaded using import wdx