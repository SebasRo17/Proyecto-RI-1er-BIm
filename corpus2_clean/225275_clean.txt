kind problem encountered building plugin interface application resolve background want refactor application various feature moved plugins allowing easily added removed future hope neater system scattering enabled branch throughout may wrong believe need define interface part system feature may plug would like benefit experience already undertaken kind project perhaps mistaken design advise perhaps recommend pattern architecture make system manageable concern issue already spring mind need provide power plugins get job done pas little control new plugins may restricted need e g google chrome extension author complain inability modify core interface however pas much control irresponsible plugins power break whole application e g mozilla firefox extension plugins may need different order different event could register event handler priority e g num num plugins hook appropriate order could create post pre event hope nothing finely grained needed two plugins depend another plugin available first plugin architecture need kind dependency naming system related plugins need know plugins present perhaps even make call handle edge case may difficulty maintaining state application plugins enabled disabled runtime chrome seems handle well many application require restart kind architecture flow execution exchange keeping additional behaviour core need write neat interface unexpected behaviour minimised sometimes enabled approach might better way handle situation breaking plugin know recognise situation likely concern considered would love hear deal related related question turn module related library curious flow library javascript seems provide various feature help adding removing feature program runtime trouble getting head around