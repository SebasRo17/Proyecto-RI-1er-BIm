source structured follows dst src library test init py test py init py py test init py test py init py py test init py test py init py py grail test init py test grail py init py grail py branch root marker entry point grail well possibly test directory depending testing implemented multiple copy source tree present local storage one point time corresponding various maintenance feature branch cannot set shell without pain would need remember change time switched work different branch forgetful instead logic walk file tree starting current file location moving leaf towards root looking branch root marker root directory current working copy found add library sys path call entry point system add working copy branch sys path import o import sys def add working copy branch sys path branch root marker path file local globals file path file elif sys argv sys argv num sys argv num c path sys argv num path o path realpath o path expandvars path o path exists path o path exists o path join path break else path o path dirname path join could find assert o path exists path path o path dirname path path o path join path src subdir list o walk path next subdir subdir list subdir startswith continue subdir path o path join path subdir subdir path sys path continue sys path append subdir path currently need keep separate identical copy entry point even though quite short quite distressed dry principle violated approach would love find way keep sys path modification logic one place idea note one thing spring mind install sys path modifying logic common location always whilst terrible idea mean introducing installation step need carried time move fresh environment another thing remember likely forget would like avoid possible