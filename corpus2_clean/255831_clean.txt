far used mvp architecture pattern time every wonder whether presenter depend view vice versa view depends presenter note though sample provided c mind language question target precisely mvp pattern additionally provided top head solely help illustrate concern may compile short sample used public interface h h h handler set public interface iview close hide show public abstract presenter v v iview protected presenter v view view view public view close public view hide public view show private readonly v view let say creating customer management feature public interface customer ilist customer customer customer customer updatecustomer customer customer public presenter public view service base view view handler customer service public customer customer customer customer update customer public customer customer customer customer add customer public ilist customer customer list public customer customer customer remove customer private readonly customer public interface public form public public handler private get handler set handler handler private click sender eventargs e handler throw new invalidoperationexception change customer handler specified handler current private click sender eventargs e handler throw new invalidoperationexception add new customer handler specified handler parameter sample simplicity sake private click sender eventargs e handler throw new invalidoperationexception add new customer handler specified handler current private readonly manager private handler feel like view depend presenter would need handler property view presenter could depend access service like handle business entity like would wave away injection benefit imho plus seems reduce complexity waving away interface make easily testable presenter easily tested however way afraid presenter real handle view able either show hide growing confused shall depend