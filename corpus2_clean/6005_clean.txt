outside world programmer computer scientist software engineer developer may seem alike far case people create software living single programmer ability knowledge range widely well tool o language yes preferred editor diversity spawn many sub culture software like programmer actively use stack overflow site versus many curious hear others software sub culture encountered belonged admired disliked even created starter encountered microsoft driven company developer entire stack redmond wa e mail outlook e mail web ie ii large binder m developer network subscription full multiple version vb net visual studio etc avoids working shell command see fuss open source m centric company tend num num quite corporate driven business manager software people nowadays given wide availability non m tool antithesis hacker culture old school c people often know lisp unix extremely well sometimes may written semi popular lisp system utility software engineering thing new impressed know reference history higher level implication programming language like lisp c prolog smalltalk bitter ai outcome num num tend emacs user multi shell command without blinking eye advice cryptic contains gold understood new school web developer played computer video game growing often really started programming late 90 early num comfortable num num scripting dynamic language think c language outside ruby perl unnecessary magical may considered html programming initially tend get mac irrational use framework build often overly enthusiastic nosql ruby rail new school c lot training statistic bayesian model inference say ai say machine learning lisp could also expert haskell programmer seeing major real world success expert field google finance quants often make confident big distributed processing really changing world example mean complete correct orthogonal objective seen personally provided spark discussion outline broader question feel free disagree