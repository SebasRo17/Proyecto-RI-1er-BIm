written commits often git rebase order test necessary split take part form one commit squash another appropriate one problem say today hunting bug num recent commits causing rebase interactively last known work bear using git bisect reason next commit introduces bug big mess unrelated git reset head form several internally logical commits problem know first problematic commit select edit commits rebasing done problematic commit couple commits past would like test currently git rebase continue many time rebase complete rebase interactively problem tedious least would like command rebases top branch skipping edit declared commits merges need merge often would prefer first meaningful job splitting original commit git commit latter commits order compatible edited tl dr achieve bi directional traversal branch time creating removing commits workflow conceptually wrong