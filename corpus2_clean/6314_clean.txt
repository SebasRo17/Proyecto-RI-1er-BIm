let begin saying first post stackexchange apologize advance unwittingly break unwritten rule etiquette recently trying understand algorithm coding mathematica one main step algorithm requires find integer valued row echelon form matrix integer entry several constraint input matrix satisfy matrix represent sparse underdetermined never inconsistent trivial homogeneous linear system number column may take particular value fixed algorithm purpose question enough know number column always much much larger number row number row also typically somewhat large may case number row duplicate linear combination row another key point integer entry could generically quite large therefore compile option however magic way multi precision arithmetic compile please let know main motivation asking question first time actually mattered efficient mathematica code difficult time optimizing solution attempt first word data structure represent sparse array using rule based form row row basis representative example consider following x matrix main motivation using representation data seems make implementation efficient pivoting strategy incredibly simple overly wedded choice data structure would happy switch something else allows better solution problem one obvious question use built function seems least naively box solution based rowreduce integerrowechelon l n temp deletecases rowreduce sparsearray n l range n drop arrayrules expand lcm denominator flatten temp temp overkill extreme first seems impossible force rowreduce deliver row echelon opposed reduced row echelon form back solving step elimination process unnecessary therefore avoided furthermore since working integer waste time clearing denominator turning reduced row echelon form rowreduce delivers acceptable integer valued output far however able improve upon solution essence question expert whether go ridiculous work around integerrowechelon natural lower level solution would work fast faster clearly many computation done integerrowechelon could principle avoided hand rowreduce undoubtedly highly optimized developer wri obvious whether one significantly better finally let share two solution attempt lose integerrowechelon factor roughly respectively tested x matrix entry filled using randominteger correctness output verified applying integerrowechelon input output solution attempt based classical algorithm due camille jordan since algorithm widely known work erwin bareiss circa original paper e h bareiss sylvester identity multistep integer preserving gaussian elimination googleable search erwin bareiss sylvester identity first link want look also able get quite bit google book preview chapter algorithm computer algebra geddes et al usually called bareiss one step fraction free gaussian elimination algorithm algorithm exposited many textbook computer algebra probably simplest one want although find answer documentation would guess algorithm mathematica using forward solve select method onesteprowreduction needless say tried forcing rowreduce use method appears make difference whatsoever either timing output course also considered possibility reason beat mathematica using algorithm efficient bareiss proceed assuming bareiss algorithm least worse algorithm upon rowreduce ultimately based insider information pearl wisdom share rowreduce actually work would welcome first attempt coding bareiss algorithm look pretty ugly loses integerrowechelon factor integerrowechelon l aold sortby l rnum length aold lastpivot anew aold flag rnum aold aold lastpivot continue rnum aold aold temprri rule complement aold aold temprra rule complement aold aold aold sort join aold temprra aold sort join aold temprri anew aold anew aold aold drop aold aold anew aold aold drop aold aold aold aold anew length aold drop lastpivot aold aold length aold aold length aold aold true anew length aold lastpivot aold aold length aold anew length aold range length aold anew deletecases x anew aold deletecases x aold flag anew delete anew rnum break flag flag anew aold anew continue lastpivot aold anew sortby anew aold anew anew sure second attempt going perform much better turned lose factor integerrowechelon integerrowechelon l sortby l rule x list x rnum length lastpivot rnum lastpivot continue pivotrow activerow length lastpivot lastpivot splitby sort join map pivotrow activerow pivotrow drop activerow activerow map activerow pivotrow activerow drop pivotrow range rnum sortby deletecases deletecases lastpivot pivotrow rnum length list x rule x least integerrowechelon look much nicer integerrowechelon way slower quite counter intuitive coding integerrowechelon made concerted effort get rid much fluff possible functional possible thought good mathematica programming style disappointing discover integerrowechelon loses badly integerrowechelon must admit feel bit lost point issue performance tuning look forward seeing alternative solution problem clear end day speed matter would happy accept high level solution beat integerrowechelon well