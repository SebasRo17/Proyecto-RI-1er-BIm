first time think want create program really us oop principle want effective efficient way first given great riddle num solitary cell cell windowless central living room one light bulb bulb initially see light bulb cell day warden pick equally random visit central living room end day returned cell living room toggle bulb wish also option asserting claim num living room assertion still living room num shot stupidity however indeed set free mensa since world always use smart people thus assertion made num certain validity whole procedure begin allowed get together courtyard discus plan optimal plan agree eventually someone make correct assertion got solution want create program want program modular possible meaning find better solution rewrite think oop really suited done far several game test solution game run one attempt jail day counter useful stuff represent one single thinking thing one changing light picked stating everyone come room solution come two type done implemented classic created subclass simply override method right see two possible improvement want reuse make interface want create new implement issue mostly typical lot people pattern create implementation classic creating behaviour handle behaviour one given single situation problem mean would also create one behaviour subclass considering cleanest able reuse time come