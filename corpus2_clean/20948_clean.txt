post earlier regarding run mathematica hpc cluster running pbspro single mathkernel launch say slave remotely order utilise one mathkernel license working schematic notebook look like first launch remote kernel need subkernels remotekernels numcore change num core per node pbskernel host string launchkernels remotemachine host ssh x f l path math mathlink linkmode connect linkname subkernel noinit numcore hostfile environment pb nodefile hostfile failed running batch job host import hostfile list configuredkernels join configuredkernels pbskernel host export kernel txt paralleltable machinename kernelid kernelcount table launched evaluate something first creating output file one node postfixed node name runninglogfile log data parallelevaluate fileexistsq runninglogfile machinename get runninglogfile machinename export runninglogfile machinename text distributedefinition parallelmap func tuples range range func x numericq integerq block g r calc essentially integral altho depend prev defined helper function external func write file certain format gwrite r gwrite r g r v putappend unevaluated g r v runninglogfile machinename v write file using criticalsection stop clashing criticalsection logfilelock gwrite tf x tf taufstart taufend intv work fine sense giving expected data noticed massive slowdown computation speed way versus previous method using whereby launched mathkernels one compute node turn launch slave locally despite fact assigned exactly resource e node core memory difference using one mathkernel instead launch slave old method test portion paramater space min v hr current method drastic slow much longer job could causing slow idea remote slave kernel need communicate causing bottleneck see would problem func integral depend anything kernel somehow remote core getting used know launched appear kernel txt file start calculation also kernelcount method employing parallelmap successfully using way check also know node used append machinename data file get expected anything else mathlink handle many core successfully keep exactly script clone time split list tuples equally new script feed node mathkernel running launch local core serial thing massively speed back min edit reviewing output log one odd message although sure relevant stringform parallel kernel kernel parallel kernel private bk remotekernel subkernels remotekernels private lk linkobject node node ssh x f l math mathlink linkmode connect linkname subkernel noinit subkernels remotekernels private speed parallel kernel private id parallel kernel private name parallel kernel private ek parallel kernel private nev parallel kernel private pb parallel kernel private rd parallel kernel private sk parallel kernel private q parallel kernel private n parallel kernel private n deletefile nffil file found deletefile panfs panasas panfs cluster username datanode