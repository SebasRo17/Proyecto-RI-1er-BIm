centralised business application framework contains business logic provides access back end system accessed number different program client remoting need change certain part program currently retest different program client even assuming extend automated testing feel way certain upon releasing new version application framework different program work correctly change without also manually retesting program every time release new version project c test program b well unintended change preferably would move release system upon releasing project c retest program c b possible breaking change overlooked idea life duplicate centralised business application framework one sub project would mean release new version program c provide private version application framework upon release program c nothing changed application b still communicate private application framework need came following pro con con framework hosted n time project get confused version project bug solved major fix change release n version application framework pro significantly cut testing certainty unintended change released different project must admit fan private copy approach fail provide better alternative better argument anyone similar situation handled approach private framework copy solid accepted approach advice welcomed thanks advance