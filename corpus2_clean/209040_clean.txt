trying figure mvp implemented usercontrol level thought ended reading blog post pretty much shut back start idea proceed let say usercontrol something simple like two textbox e combobox get invoked form view presenter way understand mvp form presenter supposed invoke second presenter handle communication usercontrol get dropped get completely lost past implementation usercontrol learned mvp always incorporated logic behind control e g combobox selection change text label related textbox1 implementation usercontrol done dragging onto designer calling command like update third party usercontrol command usercontrol performed command control presenter need invoked instance drop combobox listview winforms control onto form yet internal logic dictate display essence testing presenter separation somewhere thought good solution would constructor usercontrol would create presenter command usercontrol would delegate straight presenter would allow usercontrol presentation logic separated view test implementer form need drop usercontrol perform sends receives part local presentation logic usercontrol presentation logic left invisible implementer thought understood find bad practice self aware view people understand better construct usercontrol keep presentation logic invisible end user construct wrapping presenter form without violating principle matt wynne discusses linked post completely misunderstanding concept mvp