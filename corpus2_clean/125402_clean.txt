problem bringing software engineering learned school project job pattern easy enough apply coming architecture general structure tough open ended never know approach project exception project cleanly fit mvc architecture working increasingly larger project end product work know testing well getting hell going back add feature worse work usually degrades planning application entry point thinking use case work eventually end low cohesion tightly coupled enough experience coming school start job responsibility entry level programmer benefit learning experienced team problem inefficient bos said get project faster level testing make teach software engineering read lot book little abstract need something concrete go learn real project software engineering edit may help know sometimes end clean either take really long time get give hack cause know work people say come experience must place go say project like try architecture