assume abstract several concrete class interface publish information several equivalent form difference preferred form consulted cost consulting others might require time consuming computation implement strategy selecting algorithm based affinity one one information form example original example complicated example specialised field best figure example familiar programmer assume abstract representing device two concrete subclass one based device one block based device provides block based access based access affinity one method block based access preferred block based device etc say want implement copy procedure source target device block based copy performed block per block case approach preferred discussion assume device several abstract class offer access several logically equivalent method whose implementation differ greatly thus displaying greater affinity one others want implement strategy working aggregate class selecting algorithm taking affinity class account complexity brought aggregate visitor pattern seem useful question concrete expose affinity one access way useful strategy component picking algorithm suited affinity combinatorics yield large number combination affinity strategy need consider lucky case use generic algorithm handle vast majority combination