roughly structure work using git web development master branch individual group work done seperately branch merged num ticket several come num create branch local development repository push origin num fix ticket commit work push origin num happy work pull branch repository uat staging server check client review num client approves work num go back local development repository check master merge branch push origin num create tag master afterwards num go live server pull master move update tag new one num u working num project throughout year generally one person sufficient work project one time sometimes two people might work separate branch view merging master branch around time generally think merging best understand preserve development history regard merged whereas rebase seems completely destroy master log would assumption correct someone want use rebase extremely busy project constantly branched merged need guarantee merges successful developer test adding master work resolve conflict merging back