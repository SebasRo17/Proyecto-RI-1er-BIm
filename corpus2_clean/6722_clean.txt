recently tried thought fairly small relative gb ram machine row reduction calculation matrix representing undetermined linear system surprised much trouble x matrix available download via mediafire take little mb store rational entry sparse entry non zero data structure used store mathematica rule based representation sparse array row row basis unclear please see example matrix last post curiously find using rowreduce find row echelon form leaf huge memory footprint well beyond mathematica report memoryinuse able observe effect without leaving mathematica miraculous allegedly platform independent way using answer wreach gave response question memory monitoring began historylength turn caching set pair command give respectively machine mathematica estimate much memory currently use using idea wreach need jlink installjava loadjavaclass java lang management managementfactory temp javablock java lang management managementfactory getoperatingsystemmxbean getfreephysicalmemorysize gettotalphysicalmemorysize memstart temp temp memstart memoryinuse temp javablock java lang management managementfactory getoperatingsystemmxbean getfreephysicalmemorysize gettotalphysicalmemorysize memnow temp temp memstart memnow memoryinuse memstart found copying running preceding two line code wherever want memory sanity check seems give fairly consistent way compare much memory mathematica actually used since start session much memory mathematica think used since start session number initialization thought effectively zero although probably obvious course assumed amount ram used program constant throughout session approximately correct running idly background read file containing matrix assign f openread rrdemo read f close f also go ahead define array used momentarily recall number column w array w actually although bit topic worth pointing already seems missing memory associated process reading file rrdemo separate session checked missing memory associated definition w temp javablock java lang management managementfactory getoperatingsystemmxbean getfreephysicalmemorysize gettotalphysicalmemorysize memnow temp temp memstart memnow memoryinuse memstart actually nothing compared happens rowreduce obtain row echelon form matrix use rowreduce straightforward way sparse array show problem generation sparse array first check memory footprint step calculation absolutetiming c coefficientarrays plus w w null temp javablock java lang management managementfactory getoperatingsystemmxbean getfreephysicalmemorysize gettotalphysicalmemorysize memnow temp temp memstart memnow memoryinuse memstart bytecount c performance mathematica seems reasonable actual reported memory usage go proportion bytecount c look happens rowreduce c absolutetiming c drop arrayrules rowreduce c method onesteprowreduction null temp javablock java lang management managementfactory getoperatingsystemmxbean getfreephysicalmemorysize gettotalphysicalmemorysize memnow temp temp memstart memnow memoryinuse memstart bytecount c something seems seriously wrong bytecount c mb close increase total memory usage reported mathematica actual memory usage time mathematica think forced conclude mathematica fails garbage collect gb memory end calculation summary couple related question anybody insight anomalous behavior rowreduce illustrated something wrong generally anybody idea whether mathematica special algorithm symbolic sparse linear algebra memory issue aside make suspicious rowreduce take long process c ghz processor return result longer sparse array point wondering whether mathematica even right tool job symbolic linear algebra large sparse undetermined linear system advice experienced user would greatly appreciated make difference using bit linux running mathematica v