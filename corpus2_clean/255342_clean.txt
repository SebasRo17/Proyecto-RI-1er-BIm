know multiple post similar problem please kind asking suggestion thought good advice project structured server client pattern class common part either server backend control logic client gui write one monolithic application client depends jdbc jar decided split project multiple eclipse project proj server jdbc needed proj client proj common proj test proj test test part client server setup eclipse server client depend common module use git manage eclipse project first thought manage part separate repos suggested git problem loose relation different commits modification proj common typically reflect modification make new version incompatible old commit project thought several possibility num using git submodules num using git subtree num using single git repository contains module together num using different repository adding regularly tag commits keep track relation solution num problem quite heavy maintain especially want check multiple small modification go multiple time around folder add commit pack repository subtree might work well far read bunch script manage git call disadvantage subtree fit perfectly work done repository update imported repos happen occasionally update happen merely subprojects history project get quite branching might get complicated solution number num favourite solution far everything kept tight branching done without problem solution num mainly done tag created yet pre alpha thus sense creating tag project grows might get also nasty prone would suggest one given solution miss one perfect solution edit found following related post b c unfortunately big picture clear second answer advice tends towards multiple repository different file explicitly state manage relationship different commits cannot go running configuration jan 10th num example without looking history explicitly subprojects b solution num suggested c comparision made first something like multiple manually managed project migrated solution num q first two solution mentioned suggested answering person net find much git submodule tell get quite much overhead e g problem far see practice one project reference one library case hopefully library would change regularly coding take place repository case advance solution subtree submodules might useful case contrary dummy master repository hold four subprojects sync subprojects high development critical part contribution different online sub project straight forward much additional magic git another site suggest solution num unsure development goal repository imported library want avoid getting trouble later migrate another system thus ask advice somebody might done similar thing