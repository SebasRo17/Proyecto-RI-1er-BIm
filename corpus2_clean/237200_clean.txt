writing c like language looking elegant way traverse abstract syntax tree trying implement visitor pattern although convinced correctly struct visitor expression virtual visit virtual visit virtual visit statement virtual finished protected virtual visit num visit overloaded default overload call visit subclass forced implement make easier quick dirty thing although defining visit tedious subclass must implement accept used traverse tree structure public virtual virtual accept visitor visitor num however design quickly becoming tedious accept method often similar responsible traversing structure node visitor leaning towards provide iterator accessing child visitor traverse structure experience designing abstract syntax tree please share wisdom