one best worst microsoft software innovation great compatibility terrible efficiency window side side configuration allows among thing different component program multiple version c c runtime library loaded process always impressed excellent backwards compatibility affords example ancient program link old c c runtimes link dynamically inject new dll depends new c c runtime separate instance runtimes coexist simultaneously within address space called assembly reference linux however binary source available tend rot time rather quickly reason interesting program eventually link back library installed system directory usr lib etc since c c runtimes system library frequently change abi program stop working upgrade distro also caused example software backends eventually link system library example opengl due variety volatility implementation cannot provided binary distribution simply must depend system opengl implementation system opengl link libstdc could potentially dead water happens old executable load local copy libstdc opengl shared library load system copy libstdc two conflict one refuse load usually mean opengl refuse work program come crashing mere application developer something like achievable linux without major architectural change elf binary format linux kernel abi something would built system library compile time deployed long period time making change elf glibc libstdc compiler