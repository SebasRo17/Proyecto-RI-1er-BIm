worked two year great investment bank made technical project desire creating optimized respecting adapted good design pattern solid principle law demeter avoiding sort duplicate code delivery production zero bug happened expected majority developer came order precise complex reading comprehension listened instance make instanceof forget polymorphism easily correct emergency production bug prefer answer knowing developer curious refusing effort understand good design instance num developer know strategy pattern make procedural never oo design want said simplicity project manager told really wrong way idealist bank world would advise keep desire really good adapt majority developer repeat really interesting design according beauty developer job contrary learn basic oo principle best practice adapt