seems huge discrepancy expect someone studied programming year university one actually know feel like asking overcomplicated question interview usual question difference reference seems interviewee really understand answer know terminology using get detail asking explain happens write num num new myclass etc basically everything trick interviewee telling callstack heap etc try stay language concept interviewee tell lot c c c dive deeper specific language possibly implementation detail needed ask interviewee callstack argument passed imperative language choice stored interviewee idea callstack let alone boxing consideration etc difference abstract interface case use one usually also ask imagine design small library use case aiming using inheritance abstract factory interviewee idea inheritance real purpose might usually know keywords virtual override etc really know use let alone explaining virtual table even though screen cv beforehand even people num year experience real life project involving complex architecture would say less num interviewee answer two question properly say properly mean depth approximate idea concept regarding junior fine hiring someone know organize time well someone used industrial build process example feeling one heard word callstack year studying computer science either stupid unmotivated chose university unwisely think common learn basic concept completed university know people familiar became good software engineer year think company might issue attracting talented people experience kind issue hiring process edit regarding immediate thing literal translation french english usually interview french fixed question still think understand perfectly meant kind make point