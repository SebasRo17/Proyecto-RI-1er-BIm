set class 3rd party library class use inheritance structure share logic would like add layer abstraction middle inheritance tree add functionality child concrete implementation simplified example class 3rd party lib public interface ianimal bool get public abstract animal ianimal public abstract bool get public get set public cat animal public override bool get public pur public dog animal public override bool get public fetch public snake animal public override bool get public would like add concept type animal num additional property would like able class like derive cat animal access functionality definition public enum first idea use multiple inheritance unfortunately c support multiple base class private abstract animal public get set compile extend num class private dog next attempt us combination inheritance composition generic try deliver functionality base class private abstract animal ianimal public get set protected readonly animal protected animal activator createinstance typeof private cat public override bool get animal private cat public override bool get animal public pur needing duplicate pas method property like painful animal pur private static var new pur compile access pur extend cat var new pur work exposed exact signature solution good imo reason actually instance cat wish use cat need mirrored container feel kind messy animal also take animal parameter also tried extension better two attempt private abstract animal public get set private static animal animal var animal private static var dog new dog max var dog fetch compile instance dog control 3rd party class could likely cleanly introducing new middle inheritance tree question model instance considered type cat appropriate sub animal method property available without extra pas call