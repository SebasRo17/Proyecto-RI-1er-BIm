trying understand jdk num lambda expert group eg decided include new programming language going mailing list found thread discussion removal type many statement ambiguous maybe lack context case limited knowledge implementation system however couple question believe safely formulate site help understand better meant know could ask question mailing list thread old decision already made chance ignored seeing guy already getting delayed plan answer support removal type endorse use sam type brian goetz say long thread useful would type without type find thread mention understand introduction structural may imply certain complication mostly nominal system cannot understand parametrized sam type different term subject problem anyone understands type different parametrized sam type term another comment goetz say two basic approach typing nominal structural identity nominal based identity structural based composed tuple float language pick mostly nominal mostly structural lot language successfully mix nominal structural typing except around edge almost entirely nominal exception array structural bottom always nominal element generic mix nominal structural fact part source many people complaint generic structural system type onto nominal system mean new complexity edge case benefit type worth experience implementation system know example complexity edge case mention honestly get confused allegation consider programming language like scala entirely based jvm support structural type like function tuples even problem underlying platform get wrong saying better sam type want understand took decision