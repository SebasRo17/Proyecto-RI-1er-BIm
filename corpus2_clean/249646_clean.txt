keep seeing following pattern people learn oop problem put object different related type container solution inherit common base new problem bunch base object get real solution classic inheritance example make graphic program deal geometric object circle ellipse triangle object common base drawable drawable c might look something like struct drawable virtual drawable virtual draw const num struct triangle drawable point p1 p2 p3 draw const override stretch double double std double double double const struct circle drawable double radius draw const override struct ellipse drawable double radius draw const override std vector drawable drawables new circle new triangle new ellipse const auto drawables draw far good want increase radius circle ellipse far know num way num put everything base base get virtual function stretch default implementation example return dummy dealing triangle done easily iterate drawable increase radius make base ridiculously huge working vector drawable becomes inefficient function nothing element num use dynamic cast hack const auto drawables dynamic cast circle circle radius else dynamic cast ellipse ellipse radius unfortunately need repeat ugly syntax every time need something like cannot put macro every time new drawable added go whole base add appropriate also else chain fairly inefficient num add tag first member cast accordingly const auto drawables switch tag case tag circle circle radius break case tag ellipse ellipse radius break slightly efficient due switch instead else chain already kind tag show dynamic tag redundant also problem num since need change whole base whenever new drawable come along num keep object separate container vector circle circle vector triangle triangle vector ellipse ellipsis auto c circle c radius auto e ellipsis e radius efficient memory layout wise iterate object matter favorite unfortunately break first solution keep differently typed object single container tried solve problem creating variadic template internally vector per forward insertion right container ideally would completely hide fact different container hood usage would look something like triangle circle ellipse mv mv push back triangle mv push back circle mv push back ellipse auto mv get circle ellipse radius solution perfect example different type keep order implementing iteration tricky presented problem solution attempt university research group got reaction design class right problem proposed solution specific tool solve specific problem questionable best add even complexity c minor detail opinion basic problem need fixing usual solution better design try find least evil num workarounds specific case without actually solving problem problem come almost every time inheritance used finally question problem real problem know another workaround solution language deal better problem want simulate poll using num comment feel free upvote either never problem problem easily solved also problem never solved satisfaction edit prevent close due primarily opinion based discussion want clear answer solves problem resource say none edit related really car garage