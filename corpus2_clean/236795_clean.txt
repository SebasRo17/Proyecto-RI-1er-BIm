playing around different way integrating d3 angular context learning framework hoping client application receives json node edge server central component client graph visualization implemented d3 force directed layout node node svg circle element added visualization line circle added edge edge course d3 selection make trivial add element bind represents graph visualization part much larger application need create different type element representing node edge different part application d3 nothing like keep element bound single dataset primary goal minimizing complexity although fallen love simplicity elegance d3 binding functionality arrived tentative conclusion using one part application using angular part creating unnecessary complexity simplest approach would use angular handle binding element creation word instead using selection enter append create svg element thinking using ng repeat node node perhaps creating creating custom directive allow custom functionality done would need get element d3 laid screen animated force reasoning sound particular worried overlooking complication create regard constancy important requirement node entering exiting moving screen constantly need transition smooth would recommend go integrating angular created element d3 precisely getting force node force link array avoid complication finally also considering strategy hoping might give best world could use d3 create svg element bind respective datum rather executing link visualization directive ng d3 tutorial found could compile something like d3 select svg selectall node enter append circle attr node icon attribute style etc node icon normalized directive restrict property includes c run compile angular compile directive normal adding additional functionality interface directive etc way element right option attracted intuitively pitfall might overlooking might make former strategy preferable note question cross posted know cross posting discouraged general case sure forum appropriate venue question reference concrete implementation core question general design pattern interpreted context think question implementation interpreted context think different question entirely justified cross posting please feel free comment disagree justification consider deleting question