want create two application lot common functionality basically one system advanced version system let call simple advanced advanced system add extend alter sometimes replace functionality simple system instance advanced system add new class add property method existing simple class change behavior class etc initially thinking advanced class simply inherited simple class see functionality diverging quite significantly development progress even maintaining core base functionality instance simple system might project sponsor property whereas advanced system list project sponsor seems poor practice inherit hide alter throw away significant part feature alternative two separate base copy common seems inefficient archaic fraught peril surely moved beyond day copy paste inheritance another way structure would use partial class three project core common functionality simple extends core partial class simple system advanced also extends core partial class advanced system plus three test project well system seems like cleaner approach would best way structure solution project create two version similar system let say later want create third system called extreme largely based advanced system create project advanced extreme extend using partial class better way matter likely c mvc system happy language framework suitable