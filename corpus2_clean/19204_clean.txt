unweighted undirected graph g v v n v vertex vertex lattice represents string length leq character need construct g unordered list edge vertex e list saying vertex v connected vertex v j neq j v large order degree vertex v bounded small integer value maximum vertex degree delta g approx good way store process g mathematica sort suffix tree hash table efficiently retrieve list vertex k hop neighborhood vertex v k hop neighborhood mean set vertex reached v traveling along k edge provide example might start list vertex corresponding unique binary string v v v n unordered list undirected edge vertex v v v v v v nice efficient way process list mathematica retrieve set nearest neighbor say v includes v v naive way proceed simply specify graph structure graph efficient large instance g update ok data intel xeon cpu x ghz bit system attempt parallelization lookup time k hop neighborhood arbitrary vertex using neighborhoodgraph g g x integer lattice millisecond g x integer lattice second g x integer lattice second scaling appears exactly linear graph size awful especially considering mathematica draw spring minimized graph relatively short order x integer lattice