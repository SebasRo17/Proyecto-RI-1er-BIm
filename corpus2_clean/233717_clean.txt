working scaling application currently polling mysql database send async job background processing system state machine used keep track entity progress throughout workflow example might three state scheduled processing complete plan add messaging queue system broker job sent background processing system application would insert new entity push message queue application b would consume message route correct background processing job def work entity precondition check raise wrong state unless entity scheduled update state processing entity processing work update state complete entity complete end given job like hard time determining would possible recover situation processing complete event transition example process crash job processor would try job entity inconsistent state would fail could handle case without resulting back polling entity table looking stale job edit two different concept play state relates job execution scheduled processing state workflow complete piece information table grows process polling becomes inefficient read update insert constantly happening maybe solution application b move active job separate datastore clean task refers running dataset much smaller ultimately seems like way avoid polling database ensure correct state