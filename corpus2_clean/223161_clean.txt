appreciate question may controversial sense flip side question business trying make technical decision scrum development team supposed collectively responsible making design technical level decision fulfill customer requirement division responsibility power product owner defines story communicating stakeholder team decide implement story think motivated belief since developer intimately familiar written far information noted project face consequence poor decision modify future best placed make design decision hindsight realise made bad decision valuable learning experience able blame management went wrong theory agree kind play devil advocate see several situation following principle letter could bad idea num development team mostly either temporary contractor others intending jump ship going made redundant shipping project going move another project entirely separate team maintenance good example might typical outsourced government project reason team mostly people actual maintenance num development team inexperienced developer really clear idea maintainability problem caused development practice poor design decision incentive theory right thing incentive working yet burned enough time acknowledged connection sloppy coding practice getting burned num development team like making big mistake working crazy hour fix work around b like wasting time writing boilerplate using bad old framework give sense job security c make look like feel like hero num team like endlessly discus endless different permutation idea add internally visible feature low business really need deliver faster come good enough good enough may others organisation could provide variety useful input design technical decision experienced developer polyglot developer specialist including dba may necessarily scrum team manager may cynical may seen ambitious wrong headed architecture go awry many time getting people valuable experience fundamentally sometimes necessary management level able say way implementing would bad idea way instead least try later time simpler way initially seems scrum idealistic respect know happen obviously say interference organisation scrum suggests scrum desirable case