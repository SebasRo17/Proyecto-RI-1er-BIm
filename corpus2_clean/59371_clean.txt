user defined module describing integrand computed numerically much complicated bear foo x numericq numericq z numericq module f f x z return f region defining rotated truncated polyhedron using integration domain new v feature polyhedronoperations polys flatten normal truncate polyhedrondata octahedron face p polygon sqrt sqrt sqrt sqrt sqrt sqrt sqrt sqrt sqrt p polygon last findgeometrictransform p p rot flatten table polys region convexhullmesh rot nintegrate get error exist yet wolfram documentation google anywhere nintegrate foo x z x z region nintegrate ncvbr nintegrate failed converge prescribed accuracy refinement nintegrate obtained integral error estimate number change use simple foo function link error take nintegrate documentation question precisely ncvbr error mean error tag seems related ncvb example nintegrate documentation nintegrate ncvb nintegrate failed converge prescribed accuracy recursive bisection x near x nintegrate obtained integral error estimate actually informative say need crank minrecursion maxrecursion however since using convexhullmesh specify domain could way mathematica tetrahedralizes region problem instead since ncvbr specifically mention refinement would playing min maxrecursions even access new feature manually refine mesh prepare integration domain seems like unnecessary pain accessible nintegrate option