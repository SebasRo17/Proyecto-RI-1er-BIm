building app using mvc num razor ef num net num possible search item zip thus retrieving item certain distance current zip calculates distance using census file zip lat lon haversine formula specific problem deal sql portion view us pager num result per page hyper link order column asc desc order also num drop list filter result manufacturer category distance filtering say num mile retrieves ienumerable zipcodes within requested distance time num num num num area item contains zipcode relationship problem ef generates try grab item object database using list acceptable zip code one query deeply nested try breaking assuming clause thousand condition make sense found link day ago basically dealt creating temporary table use list condition find link anymore also applied raw ado net opposed ef question basically implement functionality want without make huge change using var context new var result context item include p p manufacturer include p p category include p p include p p include p p category logic isnullorempty category result result p p category category manufacturer logic isnullorempty manufacturer result result p p manufacturer manufacturer vehicle logic vehicle num result result p p vehicle count num list code key tolist result result p code contains p zipcode uow cb contains cb attended tolist take item dictionary isnullorempty var b lista b result result r r id take zip isnullorempty result result p z z zipcode p zipcode switch sortorder case price desc result result orderbydescending p p price break case price result result orderby p p price break case date asc result result orderby p p postdate break default result result orderbydescending p p postdate break pagesize num pagenumber page num ipagedlist item cc result pagenumber pagesize could call tolist somewhere hit returning back thousand entry thus lagging response time second could easily make paged list ienumerable list want try minimize response time think area need fix sql pull unnecessary filter