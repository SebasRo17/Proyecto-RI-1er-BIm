experience writing small tool haskell find intuitive use especially writing filter using interact process standard pipe standard recently tried use one filter file num time larger usual got stack space overflow reading e g identified two guideline save stack space experienced please correct write something correct num avoid recursive call tail recursive valid functional language support tail call optimization num introduce seq force early evaluation sub expression expression grow large reduced specific haskell least language using lazy evaluation introducing five six seq call tool run smoothly also larger however find original bit readable since experienced haskell programmer wanted ask introducing seq way common practice often one normally see seq haskell production technique allow avoid using seq often still use little stack space