always programmed procedural language currently moving towards orientation problem faced see way practice orientation effective way explain point learned php c pretty easy practice matter choosing something thinking algorithm thing php example matter o sitting thinking well practice let build one application administration area people add product pretty easy matter thinking algorithm register user login user add product combining php feature good way practice orientation lot additional thing matter thinking algorithm analysing requirement deeper writing use case figuring diagram property method setting dependency injection lot thing point way learning orientation seems good design crucial procedural language one vague idea enough saying procedural language write good software without design sake practicing feasible orientation seems feasible go without good design even practicing seems problem time going practice need figure ton requirement use case seems become good way become better orientation requires one whole idea app everytime going practice good way practice orientation