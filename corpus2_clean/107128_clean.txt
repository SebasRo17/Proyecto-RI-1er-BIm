term client used referring client browser client server cache workflow num client make http request num server process num store parsed result memcache next use cache indefinitely num result client num client get result store client local memcache ttl cache workflow num another client make http request num memcache found memcache result client num client get result store client local memcache ttl ttl time live possible know updated expire relevant memcache accordingly however pitfall client site cache ttl num update ttl pick client memcache num reverse manner update client memcache still expire ttl num first request concurrent request cache ttl get throttle need repeat cache workflow event client require several http request single web page could bad performance ideal solution client cache indefinitely notice three proposal futher notice proposal num make use http header current implementation num client sent http request last modified time header num server check last modified time last cache time status num num client based header decide processing good save parsing client lesser transfer bad fire http request still slow server end still need process lot request proposal num consistently issue http request check group last modified time num client fire http request num server last modified time group num client compare local last cache time result num group last cache time server last modified time request group good fetch date less request server bad every web page require http request proposal num tell client new available push num server end notice change group num notify client change num help client fetch num reset client local memcache parsed good let cache act behave like cache bad encourage race condition preference proposal num something like gearman could ideal change gearman server sent task multiple client worker crazy know first question bit crazy