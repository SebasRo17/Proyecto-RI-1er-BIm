best way emulate r data frame functionality includes ability select row column dimensional table string identifier positioned typically first row column see related question thanks leonid shifrin cluing term data frame wrapping array symbol df enables leveraging upvalues essentially overload part getters defined separately singleton list string argument matching us position select row level array part df expr r string rest expr position expr r rest part df expr r list stringq r rest expr position expr r rest similarly get column level array part df expr c string transpose expr position transpose expr c part df expr c list stringq c transpose expr position transpose expr c seem work correctly though implemented precondition check header string correct level array dimension length eg given data data id col col col row row row yield df data id row row id col col col row row df data id col id row row row col note mechanism somewhat elegant r string argument wrapped c function several related question first definition raise similar error upsetdelayed write tag string df expr r string rest protected second key question define general getter passing row column argument return subarray eg df data id row id col avoiding replicating list singleton combination implementation general case avoids special case argument need include id row column composing row getter followed column getter vice versa work directly note asymmetry limitation method access row column row accessor general since passed special case also numeric parameter span finally upvalues mechanism used emulate data frame functionality would possible use setter also apparently r data frame used query data conditionals edit note given comment computational complexity scalability would like stress primary purpose approach deal small medium datasets imported excel string header unlike rdbms separated metadata many data analysis application example biomedicine healthcare excel based workflow norm input data intermediate output moreover query statistical development time dominates execution time syntax modular approach data frame outweigh computational complexity consideration