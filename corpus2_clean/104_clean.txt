used code sample gist containing similar code answer question mandelbrot like set function simple quadratic math se generate image graphic cosineescapetime compile c complex block z c n escaperadius pi maxiterations ab z escaperadius n maxiterations z co z c n n block center radius densityplot cosineescapetime x x center radius center radius center radius center radius plotpoints aspectratio colorfunction temperaturemap could improve speed time efficiency code reasonable way parallelize running mathematica core machine edit thanks help far wanted post update seeing based answer far see get refinement accept answer without going hand written c code opencl cuda stuff best far seems use cosineescapetime defined replace block densityplot block center radius n graphic raster rescale paralleltable cosineescapetime x center radius center radius radius n x center radius center radius radius n colorfunction temperaturemap imagesize n probably large part parallelizes core run little second versus second original code based absolutetiming