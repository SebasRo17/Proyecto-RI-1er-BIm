implementing net implement idisposable disposed state invalid nobody accessing course situation two essentially independent system access instance one essentially owns charged interacting persistent manner owner opts get rid calling dispose system need know otherwise may try interact invalid always convenient owner inform system stop using owner may know system implementing property situation polling would become impractical would preferable non owner instead receive notification disposed end figured implementing disposing event would good solution lead design question instance considered already disposed time event raised guess would regarded alive handler finish react manipulation occurs inside event handler guess react usual manner living since still alive handler call dispose could either explicitly ignore entrant call assume well behaved handler disposed event still raised event finalized without ever explicitly disposed think case hand event would actually needed definitely potential cause problem wondering established wisdom pattern designed general example aware trouble likely