question leonid explained module variable get garbage collected chain asynchronous task unless temporary attribute cleared either calling clearall holding work preserving variable refers function creates asynchronous task next step create variable catch value thrown inside asynchronous task technique seem work illustrate first synchronous version work need internal synchronous task wrapped catch default catch return symbolic value unique default ok case internally catch task bump state variable check state value ok print throw schedule next iteration task maximum state value ok contrived example mean state value less real application would based unpredictable outcome hence whole reason catch following code implement scheme work fine printing error module state runnexttask catchresult defaultcatchresult unique runnexttask function catchresult catch state state state state print state throw state runnexttask defaultcatchresult catchresult defaultcatchresult print error runnexttask want asynchronously attempting following code wherein difference synchronous version marked comment module state runnexttask catchresult defaultcatchresult unique following device remove temporary attribute runnexttask catchresult clearall runnexttask catchresult runnexttask function catchresult catch state following invocation technique make body asynchronous startscheduledtask createscheduledtask state state state print state throw state runnexttask amount time separate asynchronous invocation defaultcatchresult catchresult defaultcatchresult print error runnexttask problem thrown value caught revealed message box throw nocatch uncaught throw returned top level end world since least repeating chain asynchronous task interrupted wrap entire thing another catch make behave well inside code another case uncomfortable proceeding understand going expected one result got another grateful advice suggestion solution grateful advice clue solution