recently found concept literate programming found rather intriguing yet encountered claim bad way structure program seems covered many place even could find question regarding question flaw way handling documentation consider documentation side effect would mean flow literate programming know design originally intended easy documentation well concept forward programming flow concept dividing problem small sentence based problem seems really brilliant idea thus ease understanding program flow consequence literate design also number function required limited imagination programmer instead defining certain task could created scrap literate would yield automatic insertion instead separate compilation subsequent requirement inter procedural compilation optimization step obtain equivalent speed fact donald e knuth first attempt showed inferior execution time due fact know compiler made lot however concern would like get feedback one consider bad good design methodology