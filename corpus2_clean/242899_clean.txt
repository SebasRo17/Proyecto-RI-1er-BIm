seeing like base want refactor typescript psuedocode follows entitymanager private entitytype ientity var ientity switch entitytype case type user id setting break case type bar user id id break lot case statement downside switching self explanatory normally switching behavior based try push behavior subclass reduce single call let polymorphism take care rest however following two thing giving pause num want couple storing object know look entity certain unfortunately identity varies sometimes id time combination id uniquely identifying etc behavior belong subclass responsibility entitymanager delegate num case modify class since plain old object mentioned got instance take parameter like ientity proceed almost thing slightly modify method calling get identity entity might case type bar entity getuserid entity getid break case change entity interface subclass behavior belongs think point sort map eventually call private entitytype ientity entitytype private someentity ientity ientity someentity entitytype someentity mean need register sort strategy class function runtime map darn well better remember register one type get runtime exception better way refactor feel like missing something really obvious