written asp net webforms portal client project kind evolved rather properly planned structured beginning consequently mashed together within project without layer client happy functionality would like refactor confident releasing project seems many differing way design architecture would like opinion best approach take functionality portal allows administrator configure html template associated partner able display template adding iframe site within template customer register purchase product api implemented using wcf allowing external company interface system also admin section allows administrator configure various functionality view report partner system sends invoice email notification customer current architecture currently using ef4 read write database ef object used directly within aspx file facilitated rapid development writing site probably unacceptable keep like tightly coupling db ui specific business logic added partial class ef object question goal refactoring make site scalable easily maintainable secure num kind architecture would best please describe layer whether use dto poco active record pattern etc num robust way auto generate dto bos future enhancement simple implement despite extra layer num would beneficial convert project webforms mvc