cpu got core intel core ghz try solve linear matrix equation using linearsolve large matrix mathematica us core solve problem cpu usage mean problem parallel computation option try minimize huge function several variable even worse mathematica us one core cpu usage familiar parallel computation appreciative help solve problem use capacity cpu run linearsolve large matrix minimize huge function make cpu usage make computation time short possible machine thank much edit computer analysis absolutetime primelist table prime k k time absolutetime yield load cpu time breaking analysis core absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job job job job job job job time absolutetime yield load cpu time edit make completely clear happening computer problem please look following example first want check number processor kernel machine processorcount kernelcount result respectively machine want see mkl condition machine also much cpu usage reported system monitor correspond actual performance run mathematica clear global randomreal b randomreal table setsystemoptions mklthreads print case print systemoptions mklthreads absolutetime linearsolve b time absolutetime print time print see result including number mkl thread computation time case case mklthreads case mklthreads case mklthreads case mklthreads cpu usage case case case case reported system monitor see case cpu usage reported system monitor correspond actual performance cpu usage observe less computation time increase number mklthreads setsystemoptions mklthreads value mean see effect compuation time cpu usage thing happens change number parallelthreadnumber setsystemoptions paralleloptions parallelthreadnumber mean computation time cpu usage case depend parallelthreadnumber see case setsystemoptions paralleloptions parallelthreadnumber print systemoptions paralleloptions parallelthreadnumber setsystemoptions mklthreads print systemoptions mklthreads absolutetime linearsolve b time absolutetime print time result cpu usage analysis paralleloptions parallelthreadnumber mklthreads case setsystemoptions paralleloptions parallelthreadnumber print systemoptions paralleloptions parallelthreadnumber setsystemoptions mklthreads print systemoptions mklthreads absolutetime linearsolve b time absolutetime print time result cpu usage analysis paralleloptions parallelthreadnumber mklthreads see cpu usage computation time change increase mklthreads e g also independent parallelthreadnumber another interesting example case mentioned edit please look example result cpu usage case clear global absolutetime primelist table prime k k time absolutetime result time cpu usage clear global absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job time absolutetime result time cpu usage clear global absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job job time absolutetime result time cpu usage clear global absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job job job time absolutetime result time cpu usage clear global absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job job job job job time absolutetime result time cpu usage clear global absolutetime job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k job parallelsubmit table prime k k waitall job job job job job job job job time absolutetime result time cpu usage make analysis using paralleltable interestingly cpu usage computation time mean computation time quite number analysis table one core cpu usage absolutetime primelist paralleltable prime k k time absolutetime result time cpu usage also checked nminimize big function variable using method available mathematica including automatic differentialevolution neldermead randomsearch simulatedannealing computation time quite cpu usage method look minimization method use nminimize cannot change parallelization condition think condition problem completely clear would appreciative someone help use capacity cpu linearsolve nminimize minimize still wonder make cpu usage case way check whether cpu usage corresponds actual perfomanse like could see example mentioned linearsolve nminimize thank much edit function trying minimize large function including many variable general format function sth like log e phi e phi uu log e phi e phi log e phi phi e phi phi uu uu log e phi phi e phi phi log e phi phi e phi phi uu uu uu log e phi phi e phi phi log e phi phi e phi phi uu uu uu log e phi e phi log e phi phi e phi phi uu uu log e phi phi e phi phi log e phi phi e phi phi uu uu uu log e phi e phi uu phi phi log e phi e phi uu uu phi variable issue number variable increase large number example even make function hugely big cannot use capacity cpu take maybe day minimize function even though one computer full capacity cpu enough solve problem first step learn configure parallelization nminimize findroot single machine able extend parallelization several remote machine edit example complete form function variable pastebin link variable unknown parameter uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi uu uu phi p f pn fn mn know function extremely instable optimum point function also known equal zero trying find value parameter make function minimum zero parameter make whole function small possible best answer edit thank guy helpful comment based kai oleksandr r mentioned far could understand linearsolve us capacity cpu core solve equation involving large matrix consequently seems want solve linear matrix equation time best method solve one one loop make efficient way mathemathica able use capacity cpu core step solve equation efficient way step go next step look example apparently like parallelization force mathematica solve problem involving linearsolve way likely efficient faster check example computer based comment wondering explain example example clear global absolutetime nn cc array cc nn nn clear b randomreal b randomreal cc linearsolve b time absolutetime example cpu usage time example clear global absolutetime job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b job parallelsubmit randomreal b randomreal c linearsolve b r r r r r r r r waitall job job job job job job job job time absolutetime example cpu usage time