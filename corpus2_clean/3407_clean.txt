working implementation multivariate fft least highly parallelizable due row column algorithm however figure implement serialized idea look like following mffts dims data block e f locdat data dimension dims return fourier locdat else row column locdat e fourier locdat e e dims locdat f fourier locdat f f dims return locdat would take sample e g data point grid time sample quite anisotrope second note operation first loop work complete distinct set data second loop also never write array entry twice parallelizable quite far however even short set data code mfftp dims data block e f locdat data dimension dims return fourier locdat locdat paralleltable fourier locdat locdat f fourier locdat f f dims return locdat would need second running subkernels know way something similar second one dimension would encapsulated usage paralleldo would require setsharedvariable locdat kill timing due synchronization second example using subkernels due distinct write access would nice able write parallel onto array master kernel something like edit update one little improvement least limited fft using twice command locdat transpose paralleltable fourier locdat perform fft row column work dfft though improve timing much ajasja pointed bottleneck collection result kind parallelwrite would really great