confusing title know question two pattern general structure different name used pattern different name holdpattern f x g h g x h b holdpattern g z l l z would like able define pattern two patten letting f x g h take arbitrary value would go clearify b could define common pattern integer get matchq integer true matchq b integer true two pattern cannot simply base pattenr substitute f x g h eg badpattern holdpattern f pattern x pattern pattern g pattern h h x h want result working pattern method accomplishes well would reimpliment matchq case position forth everything expects pattern input still work code accomplishes however ad hoc fasion wrong since result distinguish structural blank pattern blank initial code get pattern match need get rid holdpattern matchq holdpattern hp hp holdpattern true cause could use verbatim however able next part extend type pattern switching pattern component holdpattern check b pattern based switch collection head inject new pattern condition pattern switched head mypatternpatterna holdpattern hp pattern p blank b ruledelayed rd f f x x g g h h hp holdpattern p pattern b blank rd ruledelayed matchq b mypatternpatterna true note using template new pattern construct new pattern f x g h take arbitrary value since injecting new pattern removing holdpattern pattern blank ruledelayed seems however occasionally problem symbol mean need extend list instance include set setdelayed however actually appear expression since otherwise check fails feel like rather cumbersome method wondering others dealt case carried update add relying matching return value aswell eg mypatternpattern holdpattern hp pattern p blank b ruledelayed rd f f x x g g h h hp holdpattern p pattern b blank rd ruledelayed f case b mypatternpattern f g mr wizard inquired exactly mean two definition structure clarify two different expression f g wanted describe structure could write name integer integer one possible common structure two pattern approach break obvious reason consider vara varb would like define pattern match pattern assigns vara varb name follow recipe substitute vara first name get name obviously fails way define pattern pattern match element inside confusing know