requirement management short term agile project seems like solved problem scrum angle new requirement change existing requirement delivered user story user story grouped epic feature facilitate delivery larger complex requirement course user story technically requirement document manageable grouping work map often called vertical slice functionality scope story defined unambiguously use acceptance criterion ac although user story formal requirement browsing give pretty clear idea underlying requirement short term say short term project progress number user story increase thus browsing ever increasing list story find requirement becomes less less efficient time problem compounded consider user story expand supersede even negate previous story imagine num year gap development iteration project stable production original team gone knowledge original team knew going happen eg nature business measure could take help subsequent team sure backlog provide information hardly easily browsable form done help subsequent team understand state project including got experience following thing work backlog grooming delete update previous user story backlog read requirement document documentation sprint team member tasked documenting current state system documentation behaviour test approach one seen come close working unfortunately coded behaviour test victim naming problem although test might properly document system getting team developer write test following domain terminology wording style almost impossible reiterate one manage agile project requirement long term