seen question help writing functional standard ml answer heavily focused towards oop op advised use facade pattern use inheritance etc answer relevant sml programmer two separate largely unrelated module foo bar need accomplish task given function equal equal signature val equal bool val equal list list bool make two new function following signature val equal option val equal list list list option stand either foo bar natural solution use higher order local fun comparison bool left right comparison left right left else none val equal equal val equal equal end need repeat exactly snippet module tiny minor implementation detail would bad idea let publicly visible either foo bar time seems small tightly coupled two equal function factored module maybe another language equal functionality would merit say override equal give function option option situation like least per day sane way avoid copy pasting