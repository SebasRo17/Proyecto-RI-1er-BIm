conceptual model system involves combining go obj c interface protocol able add virtual method unit one defines idea allow ruby ish open class take minimalist approach library development attach small piece functionality actually needed whole program implementation involves table method marked virtual rtti table system function allowed add module initialization upon typecasting interface go style lookup done create vtable particular mapping pas comparable performance c c case method may added afterwards previously known new method allow newer interface satisfied like idea seems like would flexible disregarding potential spaghetti happen model use regardless wrapping system call binding method set clean c compatible call one would also able integrate shared library retain decent amount performance go shared linking objective c dynamic lookup call valid use case model would make worth extra background plumbing much dylan style extensibility would nice access quite bring use case would justify overhead could make kind extensible future scenario