basically build memory efficient version structure used performance critical section resulting structure ugly extremely fast using really option also use representation structure part relevant analysis stripped mention also ugly let call fast also original pretty representation let call pretty called process supposed take instance pretty convert fast million calculation spit result pretty pretty stuff pretty another hpp double process const pretty pretty fast fast pretty create fast processing fast result point fast dy instance fast created dy within process unfortunately declare within declare elsewhere would like make entire accessible process even seen anyone else like would conversely declare private access declare private current attempt process public static double pretty pretty process private fast construct fast process see call process really critical issue post style question would really like neat solution never come across issue wondering others dealt came nicer solution