imperative programmer would like understand generate simple version space invader based functional programming design principle particular referential transparency however time try think design get lost extreme mutability mutability shunned functional programming purist attempt learn functional programming decided attempt create simple 2d interactive game space invader note lack plural scala using lwjgl requirement basic game num user ship bottom screen moved left right key respectively num user ship bullet fired straight activated space bar minimum pause shot num second num alien ship bullet fired straight activated random time num num second shot thing intentionally left original game alien defense barrier x3 high speed ship top screen okay actual problem domain deterministic part obvious non deterministic part seem blocking ability consider approach deterministic part bullet trajectory exist continuous motion alien explosion due hit either player ship alien non deterministic part handling stream user handling fetching random determining alien bullet firing handling graphic sound done lot game development year however imperative paradigm lwjgl even provides simple version space invader began moving scala using scala without semicolon link talk around area none seem directly dealt idea way person coming imperative programming would understand num purely functional part num james num similar stack overflow post num clojure lisp game num haskell game stack overflow num haskell functional reactive programming appears idea clojure lisp haskell game source unfortunately able read interpret mental model make sense imperative brain excited possibility offered fp taste multi threaded scalability capability feel like able grok something simple time event randomness model space invader implemented segregating deterministic non deterministic part properly designed system without turning feel like advanced mathematical theory e set learning level theory seems require successfully generate simple game necessary overhead acquiring necessary training conceptual framework vastly outweigh understanding benefit fp least simplified learning experiment feedback proposed model suggested method approaching problem domain specific generality covered james would greatly appreciated