looking algorithm either use jump point load balancing environment num job type scheduled time user job fast others slow lot processing single instance job processor discover job scheduled execute job processor num job time thread problem one job could consume many resource num job get processed even worse scheduled job delayed long period time job scheduled immediately make next solution add instance job processor big vm server rolling num vm handle instance job processor default going help believe thought behind solution addition making job processor scale horizontally think need way determine job instance grab based current load instance also allow bias suggest determine statistic job avg time etc give score num num num long running instance determine current load either based total score job running currently factoring bias example think able set instance biased toward small job avoids larger job another instance biased toward medium job etc looking advice go job consume large amount time cpu memory goal make sure instance pulling work capable keeping scheduled job queue moving along quickly possible one devs suggested leave job processor alone pull whatever queue next round robin say could lead potential issue single instance pulled many large job struggling get done instance idle