working meteor app let user create event assign crew member played around mongodb made experience along way instance first attempt went overboard embedded object quickly became sluggish hard maintain several people therefore suggested try traditional design approach done time split collection manual ref mind event id objectid propa prop propb prop employee employee id objectid crew id objectid employee id objectid crew id objectid employee id objectid propa prop crew id objectid id objectid propa prop reasoning event collection become quite substantial application life cycle thus consider duplication bad thing another noteworthy feature employee must belong certain crew actual event work crew intially quite happy design however found problem lead num listing event manually join ref order show actual property employee bit tedious worry performance rather running one query three first get event trough employee join employee employee collection finally join crew crew collection num biggest problem far though believe known deep querying adding employee event know already assigned thus requiring query event collection event given id also find check given employee id exists employee far unable single query question boil design fine change given use case alternatively keep current design tackle problem num num manual join ref fine performance real possible showstopper