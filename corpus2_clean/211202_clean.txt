wondering better way handle system static configuration let say system offer several operation translated operation need keep related information operation like description priority etc nasty way seen public static final constant better way using create eg public abstract codebook private id private description getters setter given cathegory case public extends codebook instance created bd cannot use db thought create factory populate class given set parameter hardcoded factory like better solution tackle case believe first one solving handy framework probably clear enough fully aware property capability match criterion let explain say configuration mean business configuration never know many possible item get example banking system cancel contract forced provide reason termination predefined list includes text system translation code third party system system need perform operation well possibility need externalized system probably change property file seems right choice opposite site using buisiness rule system e g drool seems overkill using enums specified property fit quit well time time need able recognize configuration normal enum reason inheritance instanceof operator solve