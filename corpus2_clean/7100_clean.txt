know eigenvalue already quite well implemented mathematica foolishly trying improve order improve programming skill trying write mathematica style code locate eigenvalue tridiagonal symmetric matrix using bisection came tridiagbisec diag list subdiag list tol real module diagonal split transpose diag join subdiag flatten bisecnonzero mynorm sequence transpose mynorm sequence transpose tol diagonal length diag length subdiag tridiagbisec main function calling build array diagonal array containing matrix element leading diagonal subdiagonal split wherever zero found block evaluated separately using bisecnonzero bisecnonzero lambda min real lambda max real tol real diagonal list module lambda med lambda min lambda max nmin numeig diagonal lambda min nmax numeig diagonal lambda max nmed nmed numeig diagonal lambda med nmin nmed lambda med lambda min tol bisecnonzero lambda min lambda med tol diagonal nmin nmed lambda med lambda min tol constantarray lambda med lambda min nmin nmed true nmed nmax lambda max lambda med tol bisecnonzero lambda med lambda max tol diagonal nmed nmax lambda max lambda med tol constantarray lambda max lambda med nmed nmax true believe may built program suboptimal way two right way iterate bisection numeig diagonal lambda numeig diagonal lambda unitize unitstep rest foldlist possiblezeroq lambda infinity diagonal numeig computes number eigenvalue greater lambda cfr barth martin wilkinson mynorm max ab ab rotateleft ab know also reimplementing norm infinity scholastic purpose think may useful since tridiagonal matrix particularly simple form way avoid building sparsearray structure since trying performance conscious could whole algorithm improved upon reasonable effort besides using eigenvalue