note putting question conceptual mechanic rather coding problem working small program using sequence fibonacci number noticed got certain number got painfully slow googling around bit stumbled upon technique haskell known memoization showed working like traditional implementation fibonacci hang num slow fib integer slow fib num num slow fib num num slow fib n slow fib n num slow fib n num memorized variant near instant even num fib integer fib map fib num fib num num fib num num fib n fib n num fib n num question guy rather work somehow manages list calculation catch haskell lazy really calculation need catch work