recently started learning nuance scalable enterprise computer architecture one central component messaging queue order learn programming paradigm trying implement version messaging queue service far initial design run threaded socket listener order prevent message downloaded twice two separate processing node message queue index register locked read initiated unlocked register updated negates need threaded mean ceiling size scalable system based processing speed server messaging queue service running way get around would message queue service multiple server increase likelihood message downloaded twice way prevent issue occurring would include revocation callback server even thread single server synchronized information detected would command processing node stop current job query message queue next message would ceiling traffic sent would revocation callback causing bottleneck slowing processing information lot processing node would performing operation wasting time last way think get around problem message queue server thread server would specific offset queue looking might issue based upon application especially processing required done specific order said design message queue architecture could show existing enterprise grade message queue service avoid problem