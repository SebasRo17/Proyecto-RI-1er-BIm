mate discussion would best way implement pattern state managing several screen application developing screenmanager guess context according book look like irrelevant removed ease understanding public screenmanager region field list gamescreen screen new list gamescreen list gamescreen new list gamescreen new endregion summary construct new screen manager component summary public screenmanager game game base game content new game service content game service getservice typeof throw new invalidoperationexception graphic device service public override update gametime gametime read keyboard mouse update make copy master screen list avoid confusion process updating one screen add remove others happens another thread clear foreach gamescreen screen screen add screen count num pop topmost screen waiting list gamescreen screen count num count num update screen screen update gametime screen public gamescreen screen screen screenmanager graphicsdevice screen screen add screen public gamescreen screen screen remove screen remove screen see screenmanager list updated every time update called couple screen base screen base create coupling gamescreen screenmanager also exist coupling screenmanager gamescreen public abstract gamescreen screenmanager screenmanager public screenmanager screenmanager get screenmanager internal set screenmanager public virtual public virtual public virtual public virtual update gametime gametime public titlescreen gamescreen public texture2d titlescreen public titlescreen public override screenmanager new public gamescreen irrelevant implementation detail question see titlescreen know creates add screenmanager creating dependency titlescreen although kind implementation seen book far read companion proposes another kind implementation proposes create observer approach replacing titlescreen whole management event would screenmanager screenmanager would orchestrate management screen approach say titlescreen could reused application decouple screen among create big screenmanager would coupled everyone sure whether state approach observer approach better specific case would best implementation thank