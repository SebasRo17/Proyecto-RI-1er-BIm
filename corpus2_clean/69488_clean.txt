first background info company software service model people log onto server work order support application utility application life client machine copy binary server machine first iteration software polled database generated information client side approach done away thought fundamental flaw polling database see work done opening sql port world pulling database generating client side second iteration software generated one server sent client via messaging service advantage seen event driven polling sql port closed generated wan illustrate approach used past problem client often poor connectivity u packet loss poor response time etc jms supposed handle reconnect come back always happen best approach deal poor client connectivity edit explain mean jms working expected expectation jms work reliably mean go losing packet manner jms implementation continue try send message succeeds example see almost daily basis jms queue consumer attached yet message sent received restarting client normally resolve issue speak specific however sake conversation let leave jms potential answer edit num wanted possible solution problem general consensus seems current one jms best num current case issue jms case 1 client connects queue succesfully sends receives multiple message time several hour several day client longer receives message queue show consumer connected client never receives message resolution restart client application case 2 client never connects queue client continually try reconnect reconnection always fails resolution try hour setup fairly simple one public server openmq client low volume ranging num message day num message day client never initiate message conversation queue client reply message small pure text binary config follows new setproperty setproperty setproperty num setproperty num setproperty num