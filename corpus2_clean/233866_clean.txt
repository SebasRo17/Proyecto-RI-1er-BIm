disclaimer think rule almost oo language since familiar c relating specific language think use attribute reflection could largely reduced static member would apply principle oo instance static property method overridden using new keyword cannot forced implement one via interface neither base keyword used explicitly naming base supported make thing worse member cannot referenced via instance always specifically qualified exact constructor also limited inheritance support one choose base constructor called cannot force support constructor take certain parameter defining interface best hint could find answer question far one stack overflow answering different question answer j rg point three principal apply orientation messaging local retention protection hiding state process extreme late binding thing fully understand want pas state full one another principle make sense however opinion principle inheritance overriding base method alternative additional functionality could also beneficial stateless business logic one example forcing implement certain constructor would helpful de serialization example constructor accept xml node c dynamically implementable using reflection compile time error avoiding reflection boilerplate would add lot static member interface would helpful situation aspect specific without relation instance example could displayname unit weight factor aspect across instance specific regardless instance attribute annotation used exploit without need create instance however extra boilerplate way enforce implementation compile time error admit many simple way work around point looking workarounds returning static instance property quite common much overhead create instance read specific aspect like know rationale background static thing systematically excluded heard virtual stack really know work technically cannot find simple explanation net reason technical philosophical nature edit elaborating static interface example think static interface could provide strongly typed checked alternative reflection public constructor xmlnode node displayname get weight get usage public node assembly gettypes implement node length num num writeline concat node displayname node weight tostring looking back actually look like making inherit system adding property different static member empty typeof latter compile maybe starting find answer feel like walking paradoxical circle quite snap yet