reading book design pattern design pattern explained 2nd edition throughout book say favor aggregation inheritance trying wrap head around trying design something feel stupid conceptually recruiter figured recruiter abstract couple different type recruiter full time part time thing want recruiter able reference recruiter might work together need share combine information recruiter would one region oversee perhaps sharing recruiter region conceptual aggregate subregions subregions define place fall along certain geographical boundary contain numerical statistic information whole subregions consist contains detailed information particular recruiting event also contain statistical information make sense specific recruitment subregions every time information recruitment updated need create new record transaction keep history number adjusting want able stored database naive come database design structuring especially come dealing abstract class interface new everything database going linked way among different table say recruiter going table going region table table recruitment table need put logic put make sure save everything database keyed together nicely loosely coupled