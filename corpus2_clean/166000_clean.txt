say task logging system task logged user specifies category task default status outstanding assume instance category status implemented entity normally would application layer public public add guid categoryid description var category getbyid categoryid var status statusrepository getbyid constant status var task task create category status description save task entity public task public static create category category status status description new task category category status status description descrtiption like consistently told entity access repository would make much sense entity public task public static create category category description new task category category status statusrepository getbyid constant status description descrtiption status repository dependecy injected anyway real dependency feel domain making task default outstanding previous version feel like application making decision repository contract often domain extreme example domain decides urgency entity public task public static create category category description var task new task category category status statusrepository getbyid constant status description descrtiption somecondition somevalue task urgency getbyid constant urgency else task urgency getbyid constant urgency else task urgency getbyid constant urgency task way would want pas possible version urgency way would want calculate business logic application layer surely would appropriate way valid reason access repository domain edit could also case non static method public task public update category category description category category status statusrepository getbyid constant status description descrtiption somecondition somevalue urgency getbyid constant urgency else urgency getbyid constant urgency else urgency getbyid constant urgency task