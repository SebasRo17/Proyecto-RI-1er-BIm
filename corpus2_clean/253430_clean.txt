trying figure sort structure use modeling hypothetical idealized network usage scenario number user hostile trying form network computer potential connection known computer one user need connect may one another user need connect though user num might need connect computer b user num might need connect computer b c e enter image description image generated help graph creator think core going undirected cyclic graph node representing computer edge representing ethernet cable however due nature scenario uncommon feature rule adjacency list adjacency matrix least without non trivial modification num edge become restricted use one user acquires given network connection user may use connection example green user cannot possibly connect computer red user connected b e despite direct link num case given pair node connected one edge example two independent cable running e green blue user able connect machine directly however red longer make connection num two computer connected one cable user may one cable need several operation graph determining whether particular pair computer connected given user identifying optimal path given user connect target computer identifying highest latency computer connection given user e longest path without branching first thought simply create collection edge terrible searching best thing think modify adjacency list item list contains edge length also cost current owner sensible approach assuming space concern would reasonable create multiple copy graph one user rather single graph