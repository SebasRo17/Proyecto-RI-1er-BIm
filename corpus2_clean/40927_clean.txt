something troubling least version performance b b equivalent significantly inferior divide b subtract b despite fact treated equivalent documentation terse code fanatic chafe write longer form beginning concern latter faster form transparently converted former slower form example documentation divide x divide x equivalent x divide x entered standardform inputform x x esc div esc x divide proof statement false b list randomreal b timing first b timing first divide b timing first divide b timing first divide b evaluated manner rest similarly subtraction b timing first b timing first subtract b timing first although example use packed array see list assignment packed array result unpacked value explanation list performance differential exists unpacked list one see trace short form induce additional operation range b range b trace divide b trace b b b trace subtract b trace b b note false equivalence output fast divide subtract operation formatted yet slow form part evaluation process problematic false equivalence change evaluation example try work symbolically subtract divide evaluated expression use result faster form replaced slower one expr divide x subtract x fn function x evaluate expr fn fullform function x x x function list x plus x time x power time note also divide subtract stripped converting form front end menu cell convert even without evaluation operator may lost therefore question operation universally treated equivalent clearly programmatically equivalent mathematica include optimization case numeric division subtraction eliminate additional evaluation step practical way add global optimization automatically convert operation fast form numeric evaluation failing best way work symbolically actual division subtraction operator sake performance internally representing division subtraction multiplication addition really mathematically valid design option instead first class operator recognized equivalent time plus purpose pattern matching converted time plus introduces additional time power operation