overview function act like interpolation sparse n dimensional data using simple implementation rbf interpolation method want function return compiled function run fast get work much slower think code clear rbfinterpolation option rbfinterpolation distancefunction norm radialbasisfunction sqrt radialscale automatic debug false compile false rbfinterpolation cptab opts optionspattern rbfinterpolation module ro xpts fundata disfun rbf x xpts cptab fundata cptab disfun optionvalue distancefunction rbf optionvalue radialbasisfunction table disfun xpts xpts j length xpts j length xpts optionvalue radialscale automatic ro median flatten table drop length numberq optionvalue radialscale ro optionvalue radialscale true print cannot understand radialscale optionvalue radialscale going make ro median flatten table drop length optionvalue debug print ro ro optionvalue debug print distance function first two point print point xpts print point xpts print distance disfun xpts xpts print radial basis function distance rbf disfun xpts xpts ro map rbf ro optionvalue debug print element inverse fundata optionvalue debug print first element optionvalue compile return xi x xptsi xpts roi ro compile xi real sum rbf disfun xi xptsi roi length return function x sum rbf disfun x xpts ro length function interest question think key return compiled function return xi x xptsi xpts roi ro compile xi real sum rbf disfun xi xptsi roi length testing function following code used run test timing returned function first make truth function sample interpolate clear truth truth x product sin x length x make data n cpts randomreal n cptab truth cpts xpts cptab fundata cptab test speed returned function print normal function timing funfun rbfinterpolation cptab compile false timing funfun xpts print compile function timing funfunc rbfinterpolation cptab compile true timing funfunc xpts print normal function funfun xpts print complie function funfunc xpts print real right answer fundata get result like normal function null null compile function null null normal function complie function real right answer see work faster make faster simpler test faster code n randomreal n f table n randomreal n clear nfun nfun sum co f n nfunc compile real evaluate sum co f n clear makenfunc makenfunc f module n n length return compile real evaluate sum co f n nfuncr makenfunc f run code npts data randomreal npts timing nfun data timing nfunc data timing nfuncr data output null null null simple case compiled code time faster function compiled inline nfunc function returned makenfunc nfuncr question problem original function