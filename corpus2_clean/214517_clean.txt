process message variety service one message touch probably num service done specific io related right combination worst case xml contract serialization best case memory msmq performance nature message mean serialized end num num kilobyte process num million message per week persistent message msmq slow u grows feeling pressure msmq memory mapped file server 16gb memory usage growing queueing performance also suffers memory usage high machine start swapping already msmq self cleanup behavior feel like part wrong tried using ravendb persist message queueing identifier performance slow num message per minute best sure result using development version definitely need higher throughput num concept worked well theory performance task usage pattern one service acting router read service attach information based 3rd party hook forward back router object touched num num time although num forced around system awhile 3rd party respond appropriately service right account appropriate sleeping behavior utilize priority field message reason question ideal stack message passing discrete lan ed machine c window environment would normally start binaryformatter instead xml serialization rabbit hole better way offload serialization document store hence question num nature business mean sooner process message money make empirically proven processing message later week mean less likely make money performance num per minute sound plenty fast really need number upwards 10k minute giving number message per week mean whole week process message edit additional information based comment add clarification sure serialization bottleneck benchmarked application serialization show heat graph responsible maybe num num service cpu utilization mostly concerned permanence message potential misuse msmq using non transactional non persistent message keep queueing performance would really like least persistent message survive reboot adding ram stopgap measure machine already gone 4gb 16gb ram getting harder harder take continue adding star routing pattern application half time popped pushed queue change lends imo storing kind key store elsewhere simply passing message identifier star routing pattern integral application change application every piece along way operates asynchronously polling fashion want centralize retry behavior one place application logic written c object immutable pocos target deployment environment window server num allowed stand additional machine particular piece software supported linux goal maintain current throughput reducing memory footprint increasing fault tolerance minimum outlay capital