responsible software project year desktop application mostly event driven started scratch beginning project made strong choice architecture software architecture introduced module represents functionnal part application well defined responsability thing module expose world set communication handle num type communication handle emitter emit message handler receive message r q make query represented message q receive response message r r q receive query represented message q send back response message r beginning execution application instanciate module compose application set connection emitter linked one many handler serve one many type two endpoint must compatible course class used represent message immutable defined one every module depends nothing make module decoupled module know nothing module outside world clear also dynamic aspect application dataflow defined unique place also super easy test module provide fake emitter plug module handler thought architecture first big software project work made design felt like right thing project working fine total num module working together one co worker joined project recently asked common architecture design answer since really familiar real world software architecture seems design close concept actor find language scala maybe erlang however actor provide decoupling provided design actor additional capability actor message queue thread execution kind also think design somewhat related dependency injection pattern sense dependency module defined central place however pattern deal interface message define module communicate notification request response question finally know software project architecture similar mine edit doc brown suggests design similar flow design cannot agree one one comparision two design module thing functionnal unit emitter handler pin pin except mine design communication handle identified type connection module equivalent wire similar dependency relation however say explicit dependency caller callee design decoupled define concept board interesting think borrow idea define concept configuration need configuring module program define configuration handler module solution synchronous concept map join feel need well found doc