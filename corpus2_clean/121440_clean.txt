background working ongoing c project c programmer primarily c programmer assigned basically easy refactoring task mess huge project customer demanded frequent release new feature bug fix developer forced take brute force approach coding highly unmaintainable developer agree debate whether right refactoring wondering right way refactored seems complex task simple example problem six class b c e f class six implementation similar basically first written slightly different version required implemented b copy paste modification another slightly different version required c written six implementation common different line common simple example implementation s1 s2 s3 s4 s5 b s1 s3 s4 s5 c s1 s3 s4 sn group exact statement make common created another moved common using parameter control group statement executed base param s1 param s2 s2 s3 s4 param s5 s5 inherits base param s2 param s5 param b b inherits base param s2 param s5 param c c inherits base param s2 param s5 param note example employ three class oversimplified statement practice look complex parameter checking many statement also real several looking function though implementation sharing common function looking exists two problem bothering change six may future feature needed tested already complex get complex time right way