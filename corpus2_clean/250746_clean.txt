inherited legacy web application many year make use oriented principle even though language would permit unit test sort test suite automated generally ignores various general best practice making hard read maintain split working including business rule across web application database view stored procedure even externalized outside application team control often read write directly database documentation including created documented technical functional spec speak either changed rule many time fast one truly know supposed work anymore rule stacked missing feature specific case discovered daily basis happens business critical application company still constantly evolving refactoring almost always come suggestion adding unit test make sure break anything even know thing supposed work one else tell sure case need go back square num slowly iteratively new feature requested ask spec focused modified section refactor way deal situation question focus mostly lack spec opposition refactor safety rule creating unit test ensure rule respected throughout refactoring said bit situation beyond lack spec best programming structure found far tend self contained call many global variable even local variable erroneously set global variable risking unexpected behavior get feeling first step might refactor even allow unit testing issue mentioned apply whole application database procedure even sister application everything intermingled together almost never interface still possible find tends duplicated various place happens business rule meaning may get different result depending application call feature obvious maintenance complexity risk