project trying build kind lambda storm based architecture component would responsible indexing site usage event expect quite massive random load solution real time processing message seems fine parallel speed layer want back message raw form coming queue amazon s3 since writing file per message obviously question need somehow buffer aggregate message posting s3 problem begin two concurrent approach none seems perfect num used redis buffer basically message coming queue rabbitmq buffered redis preconfigured batch size say num reached buffer flushed stored s3 whole message cycle transactional message stored redis acknowledged queue mean redis dy whole batch get lost acceptable think redis cluster make thing bullet proof seem like going wrong direction num second approach would use trident topology changing queue kafka make thing looking less straightforward message processing cycle transactional however one annoying keyword keep beeing repeated trident documentation small batch trident assumes small batch example batch message num second chunk much little u sure batch small really required maybe first approach better one better maybe would come third idea