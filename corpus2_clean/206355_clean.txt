would like know overall impact resource planning software project requirement design project driven automated acceptance test unit test contrast traditional approach software development enter image description experience overall effect resource requirement completing software project tdd opposed traditional development methodology seems self evident quality would increase amount uncertainty decrease testing done earlier requiring test front seems like would require developer hour accomplish much development effort increase actually decrease due front elimination bug much effort required customer change way relate project especially used big design front number hour required customer overall increase actually decrease would imagine time estimate would vague iterative tdd process beginning tdd project since software development plan point say num project confidence increase enough less stable time money estimate eventually provided customer note looking subjective opinion theory please speculate looking real world experience tdd