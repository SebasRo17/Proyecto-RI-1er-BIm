building application us complex rich relationship order allow u make easily extend model decided use graph database neo4j cypher exploring use cqrs based application architecture without event sourcing allow u fully utilize flexibility graph via varied command flexible almost ad hoc read side currently wrestling structure persistence part command side way retain flexibility graph lose much structure application e g via repetition cypher query large overly verbose interface considered option num use repository aggregate persisted either via reflection accessors benefit interface simple downside repository could become complex aggregate including many relationship well maintained net orms neo4j another downside potential load lot unnecessary aggregate fluff domain simple command necessarily need problem applies even eventually steer away cqrs num specialist repository expose constrained command e g invoked command handler benefit unnecessary querying downside potentially large clumsy repository interface maybe nicer way break num use event event sourcing use event handler explicitly execute graph db command good thing ever execute db command need dal becomes dispersed coupled application thus potentially harder maintain middle ground alternative pattern even simplification considered