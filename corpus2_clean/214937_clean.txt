recently interview dev team company team us agile tdd exercise implement video rental store generates statement calc total rental fee video new release child etc customer existing use like statement generate statement calc fee big switch statement sits use enum determine calc rental fee customer hold list movie base derived movie new child action etc originally compile owner assumed hit bus outlined improvement model better responsibility use strategy pattern replace switch statement weave config team say waste time requirement uat test suite work guideline go architecture decision underlying story get pricing feature saying anything discussion focused time spent refactor switch statement understanding agile methodology mean zero design upfront smell avoided beginning also unit uat test suite detect smell otherwise sonar findbugs exist want ask num thing called agile design agile methodology like agile documentation num define agile design upfront know enough enough understanding ballpark architecture contract among component defined starting project detail right num anyone explain team really looking kind setup design aspect agile aspect num implement minimum viable product concept agile process real world project must feel embarrassed mvp