curious solution problem assume going build online store better scale part architecture broken subsystem typical scenario would involve application server something similar request client come flow login would something like request come authenticate user get last product user bought calculate appropriate ad deliver generated page client less efficient query subsystem happen serial synchronous way would better make call parallel example one could use node j server call subsystem asynchronously callback something like reduce called aggregate collected sends generated page back client system seems efficient another step would include decoupling introduces message queue one side application server get request serf reply hand component communicating message queue flow would following incoming request message user session key num want authentication session key user according message message taken user service produce answer user session key num john doe new york message published service application react publish result problem route result back application server wait unknown amount time know collect result request one solution could using memory database e g redis service could write result redis constantly polled application server waiting result deliver solution solution