lot information tool technique improving legacy codebases come across successful real world case study advice micro level helpful convince many people lack evidence help macro level looking specifically incremental improvement proven success real world updating large legacy codebase meet today quality standard complete rewrite large greater legacy automated test poor quality high complexity high coupling high escaped defect automated test easier update maintenance high quality lowered complexity decoupled escaped defect kind incremental step proven real world update large legacy codebase successfully meet quality standard without going total rewrite possible include example company case study large legacy project gone successful quality improvement process answer back