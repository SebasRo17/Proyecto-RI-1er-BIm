exercise follows polynomial given tuple coefficient power determined index e g num num num mean num num x num x num write compute given x since functional programming lately wrote def poly x num power num reduce lambda pair pair x pair power map lambda x x poly range len poly num deem unreadable wrote def poly x power num result num reduce lambda power num result x power poly num num result least unreadable wrote def poly x poly num x evaluate poly num x len poly num else num might less efficient edit wrong since us many multiplication instead exponentiation principle care measurement edit silly measuring would pointed misconception still readable arguably iterative solution def poly x result num range num len poly result poly x result pure functional solution readable imperative close efficiency admittedly representation change would help given exercise haskell lisp aswell