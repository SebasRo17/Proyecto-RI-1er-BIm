let begin first apologizing length post really wanted convey much detail front take time going back forth comment designing application following ddd approach wondering guidance follow determine whether aggregate root contain another ar left separate free standing ar take case simple time clock application allows employee clock day ui allows enter employee id pin validated current state employee retrieved employee currently clocked ui display clock button conversely clocked button read clock action taken button corresponds state employee well application web client call back end server exposed via restful service interface first pas creating intuitive readable url resulted following two endpoint note used employee id pin validated token representing user passed header manager mode allows manager supervisor clock another employee sake discussion trying keep simple server applicationservice provides api initial idea clockin something like public clockin id var employee employeerepository findbyid id employee throw someexception employee clockin employeerepository save look pretty straight forward realize employee time card information actually maintained list transaction mean time call clockin clockout directly changing state employee instead adding new entry employee timesheet current state employee clocked derived recent entry timesheet go shown repository recognize persistable property employee changed new entry added employee timesheet perform insert store hand ultimate question post timesheet seems like aggregate root well identity employee id period could easily implement logic timesheet clockin employeeid find debating merit two approach stated opening paragraph wonder criterion evaluating determine approach suited problem