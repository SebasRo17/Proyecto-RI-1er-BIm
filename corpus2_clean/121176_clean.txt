trying move bloated service layer domain layer using ddd approach currently lot business logic service spread place benefit inheritance central domain focus work trade trade know price estimate risk validate etc replace conditionals polymorphism eg price one way price another however worried bloat trade really charge processing size going increase exponentially feature added choice num put processing logic trade processing logic polymorphic based trade trade multiple responsibilites pricing risk etc large num put processing logic longer polymorphic trade inheritance tree class smaller easier test would suggested approach