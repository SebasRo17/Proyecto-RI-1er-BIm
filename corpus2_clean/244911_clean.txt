heard conflicting information different source really sure one believe post understand ask correction let say want use 2d matrix three way least know num matrix matrix malloc num sizeof num num matrix malloc num num num num sizeof datasize num num matrix matrix malloc datasize pdata matrix num num pdata matrix pdata num instead accessing matrix j would access matrix num j matrix malloc num num term memory usage understanding num efficient num next num least efficient reason num one pointer one allocation therefore minimal overhead num one allocation num pointer mean num sizeof overhead num num allocation num pointer causing overhead option term performance understanding num efficient num next num least efficient reason num one memory access needed multiplication addition opposed two addition case pointer pointer memory access slow enough matter num need two memory access get appropriate two addition performed get correct pointer original memory location get correct wherever point multiplication slower addition required however modern cpu multiplication faster memory access point moot num issue num memory contiguous cause cache miss extra page table lookup making least efficient lot first foremost correct second option num missing would even efficient