question concern implementation algorithm proposed rahul narain former question mine migrated math stackexchange contains single point set p noredirect detail algorithm like implement let r mathbf q min n mathbf q mathbf p largest radius circle centered coordinate q containing point p thus satisfying requirement mathbf q mathbf p le r mathbf q containing point set p p p wish find q r mathbf q every point p p rahul narain proposed following step construct voronoi diagram mathcal v mathbf p mathbf p ldots mathbf p n let c cell mathcal v corresponding p evaluate r mathbf q vertex c construct voronoi diagram mathcal v mathbf p ldots mathbf p n exist efficient algorithm removing single point p previously computed voronoi diagram mathcal v evaluate r mathbf q vertex mathcal v lie inside c choose point step largest r mathbf q desired circle center q radius r mathbf q idea definition r mathbf q center circle containing p p going closer p point set p thus know q going fall voronoi cell convex polygon p since definition cell c contains set point closer p point p rahul narain argues two possibility either maximum lie interior c lie boundary former case must unconstrained local maximum min n mathbf q mathbf p maximum vertex voronoi diagram mathbf p ldots mathbf p n latter case q lie edge always increase r mathbf q moving along edge maximum must occur vertex c word q point p inside c going point far away possible point p excluding p e vertex voronoi diagram p p falling inside convex polygon c move away vertex strictly moving closer least one point p p q lie edge c since c polygon step along edge strictly move u closer p away q must lie vertex c argument make sense know q must lie vertex c vertex inside c voronoi diagram mathcal v point mathbf p ldots mathbf p n missing point p thus far implementation let first generate random coordinate numpoints lowerboundpointrange upperboundpointrange randpoints randomreal lowerboundpointrange upperboundpointrange numpoints plot voronoi diagram write get computationalgeometry diagramplot randpoints return set vertex vdvertices voronoi diagram mathcal v write voronoidiagram randpoints return something like set numpoints ray ray ray understand first set vertex voronoi cell mathcal v list ray defining edge voronoi cell finally vertex adjacency list want vertex select command vdvertices select voronoidiagram randpoints head list term solving problem determining vertex mathcal v fall voronoi cell c point p use rm rf answer question check point polygon point one use internal function graphic mesh pointwindingnumber check point polygon inpolyq poly pt graphic mesh pointwindingnumber poly pt example inpolyq true inpolyq false moment stuck knowing thing like efficiently compute voronoi diagram mathcal v missing point voronoi diagram mathcal v rahul narain suggests also efficiently find polytope vertex c given p general restrict search vertex mathcal v fall c also ought better way compute r mathbf q min n mathbf q mathbf p scanning p p p help completing implementation would much appreciated