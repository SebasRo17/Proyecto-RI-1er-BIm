time past wanted store would seldom change used place access database possible practical desirable small example would storing list country could something like public country public get set public get set public static public static list country country new list country new country au australia new country se sweden public static country country single c c got away past set relatively small object pretty simple working something complex object num num property property dictionary around num object total change rarely change really even important rolling next release version perfectly fine planning use t4 erb templating solution turn source something stored statically assembly seems option num store xml compile xml file assembly resource load needed store loaded dictionary repeat use performance num generate kind static object initialized startup pretty sure understand performance implication option num least hunch stellar performance option num know know enough internals net framework know best way actually store c best way initialize poked around using net reflector see system globalization cultureinfo work since actually similar workflow want unfortunately trail ended extern hint initializing static property example way go would better create object demand cache like private static readonly dictionary country cache new dictionary country public static country cache containskey cache cache internal static country au new country au australia se new country se sweden throw new advantage creating static member use linq whatever else look object query want though suspect startup performance penalty hoping someone experience share opinion