question may seems scientific think common problem seasoned developer programmer hopefully advice avoid problem mention title btw describe bellow real problem trying proactively solve io project want avoid cost finite state machine mean ui button several session state relevant ui ui represents value partly displayed ui receive handle external trigger represented callback sensor made state diagram better map relevant scenario desirable ui application slowly implement app start behave like however confident robust enough doubt come watching thinking implementation process go confident everything covered enough make brute test ui quickly realized still gap behavior patched however component depends behaves based component certain user external source chain event state change etc several component behave like trigger received trigger sender analyzed something message state change based analysis problem completely component database item session state button state could changed influenced deleted otherwise modified outside scope event chain desirable scenario phone crash battery empty phone turn suddenly introduce situation system system potentially could able recover see althought people realize problem many competitor apps apple store customer write thing like added three document going cannot open even see recorded video everyday recording log video cannot turn caption button caption work shortened example customer often describe detail description behavior described assume particular app fsm breakdown ultimate question avoid protect system blocking edit talking context one viewcontroller view phone mean one part application understand mvc pattern separate module distinct functionality everything describe relevant one canvas ui