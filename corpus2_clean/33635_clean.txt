trying set connection visual studio mathematica window system found several source information wolfram website get entirely lost info deal calling c function within mathematica would like way round quite lot functionality c code call mathematica make integral calculation good step step approach set connection file include project setting need changed anyone complete example piece code give insight general approach would great help followed standard instruction add lib bin include visual studio directory specifically also wondering whether case also need make tm file empty example look clear approached linux mac perspective hope someone could bring guidance taking account suggestion developed following program seems problem retrieving package put entire code program first sends variable mathematica kernel perform integral calculation interested final payoff calculated mathematica debugging seems program get stuck removal package loop sending integral function problem function guess performs calculation perfectly use mathematica include stdio h include stdlib h include mathlink h static void init openlink int argc char argv static void error mlink lp mlenv ep mlenv mlink lp mlink int main int argc char argv int pkt float payoff init openlink argc argv send different parameter final function interest mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp mue mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp mui mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp lambdae mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp lambdai mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp sigmap mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp betae mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp betai mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp gammae mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp gammai mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp mlputreal lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp experience mlputinteger lp mlendpacket lp mlputfunction lp enterexpressionpacket mlputfunction lp setdelayed mlputstring lp experience mlputinteger lp mlendpacket lp mlputfunction lp entertextpacket mlputstring lp expectedpayoff bi b b nintegrate pdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x cdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x x nintegrate x pdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x cdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x nintegrate pdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x cdf normaldistribution betae exp mue experience betai exp mui b betae exp mue experience betai exp mui b sqrt sigmap gammae exp lambdae experience gammai exp lambdai x x x betae exp mue experience betai exp mui mlendpacket lp need information retrieved package try get rid everything debugging loop pause debugging get screen source available pkt mlnextpacket lp pkt pkt returnpkt mlnewpacket lp mlerror lp error lp mlnewpacket lp afterwards want evaluate function result need printed screen output interested mlputfunction lp enterexpressionpacket mlputfunction lp expectedpayoff bi mlputinteger lp mlputinteger lp mlputinteger lp mlputinteger lp mlendpacket lp pkt mlnextpacket lp pkt pkt returnpkt mlnewpacket lp mlerror lp error lp mlgetreal lp payoff printf payoff f payoff mlputfunction lp exit return rest code retrieved example static void error mlink lp mlerror lp fprintf stderr error detected mathlink n mlerrormessage lp else fprintf stderr error detected program n exit static void deinit void ep mldeinitialize ep static void closelink void lp mlclose lp static void init openlink int argc char argv mlinterface int err else long err endif mlinterface ep mlinitialize mlparameterspointer ep mlenv exit atexit deinit mlinterface lp mlopenargv ep argv argv argc err else lp mlopenargcargv ep argc argv err endif lp mlink exit atexit closelink