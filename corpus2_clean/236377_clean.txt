writing static library c c personal project header became rather large thought splitting header would good idea right header look like hpp namespace impl implementation detail enclosed namespace impl forward declaration class declared needed declaration free function declaration specialization declaration specialization free declaration declaration free function declaration declaration free function declaration definition free function definition specialization definition specialization free definition definition free function definition definition free function definition logically structurally related e g iterator nested within derived etc classx free function recommended non member function improve encapsulation definition header template becoming crowded difficult navigate thought splitting across multiple header would help however know right think structure could look like hpp forward declaration needed small class structs definition declaration include header hpp declaration free function declaration inl definition free function definition specialization question reasonable want split header functionality header num line long foresee even longer one leave split scheme ok split free function related solution make maintainable hide header sense obfuscating making unavailable avoid exposing header user see e g gui autocomplete include aware hpp seeing header without clear behind scene header produce unnecessary confusion one idea add prefix like underscore put impl folder hiding class namespace hide split behind header use