would like work good easy maintain follows best practice design pattern however reality far ideal content site like daily wtf made sometimes maintain put mildly subpar quality problem working course working bad difficult technical standpoint well emotional problem say fix tiny bug poorly designed application tend focus bad overall application instead fix simple bug think one stupid write treat work punishment rather challenge work productivity change mindset focus task instead contemplating bad codebase deal question assume obvious solution e fixing bad possible applicable work big fixing take much effort soon phased written bos etc clarify want use overall quality justify assume overall quality wide known concern happen task higher priority let consider following example h1 sql select title news id id h1 two problem num presentation layer mixed num vulnerable sql injection num hurt maintainability codebase cause bug feature loss moreover fixing example moving proper mvc architecture requires significant effort num hand may lead loss trivial ro repair escaping id question provided assigned fix num focus task instead wishing guy writing ruby rail apps happy