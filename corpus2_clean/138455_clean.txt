trying design api external application foresight change easy little thought front make life easier later trying establish scheme support future change remaining backward compatible leaving prior version handler place primary concern article pattern followed defined endpoint given product company base scheme given base url template devised service reside api along auth non rest based endpoint doc therefore establish base endpoint follows service endpoint endpoint concern post get delete primary objective article concern action endpoint broken namespaces action action must also present way support fundamental change required parameter taking hypothetical chat service registered user send message may following endpoint add version support future api change may breaking could either add version signature api message given send endpoint could following v1 first question recommended place version identifier managing controller established need support prior version need thus somehow handle new version may deprecate time assuming writing endpoint could manage package package com product message v1 public interface send message list advantage separated namespaces breaking change would mean new copy service endpoint detriment need copied bug fix wished applied new prior version need applied tested copy another approach create handler endpoint package com product message public public send version version send assume list sender order newest oldest private messagesender version messagesender sender version isolates versioning endpoint make bug fix back port compatible case needing applied mean need fair bit work individual endpoint support second question best way design rest service support prior version