work requirement gathering analysis design business solution addition coding multiple software system package developer expected work instead assigned make change num system system developer ensure captured necessary requirement resolved conflicting requirement example scenario bob developer asked modify problem ticket system hypothetical utility repair business contract local utility company provide service old system provides mechanism external customer create ticket indicating problem utility service particular address scheduling system invoicing system dependent bob new project modify ticket placement system allow multiple address entered landlord end customer multiple property invoicing system bill per ticket modified bill per address practice would help bob discover invoicing system need changed well might bob discover system company might need changed order support new change business model let say documented specification system involved many system bob familiar end example often scenario design review management place ultimate responsibility defect business process software process developer design work organization seem better others manage detect solve conflicting incomplete requirement across software system currently lot tribal knowledge developer understand entire business software chain seems highly ineffective lead problem requirement level