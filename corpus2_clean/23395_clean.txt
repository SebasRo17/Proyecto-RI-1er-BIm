threading automatically listable function requires argument expression length one atomic nested list threading continue level provided length level example work dimension two list first n level array array array array array array whereas work outer dimension match neq array array thread tdlen object unequal length cannot combined obvious interpretation code map addition outer level first argument e add second x array ten x array first argument easily visualised example adding offset list coordinate coords offset one way explicity map addition coordinate list result offset coords coordinate list long efficient approach using transpose might preferred result transpose transpose coords offset neither particularly readable though would nice smart threading function would identify second dimension coords length match first dimension offset also length allowing code written readably result smartthread coords offset write smartthread function take expression form func b match various dimension b kind flexible threading