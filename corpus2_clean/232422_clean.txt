asp net mvc application try really hard separate concern layer use ddd nevertheless seems avoid least business logic dal instance named object business requirement must unique key request create new named service check whether exists repository factory creates new repository persists use ef repository stored procedure query object problem race condition two request come concurrently unlikely possible request want create new case check come negative two object would created far handle constrains sql database something like happens exception thrown repository approach simply wrong since requirement strictly business requirement bubble persistence layer change requirement e g name become case sensitive constrain would also changed etc implement scenario correctly thanks