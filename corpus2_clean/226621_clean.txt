recently come across requirement related release sdlc process seems little ordinary writing inquire whether practice common whether deployment process changed eliminate burdensome constraint work small software shop make enterprise software household handful yet large customer multi server system management application running linux db backend web front end lot async messaging roll upgrade approx every num num month customer deploy using deb rpm depending o package provide customer deploy app cluster environment server instance pointing multiple database shard late working legacy refactoring significantly changed db schema make long story short reorganized store split table multiple new table reduced exposure race condition made corresponding change getting ready submit change informed system architect due way customer deploy upgrade server database separately one one take day week server must stay cannot tightly coupled change upgrade must reverse compatible database within one release cycle period iow cannot remove field database table customer configs server point database shard must enable server simultaneously work one shard upgraded along another befuddled troubled requirement say least seemed indicative problem way customer like deploy change taking long time well configuration necessitates u provide cumbersome dual functionality parallel particular case told need keep refactored field old table legacy read writing new table retrieved seems unnecessarily complex say least question follows num requirement unusual general configuration described worked around six month never worked product company always worked site made deployed apps like web site etc scenario common software product company num phenomenon necessary reverse db compatibility indicative problem way customer like deploy software knowledge apply upgrade manually server server database database maintaining production using something like puppet chef deploy upgrade much timeframe num approach presenting need change present developer inconvenience say least provide functionality