num turing award speech j listed reason complex system inevitably fail conclusion give suggestion decreasing probability failure list one idea follows u se constrained language design synthesis powerful methodology allowing programmer designer express irrelevant idea domain possible error becomes far limited mean constrained language moment considered constraint programming however constraint programming restricting program solution space tool empowers programmer feature referring seems something actually restricts programmer least make inclined write terser second thought referring conservative programming language received turing award work done 1960s 1970s understanding dealt lot punch card never seen punch card certainly know program one might guess punch card programming extremely liberal suspect notion checking static analysis forth simply exist perhaps referring idea language restrict developer making dumb mistake seem case either safety checking modeling nothing terseness seems talking mentiones allowing irrelevant idea