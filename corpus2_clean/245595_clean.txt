example c num p num p num c printf ok n else printf nop n gcc movl num eax eax hold c movl num edx edx hold p movl eax ecx tmp ecx c cl edx edx p c movl edx eax eax p shifted right c num eax eax p shifted right c num eax eax test p num jump see gcc reason converted p c p num p num else something fishy going missing something kinda made operation backwards although bracket around num c done separately p correct someone explain gcc sort optimization optimization enabled compiled doubt done assembly