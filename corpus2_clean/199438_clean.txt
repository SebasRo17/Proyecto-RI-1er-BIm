team adopted agile practice help u develop deliver software client adopted practice needed problem challenge identified rather jumping wholesale agile camp big one u maintaining product sprint backlog developing delivering new version one month sprint estimate item sprint backlog guesstimate deliver within sprint however tracking progress well difficult know whether target next step evolution appears improve progress tracking ability looking using burn chart aid u however sprint overlap significantly due established procedure software promotion schedule following established event num development begin sprint 1 continues freeze said test software throughout phase development test group num freeze stop development sprint 1 functionality small window finish fix issue next event acceptance promotion 1 addition development begin sprint 2 num acceptance promotion num promotes application client acceptance environment tested test group issue identified testing may fixed small window acceptance promotion 2 meanwhile sprint 2 development continues num acceptance promotion num promotes application one last time client acceptance environment validate issue identified acceptance promotion 1 sprint 2 development continues num production promotion promotes application production tested test group sprint 1 officially completed truly done visual seen average calendar time development begin freeze four week average time freeze production promotion two week overlapping sprint larger resolution version schedule event within control client policy dictate application software promoted test acceptance production application may modified beyond second fix window perform promotion accomplished via 3rd party client site due policy addition task like update happen outside schedule update follow instance schema dependency others bug update occur outside schedule due fewer restriction may modified client environment application restricted specific milestone configuration exempt technically may modified needed considering tightening update follow schedule given scenario overlapping sprint several question num proper way create handle burn chart burn development testing hour previous sprint working also working towards next one think num concurrent burn chart sprint num assuming two burn chart best display cumulative burn sprint overlap understand actual workload progress best set u success num item found sprint num freeze need addressed sprint num sprint num backlog burn assume critical item need bump less critical sprint num item make room incomplete sprint num item non critical item bumped sprint num later num would proper start end date burn chart seems best option would reflect reality sprint num truly done including testing update production promotion final testing start date would development begin end date production promotion despite overlap num else missing else could bite u