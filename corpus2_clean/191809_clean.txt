scripting engine published open source project sitting harddrive waiting year engine course complete way work simple script javascript ish feel wish abide ecma spec anything big thing working improving quality leaving language working regression test prove formal grammar work like num preprocess tokenize point remove whitespace cut everything token basically structure containing rough hint token number identifier operation etc debugging info number num take list token actually parses executes num take subset token list build specific tree operation value execute operation collapse tree single engine goal portable work everywhere net self contained far work terrible pretty sure going wrong way wondering formal grammar everything go might help benefit heard formal grammar unambiguous specification language easier maintain change traditional bigger community support disadvantage language difficult reduce formal grammar ie perl learning curve someone know ie generally rely tool yacc antlr introduce another step workflow add dependency like avoid although project net could equally apply implementing language use formal grammar someone expand pro con side