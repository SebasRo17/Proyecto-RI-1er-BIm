intermediate programmer year professional experience halfway master degree learning program often heard two piece seemingly contradictory advice first piece advice get something working quickly see work either prototyping informal testing improve version see work improve repeat cycle done sometimes called spiral development phrased release early release often second piece advice really think project ever writing success method would say agree philosophy starting tackle much complex project idea complete like distributed application performance driven graphic programming go project start coding something learn platform method language architecture go hold coding ton research reading even open ide reconcile contradictory piece programming advice