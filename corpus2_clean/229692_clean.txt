surely remember norton commander application similar sometimes displayed separate decoupled view building web application follows principle amount big fetched displayed entirely page potentially overlapping subset need displayed separate view architecture look like application creates presenter pass instance presenter turn create respective model view passed model communication presenter done via scenario left side awareness right side yet model possess information without need double round trip server achieve use model implement model fetch asks storage previously requested storage simply acting like memory cache come actual question context design structure network wise efficient storage service following use case num left model request get file limit num num right model request get file limit num actually need last num attempted approach store request made model every additional request best figure request diff diff request e g get file offset num limit num store fetched item file id1 item1 unfortunately step help relation url id model request next set value never know actually memory cache course could use per url memory caching strategy would duplicate entry cache something like avoid thought feel like reinventing wheel better simpler commonly accepted perhaps architecture flawed