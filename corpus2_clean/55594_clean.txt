question incorporating c code via mathlink simulation mathematica question involves execution efficiency c code different machine example window laptop see via task manager mathlink executable code compiled account roughly cpu usage mathematica kernel make difference expect since calculation intensive portion simulation c code however running exact code various linux machine see via top command cpu usage mathlink executable ranging little contribution due mathematica kernel competing process making demand cpu question upsetting want squeeze every drop cpu power available correct thinking program sense wasting cpu cycle way make mathlink executable approach cpu usage possible solution hope internet research mathlink program speed primarily turned discussion slow passing data kernel mathlink program suppose possible transfer data megabyte mathlink program call bottleneck could linux computer efficient performing actual computation cannot pas data fast enough full cpu usage evidence solution come following observation last column comparing rough estimate quickly many second computation finish o mma version cpu usage computation speed window ghz fast window linux ghz fast window linux ghz fast window even kind data passing bottlneck faster computer still finish computation faster real time detail every machine running mathematica script file install appropriate mathlink executable depending machine architecture linux slowdown probably due different code one relevant point may mathematica version window machine cpu linux machine cpu compilation detail may relevant know detail compilation mathlink executable linux responsible slowdown window linux compiling c code template file using mprep g cannot get mcc work window using mprep exe function tm function tm cpp g path mathlink h folder function cpp function tm cpp path libml lm lpthread mwindows lstdc mathlinkexecutable exe different linux machine forced use either bit bit version mathlink library libml libml respectively mprep function tm function tm cpp g path mathlink h folder function cpp function tm cpp path correct libml lm lpthread lrt mathlinkexecutable bin