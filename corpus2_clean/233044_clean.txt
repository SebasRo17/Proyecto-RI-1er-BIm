two difference design pattern factory abstract factory difference num factory mainly based inheritance way us subclass create object object created depend subclass used abstract factory based inheritance way also composition client owns abstract factory instance hold concrete factory difference num factory creates one abstract factory creates family related object difference num understand although trouble understanding anyone would prefer subclass need factory instead giving factory using composition unless already subclass difference num understand factory create family product instead one product certainly product family product share common interface said produce one product additionally factory inside concrete subclass abstract factory creates different product using different method called client concrete factory factory pattern different factory method different product