familiar rdf owl engine across philosophy everything specified interface possible mean resource statement property even rdf model etc contrary might first think interface instead concrete class lead use factory quite often since instantiate property model must something else factory design pattern question reasoning behind using pattern opposed traditional hierarchy system often perfectly viable use either one example want memory backed model instead database backed model could instantiate class need ask factory give one aside process writing library manipulating exported website form rdf xml document write library many option defining relationship present nice logical system tree made pearl either page reference alias root pearl question come trying figure adopt philosophy library us disregard pick design philosophy stick