told better place ask tldr anyone tested dual pivot quicksort performance expensive swap element seems case massively underperform compared standard quicksort yes know cycle sort original expensive modify could use index pointer inside sort swap correct place however first completely question quadratic average case good enough second unsuitable implementation general case sort imposes performance memory consumption overhead even case better faster work original backstory inspired recent question stack overflow decided go implement non trivial version given sort introsort quicksort num way partition median num pivot selection small block insertion sort etc research also came upon dual pivot quicksort current implementation quicksort standard library generally claim always least good standard quicksort empirical testing seemed support reason current implementation however seems stl implementation us dual pivot quicksort quicksort phase introsort made wonder research found paper say dual pivot quicksort performs average num less comparison performs significantly swap approximately num obviously since primitive reference type swapping always cheap even us sort primitive stable also seems least part advantage dual pivot quicksort improved cache behaviour divide smaller subarray fit cache faster wanted see whether someone already tested standard quicksort v dual pivot quicksort element expensive swap number possibly source lying around whether test