past week attempting write proof concept project using dependency injection service layer unit work pattern repository looking design something easily consumed application window desktop application cli application asp net mvc application even io application running mono please bear mind proof concept written unit work unit work factory nhibernate entity framework num framework net generic repository one repository per implementation taking respective unit work factory constructor parameter need grab current unit work since implementation contains stuff necessary framework accomplished swap implementation repository unit work factory nhibernate entity framework work good except implemented real application yet unit test problem challenge facing application desktop cli asp net mvc io android whatever define unit work way desktop application afaik unit work per screen web application unit work per request etc know would share single unit work repository service see need michael right want logic reside service layer service layer decides unit work commit idea whoever call service know pas know expect result something go wrong service log per application basis dry would violated right seems implement totally separated design amount got reuse would much amount write order implement application would end likely leak ioc container application totally crazy even attempting edit actual problem facing providing service layer repository instance unit work matter application used