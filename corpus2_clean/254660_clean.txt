app many appointment booked activity activity many price package price quantity showing cart need work combination package use get user best price allow appointment accounted always quantity num package common pattern apply got realised hard going cost num appointment count activity package order quantity asc package package quantity modulo package quantity num cost cost package price package quantity package quantity end end num raise package cover number child end ruby rail problem see wrote num appointment package num num use num package last num fit num package fail edit detail structure activity many package package quantity integer price float package defines price bundle appointment activity example sailing lesson num num num num user order num sailing lesson app need work use two quantity num package num user order num sailing lesson app work need num quantity num package one quantity num package etc