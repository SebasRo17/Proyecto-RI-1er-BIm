currently learning memcached redis trying figure could use kind technology work understand mostly cache common many user get modified every second architecture relational model model combined fairly complex right management system keep simple object nested different type several parent given user given access subset declaration user read object parent b type b thing get complex group make hard predict seen given user also fail see come good cache invalidation rule lot event may affect user seeing access rule modification parent modified hierarchy user added removed group etc feel need create per user cache low expected duration look useful context still hope find decent caching strategy making incorrect assumption