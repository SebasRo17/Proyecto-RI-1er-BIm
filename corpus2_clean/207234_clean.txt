work engineering consultancy combination industrial design mechanic electronics software nature perhaps simply history overall development philosophy waterfall joined surprised agile would say industry standard barely heard whilst remain skeptical agile recognize benefit developer client keen promote use seems clear build hardware agile fashion time consuming expensive refactor physical thing mean moving towards software agile hardware waterfall project manager struggling make two work together worse becomes difficult faced providing client definitive cost project agile uber plan velocity projection require project running sprint passed meaningful mean tend estimate contingency driving price go seems either sell agile explicitly client get buy receiving new software iteration per sprint able add backlog prioritize next work persuade bullshit way working waterfall unrealistic result product owner client model approach contract saying much charge software avoid impression open ended revenue stream interest take long like adopt agile internally product owner one guy girl client get alpha beta release version software waterfall time fudge slippage final phase even agile short contract u client seems un agile way thing yet waterfall doomed fail environment see every day understand problem domain day num project neither client agile software waterfall hardware software handle one umbrella marry world