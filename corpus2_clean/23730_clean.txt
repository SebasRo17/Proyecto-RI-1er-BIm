temporary message really confused sure using power unevaluated together work example answering question stumbled upon following power unevaluated power power power power power time power power power power power power seems rule involving deeply nested pattern work correct wrong compare power unevaluated power power power power power time power unevaluated power power power power power time nothing happens note also power unevaluated power time power unevaluated power time clear power unevaluated power time power power importantly note clear f f power unevaluated power f power power whereas clear f f power unevaluated power f fullform power unevaluated power f fullform trace power unevaluated power power time b c e traceoriginal true column output holdform power unevaluated power power time b c e list holdform power list holdform e holdform power power power time b c e holdform power power power b c e list holdform power list holdform power power b c list holdform e holdform power power power b c e sure conclude note power hold time fullform power hold time time course cleared function attribute holdall surrounding note test function also depend important tool following tool play larger expression like warning might clear unexpected variable clear name arg b setattributes holdertoken holdall tester first length kkkk last headfinder function replaceall unevaluated unevaluated case head infinity head true head unevaluated head power head time expression compowithheldarg unevaluated deletecases hold evaluate composition array argu symbol arg tostring function argu power argu kkkk holdertoken time b holdertoken infinity head true power compowithheldarg kkkk tester headfinder expression true kkkk expression fullform power power power power power power power power power power power power power b see unevaluated deletecases hold evaluate composition array argu symbol arg tostring function argu power argu kkkk holdertoken time b holdertoken infinity head true fullform unevaluated power power power power power power power power power power power power time b time still present indeed applying power expression clear time deep pattern want make replacement deep pattern recursively define pattern follows clear patt patt atomq f x matchq x patt matchq f f patt true function act bit like power maybe something similar going power pattern search deep way maybe kind expression simplify rule applied trivial confused thought time found actually replaced rule whose pattern found sure even speak rule case make function work least bit like power limited case clearall shortcondition setattributes shortcondition holdall shortcondition x matchq unevaluated x holdpattern time power xxxx shortcondition xxxx clearall power power x shortcondition x n power x n power unevaluated power time e power power e power whereas power unevaluated power time e power unevaluated power time e however think conclude trace power work little differently new question simulate behavior power especially aspect seems apply rule deeply expression one argument old text seems distract complicated problem also making non trivial replacement seems difficult still like know somebody know way also want make replacement make thing difficult example f recursive pattern might want replace atom found example power might want replace time b time b think pretty unlikely elegant way thing hope would way make replacement general way believed power might work way think power work way still curious small remark course matchq f f f false matchq unevaluated sequence f f f repeated patternsequence also seemed like maybe way go maybe question possible define rule way determines whether expression form f f f x head mean f applied arbitrary number time way something x rh clarify might want define something like f f f x integer x case power power power z time x z power power z x z given pattern repetitively applying power name z way writing might parseable mathematica could z power time x z x possibly answer maybe version feedback welcome