firstly aside agree weakness exists lot trouble believing represents difficulty real life given purpose onetime pad give unbreakable security expense key distribution etc imply clients really want level security people want keep p secret find hard believe eve might happen copy p lying around aware argument applies eve knowing even small part message eve must know exactly bytes c known susequence starts result garbled find least surprising back question resources use onetimepad transmissions would also append message authentication code message using next bits onetimepad key perhaps original question basically asked whether way authenticate message degree security pad provided dont know answer however would propose following discussion alice bob arbitrary number secret random bits share eve doesnt know finds effectively knowing p corresponding c fact correspond causes problem message authentication code created using onetimepad operation eve could know parts mac affected parts input would unable forge mac correspond required nonlinear combiner parts message nonlinear simply xoring subtracting whatever doesnt exactly effect end encrypted message c alice appends nbit mac computed follows means next full chunk one time pad compute p xor pad nbit boundary break nbit chunks set mac initialisation vector chunk sequentially set mac mac nlop end process mac message authentication code bob verifies mac obvious manner recovers plaintext p uses pad reproduce mac manner nlop nonlinear operator rub simplest nonlinear operator think sbox fixed even published permutation nbit integers indexable table called sbox use x nlop x xor sboxy practically speaking think solves problem eve never sees intermediate output hence cant deduce perform valid substitution also practically speaking want mac fairly large say bits might want gigabyte say sbox might work bytesized sboxes think irrelevant detail discussion hand first point errors give pointer literature