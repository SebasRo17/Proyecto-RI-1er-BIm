hi everyone thought people may interested vr software groups announcing release multiverse multiuser nonimmersive xwindows based virtual reality system primarily focused entertainmentresearch features clientserver based model using berkeley sockets limit number users apart performance generic clients customizable servers hierachical objects allowing attachment cameras light sources multiple light sources ambient point spot objects extension code handle unique functionality easily attached functionality client client built around fast render loop basically changes things told server renders image users viewpoint also provides server information users actions communicated clients therefore users client designed generic words dont need develop new client want enter new world means resources spent enhancing client software rather adapting adaptations explained moment occur servers release client software supports following functionality hierarchical objects associated addressing multiple light sources types ambient point spot user interface panels colour polygonal rendering phong shading optional wireframe faster frame rates mouse keyboard input people may disappointed software doesnt support powerglove input device cant dont one however one first enhancements servers customization take place following basic support provided release potential world server developers transparent client management client message handling may sound like much takes away headache accepting terminating clients receiving messages application writer work assumption things happening locally things get interesting object extension functionality provided allow animate objects server selectable extension installation means decide objects extended functionality world basically call extension initialisers want event handler registration develop extensions object basically write callback functions events want object respond current events supported init move change collide terminate collision detection registration want object respond collision events provide basic information collision detection management software callback activated collision occurs software kept separate worldserver applications application developer wants build library extended objects choose following need make world server application provide initworld function choose object extensions supported plus initialization want provide positionobject function determine place new client provide installworldobjects function load world wld file new client provide getworldtype function tell new client persona provide animateworld function go wild minimum let objects move calling move function let server sleep bit avoid outrunning clients thats prove line counts three world servers ive provided generic lines dactyl lines complicated collision detection due stairs probably improved future versions dogfight lines location software located following site ftpuwashingtonedu directory pubvirtualworlds file futures client texture mapping realistic rendering ie zbuffering similar gouraud shading hmd support etc etc server physical modelling gravity friction etc enhanced object managementinteraction etc etc improved comms hope provides people good understanding multiverse software unfortunately comes practically zero documentation im sure whether ever able rectified hope people enjoy software useful explorations virtual universe ive certainly found fascinating developing would love add support powergloveand hmd finally one major disclaimer totally amateur code mean support code kindness heart pure desperation provide held responsible anything good bad may happen use code use risk disclaimer course love would like anyone positive contributionscriticisms also encouraged contact anyone hates devnull anyone wants let living know write thanks robert