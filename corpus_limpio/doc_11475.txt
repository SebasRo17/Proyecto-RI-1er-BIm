im asking help sticky problem involving unreasonably low apparent precision zbuffering ive encountered different pex implementations cant find discussion problem resources lay hands eg compwindowsxpex faq gaskinss pexlibprogrammingmanual vendors documentation im posting article compgraphics virtually article test program demonstrating problem compwindowsxpex problem hard describe without pictures hence article longish run pexlib programs interested encourage build run test program compwindowsxpex see effect play approach dealing depends utility code gaskins book instructions fetching via anonymous ftp given problem solved eliminate minimize stitching artifacts resulting use zbuffering polylines coplanar filled areas interpolated z values along line differ slightly due roundoff error interpolated z values across area even endpoints line coincident vertices area tossup whether zbuffer allow line pixels area pixels displayed visually result tends dashedline effect even though line supposed solid using pexlib api approach solution use two slightly different pex view mapping transforms two view table entries one areas one lines pex structures immediate mode output must organized one view table index always effect areas always effect lines result slight shift npc z coordinates lines attempt bias tossup situations favor lines shift effected moving front back clipping planes used pexlib view table entry lines hair backwards ie smaller vrc z coordinates compared positions view table entry used areas means point transformed npc z value slightly bigger comes line comes area thus accomplishing desired bias would expect z roundoff errors cause problem amount units entire dynamic range zbuffer typically ie bit zbuffers therefore seems tiny fraction range z vrc front back clip planes ought suffice reliably fix stitching fact experience shows shift much range empirically worst npc z component slope surface high ie appears less edgeon viewer bits zbuffer dependable meaning amount great one problem replaced another sometimes polylines show areas supposed lie behind ive observed problem hewlettpackard digital workstation pex servers approximately degree test program demonstrates problem mit pexlib implementation version known compile run hpux system pex open questions happen configuring pex view table wrongly systematic difference z interpolation lines opposed areas eg pixel centers versus corners could corrected pex implementors wantonly discarding z precision interpolators something else fix use view table allow better precision zbuffered hlhsr another approach take remove stitching artifacts luck help would immensely appreciated