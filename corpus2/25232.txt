I wrote a function to monitor the list of variable. What it does is if the variable in list change, the changed variable will be separated from others. check the function and output               ListMo[monitorList_, OptionsPattern[]] :=     (      Module[{il = {}},           (         If[             (UnsameQ[monitorList, Global`temp]),             (         il = {Complement[monitorList, Global`temp],          Intersection[monitorList, Global`temp]};         Global`temp = monitorList;         il         )         ]         )      ])      I initialize temp variable separately               temp = {"Value1", "Value2", "Value3", "Value4"};      I call the function               monitorList1 = {"Value1", "Value2", "Value3", "Value4"};     ListMo[monitorList1]      Output will be nothing If I change value in monitorList1 like               monitorList1 = {"Graphs", "Value2", "Value3", "Value4"};      The output should be               {{"Graphs"},{"Value2", "Value3", "Value4"}}      again If I change in monitorList1 like                monitorList1 = {"Graphs", "Value2", "Value3", "computer"};      The output should be               {{"computer"},{"Graphs","Value2", "Value3"}}      Here am getting output, But I want them to be `Dynamic`. If I put `Dynamic` around `ListMo[monitorList1]` like `Dynamic[ListMo[monitorList1]]` the output is keep on executing instead of executing one time. I used `TrackedSymbole` as `Dynamic[ListMo[monitorList1], TrackedSymbols -> monitorList1]` but no use. I used `StartScheduledTask[]` as well like               Module[             {testing = {}},             StartScheduledTask[                CreateScheduledTask[                  With[{testing1 = {}}, testing = ListMo[monitorList1];]                ]             ];             Dynamic[testing]         ]      but it doesn't help. Help me to write better code for same concept.