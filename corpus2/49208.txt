I'm trying to find a 'similar' name to every item in a list                nearName[name_, namesList_] :=         Module[{lista, pos},          lista = EditDistance[ToLowerCase[name], ToLowerCase[ToString[#]]] & /@ (namesList);          pos = Flatten[Position[lista, Min[lista]]];          If[Length[pos] > 1 || Min[lista] > 3 , Missing["NotAvailable"], namesList[[pos]]]]      The problem is that with a very large input (`nameList` contains about 400k items and I make about 1k calls to `nearName`), `nearName` is using a lot of CPU. Is there any way I can make this faster?