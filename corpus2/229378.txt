One of our developers has an opinion that all client data should be validated before using it. Even non-input data. Say, our web service has an internal protection against database injections. Examples: machine generated codes, various integers, indexes, calculated values. We use ORM (Django). As I know there is a next approach in Django: validate only values entered as primary strings (usually via web forms). For example: is there any reason to create validation rules to validate numbers if we know that there is 500th error (if the data are wrong) in the beginning of handling request? I think no. But probably I'm wrong. Do my position requires to be changed?