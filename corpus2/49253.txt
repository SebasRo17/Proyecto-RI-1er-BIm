f1[x_] := x*2 // Abs;     f2[x_] := (x // Transpose).x;     Minimize[f1[x], {x}] (* fine, returns 0 *)     Minimize[f2[x], {x}] (* not fine, returns "Minimize[Transpose[x].x, x]" *)      A workaround for this would be to do:               Minimize[f2[{{a}, {b}}], {a, b}]     {0, {a -> 0, b -> 0}}      However, that isn't very nice when X is a long vector. Is there a way to minimise a function taking a vector directly without resorting to workarounds? If I have to use a workaround, is there a way to automate what I did in that example maybe using "macros"?