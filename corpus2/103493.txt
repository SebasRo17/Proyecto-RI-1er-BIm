I'm developing a site for a potential customer who will need a lot of features for members and the various roles they will have, but also wants to have confidence in the "database". It is this latter item that makes them want to purchase a canned system from someone "established", that is both rather expensive, and is generic / not as customizable to what is needed. Do you have any thoughts or ideas on what I can do to inspire confidence in them that the database will be solid? I've thought about generating test data to fill the database, doing database backups, and readily being able to switch between database, and ? I'm implementing the web-site using Grails and am currently using a MySql database. Customer is very small ... just worried about the scenario of their stuff really "taking off", becoming large fast. I guess I'm just looking for high level thoughts from some of you experts out there (but specifics/references don't hurt either! :-) Thanks, Ray P.S. The Grails Security Core and UI plugins look really cool for all the user / role / security stuff, got all that plugged in and working in a couple hours yesterday ... thanks Grails framework and plugin developers!!