The following threads call our attention to the fact that "accuracy of Interpolation will be worse with an unstructured grid", in the context of interpolation of 3d data: interpolation of 3D data Improved interpolation of mostly-structured 3d data I want to know if there is a systematic way to do the interpolation correctly for a 3D data with the points distributed logarithmically along x and y. **Simple example** The xy grid would be built using               grid = Table[ {10^t, 10^u}, {t, 1, 3, 0.05}, {u, 1, 3, 0.1}]     ListPlot[ grid ]      ![Logarithmic grid](http://i.stack.imgur.com/8GxNs.jpg) Of course, in logarithmic scale it looks fine (linear):               ListLogLogPlot[ grid ]      ![enter image description here](http://i.stack.imgur.com/KPGvv.jpg) The 3D data would be built using some 2 variable function `func`:               tabx = Table[10^w, {w, 1, 3, 0.05}]     taby = Table[10^w, {w, 1, 3, 0.1}]     tab = Table[ {{x,y},func[x, y]}, {x, tabx}, {y, taby}]      Then, how to interpolate `tab` properly?