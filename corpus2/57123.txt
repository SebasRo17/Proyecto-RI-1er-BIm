I have encountered some difficulties getting `BSplineSurface` to export to STL. The following code works and generates a triangulated polygon mesh from the NURBS spline (adapted from a `BSplineSurface` example):               cpts = Table[{i, j, RandomReal[{-1, 1}]}, {i, 4}, {j, 4}];     b = Graphics3D[BSplineSurface[cpts]]     Export["surface.stl", b, "STL"]      However, decreasing the number of control points in each dimension from **4** to **3**               cpts = Table[{i, j, RandomReal[{-1, 1}]}, {i, 3}, {j, 3}];     b = Graphics3D[BSplineSurface[cpts]]     Export["surface.stl", b, "STL"]      results in               GeometricFunctions`BSplineSurface::deglen: -- Message text not found -- (3)     Export::nodta: Graphics3D contains no data that can be exported to the STL format. >>     $Failed      (Mathematica version 10).    Why is the success of exporting a `BSplineSurface` to STL dependent on the number of control points? Is there a reliable way to get arbitrary spline surfaces to export to STL? Convert Graphics3D containing BSpline to polygon primitives for export to 3DS? seems somewhat related though not identical. I am aware that Mathematica cannot actually export NURBS surfaces, so a triangulation will suffice, just as it happens already for the surface with 16 control points.