I've just come across the Poltergeist anti-pattern \- and maybe it's because the morning coffee hasn't kicked in yet, but I read the description: > a poltergeist (or gypsy wagon) is a short-lived, typically stateless object > used to perform initialization or to invoke methods in another, more > permanent class. and thought that this sounds a lot like some implementations of Factory that I've seen (and written myself) - particularly in web development where a Factory might only be used once per request. Unfortunately, the wiki article is fairly superficial. Could someone explain a bit more about how a Factory should be implemented, and also why a Poltergeist is an anti-pattern.