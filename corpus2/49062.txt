One could call this a pattern finding question with dictionary (or WolframAlpha) lookup, but let me give you some background first. I have a couple of friends who are trying to improve their English listening skills by watching TV shows in English, with English subtitles. I have access to the subtitles in text format which I can import and process as I like. Now it is easy to pick out common words from a list of words using something like `Tally`, but what I would like to do is more complicated. I want to pick out phrases (and perhaps some longer or slang-like words) that a non-native speaker may not recognize. I understand I need some sort of a lookup for this, and I thought of using WolframAlpha's `Phrase:WordData` pod, but it doesn't show up for every word, and didn't exactly do what I really wanted. I'll provide an example block of text below if anybody would like to go ahead and try it using whatever method they would like.               myStr = "Wow that must have been an awful result. That was not even close! People didn't even find out until they reviewed the footage.";     myStrList = StringCases[myStr, WordCharacter ..]      And this gives > {"Wow", "that", "must", "have", "been", "an", "awful", "result", "That", > "was", "not", "even", "close", "People", "didn", "t", "even", "find", "out", > "until", "they", "reviewed", "the", "footage"} Now I'd like an output that might look like something like > {"awful", "not even close", "find out", "reviewed", "footage"} I know this is rather vague, but I think determining search patterns and how the search would be executed would be a good start.