I've been trying to come up with the best way to design my file manager for a project. I need to work with many file implementations and I have a File class made of 2 classes inside: Data and Descriptor. ![enter image description here](http://i.stack.imgur.com/iHuyC.jpg) As you can see, I have many different implementations of the Data class, one for each file organization. All of the implementations use records to organize their information but the fields for each kind of file (users, transactions, etc...) have to be stored as metadata inside their respective descriptor file. So basically my problem is trying to access and updating the descriptor of each file. For example, while trying to search() inside the Users file from the Stacked class, I need the fields (username, name, last name, etc...) which are inside the Users Descriptor file, but I cant come up with a nice design for it. The only way I can think of is passing the Descriptor reference to each method (search, write, etc...) but I have a feeling that my solution would be bad design. Please note that I still have to keep adding more file organizations for different files, so I want to plan ahead and have a nice file manager to handle all the requests the best way possible, but currently this is what I've come up with.