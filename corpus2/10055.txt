Here I use a one-dimensional heat conduction equation as the example. I found that when the thermal diffusion coefficient is small enough, Mathematica will give a result against the second law of thermodynamics:               fun[k_] := (a = NDSolve[{D[tes[t, x], t] == k D[tes[t, x], x, x],      　　　　　　　　　　    　　tes[t, 0] == t, tes[t, 1] == 0, tes[0, x] == 0},      　　　　　　　　　　   　　{tes[t, x]}, {t, 0, 1}, {x, 0, 1}];      　　　　　　Plot[(tes[t, x] /. a) /. t -> 1, {x, 0, 1}, PlotRange -> All]);     fun[1]     fun[10^-3]     fun[10^-6]      Here's the result: _Graph 1_ ![Graph 1](http://i.stack.imgur.com/NZ1w6.jpg) _Graph 2_ ![Graph 2](http://i.stack.imgur.com/J4Wkz.jpg) _Graph 3_ ![Graph 3](http://i.stack.imgur.com/c76JQ.jpg) The circled part in Graph 3 is the crux: this wave is unreasonable in the view of physics. So, how to avoid this if I have to use this kind of parameters?