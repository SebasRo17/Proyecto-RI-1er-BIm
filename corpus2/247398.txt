I stumbled across a need to create a thin I/O Layer interface to abstract away a class from the need to know about I/O               public interface IFileIOProvider {         Task WriteFileAsync(String contents, String path);         Task<String> ReadFileAsync(String path);     }      Is it a good idea to test a default implementation that _only_ falls back to standard .Net System.IO classes, no logic attached?. I think it might be overkill, but just want to get my strategy checked out by more experienced programmers