So I have a function in C like this:               void crunch(const char *in, char *out, size_t inLen, size_t outLen)     {         //...     }      If the two buffers overlap, the function may mess up the input buffer as well, while generating output.   * What's the general practice?    * Should I always consider overlapping buffers when implementing functions like this?    * Should I assume that the user won't pass overlapping buffers?    * Should I always document whether the function works well or not with overlapping buffers?