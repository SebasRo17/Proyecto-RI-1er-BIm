I have $6$ functions $f_i(x,y,z)$, $(i = 1, \ldots, 6)$ in three variables $x,y,z$, and I would like to find a simultaneous instance of these variables, say $(x_0, y_0, z_0)$, such that $f_i(x_0, y_0, z_0) = 0$ for each $i = 1, \ldots, 6$. The functions are pretty well-behaved, with mostly low order polynomial factors and some square roots. I know a solution exists, and with some manual searching I've already narrowed down the area where it must be to a pretty small region. What I would like to do now is (preferably) use an exact solver to find the exact solution, or (alternatively) use a numerical search to further narrow down the region of the optimum. I've tried working with functions like `(N)Solve`, `FindMinimum`, `FindRoot` to do this, but it doesn't seem to work very well. The program just runs forever, with no result. My main question is: **What is the best solution for this problem in Mathematica?** Maybe the problem is just too complicated for Mathematica to solve (even numerically though?!), but if it is not, which routine should I call in this case to have the best chance of getting an answer? (I would also be curious to know in general which of these is suitable for what. Is there any real difference in efficiency between `Solve`, `FindMinimum`, `Minimize`, `FindRoot` etc.? Or do they just end up sharing the same optimized algorithms internally?) Thanks.