Following questions all refer to examples presented in Implementing DDD In article we can see from Figure 6 that both **BankingAccount** and **PayeeAccount** represent the same _underlying concept_ of _Banking Account_ **BA** **1.** On _page 64_ author gives an example of a _publishing organization_ , where the life-cycle of a book goes through several stages ( _proposing a book_ , _editorial process_ , _translation of the book_ ... ) and at each of those stages this book has a different definition. Each _stage of the book_ is defined in a different _Bounded Context_ , but do all these different definitions still represent the same _underlying concept_ of a **Book** , just like both **BankingAccount** and **PayeeAccount** represent the same _underlying concept_ of a **BA**? **2.** a) I understand why `User` shouldn't exist in **Collaboration Context** ( CC ), but instead should be defined within **Identity and Access Context** IAC ( _page 65_ ). But still, do `User` ( IAC ), `Moderator` ( CC ), `Author` ( CC ),`Owner` ( CC ) and `Participant` ( CC ) all represent _different aspects_ of the same _underlying concept_? b) If yes, then this means that CC contains several _model elements_ ( `Moderator`, `Author`, `Owner` and `Participant` ), each representing _different aspect_ of the same _underlying concept_ ( just like both **BankingAccount** and **PayeeAccount** represent the same _underlying concept_ of a **BA** ). But isn't this considered **a duplication of concepts** ( Evan's book, page 339 ), since several _model elements_ in CC represent the same _underlying concept_? c) If `Moderator`, `Author` ... don't represent the same _underlying concept_ , then what _underlying concept_ does each represent? **3.** In an **e-commerce system** , the term **Customer** has multiple meanings ( page 49 ): When user is browsing the **Catalog** , **Customer** has different meaning than when user is placing an **Order**. But do these two different definitions of a **Customer** represent the same _underlying concept_ , just like both **BankingAccount** and **PayeeAccount** represent the same _underlying concept_ of a **BA**? **UPDATE:** 2. > 2a) As with the book, they refer to the same identity but express different > aspects of that identity in a specific context. Sort of like a single object > implementing multiple interfaces which embody the roles that object plays. a) Does having two _model elements_ ( both within same **BC** ) , each representing _different aspect of the same underlying concept_ , result in what _Evans_ calls **duplicate concepts**? b) I thought terms " _representing different aspects of an identity within particular BC_ " and " _representing different aspects of the same underlying concept within particular BC_ " are interchangeable ( ie they mean the same thing )? If not, how do they differ? c) > Sort of like a single object implementing multiple interfaces which embody > the roles that object plays. I assumed each _role_ represents a _particular aspect of the underlying concept_ , but you're saying it doesn't? What then does _role_ model and how is the thing that role models conceptually different from _an aspect of the underlying concept_? **2\. UPDATE:** **2.** a) > > Does having two model elements ( both within same BC ) , each representing > different aspect of the same underlying concept, result in what Evans calls > duplicate concepts? > > I don't recall what Evans called duplicate concepts so not sure. On page 339 Evans describes **Duplicate concepts** as being one of the two conceptual splinters that cause the unification of a model to break down. Here's the quote: > Combining elements of distinct models causes two categories of problems: > duplicate concepts and false cognates. Duplication of concepts means that > there are two model elements ( and attendant implementations ) that actually > represent the same concept. Evry time this information changes, it has to be > updated in two places with conversions. Every time new knowledge leads to a > change in one of the objects, other has to be reanalyzed and changed too. > Except the reanalysis doesn't happen in reality, so the result is two > versions of the same concept that follow different rules and even have > different data. b) and c) > This may be a linguistic issue. The way I see it, an identity can have > different concepts associated with it depending on the context. > > Again this seems to be a linguistic issue. You use "underlying concept" to > refer to identity which I think isn't clear enough to distinguish from > simply "concept" which by itself isn't sufficient. Perhaps the following will make my questions clearer: By _underlying concept_ I'm referring to _an aspect of reality_ ( ie the thing ) which we try to model. thanks