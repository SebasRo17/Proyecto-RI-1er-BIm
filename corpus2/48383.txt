I'm trying to plot the gradient field of a function in such a way that is possible to change it easily, only editing the function. Consider the code:               xmin := -2; xmax := -xmin; ymin := -2; ymax := -ymin;     f[x_, y_] := x^2 + y^2     Plot3D[f[x, y], {x, xmin, xmax}, {y, ymin, ymax}]      ![enter image description here](http://i.stack.imgur.com/PoDlW.png) So, the following code produces a very fancy result:               VectorPlot[{2 x, 2 y}, {x, xmin, xmax}, {y, ymin, ymax},       StreamPoints -> Coarse, StreamColorFunction -> Hue]      ![enter image description here](http://i.stack.imgur.com/WGaR7.png) Since `{D[f[x, y], x], D[f[x, y], y]}` produces `{2 x, 2 y}` I tried to define               Gradf := {D[f[x, y], x], D[f[x, y], y]}      and use               VectorPlot[Gradf, {x, xmin, xmax}, {y, ymin, ymax},       StreamPoints -> Coarse, StreamColorFunction -> Hue]      but I got a lot of errors as > General::ivar: -1.99971 is not a valid variable. >> > > General::stop: Further output of General::ivar will be suppressed during > this calculation. >> I really don't understand why it is not working. Any idea how to solve this so I could only change the definition of `f` and plot again?