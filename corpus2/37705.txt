I am trying to create a List of elements that follow the general pattern: $$X_{n+1} = X_n X_{n-1}$$ where the operation on the right hand side is concatenation, i.e., joining. I want to achieve the following pattern:   * $X_0 = \{1\}$   * $X_1 = \{1,0\}$   * $X_2 = X_1X_0 = \{1,0,1\}$   * $X_3 = X_2X_1 = \{1,0,1,1,0\}$   * $X_4 = X_3X_2 = \{1,0,1,1,0,1,0,1\}$   * $X_5 = X_4X_3 = \{1,0,1,1,0,1,0,1,1,0,1,1,0\}$ This is much like a Fibonacci sum but is more like a Fibonacci joining. If you notice, the dimension of the $n^\text{th}$ set is the $n^\text{th}$ Fibonacci number. I have gone along the lines of a Do loop but I don't know how to loop the current output with a previous output. My feeble attempts have bee thus far:               X0 = {1};X1 = {1, 0};t = Join[X0, X1];Do[Print[t];t = Join[t, t], {3}]      whose out put is               {1,1,0}     {1,1,0,1,1,0}     {1,1,0,1,1,0,1,1,0,1,1,0}      Now this is just joining the two sets three times. How do I join the set with a previous output one? Is there a tool to use that is easier/more efficient than the Do loop?