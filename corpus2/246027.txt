We are currently designing an API that will hide different services (Product, Content, User etc) that will be used by our own website, our own apps etc. It is not a public API. We are looking into using ServiceStack as a foundation, and that might be right. However, the biggest concern is how to manage the users (each user has 30-50 attributes) and hopefully 100 000+ users. As I've understand AspNet Identity is nothing for Production so therefore we need to create our own implementation of AspNet Identity.   1. What is your experience of creating a Custom Identity Provider (any examples)?   2. We would like to use several external auth services (OpenId, twitter etc), how should that be managed?    3. How will that then affect the structure of the API (Lets say we are using WebApi instead of ServiceStack). I would like to use as much standard UI as possible. Any ideas, solutions or examples are appreciated.