I am trying to do a simple summation over outer products. I wrote the code as straightforwardly as I could, but perhaps there is a more efficient way to do it.               {mat1,mat2} =         Import["https://dl.dropboxusercontent.com/s/d9m7mgd4gio78t4/12SeptemberData.nc",         {"Datasets",{"matrix1","matrix2"}}];     {sdim,ldim}=Dimensions[mat1];     dim = sdim + ldim;          DM = ConstantArray[0, {dim,dim}];     kcounter=0;     Do[        If[kcounter != k, Print[k]; kcounter += 1;];        (*The evaluation seems to take forever,           so this just spits out the current value of the k iterator          so I can keep track of what is going on.*)        If[b != a && Chop[mat1[[k, a]] mat1[[k, b]]] != 0 ,           DM += mat1[[k, a]] mat1[[k, b]] Outer[Times, mat2[[a+sdim]], mat2[[b + sdim]]]];            ,{k, sdim}, {a, ldim}, {b, ldim}];      Before I added the term where it checks to make sure the necessary term is not zero, it was taking a lot longer. But still, I know there are a lot of _Mathematica_ functions I don't know about, and if there were a way to speed up this computation that would be fantastic.