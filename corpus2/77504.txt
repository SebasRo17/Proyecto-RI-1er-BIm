I name my variables using the .Net conventions:   * camelCase for variables and fields (I tend to use _camelCase for private fields in a class)   * PascalCase for methods, properties and classes The only place I deviate is on constants and Enums where I actually prefer the Java SCREAMING_CAPS style. My company's codebase is littered with the pseudo-Hungarian notation style from VB6 and VBScript, if not full-blown Hungarian i.e.   * s or str for Strings   * i or int for Ints   * d for decimal (or sometimes double)   * o or obj for any kind of object I cringe whenever I see that code style used in someone else's code (even in greenfield code, not just the legacy cruft), and I refuse to use that style myself. I've brought up standardizing on the .Net naming conventions in the past and it's just ignored - the people who write in Hungarian notation continue to do so, those of us who don't like me continue to use our own style; I'm a little afraid that if we **do** standardize (which I keep pushing for, but nobody else seems to care), it'll be on Hungarian notation and not the recommended way and then I'll be forced to write code like that. Am I making a mountain out of a molehill in regards to this? Should I not care if the code is littered with redundant identifiers and not descriptive names, and continue to use my own way and push for that to become the standard?