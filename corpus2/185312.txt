Many of the readings I've done on DDD, both in books and online, seem to represent code that, often times, is difficult or impossible to unit test. For example, there are numerous samples with static factories, calls to concrete domain classes and static extension methods (in C# samples only). I find it frustrating and taxing to have to constantly re-evaluate the code to make it testable in my mind. Can anyone suggest material that demonstrates DDD code with 100% testability in mind (preferably in C#)? Also, to meander a bit: Is the fact that many of the code samples are not test-friendly a sign (smell) that DDD is becoming antiquated?