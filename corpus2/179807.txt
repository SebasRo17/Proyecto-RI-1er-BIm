A class that performs both computations and data logging seems to have at least two responsibilities. Given a system for which the specifications require heavy data logging, what kind of design patterns or architectural patterns can be used to avoid bloating all the classes with logging calls every time they compute something? The decorator pattern be used (e.g. `Interpolator` decorated to `LoggingInterpolator`), but it seems that would result in a situation hardly more desirable in which almost every major class would need to be decorated with logging.