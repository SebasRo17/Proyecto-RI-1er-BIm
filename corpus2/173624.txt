I work for a company where the development manager expects a developer to create test cases before writing any code. These test cases have to then be maintained by the developers. Every-so-often a developer will be expected to run through the test cases. From this you should be able to gather that the company in question is rather small and there are **no testers**. Coming from a Software Architect position and having to write / execute test cases wearing my ' _tester_ ' hat is somewhat of a shock to the system. I do it anyway but it does seem to be a rather expensive exercise :) **EDIT:** I seem to need to elaborate here: I am _not_ talking about unit-testing, TDD, etc. :) I am talking about that bit of testing a **tester** does. Once I have developed a system (with my unit tests / tdd / etc.) the software goes through a _testing phase_. Should a developer be _that_ tester and developer those _test cases_? I think the misunderstanding may stem from the fact that developers, typically, are not involved with this type of testing and, therefore, assumed I am referring to _that_ testing we do do: unit testing. But alas, no. I hope that clears it up.