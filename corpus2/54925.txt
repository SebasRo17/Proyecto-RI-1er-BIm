I want to discretize 3D constructive solids, supported by Mathematica 10 regions functionality. Quality of resulting meshes must be controllable, and meshes must be useful for further computation. This should be easy, but the trivial example below stuns me.               (* Simple derived region in 3D with a sharp edge: *)     r = RegionDifference[Ball[{0, 0, 0}], Ball[{0, 0, 1}]];          (* RegionPlot3D with PlotPoints handles this reasonably well: *)     RegionPlot3D[r, PlotPoints -> 50]      > ![enter image description here](http://i.stack.imgur.com/TE1uC.png)               (* This should create a discretized mesh, and it does, but with poor quality: *)     DiscretizeRegion[r]      > ![enter image description here](http://i.stack.imgur.com/DJxnm.png) Edges are noticeably jaggy. This is understandable, and usually option like `PlotPoints` fixes these kind of issues. `DiscretizeRegion` has numerous options which should affect quality of its' output. I think I've played with all of them. Biggest difference I've seen has been is through use of `MaxCellMeasure`, but interestingly enough, same ugly jaggies stay there even if complexity of the mesh itself increases. I would need an option like `PlotPoints` which apparently affects grid resolution of a marching cubes style algorithm in `RegionPlot3D`, but there isn't one for `DiscretizeRegion`. Any suggestions?