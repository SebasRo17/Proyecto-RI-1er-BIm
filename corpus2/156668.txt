I know that Senior Developer doesn't use only one language and only one platform or IDE. Can you advise how to mix different styles of programming to make efficient code? For example, **best** mixing is **Perl + Objective-C**. `$ObjectiveCLongNameOfVariablesAndMethods` are worst for Perl-style, but good for iOS-team. `[self method:[[NSArray alloc] initWithobjects:[hash objectForKey:name]]]` style is weird for an eye, but not for perl simple-looking arrays and hashes and autovivification. Also, i try to mixing **SAS + Objective-C style** , but here i have a trouble. **SAS** doesn't support names long names, only 32 symbols. So, big trouble to naming variables. Another difficulty is features of current language. So, if I can't use current language for a task, that it can **solve 'like a BOSS'** , I become angry and see weird code. Using libraries is good, but it makes code not natural, 'cause eating soup with fork is strange'. And at the end: where can I trust compiler and interpreter of language? So, **C++-style** is best for pointers (you make destructors, constructors, etc.), but many languages now support mechanism like **ARC in Objective-C** or don't use pointers (like **C#** ).