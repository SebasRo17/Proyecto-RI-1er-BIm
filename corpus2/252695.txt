Suppose you need to create a website where you can choose a Widget, and then configure all of the various options to go with that widget. The options have many interactions. For example, if you choose to add Wheels to your Widget, this should enable the selection of which Rims you would like. However, if the user selects an Orange colored Widget, the Alloy Rims are not available. I'm am struggling with the best way to design my tables and code to enforce these restrictions and conditions governing these options while remaining flexible for future Widgets. New widgets are going to come along every year where these options and their restrictions / conditions need to be added for the new products, so I'm trying to avoid hard-coding these types of things. At the same time, it is difficult to picture a data model in a database for governing these conditions / interactions. Some of them may be simple (Option A enables Option D and E), and some of them may be very complex (Option A plus Option B plus a quantity of 10 widgets disables Option Z, but enables Option X). I get the feeling that this sort of option-interaction logic belongs in a "Business Rules" type of layer. Is this a scenario that any of you have tackled before, and if so did you find a quality / flexible method of handling these types of things?