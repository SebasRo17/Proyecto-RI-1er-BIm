I have a class, called PolicyProvider, at present with the following (abridged) interface:               public interface IPolicyProvider     {         List<Policy> GetRenewalPolicies(Client client, int financialYear);     }      The purpose is quite obvious - every year, the insurance renews for the client, and they will get a number of new policies. The thing is, the policies change year by year. Therefore, a concrete implementation of the class needs to be changed every year (or amended with lots of ugly little "if's" evaluating the financial year). I can see that over time this will become horrendous. In this case, what design pattern is most appropriate?