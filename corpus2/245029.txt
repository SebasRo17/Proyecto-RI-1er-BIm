I am reading the Core Java (9th edition) by Cay S. Horstmann and Gary Cornell. After making an effort, I cannot still understand the **? super Manager**. Here are some materials relating to this question.               public class Pair<T> {         private T first;         private T second;              public Pair(T first, T second) {             this.first = first;             this.second = second;         }              public void setFirst(T first) {             this.first = first;         }              public void setSecond(T second) {             this.second = second;         }              public T getFrist() {             return this.first;         }              public T getSecond() {             return this.second;         }     }      The **Manager** inherits from **Employee** , and **Executive** inherites from **Manager**. _Pair_ has methods as follows:               void setFirst(? super Manager)     ? super Manager getFirst()      Since _? super Manager_ denotes any supertype of **Manager** , why I cannot call _setFirst_ method with **Employee** (it is obvious that Employee is the supertype of Manager), but only with type **Manager** or a subtype such as **Executive** (but Executive is the subtype of Manager, not a supertype of Manager)?