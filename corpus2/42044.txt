I've had an idea for a semantic model of computing that's theoretically sound but is also quite unusual. I'd like to quickly prototype a system to prove that it can work in practice. Most of my work is in programming languages, so I'm comfortable putting together a small language for the purposes of testing, but I wonder if this is the best approach, as it necessitates a certain amount of advance work on the linguistic side that's not directly related to the computational model. So what is the best prototyping strategy for a very high-level theoretical framework such as this? Should I go with a new language, or an embedded DSL, or some other approach? I can provide a bit more background if necessary, but this doesn't need to turn into a discussion of the specifics of the model.