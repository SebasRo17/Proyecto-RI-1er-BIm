I found this code sample in this answer by Armen Tsirunyan.               class MyClass     {        public:        typedef void (*funcPtr)(int, int);        MyClass(funcPtr whatToCall)        {           callme = whatToCall;        }        void myClass::callMain()        {              callSomeApi(callme, <some arguments>);  //callme function pointer is passed as argument        }     private:        funcPtr callme;     };          void f(int a, int b) {blah blah blah};               int main()     {        MyClass myObject(f);        myObject.callMain(); //will call the api function with f passed as argument     }      I would like to know the advantages to use such a function pointer as a class member. If there are more, I should be overwhelmed to their uses and calls. Do you have some tips to help me memorise its usage?