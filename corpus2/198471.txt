How would you define Continuous Integration and what specific components does a CI server contain? I want to explain to someone in the marketing department what Continuous Integration is. They understand Source control - i.e. they use Subversion. But I'd like to explain to them properly what CI is. The Wikipedia Article never properly defines it, the Martin Fowler article only gives the following, which is basically a tautology followed by a vague explanation of 'integration': > Continuous Integration is a software development practice where members of a > team integrate their work frequently, usually each person integrates at > least daily - leading to multiple integrations per day. Each integration is > verified by an automated build (including test) to detect integration errors > as quickly as possible. **Update** : I sent them this image, I couldn't find a simpler one. ![enter image description here](http://i.stack.imgur.com/Cy2Ny.jpg) **Update 2** : Feed back from the marketing chap (for the time when there was 3 questions): > I actually like all 3 answers â€“ for different reasons. I feel like logging > in just to thank them all! Obviously he can't - so thanks on his behalf :) **Update 3** : I've realised looking at the Wikipedia article that it does contain the principles which, when you take just the headings, is quite a good list:   1. Maintain a code repository   2. Automate the build   3. Make the build self-testing   4. Everyone commits to the baseline every day   5. Every commit (to baseline) should be built   6. Keep the build fast   7. Test in a clone of the production environment   8. Make it easy to get the latest deliverables   9. Everyone can see the results of the latest build   10. Automate deployment