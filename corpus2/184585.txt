I'm building a website for a restaurant. They have a downloadable PDF version of their menu (which is what the "real-world" menu is printed from), but we also want to have a text-based version of the menu on the website (because it's the 21st century and you shouldn't have to read a PDF when browsing a site like this). I'm hoping to avoid -- or minimize as much as possible -- the potential problems with maintaining data in two places (one in the PDF and one on the website). In an ideal world, we'd build a custom dashboard interface for managing menu data, with a fully-normalized schema, and from that data we'd automatically generate the PDF _and_ the website versions of the menu (and come up with a very expensive and flexible visual design for the PDF menu that takes into account all future permutations of data that may be contained within it -- because the visual layout of the PDF menu is very important, since that's what the "real-world" menu is printed from). But, since the budget is not unlimited, I'm trying to think of other ways to accomplish this goal. Are there any compromise solutions or "this gets you halfway there" kind of things I could do? Obviously I'm not expecting a perfect and cheap solution, but anything that minimizes the double-data entry to the extent that it's not so much of a chore would be really helpful.