Should user permission checks take place in the model or the controller? And who should handle the permission checks, the User object or some UserManagement helper? ## Where should it happen? ### Checking in the Controller:               class MyController {       void performSomeAction() {         if (user.hasRightPermissions()) {           model.someAction();         }       }       ...      Having the checks in the Controller helps making the Models simple actions, so we can keep all logic to the Controllers. ### Checking in the Model:               class MyModel {       void someAction() {         if (user.hasRightPermissions()) {           ...         }       }       ...      By putting the checks in the Model, we complicate the Model, but also make sure we don't accidentally allow users to do stuff they aren't supposed to in the Controller. ## And by who? Once we've settled on the place, who should do the checks? The user?               Class User {       bool hasPermissions(int permissionMask) {         ...       }       ...      But it's not really the user's responsibility to know what he or she can acccess, so perhaps some helper class?               Class UserManagement {       bool hasPermissions(User user, int permissionMask) {         ...       }       ...      I know it's common to ask just a single question in, well, a question, but I think these can be answered nicely together.