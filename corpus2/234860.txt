I recently had a discussion with a friend of mine about OOP in video game development. I was explaining the architecture of one of my games which, to my friend's surprise, contained many small classes and several abstraction layers. I argued that this was the result of me focusing on giving everything a Single Responsibility and also to loosen the coupling between components. His concern was that the large number of classes would translate to a maintenance nightmare. My view was that it would have the exact opposite effect. We proceeded to discuss this for what seemed like centuries, eventually agreeing to disagree, saying that perhaps there were cases where SOLID principles and proper OOP didn't actually mix well. Even the Wikipedia entry on SOLID principles states that they're _guidelines_ that help to writing maintainable code and that they are part of an overall strategy of agile and adaptive programming. So, my question is: **Are there cases in OOP where some or all of the SOLID principles do not lend themselves to clean code?** I can imagine right away that the Liskov Substitution Principle could possibly conflict with another flavour of safe inheritance. That is to say, if someone devised another useful pattern implemented through inheritance, it is quite possible the LSP might be in direct conflict with it. Are there others? Perhaps certain types of projects or certain target platforms work better with a less SOLID approach? **Edit:** I'd just like to specify that I'm not asking how to improve my code ;) The only reason I mentioned a project in this question was to give a little context. My question is about OOP and design principles in _general_. _If you're curious about my project, seethis._ **Edit 2:** I imagined this question would be answered in one of 3 ways:   1. Yes, there exist OOP design principles which partially conflict with SOLID   2. Yes, there exist OOP design principles which completely conflict with SOLID   3. No, SOLID is the bee's knees and OOP will forever be better with it. But, as with everything, it's not a panacea. Drink responsibly. Options 1 and 2 would have likely generated long and interesting answers. Option 3, on the other hand, would be a short, uninteresting, but overall reassuring, answer. We seem to be converging onto option 3.