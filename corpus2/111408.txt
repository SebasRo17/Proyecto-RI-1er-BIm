I understand using _bookmarks_ to remember a single point in your code. However, how does one keep track of the _flow_ of the code they are investigating? Eg: multiple bookmarks and the order in which they were made. Example: >   1. Bug report: "Collisions aren't working on the corners of walls" > >     1. Reproduction of the bug puts it down to certain polygons not > colliding. >     2. The collision code was written by an unavailable dev. So > investigation goes something like: > > > ![Schema of a flow](http://i.stack.imgur.com/TBzUT.png) During the investigation, especially when reviewing non-code items such as Google, one may reasonably be expected to loose their place in the code ( _Have I already looked at this code path?_ or _Which code path was I investigating? There are multiple that lead to this function_ , etc). The same goes for unavoidable interruptions (Boss: _I need [Lengthy Pointless Report] NOW_ , etc) It would be useful to have a resource of techniques or tools for providing a way to keep track of one's place in the code. * * * _Edit_ : The above example is meant as a potential illustration, not as an actual problem that needs answering. Another way to phrase this question is: When learning a new system, how do you keep track of where you are up to in learning the code? It's not about understanding _why_ the code does what it does (which is what comments should be for), but _how_ it does it (which is only learned through reading the code, not comments).