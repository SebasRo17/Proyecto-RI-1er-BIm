I understand that this may be primarily opinion based, but I also think it is an interesting question and would like to hear others' viewpoints on the subject. I recently became the senior developer for a large company, and inherited what I can only describe as a less-than-adequate code-base. Whilst I won't go in to detail as to why most of it was terrible, something that _did_ stand out, was the huge amount of spelling errors. One of the more notable ones, was "Actual" spelled "Acutal". This was pervasive in functions, classes, stored procedure names, and column names. To me, this is a clear indication of lack of care and due diligence with respect to ones' work. I believe that if code is littered with these kind of things, the programmer in question is not paying attention. I understand there is a caveat if the programmer in question is perhaps not a native-English speaker (in this case, they were) - but simple code reviews should pick these things up. As developers, we spend a lot of time making sure that our work is functionally correct, optimal without over-optimising, and finally - easy for another person to pick up and work with. Code that is littered with spelling errors is a sign (given the caveat mentioned above), that the programmer is not paying attention and that those errors might also indicate a lack of understanding of the problem being _solved_. Much the same way that any spelling errors on a CV is an instant red-flag situation. What do you guys think of this? Should we be bothered about English grammar within the code-base? Does it matter? Is it indicative of the attention-span of the developer, or is there no correlation that could be reliably drawn? (Note: I understand people do program in other countries, and I have used English as an example here. I also respectfully understand that someone whose first language was _not_ English may find it difficult. This question is aimed at those who _should know better_ )