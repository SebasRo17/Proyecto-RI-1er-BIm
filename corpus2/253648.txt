I'm currently beginning with the development of a new web application. The whole web application is going to be bookmarkable and all the pages accesible via _GET_ requests and url parameters. Having said that, let's suppose I've got three entities in my application, `Customer`, `Team` and `City`. Each `Customer` and `Team` belong to a city and I've got a `city-detail` page which displays the detail for a concrete city. So next navigation cases are possible: _Customers -> Customer detail (id=2) -> City detail (id=3)_ _Football teams -> Team detail (id=5) -> City detail (id=3)_ _Cities -> City detail (id=3)_ There are three possible ways of ending up in a city detail view. My question is, does it make sense to implement a breadcrumb to show such a history, having it available in the browser itself? Would it be more appropiate to show a breadcrumb with the last case, no matter where we're coming from (hierarchical breadcrumb)? That's what Jakob Nielsen points out here: > Offering users a Hansel-and-Gretel-style history trail is basically useless, > because it simply duplicates functionality offered by the Back button, which > is the Web’s second-most-used feature. > > A history trail can also be confusing: users often wander in circles or go > to the wrong site sections. Having each point in a confused progression at > the top of the current page doesn’t offer much help. > > Finally, a history trail is useless for users who arrive directly at a page > deep within the site. Also, even if the history trail seems the most natural way to implement it, it requires an extra effort to keep the whole track being HTTP a stateless mean.