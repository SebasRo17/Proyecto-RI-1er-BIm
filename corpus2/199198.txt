Recently I've been involved in an agile project (using scrum) where management came up with the idea that the team would nominate a developer 'MVP' as well as a QA 'MVP' at the end of each sprint, voted on by the team. The MVP then gets a small monetary reward and free lunch as well as a trophy to display on his desk. We've had two sprints so far with this reward system in place. The good I see from this is the following:   * More bugs have been fixed (which is what upper management wants to see, a number change in the direction they want)   * The MVP from each 'team' gets recognized and gets a self esteem boost (or is it an ego boost?) I've noticed a few what I would consider bad sides to doing such a thing (at least from a developer standpoint):   * There are a few developers who are so concerned with the number that the quality of bug fixes has gone down. Fixes in one area are causing regressions in another.   * There are a few developers who are cherry picking 'easier/quicker' bugs to boost their bug count. Could be good of bad here I guess.   * Higher priority (which a lot of the time correlates to 'harder/longer to fix') defects actually become lower priority.   * Blocking defects are not addressed in a timely manner, as usually they take longer and require more coordination with QA.   * The team aspect within the Dev team has been lost. The team aspect of Dev and QA working together as one hasn't improved either, but hasn't really changed too much from before.   * Work beyond bug fixes, or working towards THAT number, isn't easily recognizable/tracked. I do believe that each of the 'bad' above can be addressed to some degree, depending on how the team handles each. My question is, then, has anyone successfully pulled anything like this off, where you recognize an MVP per sprint? If so, what do you think contributed to that success?