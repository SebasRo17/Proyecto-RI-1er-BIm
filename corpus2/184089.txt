It might be a strange question, but why there is no implication as a logical operator in many languages (Java, C, C++, Python Haskell - although as last one have user defined operators its trivial to add it)? I find logical implication much clearer to write (particularly in asserts or assert-like expressions) then negation with or:               encrypt(buf, key, mode, iv = null) {         assert (mode != ECB --> iv != null);         assert (mode == ECB || iv != null);         assert (implies(mode != ECB, iv != null)); // User-defined function     }