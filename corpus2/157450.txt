Its very interesting for me which advantages gives "global root class" approach for framework. In simple words what reasons resulted the .NET framework was designed to have one root **object** class with general functionality suitable for all classes. Nowadays we are designing new framework for internal use (the framework under SAP platform) and we all divided into two camps - first who thinks that framework should have global root, and the second - who thinks opposite. I am at "global root" camp. And my reasons what such approach would yields good flexibility and development costs reduction cause we will not develop general functionality any more. So, I'm very interested to know what reasons really push .NET architects to design framework in such way.