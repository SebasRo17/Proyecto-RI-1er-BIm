I've asked this question a few days ago about how much documentation should be made and now I realize I may have been asking only half of the question. My goal is to promote some sort of documentation in order to increase continuous knowledge inside the team. My team is working mainly on server-side services which extends proprietary devices which are distributed locally (national not global) In addition we supply APIs and administration web apps to those services. **What would be the best types of documentation for my team?** **Should we focus on DFDs, sequence diagrams, class diagrams, just plain text... ?** **Are some documentation methodologies better for specific industries or are there some which are just a waste of time?** _I fear this last question would be put down as too subjective, but I do hope there are some standard answers for this question, similarly to when someone asks about good OOP techniques and gets directed to design patterns and SOLID principles._