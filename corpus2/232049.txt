If there are two unrelated tasks, except that the changes are in the same project, and end up touching at least one of the same classes/methods, how do I manage that? Two different developers could each pick up one task. Each dev will create a new branch off of Integration, work in it, then need to Merge. When Merging two branches, most of the time "Take Source Branch" is proper for Up-Merging, and "Take Target Branch" is proper for Back-Merging. But when Back-Merging, or dual-merging up, there could be conflicts which overwrite the code of the previously merged project if they both changed the same class/method. One answer is: "So only let one dev work on both tasks sequentially." Except that we're in SCRUM and any dev can pick up any task. We don't want to start assigning. Another answer is: "Have the devs get together and hash out how to manually merge some stuff." But that's work! Lol. Is there a method I'm missing?