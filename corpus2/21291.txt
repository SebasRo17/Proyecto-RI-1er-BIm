As I understand it, Test-Driven Development is about writing tests to define the program specifications (you can correct me if I'm wrong). If there is someone responsible for writing the specifications (including a public API) for the software (let's call him the Software Architect), does that mean that the Software Architect must write all of the tests? Or does the Software Architect write the specifications, and then hand them over to the developers to write tests against? Or do you allow the specifications to grow organically by allowing all of the developers to write their own tests, and forget about having a Software Architect?