This question is about how should a large system be decomposed to sub systems, modules , components etc. For example lets say in a Payroll solution there may be core areas like Attendance, Salary processing, Registries ( for the maintenance of information like employee details, client details, recovery details etc) , Reports and administration. If we take Attendance, its primary objective would be, to give an interface to users to enter/ view/ edit/ delete attendance and monitoring progress of attendance entry. If we are using Model View Presenter architecture in the implementation the entire attendance part could be represented using a single MVP Triad. My question is, should we consider the attendance part of the system as a sub system or a module or a component? To qualify as a sub system should it have more than one modules / components? **EDIT:** I feel that I should have mentioned more about the context of this question. Actually when implementing a system you may not bother about parts whether it's a sub or a module. Also it might depend on personal preferences when calling it. But when you documenting things / preparing manuals etc. I believe we should follow a standard.