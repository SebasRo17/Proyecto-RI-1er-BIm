I hope this kind of question isn't off-topic on this site. I'm finally getting the hang of what a stack based machine is, and how to compile code for it. For example, the following code: `2 * 5 + 1` would compile to this bytecode:               push 2     push 5     mult     push 1     add      However what I want to understand is, the fundamental differences between compiling for a stack based machine and compiling for a register based machine. Basically I want to see what a register-machine's bytecode would look like, as opposed to a stack-machine's bytecode. To understand this, I'd like to ask you to show me what the bytecode for the above expression would look like, for a register machine. I.e. what this: `2 * 5 + 1` would compile to.