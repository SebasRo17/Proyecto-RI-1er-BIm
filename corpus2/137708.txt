I'm in the process of revamping our company's software development internship program and the area I'm most passionate on is implementing an enjoyable and effective student/intern mentoring program. We have quite a demographic variance among our software development groups, however, the vast majority would be considered Generation-Xers. **Over the years I've seen our younger Millennial-Generation students/interns/employees struggle when working with older developers.** Software architecture, Agile principles, the importance of TDD, design patterns, all of these are important and I'm looking for insight on communicating these things to interns/students/younger professionals. I would love to hear of any good tips regarding mentoring today's incoming Millennial-Generation software developers, especially students/interns. What's worked well for you, what hasn't? What observations have you made that taught you something about a younger software developer, how they think, what they value, etc. How can we make this an experience and industry that they're excited to be a part of? Thank you very much for any and all comments.