Quoted from Wikipedia: > A scripting language, script language or extension language is a programming > language that **allows control of one or more applications** and **makes the > compiler of the language part of the language runtime** , and as a result, > **enables code to be generated dynamically**. "Scripts" are distinct from > the core code of the application, as they are usually written in a different > language and are often created or at least modified by the end-user. Scripts > are often interpreted from source code or bytecode, whereas the application > is typically first compiled to native machine code.   1. I was wondering what "enables code to be generated dynamically" means? Isn't code in a scripting language written before it gets run, so how is it generated dynamically?   2. By definition, is a scripting language always an interpreted language? Conversely, is an interpreted language always a scripting language? They seem to be very close related, or even the same thing.   3. How is a language non-scripting? Thanks and regards!