_imagine_ given a `project` business object and such (simplified) rules:   * it's lifecycle is divided into several `stages of evaluation`;   * stages flow lineary and represent an evaluation chain;   * each stage provides its own `reward value`/algorithm;   * promotion of the project is controlled by other user's decision;   * the resulting reward is assigned to the project's initiator. _too naive, probably)_ The first thought that comes to my mind is using the `decorator pattern`; because of its structure it looks somewhat applicable. But what if you need to persist additional details provided with the current 'decorated' `state` of project? _I need an extra behavior on each stage_ I've encountered an article about `jBPM`. I believe it has much in common with `WF`. It is surely has the most of what is needed and at the same time it has (overkill) large infrastructure. _but can it be designed without incorporating this much complexity?_ What would you suggest?