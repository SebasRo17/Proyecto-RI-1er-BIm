How can I check automatically what is seen and what not? Or at least, how can I organize some partly automatic tests? IDE: Eclipse (could use also IntelliJ Idea if necessary) Testing tool: Junit (again, could use something else if advised, but better if it is free) Application OS: Android Developer's OS: Linux (could change for MAC or Windows(reluctantly)) Language: Java All the work goes in the external device. No emulator. The application is a user wrapper for the firmware TV player, called as external activity. So, 70% of the code is for GUI. (The other 30% speak to servers and provides info to the GUI) Before I programmed the testing function myself, not using any tools. Now I have a tool at hand. But I can't imagine how could I test the UI, with the tool or without it. (Strictly said, with the Internet connections I have problems too, but I'll leave them probably for the other question.) The answer needn't be too platform-dependent, the principles and ideas will help, too. Of course, it is good to check, is some element in another and checked or not. Some regression checks would be nice for that. But I should also be sure that the element mentioned is not cut by some other elements and winks as I ordered by animation. The advices here: Is there a tool to test Java UI? won't help - there are only tools, not principles, and none of the tools could help in my situation.