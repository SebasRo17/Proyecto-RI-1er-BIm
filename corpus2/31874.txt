Found this bug-like behaviour today: if the order of edges is changed so that `VertexList` does not return the vertices in canonical order, `FindHamiltonianCycle` is not always able to find the Hamiltonian cycle, that is obviously there.               edges = {1 -> 2, 2 -> 3, 3 -> 1, 1 -> 3, 3 -> 4, 4 -> 1};     g1 = Graph[edges, VertexLabels -> "Name", ImagePadding -> 10];     g2 = Graph[RotateLeft@edges, VertexLabels -> "Name", ImagePadding -> 10];          {g1, FindHamiltonianCycle[g1, All], VertexList@g1}     {g2, FindHamiltonianCycle[g2, All], VertexList@g2}      ![enter image description here](http://i.stack.imgur.com/YkGZv.gif) ![enter image description here](http://i.stack.imgur.com/MBJip.gif) If a vertex list is specified, that might help, but not always:               g3 = Graph[{1, 4, 2, 3}, RotateLeft@edges, VertexLabels -> "Name", ImagePadding -> 10];     g4 = Graph[{4, 1, 3, 2}, RotateLeft@edges, VertexLabels -> "Name", ImagePadding -> 10];          {g3, FindHamiltonianCycle[g3, All], VertexList@g3}     {g4, FindHamiltonianCycle[g4, All], VertexList@g4}      ![enter image description here](http://i.stack.imgur.com/oAjZD.gif) ![enter image description here](http://i.stack.imgur.com/IPzOz.gif) Is this a bug? If so, at least it is consistent with `HamiltonianGraphQ`:               HamiltonianGraphQ /@ {g1, g2, g3, g4} ==> {True, False, True, False}      _Mathematica_ 9.0.1, Windows 7, x64.