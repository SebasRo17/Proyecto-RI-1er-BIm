My needs are very simple but I don't know the terms I should be Googling for: I need to occasionally send a SMS to a machine and that machine is going to answer with another SMS to the number that did send the first SMS. I've got no say as to how that machine works: it's closed and all it does is receive SMS and send SMS in reply to SMS received (and uniquely to the number that did send the first SMS) and there's no other way to interface with it. Upon receiving the "response SMS", I need to update a server / DB (a regular Java webapp server + SQL DB) with the infos contained in the SMS. There isn't going to be a lot of volume (only a few SMSes daily) and robustness isn't that important (a few SMSes can be missed). What would be a possible architecture for something like that? I was thinking about using two or three cheap smartphones and giving them SIM cards and then program them to regularly (once every height hours or so) send an SMS. Then these smartphones would receive an SMS back from the machine they contacted and I'd intercept that SMS and update my server/DB accordingly. _(I'll have physical control on these smartphones so giving any permission needed to any app won't be an issue)_. Is this something easily doable? Technically, if such a solution could work, how can I access the SMS functionalities of the phone? And how can I have the phone udpate my server/DB? (the phone can be hooked to the Internet, so I take it I can simply do an HTTP POST to my server). Or is there already some (preferrably free or open-source) offering a similar functionality? (maybe something not totally unlike what "zapier" of "ifttt" does, where I could create a rule saying: _"If I receive a SMS containing the word xxx, then send the SMS using an HTTP POST to the URL yyy"_ ). Note that I did configure the server(s) hosting the Webapp myself and develop the entire webapp myself: so the "programming" part ain't that much of a problem. My issue is that I don't know how to "create a bridge" between the SMS coming in response to another SMS and my webserver. I hope I explained the issue simply enough: basically I need some guidance on the architecture to use here (which fits programmers.stackexchange as far as I can tell from just having read its FAQ).