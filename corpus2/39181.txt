I've been promoting Scala at work as something we should try out for things like testing with Specs http://code.google.com/p/specs/ and rapid prototyping of web services with tools like Scalatra https://github.com/scalatra/scalatra and Lift http://liftweb.net. A technical manager is interested in hearing more about Scala, and has no experience with the language. I've pointed out how Scala prototypes could be written quickly and deployed into our existing Java infrastructure as well as use our existing Java libraries. He is largely interested in the specific benefits of using Scala over Java and will be interested in concrete examples. I'd like to hear any thoughts or experiences people have introducing Scala to technical management. Thoughts on good code, clear, concise examples that demonstrate a big win over the Java equivalent, would be greatly appreciated. Some examples areas for discussion I have been thinking about are: **REPL**   A big win over Java, and I use it every day to test the Java code I am writing. **Basic Collection Iteration**   One of the first areas I think Java programmers can see immediate benefit. **Type Inference**   We use a lot of Python at work - I think less type boilerplate in a strongly typed language will be appealing. **Java Integration**   Given our Java investment, this will be a biggie. **Concurrency**   A brief run through of Akka actors and the new parallel collections. I'd love to see any small, focused examples anyone has here. **Specs**   I've been finding BDD with Specs excellent for testing Java applications. **Web development**   I've found Scalatra ideal for rapid development of REST services. Please share any other areas you think might be of interest as well as any focused code examples in these or other areas you think demonstrate advantages of Scala over the Java equivalent. **EDIT:** To be perfectly clear I am primarily interested in **concise concrete code examples** appropriate to this situation. Not at all interested in another "Java vs Scala" thread. I hope that was clear. Something like: **Java:**                 Foo theFoo = null;     for(Foo aFoo: allTheFoos) {       if (aFoo.getId().equals(theIdIWant)) {         theFoo = aFoo;         break;       }     }      **Scala:**                 val thefoo = allTheFoos.find(aFoo.id == theIdIWant)