I was recently thinking about the large variety of lisp languages, specifically the fact that while they all have similar syntax, and could all in theory be implemented from the same small set of primitive functions, the way in which one typically uses each lisp can vary widely compared to all the others. I realized that one could plausibly make the same statement about the family of languages with "C-like" syntax. Yet, most "C-like" languages are commonly distinguished from each other, while it is common to refer to "lisp" in general, and not any specific variant of lisp. So, are C-like languages really more different from each other than lisp-like languages? Or do they just appear so because they have greater variability in syntax? Why are lisp-like languages more frequently lumped together into just "lisp"? No one would ever refer to C, C++, C#, Java as just "C".