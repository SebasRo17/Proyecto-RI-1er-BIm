Sucking Less Every Year -Jeff Atwood I had come across this insightful article.Quoting directly from the post > I've often thought that sucking less every year is how humble programmers > improve. You should be unhappy with code you wrote a year ago. If you > aren't, that means either A) you haven't learned anything in a year, B) your > code can't be improved, or C) you never revisit old code. All of these are > the kiss of death for software developers.   1. How often does this happen or not happen to you?    2. How long before you see an actual improvement in your coding ? month, year?   3. Do you ever revisit **Your** old code?   4. How often does your old code plague you? or how often do you have to deal with your technical debt. It is definitely very painful to fix old bugs n dirty code that we may have done to quickly meet a deadline and those quick fixes ,some cases we may have to rewrite most of the application/code. No arguments about that. Some of the developers i had come across argued that they were already at the _evolved_ stage where their coding doesn't need improvement or cant get improved anymore.   * Does this happen?    * If so how many years into coding on a particular language does one expect this to happen? Related: Ever look back at some of your old code and grimace in pain? Star Wars Moment in Code **"Luke! I am your code!" "No! Impossible! It can't be!"**