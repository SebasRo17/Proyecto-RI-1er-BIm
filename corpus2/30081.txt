For[n = 2500, n < 10000, n += 500,        sum = 0;       pp = N[1/HarmonicNumber[n, 2]];       A = Reverse[IdentityMatrix[n]];       H = IdentityMatrix[n];       For[i = 0, i < n, i++,          For[j = 1, j < n + 1 - i, j++,            H[[j, j + i]] = Sqrt[pp]/(N[Sqrt[n - i]*(i + 1)])]];       T := A.Orthogonalize[N[H].A, Dot];       Z = T.N[H].A.T\[Transpose].A;       sum = Total[(Flatten[UpperTriangularize[Z,1]])^2];       Print[sum]     ]      I have run this program for a long time to get the result for `n = 2500` (about 12 hours) and no more result till now (more than 3 days). I want to know how to make it more efficient. Any help or suggestion will be appreciated!