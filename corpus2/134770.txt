I'm looking for a license (for a C library) which basically says: "Redistributions in binary form must be accompanied by the source code of Larger Work (My code + Your code)" i.e., L = M + Y, with '+' here meaning, for example, static linking / dynamic linking. And there must be no more restrictions other than this. If I choose my license 'X' as:   * GPL - source code of Larger Work, both M and Y, must also be licensed as whole under GPL.   * LGPL - My code continues to be LGPL, Your code can be kept closed-source if needed.   * BSD - source code of neither M nor Y need be disclosed. To be more clear, the binary must be under the license 'X' but source code of Larger Work must be made _available_ \-- under whatever license the Author of Larger Work wants, it need not be restricted to 'X'. LGPL comes close, but it does not mandate the source availability of Your code. Example use case: Author of Larger Work _must_ give the his recipient all of his source code (both M and Y) but can ask the recipient to sign an NDA restricting modification of Y, but the recipient is allowed to study Y. In short, 'X' shouldn't have hereditary characteristics (like *GPL) yet source code availability should be mandated. Is there such a "non-viral" FOSS license ? Thanks in advance ! PS: I asked this question first on StackOverflow, someone there suggested that I post it in this site. That question was closed as off-topic there, and I've deleted it from SO.