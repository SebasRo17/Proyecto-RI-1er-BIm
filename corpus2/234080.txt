I have been reading and working through the exercises of Steve Lott's book _Building Skills in Python_. However, on the very **first** exercise dealing with OOP I have gotten completely stuck. **The problem set is here** : http://www.itmaybeahack.com/book/python-2.6/html/p03/p03c01_class.html#class- definition-exercises **My attempt** (sourcecode):               # Stock Valuation OOP     class StockBlock(object):         def __init__(self, purchdate =0, purchprice =0, shares=0):             self.date = purchdate             self.price = purchprice             self.shares = shares         def __str__(self):             return "Price: %2f \tDate: %s \tShares: %d" % (self.price, self.date,                                                        self.shares)         def getpurchvalue(self):             return self.price * self.shares         def getsalevalue(self, saleprice):             return saleprice * self.shares         def getroi(self, saleprice):             return (self.getsalevalue() - self.getpurchvalue()) / self.getpurchvalue()     blocksGM = [         StockBlock(purchdate = "25-Jan-2001", purchprice = 44.89, shares = 17),         StockBlock(purchdate = "25-Apr-2001", purchprice = 46.12, shares = 17),         StockBlock(purchdate = "25-Jul-2001", purchprice = 52.46, shares = 15),         StockBlock(purchdate = "25-Oct-2001", purchprice = 37.73, shares = 21),         ]     blocksEK = [         StockBlock(purchdate = "25-Jan-2001",purchprice = 35.86, shares = 22),         StockBlock(purchdate = "25-Apr-2001",purchprice = 37.66, shares = 21),         StockBlock(purchdate = "25-Jul-2001",purchprice = 38.57, shares = 20),         StockBlock(purchdate = "25-Oct-2001",purchprice = 27.61, shares = 28),         ]     class Position(object):         def __init__(self, name, symbol, *blocks):             """Accept collection of StockBlock instances."""             self.name = name             self.symbol = symbol             self.blocks = blocks         def __str__(self):             return "Symbol: %s \tTotal Shares: %d  \tTotal Price: %d " % (self.symbol,                                                                            self.blocks[1],                                                                            self.blocks[2])         def getpurhvalue(self):             value = 0             for stock in self.blocks:                 value += stock.getpurchvalue()             return value         def getsalevalue(self, saleprice):             value = 0             for stock in self.blocks:                 value += stock.getsalevalue(saleprice)             return value         def getroi(self, saleprice):             (self.getsalevalue() - self.getpurvalue()) / self.getpurchvalue()          portfolio = [         Position("General Motors", "GM", blocksGM),         Position("Eastman Kodak", "EK", blocksEK),         Position("Caterpillar", "CAT",                  [StockBlock(purchdate = "25-Oct-2001",                              purchprice = 42.84, shares = 18)])         ]     # display individual blocks purchased, and purchase value of the block     def main():         for position in portfolio:             StockBlock(position)          main()      There is no solution in the book, so I cannot check that way. It seems that I totally do not understand OOP? It's just so frustrating and I don't know what I should do to continue... My question is, when I get this utterly stuck learning programming, what strategies can help me overcome the problem? I think this is an important question because I am learning programming by myself. I cannot ask a teacher or friend for help (because I don't have any that are programmers.)