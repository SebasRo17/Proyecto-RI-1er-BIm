Consider this:               point={1.,2.};     f1 = Compile[{{t, _Real}},        Evaluate[Block[{a, b}, {a, b} = point; If[t > 0., a*b*Sin[t], 0.]]]];     f1[2.]      > CompiledFunction::cfse: Compiled expression a should be a machine-size real > number. >> CompiledFunction::cfex: Could not complete external evaluation at > instruction 5; proceeding with uncompiled evaluation. >>               (*0.909297 a b*)      and this:               f2 = Compile[{{t, _Real}},        Evaluate[Block[{a, b}, {a, b} = point;Piecewise[{{a*b*Sin[t], t > 0.}, {0., True}}]]]];     f2[2.]     (*1.81859*)      Why does the `If` version produce errors while the `Piecewise` one doesn't? From this post I believe the compiler transforms the `Piecewise` function into its equivalent `If` function before compilation, so f1 and f2 should be the same. Why the difference?