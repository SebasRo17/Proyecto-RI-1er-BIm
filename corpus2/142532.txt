The Red - Green - Refactor cycle for TDD is well established and accepted. We write **one** failing unit test and make it pass as simply as possible. What are the benefits to this approach over writing **many** failing unit tests for a class and make them all pass in one go. The test suite still protects you against writing incorrect code or making mistakes in the refactoring stage, so what's the harm? Sometimes it's easier to write all the tests for a class (or module) first as a form of 'brain dump' to quickly write down all the expected behavior in one go.