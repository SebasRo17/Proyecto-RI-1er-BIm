**From Microsoft's own built in template for MVC3** The model is extremely skinny, having basically no code. **Model**               public class RegisterModel     {         [Required]         [Display(Name = "User name")]         public string UserName { get; set; }              [Required]         [DataType(DataType.EmailAddress)]         [Display(Name = "Email address")]         public string Email { get; set; }              [Required]         [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]         [DataType(DataType.Password)]         [Display(Name = "Password")]         public string Password { get; set; }              [DataType(DataType.Password)]         [Display(Name = "Confirm password")]         [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]         public string ConfirmPassword { get; set; }     }      While the Controller on the other hand seems to be fat, doing more that simple routing... **Controller**               [HttpPost]     [AllowAnonymous]     public ActionResult Register(RegisterModel model)     {         if (ModelState.IsValid)         {             // Attempt to register the user             MembershipCreateStatus createStatus;             Membership.CreateUser(model.UserName, model.Password, model.Email, null, null, true, null, out createStatus);                  if (createStatus == MembershipCreateStatus.Success)             {                 FormsAuthentication.SetAuthCookie(model.UserName, false /* createPersistentCookie */);                 return RedirectToAction("Index", "Home");             }             else             {                 ModelState.AddModelError("", ErrorCodeToString(createStatus));             }         }              // If we got this far, something failed, redisplay form         return View(model);     }