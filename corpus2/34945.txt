With this procedure, one may determine an eigen-value function $R(a)$ for any given $\Xi$ (say 0, 25, 50, 75, 100)               g[eta1_, eta3_, R_, a_, Xi_] := {f[1], h[1], q[1]} /.          NDSolve[{D[f[x], {x, 2}] - a^2 f[x] + a (h[x] + R q[x]) == 0,         D[h[x], { x, 2}] - a^2 h[x] + a Xi x f[x] == 0,         D[q[x], {x, 2}] - a^2 q[x] + a f[x] == 0,          f[0] == 0,     f'[0] == 1,     h[0] == eta1,     h'[0] == 0,      q[0] == 0,     q'[0] == eta3      }, {f, h, q}, {x, 0, 1}]     s[a_, Xi_] :=FindRoot[g[eta1, eta3, R, a, Xi], {{R, 0}, {eta1, 0}, {eta3, 0}},        MaxIterations -> 100000]      where the condition $f'(0) = 1$ is a normalisation condition. But the problem is that the code doesn't converge always. The output I am looking for is like this ![enter image description here](http://i.stack.imgur.com/wiBv8.png) Thanks