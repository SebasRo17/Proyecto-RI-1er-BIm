I'm writing a Mathematica Package with many functions, but only two can be seen/public. I have:               BeginPackage["VolumeReserves`"];          startInterface::usage = "...";          detailRock::usage = "...";          (* Implementation of functions *)          Begin["`private`"];          global private and initialized variables;          startInterface[___] := ...          detailRock[___] := ...          f1[] := ...          f2[] := ...          f3[] := ...               (* And finally I do: *)          SetAttributes[startInterface, {Protected, Locked}];     SetAttributes[detailRock, {Protected, Locked}];     SetAttributes[f1, {Protected, Locked}];     SetAttributes[f2, {Protected, Locked}];     SetAttributes[f3, {Protected, Locked}];          End[];     EndPackage[];      When I open a new notebook and I load the package for the first time with:               SetDirectory[StringJoin[NotebookDirectory[]]];     << VolumeReserves`      Everything is OK, but if I evaluate the notebook one more time (and so on) I get:               Set::write: Tag startInterface in startInterface[___] is Protected. >>     Set::write: Tag detailRock in detailRock[] is Protected. >>     Set::write: Tag f1 in detailRock[] is Protected. >>     ...     General::stop: Further output of SetDelayed::write will be suppressed during this calculation. >>      So this is a little strange... Why can't I reload/re-evaluate the notebook/package? Should I quit the kernel every time? I've tried to evaluate some of Mathematica Packages, such ComputerArithmetic, more than once, and it doesn't show that error...