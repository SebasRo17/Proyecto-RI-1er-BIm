Some built-in variables trigger actions when their values are changed:               In[17]:= $Assumptions=1         During evaluation of In[17]:= $Assumptions::bass: 1 is not a well-formed assumption. >>     Out[17]= 1          In[18]:= $Assumptions:=2         During evaluation of In[18]:= $Assumptions::bass: 2 is not a well-formed assumption. >>      (Interestingly the message doesn't trigger if it's set again to the _same_ value.) How can we safely implement something like this? Are the any built-in hooks for value changes? * * * This is what I currently have. Does it look safe? Does anyone foresee problems? (There's always the least expected thing that goes wrong with these...)               $var /: Set[$var, value_] :=         Block[{$in = True},               Print["$var set to ", value];  $var = value] /; Not@TrueQ[$in]          $var = 6          (*       $var set to 6       6      *)      `$in` would of course be in a private context and the same needs to be done for SetDelayed as well.