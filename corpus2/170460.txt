Supposse there's a company where web sites/apps are designed to resemble desktop apps. They struggle to add:   * Splash screens   * Drop-down menus   * Tab-pages   * Pages that don't grow downward with content, context is inside scrollable area so page is of a fixed size, as if resembling the one-screen limitation of desktop apps.   * Modal windows, pop-ups, etc.   * Tree views   * Absolutely no access to content unless you login-first, even with non-sensitive content. After splash screen desapears, you are presented with a login screen.   * No links - just simulated buttons.   * Fixed page-size.   * Cannot open a links in another tab   * Print button that prints directly ( not showing printable page so the user can't print via the browser's print command )   * Progress bars for loading content even when the browser indicates it with its own animation   * Fonts and color amulate a desktop app made with Visual Basic, PowerBuilder etc. Every app seems almost as if were made in Visual Basic. They reject this elements:   * Breadcrumbs   * Good old underlined links   * Generated/dynamic navigation, usage-based suggestions   * Ability to open links in multiple tabs   * Pagination   * Printable pages   * Ability to produce a URL you can save or share that links to an item, like when you send someone the link to an especific StackExchange question. The only URL is the main one.   * Back button To achieve this, tons of javascript code is needed. Lots and lots of Javascript and Ajax code for things not related with the business but with the necessity to hide/show that button, refresh this listbox, grey-out that label, etc. The coplexity generated by forcing one paradigm into another means most lines of code are dedicated to maintain the illusion of a desktop app. What is the best way to change this mindset, and make them embrace the web, and start producing modern, web apps instead of desktop imitations ? EDIT: These sites are intranet sites. Users hate these apps. They constantly whine about them, but they have to use them to do their daily work. These sites are in-house solutions, the end-users have no choice but to use them. They are a "captive audience". Also, substitution will not happen because of high costs. But at least if that mindset is changed, new developments would be more web- like.