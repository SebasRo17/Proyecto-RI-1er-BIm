My company has a lot of experience in .NET development, and one of our products in an ERP system. Recently, a customer asked us if we could provide a tablet interface to that system, i.e., a software that allows the customer to view product information and create orders on a tablet. Of course, we are not thrilled about the idea of investing a lot of time and money into learning Objective-C, purchasing Mac development workstations, paying fees to Apple, etc. just for this one project (we _might_ be able to sell the app to a few additional customers afterwards, but the market is very small, since it would only be useful for existing customers of our ERP system). So, what should we do? As far as I can see, we have the following options:   * Write a " **plain old Windows application** " (WPF) and run it on a Windows 7 tablet, such as the Samsung Slate or Acer Iconia. Drawbacks: Heavy, expensive devices with short running time (as compared to "real" tablets).   * Wait for **Windows 8 ARM-based tablets** and write a Metro (WinRT) app. Drawbacks: Wait for at least one year; it's unclear whether Windows 8 ARM will support installation of custom B2B apps without going through the app store.   * Use **mono for Android** and write a .NET app for Android. Drawbacks: Yet another UI library (different from WPF and Silverlight); some providers disallow sideloading of apps. So far, options 1 and 3 seem to be the most realistic. Did I miss any obvious drawbacks or advantages? Is there another option that I haven't considered yet? Have you been in a similar situation and (successfully) chosen one particular option?