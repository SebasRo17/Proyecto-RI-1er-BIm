I'm trying to set up a system of differential equations for passing to NDSolve. Note that my initial conditions are vector valued so Mathematica _should_ know that `raptor[[i]]` is a vector valued function. However, Mathematica seems to think that that `raptor[[i]]` is a scalar valued function (this is indicated by my output, which is included below). Input:               human[\[Theta]_, t_] := 0 t*{Cos[\[Theta]], Sin[\[Theta]]} + {0, 10 Sin[\[Pi]/3]}          V = {25, 10, 25};     P = {{-10, 0}, {0, 20 Sin[\[Pi]/3]}, {10, 0}};     \[Theta] = 0;           Flatten[       Table[       {        raptor[[i]]'[t] == Normalize[human[\[Theta], t] - raptor[[i]][t]]        raptor[[i]][0] == P[[i]]       }, {i, 3}]      ]      Output:               { Raptor[[1]]'[t]=={ first component of human - raptor[[i]][t],                          second component of human - raptor[[i]][t]},       Raptor[[1]][0] =={-10,0},        Raptor[[2]]'[t]== ...      }      Furthermore, changing the raptor indexes into subscripts does not change anything. When I try to use this system in NDSolve I get the error "Computed derivatives do not have dimensionality consistent with the initial conditions." After talking to my TA for the course, we got this to work by defining `human[theta, t]` as one of the differential equations. However, my TA didn't know why my code failed (it seemed very reasonable to both of us) and said I could ask the Mathematica stack exchange. So, could anyone explain why my code fails? Namely, why does Mathematica think that `raptor[[i]]` is a scalar valued function even though its initial condition is clearly vector valued? Is there a better way to do this then putting `human[theta, t]` into the list of equations for NDSolve? PS: for those wondering, this is solving a variant of problem #2 from http://xkcd.com/135/