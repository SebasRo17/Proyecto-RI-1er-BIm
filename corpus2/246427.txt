I came across some code recently where in many, many places, expression evaluations were being assigned to different arrays one index at a time. A psuedo-code example:               array[0] = item1[0] + item2[0];     array[1] = item1[1] + item2[1];     array[2] = item1[2] + item2[2];      or               array[0] /= variable;     array[1] /= variable;     array[2] /= variable;      My instinct would be to first create a function for iterating through an array and assigning an evaluation using a single for loop. Then secondly, just call that function with arguments for the array, a number defining how many indices to loop through and the items to be evaluated.   * Obviously, one obstacle to that method is the fact that the expressions being evaluated are arbitrary - they can be additions, subtractions, divisions, multiplications.   * And for another, the expression operands can be either variables or arrays, and of course in statically typed languages, the types could be varied.   * Also, the number of operands may be varied. Is it possible to make this code more concise taking into account all possible cases, and what would the solution be called in technical terms?