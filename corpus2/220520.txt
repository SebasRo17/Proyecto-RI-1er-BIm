I am working on some C++ code that uses several libraries, including some C libraries, that all have different coding styles. It will be open sourced once it reaches a usable stage. Which would cause the least confusion for a short- term contributor who checks out the code to fix one bug or add one feature?   * Have one consistent coding style throughout the entire application, even if it occasionally doesn't match the typical coding style of the libraries used.   * When a library is heavily used in a certain module, conform to the typical coding style of that library (i.e. the coding style used in the library's own code and documentation) in that module. My thought is that the latter will make it easier for experts in that particular library to make one-off contributions, and make it easier to incorporate tutorial/example code during development. However, it also makes the coding style inconsistent throughout the application. What are the pros and cons of each approach?