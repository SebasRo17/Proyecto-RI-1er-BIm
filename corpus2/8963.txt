Background: I partition images to polygons ( squares ) and color them with VertexColors. I want to use a minimal number of polygons while still showing a clear resemblance of the original image. - Some images need more squares in the centre than along the edges ( i.e. portraits ). I want to create an ImagePartition type-of-function that uses a finer grid closer to the middle of a picture. For example:                1-1 1-2 1-3 1-4 1-5      2-1 .           2-5      3-1 .           3-5      4-1 .           4-5      5-1 5-2 5-3 5-4 5-5      ( 5-by-5 )      The missing part                2-2 2-3 2-4      3-1 3-2 3-3      4-1 4-2 4-3       is replaced with pieces from a 10-by-10 partitioning, i.e. 2-2 by:                3-3 3-4      4-3 4-4      and so on, until 4-3 is replaced with                 7-7 7-8       8-7 8-8       from the 10-by-10 partitioning. Finally 3-2 or ( 5-5, 5-6 / 6-5, 6-6 ) is replaced with the results from a 20-by-20 partitioning.                9-9  9-10  9-11   9-12      10-9 10-10 10-11 10-12      11-9 11-10 11-11 11-12      12-9 12-10 12-11 12-12.      In the case of 6-by-6 partitioning also three levels of partioning are used, in this case 6-by-6, 12-by-12, 24-by-24. And so on. **Question: How to create an alternative ImagePartition function that creates a finer grid closer to the centre of the image. The output lists should be arranged in such a way that it is easy to re-assemble the image from the pieces.**