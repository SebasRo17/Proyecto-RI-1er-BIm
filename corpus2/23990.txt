As a supplementary to my question solution of differential equation I post a new question of how is it possible to make a Table that has elements the solutions of a non linear differential equation, so that to plot them. In a linear system you can do the following:               ss = DSolve[{x'[t] == 3 x[t], y'[t] == -y[t], x[0] == x0, y[0] == y0}, {x, y}, t];     toplot = Table[{x@t, y@t} /. ss, {x0, -0.5, 0.5, 0.25}, {y0, -0.5, 0.5, 0.25}];     ParametricPlot[Evaluate[toplot], {t, -1, 1}]      as @belisarius proposed. If I have to use `NDSolve` can I use variables as above in initial conditions? I first tried the following example.               Plot[r (1 - r^2), {r, 0, 1}, AxesLabel -> {r, r'}]      ssa = NDSolve[{r'[t] == r[t] (1 - r[t]^2), u'[t] == 1, r[0] == r0,                    u[0] == u0}, {r[t], u[t]}, {t, 0, 100}]      toplot = Table[{r@t Cos[u@t], r@t Sin[u@t]} /. ssa, {r0, -.5, .5, 0.25},                                                          {u0, -.5, .5, 0.25}];       ParametricPlot[toplot, {t, 0, 100}]        The solution is what I expected, but it opened a message that said that initial condition r0 is not a number or rectangular array of numbers. I then tried another example, it opened the same message but the solution was nearly what I wanted for some values of μ. For μ>0 the solution was OK except that it wasn't shown the second fixed point. For μ<=0 I didn't get any solution.               sol = NDSolve[{x'[t] == μ - x[t]^2, y'[t] == -y[t], x[0] == x0, y[0] == y0},                   {x[t], y[t]}, {t, 0, 100}]          toplot = Table[{x@t, y@t} /. sol, {x0, -.5, 2, .25}, {y0, -.5, .5, .25}];`          ParametricPlot[Evaluate[toplot], {t, 0, 100}, PlotRange -> All]      **if you copy-paste the code remember to manually treat μ** The expected plots are shown bellow: ![2d saddle node bifurcation](http://i.stack.imgur.com/ptqJD.jpg)