I am creating a Mathematica document which contains a list of proofs in various fields of Mathematics so that I can easily review whenever I would like. First, I create a large set I call 'proofs' that is of this format:               proofs={       {1, "Analysis Proof", "Hint", "Solution"},       {2, "Algebra Proof",  "Hint", "Solution"}     };      where the number represents the field of Mathematics (so I can later possibly specify the _type_ of review), the next input is the proof statement, the hint is a hint, and the solution is either a reference of where to find the proof or the proof itself. I then wrote the following function (code found below) which picks random problems from 'proofs' and asks you to prove the statement. You can then move on to the next question, ask for a hint, or see the solution. The idea is that when you ask for a hint, you can read the hint and when you click 'Ok', it gives the solution which you can read over, you click 'Okay' then it moves on to the next problem. Similarly, if you chose 'Solution', it would bring up the solution which you could read, then you would click 'Ok' and move on. If you chose 'Next Problem', you get another question. Finally, if you chose 'End Practice', it quits the review and prints how many practice proofs, i.e. the variable _i_ , you did. My question: The code works up to a point. The code I wrote does not force the program to 'wait'. Meaning, if I chose 'Hint', it gives the hint but does not wait for the user to hit 'Okay' before giving the solution and printing the next problem. Or if one chose 'Solution', it does not wait for the person to read it over before creating a new dialog box with the next question. This creates a problem of compiling text boxes that become very irritating and get in the way. What code would you need to add to make Mathematica wait before printing the next question/solution? Of course, my code may be generally very inefficient or non-practical for creating this type of program, so any advice to how I am creating this is of course welcomed!               prob[x_] := Module[{},       i = 1;            Label[begin];       p = RandomInteger[{1, Length[proofs]}];       do = ChoiceDialog[         proofs[[p, 2]], {"Hint" -> 1, "Solution" -> 2,           "Next Problem" -> 3, "End Pracitce" -> 4}];            i++;            If[do == 1, Goto[hint],        If[do == 2, Goto[solution], If[do == 3, Goto[begin], Goto[end]]]];            Label[hint];       CreateDialog[{TextCell[proofs[[p, 3]]], DefaultButton[]}];       MessageDialog[proofs[[p, 4]]];       Goto[begin];            Label[solution];       MessageDialog[proofs[[p, 4]]];       Goto[begin];            Label[end];       Print["You did", i "proof review."];       ]