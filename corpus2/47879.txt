I have Markov chains with a pair of absorbing states taken from the $n$-length strings formed from `{"H","T"}` for `n` at least 3 (generally 3 or 4), for example               {"HHH", "HHT", "HTH", "HTT", "THH", "THT", "TTH", "TTT"}      and with other states with names "leading up" to those states through the addition of either `"H"` or `"T"` to the end of the name of the previous state, from an initial state of `""`. For example the chain for the pair states `"TTH"` and `"HTT"` would have states               {"", "H", "T", "HT", "TT", "HTT", "TTH"}      I would like to represent the Markov chain for the transitions among these states as a graph with the nodes arranged according to their length as, for example in ![](http://i.stack.imgur.com/yZt0O.png) but `Graph` does not arrange nodes this way by default, ![](http://i.stack.imgur.com/lWnU7.png) and I can't figure out how to achieve a finer control over the node arrangement beyond what is offered by `GraphLayout` (though in some cases, as for this example, choosing `"LayeredDrawing"` comes close). Is there a way that I can use the node names to order and align the arrangement of nodes in a `Graph` so that they appear as they do in the first figure: first `""`, then 1-length node names, then 2-length node names, etc.? * * * Ideally the approach should be able to take something like               mp = DiscreteMarkovProcess[1, ( {          {0, .5, 0, 0, .5, 0, 0},          {0, .5, .5, 0, 0, 0, 0},          {0, .5, 0, .5, 0, 0, 0},          {0, 0, 0, 1, 0, 0, 0},          {0, .5, 0, 0, 0, .5, 0},          {0, 0, 0, 0, 0, .5, .5},          {0, 0, 0, 0, 0, 0, 1}         } )];     Graph[mp, VertexLabels -> {1 -> "", 2 -> "H", 3 -> "HT", 4 -> "HTT", 5 -> "T",  6 -> "TT", 7 -> "TTH"}]      and use `VertexLables` to automatically position the nodes in the `Graph` (the numbering and ordering of nodes is not guarantee, only the names). This should also work for "degenerate" cases such as ![](http://i.stack.imgur.com/3mLxv.png) and for longer absorbing states such as ![](http://i.stack.imgur.com/d6dxe.png)