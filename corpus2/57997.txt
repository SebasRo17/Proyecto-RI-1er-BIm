I've noticed the following significant different in performance for different formulations of the same function:               Exp[-t - 256 I Pi t] == Exp[-t] Exp[-256 I Pi t]     Table[Exp[-t - 256 I Pi t], {t, 0, 1, 1/30000}]; // AbsoluteTiming     Table[Exp[-t] Exp[-256 I Pi t], {t, 0, 1, 1/30000}]; // AbsoluteTiming     (* True, 0.765, 0.496 *)      I've got a function with the form below, which oddly splits the difference               func[a_, b_] := Exp[-a t] Exp[-b I Pi t]     func[1, 256] == Exp[-t - 256 I Pi t]     Table[func[1, 256], {t, 0, 1, 1/30000}]; // AbsoluteTiming     (* True, 0.614 *)      The way _Mathematica_ is storing the complex exponential seems to be the slower one:               Exp[-t - 256 I Pi t]     Table[%, {t, 0, 1, 1/30000}]; // AbsoluteTiming     Exp[-t] Exp[-256 I Pi t]     Table[%, {t, 0, 1, 1/30000}]; // AbsoluteTiming      ![enter image description here](http://i.stack.imgur.com/fpsE9.png) The issue does appear to be caused by the presence of complex values               Exp[-t - 256  Pi t] == Exp[-t] Exp[-256  Pi t]     Table[Exp[-t - 256  Pi t], {t, 0, 1, 1/30000}]; // AbsoluteTiming     Table[Exp[-t] Exp[-256  Pi t], {t, 0, 1, 1/30000}]; // AbsoluteTiming     (* True, 0.37, 0.37 *)      I can reproduce this behavior in v9 and v10 on Win 7/64-bit. I am looking for insight into how one might achieve the speeds observed when the exponential terms are not combined.