I've recently gotten into learning about functional programming. I've been coding in Scala most of this past year and am just now starting to fully grasp the power of a functional language. I want to build a data-driven website from scratch using functional techniques. I'm having trouble wrapping my head around how to start thinking about this. I've done this many times over using standard Java OO techniques. I usually think about the end product, build my object model off of that, then build my DB CRUD layer, then my services layer (business logic), then my web/ui layer. My question is: how can I reason about/design a large, data-driven web application in a functional manner? EDIT: Good points made so far. How about this: In a data-driven web application (database, MVC, HTML forms, etc.) where does it make sense to use FP? I'm still working on getting a good understanding of exactly what FP is, so please bear with me in my questions.