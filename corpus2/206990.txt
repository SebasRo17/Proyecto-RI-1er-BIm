I've just found something strange in a code written by company which I work for. In an embedded software where dynamic linking doesn't exists, shared library (released on a GPL licence) is copied into an object which is statically linked then. Here is a piece of a makefile:                $(TARGET_DIR)/$(PHOST)_P_LIBxxxxxx.o: $(TARGET_DIR)/$(BINIMAGE)      $(ECHO) --- Storing dynamically linked library as ELF object ---      $(QUIET)cd $(TARGET_DIR) && \      powerpc-eabi-objcopy --input-target binary --output-target \      elf32-powerpc --binary-architecture powerpc:common \        --keep-global-symbol=_binary_$(PHOST)_P_LIB_xxxxxx_start \        --keep-global-symbol=_binary_$(PHOST)_P_LIB_xxxxxx_end \        --keep-global-symbol=_binary_$(PHOST)_P_LIB_xxxxxx_size \        --rename-section .data=.rodata,alloc,load,readonly,data,contents \        $(BINIMAGE)  $(PHOST)_P_LIBxxxxxx.o      $(RM) $(TARGET_DIR)/$(BINIMAGE)      $(ECHO)      $(ECHO) --- P library ready ---      Does it somehow bypass GPL rules? Or simply it's illegal?