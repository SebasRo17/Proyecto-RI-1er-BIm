This is an example from MMA:               cListable = Compile[{x}, (x-1)^2, RuntimeAttributes -> {Listable}]      In case of single entry:               cListable[ 10.1]      Returns:                82.81      and if we give it a list:                cListable[ {-5, 0, 5}]      Returns:                {36., 1., 16.}      Is it possible to use cListable, or any other compiled function, in `NMinimize` so that the function I want to minimize take a list as its argument and as a result use all of my CPU cores to minimize the function? The point of doing this is using all the CPU cores available and reduce the computation time.