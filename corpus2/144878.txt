Could someone help me understand what is the difference between the two, far as I understand it when request comes to a blocking framework it creates new thread for that request and processes it, if second request comes to server before the first one has finished it execution it will create another thread. Now for non-blocking server when one request comes to a web server it wont create a thread but will wait for a request to complete and in case another request comes to a framework before first has finished executing it wont be able to process it before it returns result of first request. Did I get it right? Another question I have is what exactly happens with second request in non- blocking framework does browser just waits for server to respond till request expires or something else happens? Yet another question is, why are web apps built with non-blocking servers generally considered faster (is it just because of time spend on scheduling threads or something else?) And finally, if non-blocking frameworks can process one request at a time, how can web apps built with non-blocking frameworks process more requests than ones built with blocking frameworks (assuming that above statement is correct). Does that mean that for each instance of blocking framework on our server we would actually deploy multiple instances of non-blocking framework?