I understand that the dependency injection is something done by coding and its all done at compile time. And that Dependency injection coding is easily done now by helper tools like Ninject. However this is at compile time that the dependency injection occurs. Then what does it mean that dependency injection also occurs at Runtime? This is straight from wiki about Dependency Injection > Dependency injection is a software design pattern that allows the removal of > hard-coded dependencies and makes it possible to change them, whether at > run-time or compile-time. I mean I thought about it and came up with the idea that it may refer to multiple interfaces to a single class when a Delegate calls a metho from one of the interfaces, dependency injection decides something like this at runtime, but when I went deeper into it and even discussed it with my boss it sounded like its not that simple as that. And that then, how does the dependency injection makes this decision and assume it the correct one? Anyone can help me clear out this question?