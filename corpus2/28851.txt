Here are a few: `AppendTo[data, elem]`, `Sort[data, test]`, in some cases use of `___` (as mentioned in David Wagner's book). **Edit:** A Wolfram Research developer explains here why `Union[data,test]` has quadratic complexity, and I am pretty sure the same applies to `Sort[data,test]`. The same Worfram developer explains here that AppendTo[data,elem] has quadratic complexity. There are many math problems such as `Inverse[natrix]`, `FactorInteger[n]` that are inherently expensive on large problems. The most important answers to this question will be features in the core language that can kill the performance of a program. Sometimes you can greatly improve the performance of your program if you avoid such features.