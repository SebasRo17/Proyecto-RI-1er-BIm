Say I want some parts of my software to be encrypted. For example, the credentials for a database, etc. I need to store those values somewhere, but doing so in cleartext would make it easy for an attacker to gain unauthorised access. However, if I encrypt some cleartext, then where do I store the key? Anything that software has access to, a determined attacker would have access to, no matter what level of obfuscation:   * Say the key is protected by the filesystem's security model; but what about (malicious) superusers, or platforms that don't provide such fidelity?   * Or the key is hardcoded into software binaries, but it could always be decompiled and what about open source software or interpreted code?   * If the key is generated, such an algorithm would need to be deterministic (presumably) and then the same problem applies to the seed.   * etc. Cryptography is only as strong as the weakest link in its chain and this seems like a pretty loose one! Presuming it's the right tool for the job (humour me), then how can one secure such information robustly? * * * Regarding the right tool for the job: Probably, in -- for example -- the case of service access (DBs, authentication servers, etc.), you would restrict access at this tier with a service account, maybe with some service-level auditing, etc. and so having the credentials in cleartext isn't such a worry. To me, however, that still seems inadequate: I don't want anyone poking around where they shouldn't be!