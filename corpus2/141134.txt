One of the tenets of agile is ... _Customer collaboration over contract negotiation_ ... another one is ... _Individuals and interactions over processes and tools_ But the way I see it, at least when it comes to interaction with the customer, there is a fundamental problem: _How the customer thinks is different to how a software engineer thinks_ That may be a bit of a generalisation, yes. Arguably, there _are_ business domains where this is not necessarily true---these are few and far between though. In many domains though, the typical customer is:   1. Interested in daily operational concerns--short-range tactics ... not necessarily strategy;   2. Understandably, only concerned with the immediate solution;   3. Practical thinkers, not abstract thinkers;   4. Much more interested in "getting the job done" than considering how the solution will support future concerns. On the other hand, _in the ideal_ , software engineers who practice agile are:   1. People who think alot about quality;   2. Individuals who appreciate how a little bit of upfront work can save a ton in effort down the line;   3. Experienced, analytical thinkers. So there seems to be a culture discrepancy that tends to inhibit "customer collaboration". What's the best way to address this?