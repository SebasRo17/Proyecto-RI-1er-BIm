Over the past year or so the financial firm I work at has been moving towards converting our COBOL banking core, which is really tailored and custom fit to our business model, to a standardized big box vendor software package (written.. in.. RPG /facepalm). My opinion of the software, along with the IT staff and other programmers was that it really wasn't anything better and wouldn't fit our customers needs (that is the point after all..). Long story short, the project has not been going smoothly and data mapping has been like pulling teeth. I have been rewriting a lot of internal systems to use the new core, and I've run into a big show stopper with their API. I have been going back and forth with the "analyst" who goes back and forth with the programmer (I think, who knows in reality) and I'm getting nowhere fixing this issue. In fact I did get a response that it might be a few weeks to check the scope of the fix, and then months after in order to even fix it. I simply can't find a workaround, and I really would never edit banking database tables directly (ever). **So what do you find most effective at getting the ball moving with vendors fixing their bugs?** Should I fix the RPG code? I am _really_ negligent to go in and try and fix the RPG code because I don't know RPG, and none of my colleagues do either. Really my only other technical fall back is to screen scrape the application at a terminal level, and automate that with some scripting - but that seems extremely hackish. I've already brought this up with the COO, and now the VP, but I don't think they have enough clout with this vendor to get this fast tracked. Should I bring this up as another reason to delay the conversion? It would be a huge shift from an automatic process into a tedious manual entry procedure which would require a lot more man power and I doubt that would go over well.