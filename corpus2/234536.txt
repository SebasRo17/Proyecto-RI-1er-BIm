My objective is to get from an algorithmically sound software prototype to a SaaS API product. To give a similar and illustrative example, suppose that I have prototyped scalable facial recognition software in a high level language like Matlab; this algorithm takes a real world image as input and detects and recognizes, say, celebrity faces. It's accurate and decently optimized, running about ~2 seconds per image on a 2.4 GHz processor. In C, it should run ~0.5 seconds per image. The goal is to get from a Matlab prototype to a cloud based API service that can scale massive amounts of image data. An initial test product should be to handle ~100 calls per second, but in the long term it should be able to handle >10,000 calls per second. This will eventually be combined with a web crawling application to scale all the web's image data. Given the source code of the prototype, how to build, test and deploy this in a scalable way? My background is math and algorithms rather than software and systems engineering.