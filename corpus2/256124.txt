It is easy to implement calls to API endpoints, then to parse JSON and handle the data - but what is a good design pattern for this? Here are some ways I have tried but I feel like there should be a better way:   1. Create a singleton class that manages all networking code and all data parsing code for the entire application for all endpoints. Then any controller class can hit the singleton   2. Make network endpoint tasks straight from view controllers - using blocks within the view controller to manage responses Consider an application that can hit an endpoint (GET) to download a list of appointments. Also consider an POST endpoint where you can send new appointments. Data must be packaged/unpackaged in JSON and errors must be handled appropriately. What is a good design pattern to accomplish this? And before you downvote this post and say its too broad or subjective just look at this page: https://programmers.stackexchange.com/help/dont-ask > Some subjective questions are allowed, but “subjective” does not mean > “anything goes”. All subjective questions are expected to be > **constructive**. A good answer to this common problem is hard to find.