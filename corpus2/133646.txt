I have designed/built a number of small web apps. Most have been used by clients who operate in a specific geographic area, mostly within the same state/province. For these I would follow best practices but normally didn't worry too much about issues caused by distance from the server. I have a potential client whose locations are spread out in several countries around the world. What specific considerations should I make in designing an app that will be used in locations that are not near each other? Some of the more obvious ones I've thought about:   * i18n/localized strings   * Static content delivery via CDN   * Reducing instances where the client needs to communicate with the server   * Communicating with the server in the background while the client is doing other things I feel that list should be longer, but I don't have the breadth of experience to be sure. I am mostly concerned about the marginal issues presented by serving a geographically-distributed userbase that would not otherwise be high-ranking concerns for clients in closer proximity.