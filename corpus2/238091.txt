I've been trying to learn more about generics, and I finally felt that I ran into a situation that it would be more useful to use it instead of only regular classes. Would the following be a practical use of generics? A spaceship has hardpoints that can equip only certain types of equipment. The equip function has code to determine if the hardpoint can equip an equipment item based on what the generic parameter T is assigned to.               class Equipment {     ...     }          class Thruster : Equipment {     ...     }          class Spaceship {         void Equip<T>(Hardpoint<T> hardpoint, Equipment equipment) {             hardpoint.Equip(equipment);         }     }          class Hardpoint<T> where T : Equipment {         void Equip(Equipment equipment) {             ...(check if equipment inherits from or is of type T)         }              ... (some other code common to all hardpoints)     }          class ThrusterHardpoint : Hardpoint<Thruster> {         .... (some code specific to thruster hardpoints)     }