I just started working with Django coming from years of Spring MVC and the forms implementation strikes as being slightly crazy. If you're not familiar, Django forms starts with a form model class that defines your fields. Spring similarly starts with a form-backing object. But where Spring provides a taglib for binding form elements to the backing object within your JSP, Django has form widgets tied directly to the model. There are default widgets where you can add style attributes to your fields to apply CSS or define completely custom widgets as new classes. It all goes in your python code. That seems nuts to me. First, you are putting information about your view directly in your model and secondly you are binding your model to a specific view. Am I missing something? EDIT: Some example code as requested. Django:               # Class defines the data associated with this form     class CommentForm(forms.Form):         # name is CharField and the argument tells Django to use a <input type="text">         # and add the CSS class "special" as an attribute. The kind of thing that should         # go in a template         name = forms.CharField(                     widget=forms.TextInput(attrs={'class':'special'}))         url = forms.URLField()         # Again, comment is <input type="text" size="40" /> even though input box size         # is a visual design constraint and not tied to the data model         comment = forms.CharField(                    widget=forms.TextInput(attrs={'size':'40'}))      Spring MVC:               public class User {         // Form class in this case is a POJO, passed to the template in the controller         private String firstName;         private String lastName;         get/setWhatever() {}     }          <!-- JSP code references an instance of type User with custom tags -->     <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>     <!-- "user" is the name assigned to a User instance -->     <form:form commandName="user">           <table>               <tr>                   <td>First Name:</td>                   <!-- "path" attribute sets the name field and binds to object on backend -->                   <td><form:input path="firstName" class="special" /></td>               </tr>               <tr>                   <td>Last Name:</td>                   <td><form:input path="lastName" size="40" /></td>               </tr>               <tr>                   <td colspan="2">                       <input type="submit" value="Save Changes" />                   </td>               </tr>           </table>       </form:form>