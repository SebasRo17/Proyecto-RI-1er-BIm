I'd like to validate I'm not in the wrong way. My team project is using Visual Studio Scrum 2.x. Since each area/product has a lot of kind of requirements (security, user interface, HTTP/REST services...), I tried to manage this creating "parent backlogs" which are "open forever" and they contain generic requirements. Those parent backlogs have other "open forever" backlogs, and/or sprint backlogs. For example:   * HTTP/REST Services (forever)      * Profiles API (forever) *POST profile (forever)        * We need a basic HTTP/REST profiles' API to register new user profiles (sprint backlog) **Is it the right way of organizing the product backlog?** _Note: I know there're different points of view and that would be right for some and wrong for others. I'm looking for validation about if this is a possible good practice on TFS with Visual Studio Scrum._