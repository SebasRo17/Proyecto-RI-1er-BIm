I'm never sure when a project is far enough along to first commit to source control. I tend to put off committing until the project is 'framework- complete,' and I primarily commit features from then on. (I haven't done any personal projects large enough to have a core framework too big for this.) I have a feeling this isn't best practice, though I'm not sure what could go wrong. Let's say, for example, I have a project which consists of a single code file. It will take about 10 lines of boilerplate code, and 100 lines to get the project working with extremely basic functionality (1 or 2 features). Should I first check in:   1. The empty file?   2. The boilerplate code?   3. The first features?   4. At some other point? Also, what are the reasons to check in at a specific point?