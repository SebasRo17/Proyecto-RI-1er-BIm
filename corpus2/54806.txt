I am trying to use `MapIndexed` to manipulate a matrix of data but I am having trouble getting the levels parameter to work the way I would like. Suppose that my data looks like this, with every odd column being a count and the even columns being some piece of data:               a = {{11, d11, 21, d21, 31, d31},          {12, d12, 22, d22, 32, d32},          {13, d13, 23, d23, 33, d33},          {14, d14, 24, d24, 34, d34}};          b = {{11, d11, 0, Null, 31, d31},          {12, d12, 0, Null, 32, d32},          {13, d13, 0, Null, 33, d33},          {14, d14, 0, Null, 34, d34}};          c = {{0, Null, 0, Null, 31, d31},          {0, Null, 0, Null, 32, d32},          {0, Null, 0, Null, 0, Null},          {0, Null, 0, Null, 34, d34}};      As you can see, some odd columns will have a zero count and the corresponding data column will be `NULL`. Edit: _I have changed`c` to reflect some new bits of information about the data. There may be some rows that contain the `0, NULL` pattern, but I only want to eliminate columns in which the first row is like this. The first row is a sum of the following rows, and I only want to eliminate a column if it has no data at all. This is why I structured the `For` loop in the way I did. Based on the responses, I felt I needed to clarify._ I'd like to eliminate both the count and data columns any time this is the case. For example, after some operation I'd like to have:               a0 = {{11, d11, 21, d21, 31, d31},           {12, d12, 22, d22, 32, d32},           {13, d13, 23, d23, 33, d33},           {14, d14, 24, d24, 34, d34}};          b0 = {{11, d11, 31, d31},           {12, d12, 32, d32},           {13, d13, 33, d33},           {14, d14, 34, d34}};          c0 = {{31, d31},           {32, d32},           {0, NULL},           {34, d34}};      I accomplished this using a hack with a `For` loop but this is obviously not the proper way to use Mathematica and I was directed to `MapIndexed`:               a0 = For[i = 1, i < Length @ a[[1]], i = i + 2,               If[a[[1, i]] == 0,                  a = Drop[a, None, {i, i + 1}];                  i = i - 2              ]          ];      How can I get `a0` with something of this form?:               a0 = MapIndexed[f, a, list];