I'm looking for a commonly used name for the process of developing a child object from a parent object, either through clone-and-modify techniques or through the prototypal inheritance mechanisms available in a language like JavaScript. In _JavaScript: The Good Parts_ , Douglas Crockford uses the method name _beget_ for this procedure. That seems a bit too graphic for my tastes, and I've not seen it used elsewhere. ECMAScript 5 and some frameworks just use the method name _create_. E.G. _Take care when_ **———** _prototype X not to override this attribute._ My ideas are _evolving_ , which feels sort of pretentious, and _adapting_ , which just seems vague. _Deriving_ might work, but might also be confusing since it is commonly used when discussing classical inheritance. The term _extending_ might be applicable, but seems to imply that the original object is being modified, which is not the case here. Underscore.js seems to make this available via e.g. `_(o).chain().clone().extend(o2)`. Is there a succinct and widely used term for this procedure?