I have a list with points coordinates. And I'm trying to traverse it and perform some matrix operations on each point. But I have a problem with storing modified points in the initial list instead of the original points. Here is the complete entry point example:               (* the matrix of the linear operator of rotation around OX axis *)     rx = {         {1, 0, 0, 0},         {0, Cos[ax], -Sin[ax], 0},         {0, Sin[ax], Cos[ax], 0},         {0, 0, 0, 1}     };          (* translation matrices *)     t1 = {         {1, 0, 0, -j},         {0, 1, 0, -k},         {0, 0, 1, -l},         {0, 0, 0, 1}     };     t2 = {         {1, 0, 0, j},         {0, 1, 0, k},         {0, 0, 1, l},         {0, 0, 0, 1}     };          (* projection onto OXY plane *)     f = {         {1, 0, 0, 0},         {0, 1, 0, 0},         {0, 0, 0, 0},         {0, 0, 0, 1}     };          points = {         {{100},{0},{0},{1}},         {{155},{0},{0},{1}}     };          ax = Pi/4;     j = 100;     k = 100;     l = 0;      And this is my solution to it, which I try to improve               For[i1 = 1, i1 < 3, i1++, {         item = t1 . Part[points, i1];         item = rx . item;         item = t2 .item;         item = f . item;         xP = N[Part[item, 1]];         yP = N[Part[item, 2]];         zP = N[Part[item, 3]];         homogP = N[Part[item, 4]];         Print[{xP, yP, zP, homogP}];     }];      the output is:               {{100.},{29.2893},{0.},{1.}}          {{155.},{29.2893},{0.},{1.}}      And this seems to be correct. But if I change the `For` loop with the solution inspired by Alexei Boulbich               Map[{t1.#, rx.#, t2.#, f.#, N[#]} &, points];     Print[points];      I get this:               {{{100},{0},{0},{1}},{{155},{0},{0},{1}}}       That is the original list without any operations applied.