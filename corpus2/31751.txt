I compute all eigenvalues of a large matrix, and I decide that the speed is more important than the precision. Then the question is, can I speed up `Eigenvalues[]` by setting a lower precision goal? For example, consider a real symmetric random $100\times 100$ matrix:                In[1]:=  A = # + Transpose[#] &@RandomReal[{-1, 1}, {100, 100}];      and compute                In[2]:=  Do[Eigenvalues[A], {10}]; // AbsoluteTiming      Out[2]=  {0.019001,Null}      In real computation I may use a matrix much larger than $100\times 100$, and the computation would take much longer time than $0.019$ seconds. I want to speed up the computation. Can I set a lower precision goal, say `3`, so that `Eigenvalues[]` runs fuster? So I tried                In[3]:=  Do[Eigenvalues[SetPrecision[A, 3]], {10}]; // AbsoluteTiming      Out[3]=  {12.358707,Null}      The precision of the results is `3`, but the computation took `12.36` seconds. This is not what I want. Is there a clever way to speed up `Eigenvalues[]` by setting precision goal to be `3`?