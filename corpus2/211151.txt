The R&D team I'm in has decided to adopt a coding standard. We have only recently formed, and have too little code and common coding time of our own to base our standards/conventions document on what has developed organically in our team, and on good examples from our own code etc. Now, every one of us has some experience from past workplaces - although none of us is at a state of saying "let's adopt this here comprehensive document I have found to be fitting for the kind of work we do here" (*). Plus, some of us (including myself) only have experience from places with no official coding standard, or writing in different languages in a different setting (high- pressure weekly-release production environment as opposed to more research- oriented development work) So, one of the options I've been thinking about is taking a relatively well- known and well-regarded document, snipping off what we don't care about/care for, and making some modifications based on our preferences. Is this a common practice? Do you believe this is a good idea? If so, what would be a reasonable 'baseline' coding standard (don't tell me which is best, I don't want to start a religious conflict here; just point out what would be comprehensive or 'neutral' enough to build upon.) **Notes:**   * We are expecting to work with C, C++, OpenCL, CUDA, Python.   * We are a team of 4 people + manager, expected to grow to about 5-6 within a year or so.   * In our company, teams are almost entirely autonomous and usually don't interact at all (not even by using each other's code - the work is on entirely different projects); so - no company-wide considerations to make.   * Regarding tools, at the moment what we know is that we're going to be using Eclipse, so its code formatter is going to be one tool at least. Ctrl+Shift+F has long been my friend   * When I write Java, I've adopted the practice of adhering as strictly as possible to Bloch's Effective Java. Now, that's not quite a coding standard, but you could call some bricks, cement and mortar for a coding standard. I was thinking of possibly including something like that as part of the 'mix' (minding that we don't do Java).   * I mean coding standards in the wider sense of the word, e.g. adopting suggestions made in the answers to this P.SE question.   * I've found a big list of C++ coding standards documents; maybe I should mine that our baseline.   * (*) That's not quite true, but I don't want to complicate this question with too many specifics.