I've never written a unit test. I'm reading _The art of Unit Testing_ by Osherove, and he explains a way to choose where to start when you're writing tests for legacy code. Basically you end up with two kinds of tests to write: **easy** (on components with few dependencies) and **hard** (on components with many dependencies). Then he says that starting from the hard ones you have to be more experienced, but that it lets you refactor and make testable a wide part of the system, making later work much easier. But isn't it true the way around too? I mean, if you start from easy tests, shouldn't you end up making hard tests easier?