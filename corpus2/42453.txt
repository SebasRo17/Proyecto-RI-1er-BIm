Is there a way to **capture all package files touched** whenever a package is called via `Get`, `Needs`, `Beginpackage` or similar? While `FindFile["package`"]` can point to the first file that is called, the problem is not solved yet. The first file might contain additional `Get` (or related) calls that could point to files with completely different names at completely different places. These dependencies can only be resolved at runtime. An idea is hinted in the documentation of `Get`: whenever `Get` is called, it sets `$InputFileName` to the file it reads from. A possible way to capture the temporarily set `$InputFileName` would be to redefine `Get` via the Villegas- Gayley wrapper. Unfortunately, it is not possible, as any further `Get` called _from inside_ a `Get` won't have access to the outermost layer of the redefined `Get`. If someone can do it nevertheless, it would be really useful. Note that in a normal situation, an already loaded package won't be loaded again, so any repeated call would not capture any files. To overcome this, the function must be such that it **always** calls each dependent package/file. For that, it must not leave (too much) footprint on globals (like `$Packages`, `$ContextPath`, etc.).