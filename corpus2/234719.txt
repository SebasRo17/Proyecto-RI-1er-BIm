I have a large list of intercommunicating components; so I decided to have one class create all of them and then subsequently delegate them to other classes to facilitate finer tweaking and wiring together. By "finer tweaking", I mean that the components are modified to their final state; and by "wiring together" I mean that components are given a way to communicate in a specific manner. After they are all wired together, I send all the components over to an organizer to be properly organized into a GUI. I read somewhere that a class should only create objects or use them, but never both; so, I am trying to follow that and also limit each class's responsibilities. This initializer/delegator class does both initializing and delegating, so **should I further split it into an initializer and delegator?**