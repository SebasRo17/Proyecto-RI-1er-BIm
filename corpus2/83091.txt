I'm just learning about dependency injection, and am stuck on something. Dependency Injection recommends sending dependent classes through the constructor, but I'm wondering if this is necessary for data objects. Since the Unit-Testability is one of the main benefits of DI, would a data object, that only stores data, and not any procedures ever be unit tested, making DI an unnecessary layer of complexity, or does it still help in showing dependencies even with data objects?               Class DO{         DO(){             DataObject2List = new List<DO2>();         }              public string Field1;         public string Field2;         public List<DO2> DataObject2List;     }          Class DO2{         public DateTime Date;         public double Value;     }