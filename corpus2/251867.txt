Basically I'm expanding a literate program in Haskell. There are two things I need to look for to expand. Here's an example file:               program.c.lit:     ==============     Some comments in the source file that I can ignore         <main>=         code.. code ...         code..         <a>           Some comments in the source file that I can ignore         <a>=         code... code...         code..      In a file, I need to look at each `<some var>` and substitute it with its matching definition defined below `<some var>=`. All the lines which are indented with 4 spaces below a `<some defn>=` are included in that chunk. In the end i should have a file consisting of only `code ...` lines. How should I approach this problem in terms of file processing, what's a good approach? I'm comfortable with recursion, less comfortable with monads.