I'm trying to solve a set of six simultaneous non-linear equations to get a numerical answer using `NSolve`:               NSolve[{-0.5547005383792517 +          0.8082903768654761/E^(0.08452994616207483*(0.10136907301545368 +                         beta1/0.3^alpha)) ==         a, -0.3147005383792517 + 0.669726312259966/               E^(0.08452994616207483*(0.10136907301545368 +                beta1/0.45^alpha)) == a,           -0.13470053837925167 +          0.5658032638058333/          E^(0.08452994616207483*(0.10136907301545368 +                beta1/0.55^alpha)) ==             a, -0.540774588761456 +          0.805711228582561/          E^(0.0779225411238544*(0.10136907301545368 + beta2/0.3^alpha)) ==             a, -0.420774588761456 +          0.7324647532568737/          E^(0.0779225411238544*(0.10136907301545368 + beta2/0.45^alpha)) ==             a, -0.160774588761456 +          0.5737640567178843/          E^(0.0779225411238544*(0.10136907301545368 + beta2/0.55^alpha)) ==             a}, {alpha, beta1, beta2, a}, Reals]      (I'm not very experienced with Mathematica - so I hope that is the correct way to paste code in here so that others can copy into Mathematica and try running it) I get the following errors:               PolynomialGCD::lrgexp: Exponent is out of bounds for function PolynomialGCD.      This seems to suggest that Mathematica can't deal with the large values used as the exponents in the equations given - but as far as I can see the values aren't particularly large. I do know roughly what sort of ranges the results for each of the variables should have (eg. `a` should be between 0 and 1) but I can't seem to find a way to specify this extra knowledge as an option to `NSolve`. I'm not sure where to progress from here, now that I've got these errors. Does anyone have any ideas? I am taking the equations from a paper that I am trying to reimplement, but I'm pretty sure the equations are how they're meant to be. I may be doing something silly in Mathematica though.