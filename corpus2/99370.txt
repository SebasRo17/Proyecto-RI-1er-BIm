In a company I used to work for, executives insisted that the code coverage with unit tests must be 99% or more. This resulted in writing more tests than code. It took us literally 3 days to write tests for a single class that took a day to implement. As a result, however, I learnt a lot about TDD, testing tools, practices etc. In the company I worked for afterwards, unit testing was an unknown thing. It was something someone maybe heard before. I struggled to introduce them to concept of unit testing, but without effect. Now, as a self-employed, I wonder - how much time is **really** necessary to spend on unit testing? Being mostly iPhone/Android developer, which parts of the code should be covered in tests?