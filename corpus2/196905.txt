Please excuse me as I am a bit new to the following technologies and practices. I have been given the task to create a management suite utilizing an MDI GUI. This suite will be the front end to a WCF data service. My question is, what design pattern is typically used by most professionals when designing such an application. At the moment, I have been looking into both MVC and 3-tier design patterns. If the MVC route tends to be taken, I'm assuming that because the WCF service is added as a service reference which provides visibility to all it's classes, the model part of MVC is pretty much covered? Would it make sense to generate an interface from the WCF class? If the 3-tier pattern is used, would it make sense to create datalayer objects for every visible WCF class (ex. PropertyDAL), and on top of that, business layer objects for each datalayer object? If this is the case, with there being over 114 classes which would be made visible, this would mean 228 additional classes which seems a bit bloated to me and not necessary. Here is the link to the usage of MVC design pattern which has lead me to my question.