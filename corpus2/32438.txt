Is there a parallelized version of a minimization routine available in _Mathematica_? The objective function is non-linear and the gradients have to be numerically computed. Every function evaluation is compute-intensive and hence parallelization of numerical gradient computation will be beneficial. Simple attempts to wrap `Parallelize` around `FindMinimum` or `NMinimize` says it: > `cannot be parallelized; proceeding with sequential evaluation. >>` **Edit : 1** Here is an toy example               objFn[coeff_, xMin_, xMax_, n_] := (        Pause[5];         Total[(Cos[#] -               Sum[coeff[[i]] #^(i - 1), {i, 1, Length@coeff}]) & /@            Range[xMin, xMax, (xMax - xMin)/n]]^2);          NMinimize[      N@objFn[{x1, x2, x3, x4}, \[Pi]/3, 2 \[Pi]/3, 10], {x1, x2, x3, x4},       EvaluationMonitor -> Print[{x1, x2, x3, x4}]]      The `Pause[5]` is a placeholder for a long computation. This attempts to find a polynomial fit for the function using the coefficients list `{x1,x2,x3,x4}`. `Parallelize@Nminimize` resorts to sequential evaluation in this case. **Edit : 2** This question is inspired from an analogous possibility in Matlab as described here and here.