I might be misunderstanding MVC, so forgive me if that is the case. This is my program structure (Java/Swing): I have a JTable (View) that is pointed to by a custom linked list (Model). When the user tries to add something to the JTable, the action listener (Controller) updates the linked list (Model) which updates the JTable (View). Here's my issue: The linked list should be able to function independently of the JTable, but it doesn't. Let's say I decided to get rid of the user interface and just use the linked list for internal stuff within the program (The linked list has other properties and functions outside the scope of MVC). That should be able to work, because the linked list's FUNCTION is independent of the JTable's function, yet I would have to edit a lot of code to do so (or have a bunch of code that no longer does anything) because of MVC. So am I misunderstanding MVC completely, just a little bit, or are the dependencies a price I have to pay? NOTE: This is a simplified view of my project. In real life, there are other objects in the model and more than just a JTable in my interface. Also, the linked list has other thigns that get updates other than the number of objects.