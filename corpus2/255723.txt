I'm working on an application that has to do with music. Since the beginning of the work on the app, I had a public class named `MusicalResources`. The class had `public static final` `Note`s and `Chord`s. Any object that needed a note or a chord accessed it through this class, like so: `MusicalResources.C3` (`C3` being a `Note`). I had some problems with this class later in the project, and decided to gradually replace it with a new class, `NoteFactory`. It is also a static class, but instead of featuring lots of public constants, it features a public method `getNote` that takes the name of a note (e.g. `"C2"`) and returns the matching `Note` object. This allows me, hypothetically, to control the way I get the notes I return to the caller. I can keep them all in a Hashtable and always return the same ones, or I can instantiate a new one on each call, whatever. However, I'm actually not sure what's wrong with the original `MusicalResources`. It _feels_ like it causes me problems, but I'm still not sure _how_. So my question is: when there's a "central resource" place in your app, should you expose the resources through getters, or through `public static final` fields?