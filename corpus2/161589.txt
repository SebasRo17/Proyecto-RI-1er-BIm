We have list of players, which is represented in form like this:               <div class="players_list">        <div class="player" data-points="500">             <div class="name">Player1</div>             <div class="position">1</div>        </div>             <div class="player" data-points="400">             <div class="name">Player2</div>             <div class="position">2</div>        </div>        <div class="player" data-points="300">             <div class="name">Player3</div>             <div class="position">3</div>        </div>        <div class="player" data-points="200">             <div class="name">Player4</div>             <div class="position">4</div>        </div>       </div>       Something happens, and Player 4 recieves 600 points. So it goes on 1st place. With him - player3 recieves 300 points and goes on 2nd place. It happens after same event - let's assume, that they get these points from server, but that's all load that is allowed on server and server does not calculate positions. What is most efficent way to get view like this:               <div class="players_list">        <div class="player" data-points="800">             <div class="name">Player4</div>             <div class="position">1</div>        </div>        <div class="player" data-points="700">             <div class="name">Player3</div>             <div class="position">2</div>        </div>             <div class="player" data-points="500">             <div class="name">Player1</div>             <div class="position">3</div>        </div>             <div class="player" data-points="400">             <div class="name">Player2</div>             <div class="position">4</div>        </div>     </div>       It's not question about code, it's question about:   * What kind of task it is? Just sort?    * Is it ok to use JavaScript to solve this task if lists are less than 500 rows?    * Is it ok to re-render whole players list, or there are some ways to just change div element position(index in DOM or something like this)?    * Are there any tools and libraries around, that can help solve this task efficiently?  P.S.: If we want to animate all this story - we should create a queue of animation tasks each time scores for all players recalculates? **Update:** I have followed @Jalayn's answer, and stuck on following problem: Let's assume that list `[1,2,3,4]` transforms to `[2,3,4,1]`. If we map it, we will get following position diffs `[+1, +1, +1, -3]`.. Now, if we move one by one elements to it's position change, all will be ok, till we get to negotiate position diff - 1st position diff can't move down any more.. So, my update to question - how we can animate rows more than twice? **And final problem, on which I am stucked:** Not sure, if it most be solved in this question. BTW, if 2 players have same points - animation plan brakes and element_ids duplicates. My question now is how to make following transformation of structures list: `[(#id1, 1, 100),(#id2, 2, 50), (#id3, 2, 50), (#id4, 4, 25)] => [(#id3, 1, 150), (#id1, 2, 100), (#id4, 3, 75), (#id2, 4, 50)]` For now my solution is to refresh whole list, but not completly regenerate it - just move all elements to the first position in order they sorted in backed JSON. Animation is too complex to be done cause of final problem.