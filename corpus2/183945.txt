I am studying Visual Studio 2010's architectural tools for application lifecycle management. After we have sketched some modeling diagrams, we wonder now how should be the natural workflow to convert that to architecture-compliant code. We noticed that UML Explorer tab keeps track of entities created in class diagrams, sequence diagrams and component diagrams, but not so with layer diagrams and activity diagrams. The main problem is: when the modeling is ready, how would be the expected way to convert it to a compliant code? Possible paths could be:   * "you have to manually keep track of everything";   * "you can use feature X and/or technique Y";   * "There's no way to do that without the Modeling Feature Pack"; As far as I have researched until now, everything suggests that the Feature Pack is needed, but I wonder what would be the point to have those standard modeling projects if the greatest advantages of modeling (tracking and validating development code) cannot be performed... UPDATE: This blog post shows how to use Layers Diagram of a modeling project (via Validation flag on modeling project's properties tab) to RAISE BUILD ERRORS in case a layer dependency (which can be manually created) is violated. That seems promising, and I wonder which more of these hidden features the "non-feature-packed" Visual Studio 2010 might have. Thanks for any help