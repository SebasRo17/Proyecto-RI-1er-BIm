It seems clear that whatever the language used, an optimized application consumes fewer resources than a poorly written application, and require fewer servers to manage a similar number of requests for a site with heavy traffic. Similarly, I like to assume that an application written in a compiled language like C++ or. NET require fewer servers than if it were written in PHP, for example, for the same performance reasons. That may be why Facebook has designed a compiler for the application written in PHP. Now, Facebook has recently opened the architecture of its data centers to the public to provoke thought for a reduction in their ecological footprint, but I'm not sure that the equipment is solely responsible if an optimized code needs less servers to address a number of requests. That's why I wonder if quantitative studies have been conducted, with supporting figures to show how the optimization of the code could save resources and machinery thereby reducing the ecological footprint of data centers dedicated to single application like Facebook. If there are examples like "to do or not do" for languages, as well as tips to make the code more "green", I'd be very interrested. Do you have any resources on this or thoughts to share?