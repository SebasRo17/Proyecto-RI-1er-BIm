Following on from this question \- how do you explain to someone that this is just crazy!:               boolean someMethod(Map<String, Object> context) {         Object object = context.get("someProperty")          Object another = context.get("anotherProperty")               return object.toString().equals(another.toString());     }      Apparently the reason for why `Object.equals(...)` is not used is that "what's contained in the Map is not concretely known, but is definitely known to be one of the primitive wrappers i.e. `String`, `Double`, `Boolean`, etc... and that `Boolean.TRUE` is required to be `equal(...)` to the `String` "TRUE"".