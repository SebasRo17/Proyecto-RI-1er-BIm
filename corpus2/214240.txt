I've recently started two introductory level courses - one using Python, the other Java. I've read the answers to **this Question** but still have difficulty understanding how each ends up with machine code and what the main differences between the two models are:   * Is an interpreter doing the same job as something like the **JVM**, just without the byte-code?    * For python is the interpreter taking the high-level code and translating it into machine code?    * The Java virtual machine needs to be installed on a machine for a java program to run on it - is it similar for python - if the interpreter is installed on the target machine then the python program will run?   * Is the JVM (& .net framework) effectively byte-code interpreters?