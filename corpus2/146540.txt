As noted in this question, I ran into an issue with `git add /**...`. I can't actually find any documentation on the "/**" form of path specifications - possibly because it's hard to google. How is it meant to work, exactly? I'm particularly curious that `git add /\*\*.py` can work but `git add /path/foo.py` won't - why is the slash allowed at the start of the string with the ** notation? EDIT more info:               $ echo /**.py     /**.py      (This version of Bash doesn't support `shopt -s globstar`) Yet:               $ git add /**.py      adds (silently) a file three directories beneath the current directory. Git apparently doesn't do any globbing at all, so I'm really curious what's going on here. These also work:               `git add '/**.py'`     `git add /*******.py`       This doesn't:               `git add **.py`      This seems to add all files anywhere in the current working directory. (Bash 3.2.48 on OSX)