We have an ASP.Net MVC application that use Identity provider to authenticate users. A new customer now wants to access owr application pressing a button inside their winform app. I started to modify my login controller adding a new HttpGet method that accepts username and password and follow the standard login path. It works yes, but now a security hole is open! Passing "password" as parameter is not a great idea. I'm thinking to implement an hashed-token system; the external app encrypt a token with username, password, timestamp, salt... I recive the token in the login method, compare token with locally generated one and continue with login. The problem here is that password inside identity schema is hashed (passwordHash property) so I cannot generate the token on my server side. **_Update_** I wrote a simple winform client with an HttpWebRequest to get the OAuth token from my web application. Now I've a valid token but how can I use this token to access my application?               var request = WebRequest.Create("http://localhost:2409/token") as HttpWebRequest;             request.Method = "POST";             request.ContentType = "application/x-www-form-urlencoded";             request.CookieContainer = new CookieContainer();             var authCredentials = "grant_type=password&userName=...     ...     token = dynamicObj.access_token;          ...          System.Diagnostics.Process.Start("http://localhost:2409/??????token=" + token);      Can someone help me?