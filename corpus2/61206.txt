The generally accepted programming practices I've come across tend to advise against big, sprawling classes. Does using Objective-C categories change the conventional wisdom somehow? Is it more acceptable to have bigger classes if each "subclass" or set of tasks is in its own category? In my own experience, I've found that where I might've in the past tried to split classes, I now sometimes find it easier and rather maintainable to just split categories, but am I setting myself up for future maintenance hell (or other kinds of hell) by doing this?