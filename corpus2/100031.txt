When you work across multiple programming languages, there is a problem you encounter... _**A valid name (identifier) in one language is invalid in another._** For example... `var` `new` `function` `this` are a keywords in JavaScript, but you can use them freely in Python. Similarly `list` `dict` `def` can be used in JavaScript without problems. This is a very common and something programmers generally quickly become acquainted with when they program in multiple languages. However, when you're working in collaboration, you have to lay out some rules/guidelines for your team members to ensure consistency and uniformity in the code. With teams, this issue becomes more important than simply remembering what's valid and what's not while you program. So, my question is, what strategies you adopt...   * simply take a union of all the reserved words present in all the languages you use, hand out a list to everybody and abstain their use?   * accept the diversity and take extra pains when "context switching"   * adopt an intermediate ground where one language can use the other's, but not vice-versa (Note: i am only talking about Python and JavaScript in this question ... but please answer the question more broadly) **\-- UPDATE --** Thanks for all the answers. So the general consensus i see emerging is to let programmers use any name regardless of what they do other languages -- as long as names are descriptive, it doesn't hurt.