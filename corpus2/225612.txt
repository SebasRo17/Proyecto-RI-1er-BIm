1. What is a "variable"/data type?   2. How does a compiler / interpreter handle types? My specific concern has to do with the different types in lower and higher level languages. For instance in Python, as `list` is really flexible. You can just define it and put in at runtime whatever you want.   * `int`s   * `float`s   * `str`ings   * `set`s   * even other `list`s Basically objects of any type (if I'm not mistaken). So I imagine `list` to be a class written in C with really a lot of stuff in there, dynamic memory allocation and so on and so forth, to handle all this.   * Is that right?   * ..and does that mean all those e. g. Python types are C classes?   * Then what are types in C?   * Are they "classes"?   * ..or somehow related to assembler code? PS: I'm not looking for some precise illustrative hints and answers rather than for a wide exhaustive explanation. And: This questions are not related to "There are no variables in Python, but identifiers".