I am wondering how typical it is for programmers to switch hats and do testing on each other's work. Assume that the team wants to take a "shared responsibility" approach to moving tasks from being formalized to their release - **(1)** is it a good idea to have programmers work as software testing as long as they didn't write a feature? **(2)** Does this happen often? Also, I am wondering **(3)** to what degree a programmer can "test" their own work. Even with TDD and unit tests, isn't there still a need for a software testing apparatus in the development process?