I currently program professionally in C#, and since I started in 2008 I've been curious about what unmanaged, C++ programming is like. I've looked at the obvious answer -to look at the job descriptions online - but they're high- level descriptions and job requirements that don't really go into the details of what professional programming in C++ is like. If you're a Windows programmer, does this usually involve working with CLI, MFC, or ATL? How many jobs are about maintaining legacy code vs. innovating something new? Is the extra attention to memory management an interesting challenge or a tedious task? Are the standard and Windows/UNIX libraries enjoyable to work with? How often do you see a programmer go from a more "high-level" language background like C# or Java to C++, and how often do you see programmers move in the other direction? What do you think will drive demand for future generations of C++ programmers (e.g. game development or maintaining legacy systems)?