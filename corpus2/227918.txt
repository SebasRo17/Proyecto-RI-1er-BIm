Suppose I have this class hierarchy...               public abstract class Animal {         public abstract void eat();         public abstract void talk();     }     class Dog extends Animal {         @Override         public void eat() {         }              @Override         public void talk() {         }     }          class Cat extends Animal {         @Override         public void eat() {         }              @Override         public void talk() {         }     }      And then I have....               public static <T extends Animal> void addAnimal(T animal) {         animal.eat();         animal.talk();     }          public static void addAnimalPoly(Animal animal) {         animal.eat();         animal.talk();     }      What's the difference when using bounded type parameters or polymorphism? And when to use one or the other?