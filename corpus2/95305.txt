Say I have a class Person:               class Person     {       string FullName;       int Age;     }      And I need to load a list of Person's from a plain text file. The text file could be in one of two formats. I want a method such as LoadFromFile(string path) that will 1) detect the file format 2) parse appropriately for the file type and 3) return a list of Persons. The quick and dirty solution would be to have a single method LoadFromFile where I read the header of the file, I can determine which file type it is, and then, keeping the file open, switch on the type and read it appropriately. On the other hand, the fact that it's two different "types" of files makes me think it's a good candidate for polymorphism. This would be especially good if there was a third file type. However, having separate classes makes it seem like it would be harder to keep the file open from the "type detection" phase to the "parse phase". Though maybe wanting to keep the file open is just premature optimization. I want the client code to simply call LoadFromFile(path) and have it detect the file type and load appropriately. What is a good design for this (in terms of class names and method names)?