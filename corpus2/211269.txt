> CPython implementation detail: In CPython, due to the Global Interpreter > Lock, only one thread can execute Python code at once (even though certain > performance-oriented libraries might overcome this limitation). If you want > your application to make better use of the computational resources of multi- > core machines, you are advised to use multiprocessing. However, threading is > still an appropriate model if you want to run multiple I/O-bound tasks > simultaneously.   >  -> threading > > multiprocessing is a package that supports spawning processes using an API > similar to the threading module.   >  -> multiprocessing All modern PC processors are multicore. What are the downsides to spawning new processes, instead of threads? If they are not significant enough, why does the threading module even exist?