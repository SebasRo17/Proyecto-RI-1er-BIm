Say I have some `Do` loop that I'd like to evaluate in parallel: `Do[Something, {i, 1, M}]`. I'd like to split this list up into chunks which individual kernels evaluate. However, I would like to explicitly specify these chunks, which is something `ParallelDo` does not seem to allow for. How does `ParallelDo` actually partition values of $i$ to be evaluated during a `Do` loop? If I have a list $L$ where I need to access $L[i]$ at the $i$th iteration of the `Do` loop, how might I avoid slowdowns associated with using some large global list?