I am working in the field of applied physics. Some body suggested me to use Mathematica for plotting graphs and programming. After going through some tutorials, I have written the following code but whenever I am trying to evaluate the notepad, it takes forever to evaluate. I have halted the code after half an hour. Kindly suggest, how to evaluate the following code?               (*Define all parameters and constants*)     (* For Copper material*)     Clear[xi, s];     lmd = 9.4*10^10 ;(*Lambda*)     mu = 4.0*10^10;   (*mu*)     kp = 10^10; (*kappa*)     eps0 = 10^(-9)/(36*Pi);     mu0 = 4*Pi*10^(-7);     H0 = 10^7;     nu = 0.0268*10^8; (*Nu*)     T0 = 293; (*Initial value of temperature*)     ro = 1.74*10^3; (*rho*)     gm = 0.779*10^(-5); (*gamma*)     j = 0.2*10^(-19); (*microintertia*)     ce = 383.1; (*Ce*)     ks = 1.7*100; (* K* *)     a = 0.1; (*two temperature parameter*)     sig0 = 2.2*10^7;(*sigma_not*)     (*xi=0.2; (*fourier parameter*)     s=0.7;(*laplace parameter*)*)     tau1 = 0*8.765*10^(-13); (*relaxation parameter*)     tau0 = 6.131*10^(-13); (*relaxation parameter*)     eta = ro*ce/ks;(*eta*)     c0 = Sqrt[(lmd + 2*mu + kp)/ro];          (*Define all coefficients of partial differential equations*)     a1 = lmd + 2 mu + kp;     a2 = c0^2*eps0*mu0*H0^2;     a3 = nu*T0;     a4 = ro*c0^2;     a5 = mu + kp;     a6 = kp^2/(gm*eta^2*c0^2*(mu + kp));     a7 = 2 kp/(c0^2*eta^2*gm);     a8 = ro*j*c0^2*eta/gm;     a9 = ro*ce/(ks*eta);     a10 = nu/(ks*eta);     a11 = a*c0^2*eta^2;     a12 = lmd/(lmd + 2 mu + kp);     a13 = mu/(lmd + 2 mu + kp);     a14 = (mu + kp)/(lmd + 2 mu + kp);     a15 = eta/sig0*mu0;     a16 = eta/(sig0*mu0*c0);     a17 = c0^2*eps0*eta^2/(sig0^2*mu0);     (* Now define the coefficients of total differential equation*)     alp1 = xi^2 + (a2 + a4)*s^2/a1;     alp2 = a3*(1 + tau1*s)/a1;     alp3 = xi^2 + (a2 + a4)*s^2/a5;     alp4 = xi^2 + a7 + a8*s^2;     alp5 = a9*(s + tau0*s^2);     alp6 = a10*(s + tau0*s^2);     alp7 = xi^2 + 1/a11;     alp8 = 1 + a11*alp5;     alp9 = xi^2 + a11*alp5*alp7;     alp10 = a11*alp2*alp6 + alp2;     alp11 = a11*alp2*alp6*(xi^2 + alp7) + alp1*alp2 + alp9;     alp12 = a11*alp2*alp6*alp7*xi^2 + alp9*alp11;     alp13 = alp3 + alp4 + alp6;     alp14 = alp3*alp4 + a6*xi^2;     alp15 = alp11/alp10;     alp16 = alp12/alp10;          (* Now define the roots of total differential equation*)     m1 = Sqrt[(alp13 + Sqrt[alp13^2 - 4*alp14])/2];     m2 = Sqrt[(alp13 - Sqrt[alp13^2 - 4*alp14])/2];     m3 = Sqrt[(alp15 + Sqrt[alp15^2 - 4*alp16])/2];     m4 = Sqrt[(alp15 - Sqrt[alp15^2 - 4*alp16])/2];          (*Now define the constants obtained after solving boundary conditions*)               theta0 = 0.1;(*magnitude of temperature taken in boundary conditions*)               alp17 = -I*(xi^2*a13 + alp3*a14) (alp1 - xi^2*a12)/(xi*(1 - a12));     alp18 = I*xi*(a14 + a13);     del1 = alp17*(m2^2 - alp3) - alp18*m1*m3*(m1^2 - m2^2);     del2 = alp17*(m1^2 - alp3) + alp18*m2*m4 (m1^2 - m2^2);     aa1 = I*alp2*(alp1 - xi^2*a12)*(m2^2 - alp3)*(del1 + del2)*        theta0/(xi*           m1*(1 - a12)*(m1^2 -              m2^2)*((m3^2 - alp1)*del2 + (m4^2 - alp1)*del1));     aa2 = -I*alp2*(alp1 - xi^2*a12)*(m1^2 - alp3)*(del1 + del2)*        theta0/(xi*           m2*(1 - a12)*(m1^2 -              m2^2)*((m3^2 - alp1)*del2 + (m4^2 - alp1)*del1));     aa3 = alp2*del2*theta0/((m3^2 - alp1)*del2 + (m4^2 - alp1)*del1);     aa4 = alp2*del1*theta0/((m3^2 - alp1)*del2 + (m4^2 - alp1)*del1);               (* Now define the functions to be plotted*)          phi[x3_] := (m1^2 - alp3)*aa1*E^(-(m1*x3)) + (m2^2 - alp3)*aa2*         E^(-(m2*x3));     theta[x3_] :=        1/alp2*((m3^2 - alp1)*aa3*E^(-(m3*x3)) + (m4^2 - alp1)*aa4*           E^(-(m4*x3)));     u1[x3_] := (m1*aa1*E^(-(m1*x3)) + m2*aa2*E^(-(m2*x3))) +         I*xi*(aa3*E^(-(m3*x3)) + aa4*E^(-(m4*x3)));     u3T[x3_] :=        Re[I*xi*(aa1*E^(-(m1*x3)) + aa2*E^(-(m2*x3))) - (m3*aa3*            E^(-(m3*x3)) + m4*aa4*E^(-(m4*x3)))];      u3L[x3, x1] := Evaluate[InverseFourierTransform[u3T[x3], xi, x1]];     u3[x3, x1, t] := Evaluate[InverseLaplaceTransform[u3L[x3, x1], s, t]];     (* Now evaluate the function *)     x1 = 0; t = 0.1;     u3[x3, x1, t]