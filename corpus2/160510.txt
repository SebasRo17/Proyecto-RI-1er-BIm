I have searched Programmers and Stackoverflow and was not able to come up with a satisfying answer, even though I'm quite sure it must have been asked many times before. The only question I found has answers only dealing with readability. The code excerpts below are from actual C# code I was writing. * * * When dealing with a local variable that has some calculated value when a condition is true but a default value otherwise, do I: First set the value, then change the value when the condition is true?               short version = 1;      // <-- set the value here.     if (separator != -1)     {         version = Int16.Parse(filename.Substring(separator + 1));         filename = filename.Substring(0, separator);     }      Or _not_ set the value, and add an else when the condition is false?               short version;     if (separator != -1)     {         version = Int16.Parse(filename.Substring(separator + 1));         filename = filename.Substring(0, separator);     }     else         version = 1;        // <-- set the value here.      Could a programmer have wrong expectations when confronted with either solution (e.g. when the if-clause is quite big and the else-clause is way down, out of view)? Do you have any experiences where the difference mattered? Is one particular style enforced at your company, and why? Are there any technical reasons why one would be preferred over the other? The first one sets a variable twice, but I'm not sure whether this would matter in modern- day optimizing compilers.