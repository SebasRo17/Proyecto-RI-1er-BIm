I'm using svn without branches (trunk-only) for a very long time at my workplace. I had discovered most or all of the issues related to projects which do not have any branching strategy. Unlikely this is not going to change at my workplace but for my private projects. For my private projects which most includes coworkers and working together at the same time on different features I like to have an robust branching strategy with supports long-term releases powered by git. I find out that the Atlassian Toolchain (JIRA, Stash and Bamboo) helped me most and it also recommending me an branching strategy which I like to verify for the team needs. The branching strategy was taken directly from Atlassian Stash recommendation with a small modification to the hotfix branch tree. All hotfixes should also merged into mainline. ![Planned Branching Strategy](http://i.stack.imgur.com/zOdcE.png) **The branching strategy in words**   * _mainline_ (also known as _master_ with git or _trunk_ with svn) contains the "state of the art" developing release. Everything here was successfully checked with various automated tests (through Bamboo) and looks like everything is working. It is not proven as working because of possible missing tests. It is ready to use but not recommended for production.   * _feature_ covers all new features which are not completely finished. Once a feature is finished it will be merged into _mainline_. Sample branch: `feature/ISSUE-2-A-nice-Feature`   * _bugfix_ fixes non-critical bugs which can wait for the next normal release. Sample branch: `bugfix/ISSUE-1-Some-typos`   * _production_ owns the latest release.   * _hotfix_ fixes critical bugs which have to be release urgent to _mainline_ , _production_ and all affected long-term *release*es. Sample branch: `hotfix/ISSUE-3-Check-your-math`   * _release_ is for long-term maintenance. Sample branches: `release/1.0`, `release/1.1` `release/1.0-rc1` * * * I am not an expert so please provide me feedback. Which problems might appear? Which parts are missing or slowing down the productivity?