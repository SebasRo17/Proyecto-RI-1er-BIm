I find writing CSS by hand to be extremely tedious. Coming across a concept such as _fluid_ , makes me want to write all my websites so that the CSS resizes nicely and looks the same in different browsers. My question to you is: **Can my design be generated programmically?** e.g.:               #include <css>     #include <html>     #include <vector>     #include <string>          int main(void) {         HTML::HTML page;         page.title("my title");         page.heading.font(15);         std::vector<std::string> para = <vector of paragraphs>;              CSS::CSS layout;         layout.grid(2,2);         layout.fill(xcoords_as_percentage, ycoords_as_percentage);              page.use_css(layout);         for(int i=0; i<para.size() && y!=grid.y.size()+1; i++, x++) {             if(x==grid.x.size()) x=0, y++;             page.grid[x][y]=para[i];         }         page.header1("I am header1");         page.footer("I am page footer");         layout.order(page.header1[0], page.grid.all(), page.footer());              generate_html("index.html");         generate_css("layout.css");     }      This will allow me to concentrate on the actual contents, abstracting away from "Oh, IE7 doesn't support this option, so do this hack..." FYI: I am coding the actual site in Django (Python), so the HTML/CSS generator doesn't have to be in C++. I am aware of work being done in this direction in the C++ Wt framework