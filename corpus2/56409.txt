Here is a naive coding of a projection of a point on a sphere. It runs very slow. Can it be changed to run faster without losing its essential analytic character?               Magnify[Manipulate[       Show[ParametricPlot3D[{{x, 0, 1}, {0, y, 1}, {x, y, 1}, {x, x^2,            1}, {x*w, x*w^2, x}, {x, y, Sqrt[1 - x^2 - y^2]}, {x,            y, -Sqrt[1 - x^2 - y^2]}, {x/Sqrt[x^2 + (x^2)^2 + 1], (x^2)/            Sqrt[x^2 + (x^2)^2 + 1],            1/Sqrt[x^2 + (x^2)^2 + 1]}, {-x/Sqrt[x^2 + (x^2)^2 + 1], -(x^2)/            Sqrt[x^2 + (x^2)^2 + 1], -1/Sqrt[x^2 + (x^2)^2 + 1]}}, {x, -5,           5}, {y, -5, 5}, Axes -> False, Boxed -> False,          Mesh -> {{-5, 5}, {-5, 5}},          RegionFunction -> Function[{x, y, z}, 0 < x^2 + y^2 < 16],          SphericalRegion -> True, (*RotationAction->"Clip",*)         PlotStyle -> {Black, Black,            Directive[Opacity[0.5], Blue, Specularity[White, 50]],            Directive[ Red], Directive[ Red],            Directive[Opacity[0.5], Orange, Specularity[White, 50],             Mesh -> None],            Directive[Opacity[0.5], Orange, Specularity[White, 50],             Mesh -> None], Directive[Black], Directive[ Black]}],         Graphics3D[{Red, PointSize[.01],           Point[{{w/Sqrt[w^2 + (w^2)^2 + 1], (w^2)/Sqrt[w^2 + (w^2)^2 + 1],              1/Sqrt[w^2 + (w^2)^2 + 1]}, {-w/Sqrt[              w^2 + (w^2)^2 + 1], -(w^2)/Sqrt[w^2 + (w^2)^2 + 1], -1/Sqrt[              w^2 + (w^2)^2 + 1]}, {w, w^2, 1}}]}]], {{w, 1.086}, 0.01,         3}], 1.7]