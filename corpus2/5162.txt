In exploring this fish population game with my calculus students, I wrote some Mathematica code to search for the sequence of catches that would result in the maximal total population of fish (both in the pond and in the boats) after ten days. The code that I wrote works for this purpose, but I feel like the way that I implemented it is clunky--particularly all of those nested tables and the subsequent flattening. Also, this was my first time using Fold, and though it worked, I'm not sure it it's the best tool to use for this purpose. I'm not very experienced in Mathematica and so I'm hoping this stackexchange is an appropriate place to ask for critiques and suggestions for how this could be coded more succinctly. I'm looking to improve! Here's the code:               Pond[in_, take_] := Min[20, Floor[1.25 (in - 3 take)]]     Sort[      Flatten[       Table[Table[         Table[Table[           Table[Table[            Table[Table[             Table[Table[{3 (a + b + c + d + e + f + g + h + i + j) +                Fold[Pond, 20, {a, b, c, d, e, f, g, h, i, j}],               a + b + c + d + e + f + g + h + i + j, {a, b, c, d, e, f,                g, h, i, j}}, {j, 0, 3}], {i, 0, 3}], {h, 0, 3}], {g,            0, 3}], {f, 0, 3}], {e, 0, 3}], {d, 0, 3}], {c, 0, 3}], {b,       0, 3}], {a, 0, 3}], 9], #1[[1]] > #2[[1]] &]      Note: If the above crashes or takes too long to run, just change several of the variables so that they range from 3 to 3, rather than 0 to 3. And thanks!