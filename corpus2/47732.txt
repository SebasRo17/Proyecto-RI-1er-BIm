I am trying to solve a linear ODE for a Kolmogorov forward equation to get a stationary distribution of a random variable. The easiest approach may be to transform the ODE with a two-sided Laplace transform and then solve for the equation, which would be the moment-generating function. BUT: I can't figure out how to do a two-sided Laplace transform. To give the concrete test for what I am looking for:               MomentGeneratingFunction[NormalDistribution[\[Mu], \[Sigma]], t]      Properly spits out $e^{\mu t + \sigma^2/2 t^2}$. But `LaplaceTransform` defaults to the one-sided transform Laplace transform). If I can figure out the options to make these match, then I can solve my ODE. Also, note that I will need to do the Two-sided Laplace transform of $-t$ instead of just $t$. To see the connection of MGF and Laplace Transforms: http://en.wikipedia.org/wiki/Moment-generating_function#Calculation I found some old documentation for an obsolete package, http://reference.wolfram.com/legacy/applications/signals/MathematicalTransforms.html, that used to do this with the TransformDirection option, but it doesn't work any more.