As my team move towards embracing the new features in C++11 I'm struggling with how to make the side-effects of `std::move` self-documenting in the code. The issue is that an object that has been moved to another location should no longer be used after that point. All I can come up with is a comment:               std::string x = Func();     Other(x);   // x is zombied.      Obviously this is error-prone and will not handle the cases where deeper code might unwittingly do a `std::move`. Has anyone else dealt with this issue? I have a feeling that diagnosing the use of zombied objects could be as much a pain as tracking down leaks or heap corruption.