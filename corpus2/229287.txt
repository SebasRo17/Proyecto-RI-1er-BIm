When reading about the various options for working with things like ARC / GC, I often come across explicit wording about which weak references are zeroing (ie, your reference becomes nil/null/0 when the object is collected) and which non-zeroing (you get a dangling pointer). This leads me to ask: What possible use could there be for a non-zeroing weak pointer? You can't use it for anything if you're not sure whether it's any good, can you? And how would you check its validity without risking a core dump / segfault? Addendum: I understand they're useful in reference-counted environments, and you may want to use them when writing library code that may be used therein, but I can't see a good reason for them with a smart-enough ARC-alike or relocating collector. What good is a reference that can't be relied on?