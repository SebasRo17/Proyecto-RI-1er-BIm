This is more like a theory question than a practical one. And although I am using Arduino and Labview, it should work independently of the platform. I have an Arduino board controlling a set of pumps (they use standard nema motors). This arduino reads gcode like commands through usb serial port, and actuates the pumps and valves. This part is working, and I can move the pumps around using Arduino serial port. This firmware (in arduino) is async, so it accepts non blocking calls. Basically, while a pump is working, you can send a command and some other pump will execute. Or you can execute several of them at the same time. Each command has an ID, and this ID is sent back to the serial port once the work has been done. This is coded using simply a FSM where every pump represents a state. Before my firmware was blocking, every physical action had a big wait between Nema steps, it's not the case anymore. Also, I have a Labview VI working, which accepts some parameters from the user (pump id, speed, and so), creates the commands, sends it, and actuates the pump. This also works. It's my first VI. Problem, it blocks. It stays there until the pump is finished. I cannot execute other actions while it's actuating the hardware. My question is, as a labview novice (although this is a general software pattern question in general), how can I fix it? Which pattern or template can I use to not block my VI while the pumps are working?