Much has been said lately of continuous delivery. It does sound appealing, but runs against the grain of convention wisdom in big corporations.   * Jez Humble - Continuous Delivery   * Thoughtworks Presentation - Continuous Delivery - Part 1   * Thoughtworks Presentation - Continuous Delivery - Part 2 Assuming the following:   * You have a number of remote systems connected via ESB   * You have an established system with several years of coding changes applied to it   * This is a website that allows financial transactions   * There are multiple backend systems responsible for processing different types of transactions   * Currently production releases assume a multi $10K investment in a manual regression test Can Continuous Delivery be implemented in such an environment? (ie is the underlying assumption behind Continuous Delivery that you invest a large amount in automated regression testing that is coordinated across systems?) (Surely automated unit tests can prove a system is not incorrect, but can't prove it is correct).