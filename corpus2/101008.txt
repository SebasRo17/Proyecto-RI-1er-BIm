In almost any security system I've ever seen, what is controlled is that **which person has access to which part**. However, in real life, in many situations, security systems also consider **when** and **where** a person is permitted to do something. For example, **you can drive fast in day** , but **you can't drive fast in night** , or **you can marry a homosexual officially in X** , but **you can't marry the same gender in Y**. Does constraint-based security has any meaning in the context of software. For example, a system can prevent you from entering in certain times of the day (after work for example), or another system can let you stay signed in, only if you type fast enough, or another system can let you enter data, only if you are currently located in the USA (Geolocation API), etc. Why computer security systems don't match real life scenarios?