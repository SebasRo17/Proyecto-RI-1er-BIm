I have the following SHA256 wrapper.                   public static string SHA256(string plainText)         {             StringBuilder sb = new StringBuilder();                  SHA256CryptoServiceProvider provider = new SHA256CryptoServiceProvider();             var hashedBytes = provider.ComputeHash(Encoding.UTF8.GetBytes(plainText));                  for (int i = 0; i < hashedBytes.Length; i++)             {                 sb.Append(hashedBytes[i].ToString("x2").ToLower());             }                  return sb.ToString();         }      Do I want to be testing it? If so, what do you recommend? My thought process is as follows:   1. What logic is there here.   2. The answer is my for loop and `ToString("x2"`) so from my understanding I want to be testing this part? I can assume `Encoding.UTF8.GetBytes(plainText`) works. Correct assumption? I can assume `SHA256CryptoServiceProvider.ComputeHash()` works. Correct assumption? I want to be only testing my logic. In this case is limited to the printing of hex encoded hash. Correct? Thanks. EDIT: Update method based on MainMa's excellent answer:                   /// <summary>         /// Returns a SHA256 hash of the plain text.         /// </summary>         /// <param name="plainText">The pain text.</param>         /// <returns>The hash.</returns>         public static string SHA256(string plainText)         {             if (string.IsNullOrWhiteSpace(plainText)) throw new ArgumentNullException("The plain text cannot be empty.");                  StringBuilder sb = new StringBuilder();                  Byte[] hashedBytes;             using (SHA256CryptoServiceProvider sha256Provider = new SHA256CryptoServiceProvider())             {                 hashedBytes = sha256Provider.ComputeHash(Encoding.UTF8.GetBytes(plainText));             }                  foreach(Byte b in hashedBytes)             {                 sb.Append(b.ToString("x2").ToLower(CultureInfo.InvariantCulture));             }                  return sb.ToString();         }