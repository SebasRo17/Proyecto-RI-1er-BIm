Here's a service abstraction that I am working on :               public abstract class Service     {     public ILogger Logger{get;set;}          public IQueryManager QueryManager{get;set;}          public ICommandManager  CommandManager{get;set;}     }      Then I have to call them in my class as usual :               Logger.Log("Something");          QueryManager.Query(new QueryObject()).Result;          etc.      But I'd like to have some protected helper methods to make these sentences less verbose :               Log("Something");\\calls Logger.Log("Something")          Query(new QueryObject()); \\ returns QueryManager(new QueryObject()).Result      Is there a way so that I can implement my dependencies so that they will be hidden from children of Service ? Is there an IoC container that allows me to use private properties to inject my dependencies ?