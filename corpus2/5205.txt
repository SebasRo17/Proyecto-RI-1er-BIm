In MMA 8, it seems that sometimes `VertexList` will work with rule-based graphs without needing GraphUtilities and at other times it won't. Once it starts working, it keeps working until I restart MMA. In addition, while it is working, `VertexList` is not colored Red to indicate shadowing. I know that I can use `GraphUtilities`VertexList` as shown below, but that is a bit much to type and I really want to understand why it is sometimes unnecessary. I also have dozens of notebooks with VertexList and don't really want to need to change all of them. Here is what happens:               In[1]:= VertexList[{a -> b}]     During evaluation of In[1]:= VertexList::graph: A graph object is expected at position 1 in VertexList[{a->b}]. >>         Out[1]= VertexList[{a -> b}]              In[2]:= GraphUtilities`VertexList[{a -> b}]         Out[2]= GraphUtilities`VertexList[{a -> b}]              In[3]:= Needs["GraphUtilities`"]         In[4]:= VertexList[{a -> b}]         Out[4]= {a, b}              In[5]:= $ContextPath = Rest[$ContextPath]         Out[5]= {"PacletManager`", "WebServices`", "System`", "Global`"}              In[10]:= VertexList[{a -> b}]         During evaluation of In[10]:= VertexList::graph: A graph object is expected at position 1 in VertexList[{a->b}]. >>         Out[10]= VertexList[{a -> b}]              In[7]:= GraphUtilities`VertexList[{a -> b}]         Out[7]= {a, b}      Is there any consistent way to force MMA to get VertexList to work on older style graphs without needing to use the full name? One more detail. When this works, I get exactly this behavior:               ?VertexList          VertexList[g] gives the list of vertices for the graph g.     VertexList[g,patt] gives a list of vertices that match the pattern patt.Â >>      which makes it look like the symbol is coming from System`