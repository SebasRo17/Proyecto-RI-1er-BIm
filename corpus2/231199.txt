I just wrote the following piece of code (in delphi):               procedure Update(Value: Integer);     begin       // If the last update was yesterday, replace yesterday value       if CompareDate(FLastUpdate,Now) <> 0 then       begin         FYesterdayValue := FTodayValue;       end;       FTodayValue := Value;       FLastUpdate := Now;     end;      And I realized that it contains a small, but real race condition. Imagine that the first time the "Now" function is called it's one millisecond before midnight, the if-statement is skipped and the timestamp is updated with another call to "Now" which is now one millisecond AFTER midnight. Now the timestamp has the wrong value and the FYesterdayValue will not get the correct value. In practise, I think the chances of this ever happening is almost non existent because a) the code is typically called ~1 / minute and b) the cpu time between the two call will be EXTREMELY small. However it's a bug and I'm curious if you would fix it if you stumbled upon it in a project.