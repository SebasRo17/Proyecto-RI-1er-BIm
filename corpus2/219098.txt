I read somewhere that Amazon has a dedicated team for each of its major products. This approach facilitates the growth of the domain knowledge for each product team and as a result of this retained knowledge, it allows Amazon to rapidly add new functionality to products. I have experience working with lots of companies where they follow more of a matrix based resource model. In this model, the company has a portfolio of products, but architects, developers and project managers are very frequently moved around from product to product. For example, if new functionality is to be added to a product, a completely new project team will be created for this. The project team is likely to have no previous exposure to the product. As a result of this matrix resourcing, the product technical architecture becomes weak (each architect will use a different approach/style), and adding new functionality takes much longer because of the domain knowledge that the new project team needs to acquire before starting the project. Information leak is sometimes used to describe the effects of lost knowledge such, which seems to be exacerbated by the matrix resourcing approach. **Questions** : Is there any research or documentation that supports my experience and identifies the impact (cost/time) of information lost due to matrix resource models? * * * EDIT: Also, most of the companies had a tendency to switch resources mid-project. This cost a lot of time lost due to:   * handovers required between old and new staff (if they even happened at all)   * new staff getting up-to-speed on the project   * low morale due to constant resource changes on projects Link describing Amazon's Philosophy: you build it; you own it. * * *