What's the best place for a factory interface to create an instance of another interface? **OptionA** : a separate class               public interface InterAFactory {         InterA createInterA();     }          public interface InterA {         void doStuff();     }      **OptionB** : a subclass               public interface InterA {         public interface Factory {             InterA createInterA();         }              void doStuff();     }      I notice that guava has tended to use B for the immutable collections, but that's for builders, which are slightly different to factories. I also tend towards optionB, as it reduces the number of top-level classes in the package, and it strongly associates the factory with the thing it creates. However, implementations will not be bound or affected by this, and it will make implementations of the factory slightly more verbose. Thoughts?