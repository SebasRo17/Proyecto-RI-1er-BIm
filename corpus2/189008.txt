Every instruction comes from main memory/RAM. In a bootloader, at least on Intel and IBM PC firmware and designations, you have BIOS jump to a memory address to begin fetching instructions for whatever purpose, usually to load a kernel, when or where does the instance of a process begin? The hardware stacks are limited, but does using them constitute for a process or thread? My point simply is what makes something a "thread" or "process", as to opposed to just more bytes from memory? Where is the line drawn in this situation?