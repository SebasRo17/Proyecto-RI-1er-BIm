Business Analyst creates a requirement. Requirement implemented by developer. BA performs QA. Bug report includes various bugs that were never requirements. E.G. A requirement is made to display a report. The report is displayed. In QA, the analyst see's that a user can enter invalid data. The invalid data makes the report invalid. Per the requirements, an error message is displayed. The analyst decides that they want the previously run report to have its data cleared. Currently, when entering into an invalid state the system displays results from the previous report along with an error message. In this case, the problem is that we are in an error state. The error state requires an error message, but is otherwise undefined. Is this "bug" scope creep, poorly defined requirements, lack of an overall business process for error management, lack of technical foresight on part of the BA/Dev, a valid request or other? How can you minimize these types of problems? **Other details (specific to this app)**   Web app. Persistent State is an overall part of the design (thus the reason you see the report still displayed). There are little to no HTTP POST/GET operations performed outside of AJAX. Navigation menu changes pages without full postbacks. Instead, perform HTTP GET to load HTML/JSON into portions of the web page on click.