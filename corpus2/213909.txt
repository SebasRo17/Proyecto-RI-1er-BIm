Lets say I have a scenario like so: I have many claims to get money from another entity and this claim has to go through two gateways. This claim is sent from an origin system and can possibly be rejected at each gateway. If the claim is rejected at either gateway, one or more messages will be sent back to the origin system that indicate why it was rejected at that gateway. Here's a diagram: ![enter image description here](http://i.stack.imgur.com/RTBvY.png) Note that the some attributes of messages of a rejection from Gateway #1 are different from #2 in my actual system, so they are not the same type of entity. Now, my requirement is to create a reporting system that can display various aggregations of that data by designing a database layout for it. The reporting needs to be able to aggregate by claim cost, number of claims, and be able to display reports at the rejection message level too. Another requirement is to be able to see if a claim was resubmitted through the process based on an ID representing an overall claim process. From my company there appear to be two routes to go about creating the database table layout for this reporting system, listed here: Have one table that displays all attriutes of the claim, and both rejection levels and put all necessary attributes of those entities as different aggregations on that table (denormalized). Or... Create a table layout in which there is a table that represents the claim, a table that represents a rejection at gateway 1, and a table that represents a rejection at gateway 2, with the claim table being the parent of the other two. Keep in mind that rejections at both gateways #1 and #2 contain different attributes. What is the best route to choose between these two choices? Is it situational, as in is there a best option depending on other requriements, and if so, can you explain what those requirements might be?