Few days ago I started to read Robert C. Martin "Clean Code" book and it encouraged me to look more detailed at my code. After I opened eclipse I saw this:               entityManager.createNamedQuery("CarriageRouteEntity.listCarriageDirections");      and I decided to move string `CarriageRouteEntity.listCarriageDirections` to constant string. After quick fix I created something like this:               @NamedQueries({             @NamedQuery(name = CarriageRouteEntity.LIST_CARRIAGE_DIRECTIONS, query = "just query ...") })     public class CarriageRouteEntity {         public static final String LIST_CARRIAGE_DIRECTIONS = "CarriageRouteEntity.listDirections";         // ...     }      so now I call it like this:               entityManager.createNamedQuery(CarriageRouteEntity.LIST_CARRIAGE_DIRECTIONS);      And here I started to wondering where should I put named queries constants. Is entity class good place for this? Maybe I should create new class with these constants like               public class CarriageRouteEntityNamedQuery {             public static final String LIST_CARRIAGE_DIRECTIONS = "CarriageRouteEntity.listDirections";     }      but if another programmer will try to create named query will he knew where to look at it? What are your opinions? How to organize these constants? Maybe instead of creating `CarriageRouteEntityNamedQuery` class I should create enum and add method to entity `CarriageRouteEntity` called `getNamedQuery()` which will tell another programmer in which enum he/she should look for constants?