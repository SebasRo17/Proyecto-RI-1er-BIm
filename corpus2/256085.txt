(1)   * The old`make`utility looks at timestamps, and if the output is newer than the input, it skips (pointless, time-consuming) re-compilation of e.g. C files.   * The same is true for many languages and compilers. “Lazy” thumbnail generation in web aplications skips those thumbs that are newer than the source image.   * “Smart” file syncing tools do the same, looking at time stamps, to reduce transfer volume. I used to refer to this as **“lazy”**. However, looking at web citations, the term “lazy” in Computer Science seems to actually mean something different: „do something as late as possible“.   * only load that extra part when it's necessary   * initialize lazily, aka as late as needed   * only evaluate that part of the equaption, when you get to it... So is my term wrong? And what would be more correct, for all that „is-newer- based“ skip optimizations?