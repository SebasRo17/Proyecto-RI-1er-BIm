See below for some code I wrote to model a non-homogenous poisson process. The code generates the correct results but takes a long time due to the number of nested integrations. I have tried reducing plot points, have used `PerformanceGoal`, set `MaxRecursion` to `0` and set `WorkingPrecision` to `10`. Any tips? For those interested it is a model of information propagation on the _Bitcoin Network_.               ClearAll[ μ, q, k, prop]          μ := Log[1.76 + 0.066 q/2];     k = 1/600;     prop[q_] := 1.76 + 0.25 q/2;          ClearAll[inf, uninf]          inf[w_] := Evaluate[CDF[LogNormalDistribution[ μ, 0.944], w]];     uninf[x_] := 1 - Evaluate[CDF[LogNormalDistribution[ μ, 0.944], x]];          ClearAll[i1, i2, u1, u2, PDFi, PDFu, CDFi, CDFu, CDFui, CDFuu]          i1[z_?NumericQ] := i1[z] = inf[z]     i2[j_?NumericQ] := i2[j] = NIntegrate[i1[z], {z, 0, j}]     PDFi[z_?NumericQ] := PDFi[z] = k*i1[z] Exp[-k*i2[z]]     CDFi[j_?NumericQ] := CDFi[j] = NIntegrate[PDFi[z], {z, 0, j}]     u1[j_?NumericQ] := u1[j] = uninf[j]     u2[u_?NumericQ] := u2[u] = NIntegrate[u1[j], {j, 0, u}]     PDFu[j_?NumericQ] := PDFu[j] = k*u1[j] Exp[-k*u2[j]]     CDFu[u_?NumericQ] := CDFu[u] = NIntegrate[PDFu[j], {j, 0, u}]     CDFuu[u_?NumericQ] := CDFuu[u] = NIntegrate[u1[j]*PDFu[j], {j, 0, u}]     CDFui[j_?NumericQ] := CDFui[j] = NIntegrate[i1[z]*PDFu[z], {z, 0, j}]          ClearAll[Case1, Case2, Case3, Case2a, Case3a, Case2b, Case3b, Case3c, \     Case3d, Case3i, q]          Case1[q_] := Exp[-1/600*(prop[q])];     Case2a[q_?NumericQ] :=        Case2a[q] = NIntegrate[PDFu[j]*CDFi[j], {j, 0, prop[q]}];     Case2b[q_] := (1 - CDFu[prop[q]])*CDFi[prop[q]];     Case3a[q_?NumericQ] :=        Case3a[q] = NIntegrate[PDFi[j]*CDFuu[j], {j, 0, prop[q]}];     Case3b[q_?NumericQ] :=        Case3b[q] = NIntegrate[PDFi[j]*CDFui[j], {j, 0, prop[q]}];     Case3c[q_] := (1 - CDFi[prop[q]])*CDFuu[prop[q]];     Case3d[q_] := (1 - CDFi[prop[q]])*CDFui[prop[q]];          Case2[q_] := Case2a[q] + Case2b[q]     Case3[q_] := Case3a[q] + Case3b[q] + Case3c[q] + Case3d[q]     Case3i[q_] := Case3b[q] + Case3d[q]     Case3u[q_] := Case3a[q] + Case3b[q]