This question is intimately connected with previous one: "How to create internally optimized expression for computing with high WorkingPrecision?" Oleksandr R. correctly states in the comment: > A good answer will hopefully discuss the `Experimental`NumericalFunction`, > which is a structure produced by `FindMinimum` from the function and its > `Jacobian` that is optimized for fast numerical evaluation. I know almost > nothing about these objects or how to create/use them, but I would like to > find out. From other questions on this site it is apparent that other built-in numerical functions also use `Experimental`NumericalFunction` which seems to be the standard way to optimize numerical evaluation. It is not documented but it is placed in the `Experimental` context which "contains functions that are being considered for official inclusion in future versions of _Mathematica_ ". This undocumented function is of crucial importance because currently it is **the only way to optimize _arbitrary precision_ calculations**. For `MachinePrecision` we have `Compile` but nothing documented for arbitrary precision. How to work with `Experimental`NumericalFunction`?