I was playing around with the bouncing ball example, and decided to make a 3d version. I decided to use `ParametricPlot3D` for a simple independent 3D presentation. However, I found that having an interpolating function as the the first element in the list of three functions passed to `ParametricPlot3D` doesn't work.               ballz = NDSolve[{z''[t] == -9.81, z[0] == 5, z'[0] == 0,     WhenEvent[z[t] == 0.2, z'[t] -> -0.9 z'[t]]}, z, {t, 0, 10}];          bally = NDSolve[{y''[t] == 0, y[0] == -2, y'[0] == 4,      WhenEvent[y[t] == 4.8, y'[t] -> -0.9 y'[t]],      WhenEvent[y[t] == -4.8, y'[t] -> -0.9 y'[t]]}, y, {t, 0, 10}];          Manipulate[       ParametricPlot3D[{t - 2, y[t] /. bally, z[t] /. ballz}, {t, 0, a},          PlotStyle -> {Gray, Dashed, Thick},          PlotRange -> {{-5, 5}, {-5, 5}, {0, 10}}],        {a, 0.025, 10, 0.025}]      The above code works fine, but when I substitute by an interpolation function for the `t - 2` term, the function doesn't work. Can this be fixed?