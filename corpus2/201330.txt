In computing what is meant by _binary compatibility_? I read about it in context of serialization/deserialization that this process of serialize/deserialize should be binary compatible. What does it mean in this context? In particular I am interested in understanding the role of binary compatibility in a language like Java that deals with byte code. This quote is from Effective Java: > When a serializable class is revised, it is important to check that it is > possible to serialize an instance in the new release and deserialize it in > old releases, and vice versa. The amount of testing required is thus > proportional to the product of the number of serializable classes and the > number of releases, which can be large. These tests cannot be con-structed > automatically because, in addition to binary compatibility, you must test > forsemantic compatibility. In other words, you must ensure both that the > serialization-deserialization process succeeds and that it results in a > faithful replica of the original object. The greater the change to a > serializable class, the greater the need for testing. The need is reduced if > a custom serialized form is carefully designed when the class is first > written (Items 75, 78), but it does not vanish entirely.