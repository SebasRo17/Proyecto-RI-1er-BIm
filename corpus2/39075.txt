I am trying to implement a function that finds the determinant of a random matrix consisting of integers. This is the code I have written so far, but I am stuck. Suggestions ? I want to find a solution without Det[M].               M := RandomInteger[{-10, 10}, {8, 8}]          det[M_ /; Dimensions[M][[1]] == Dimensions[M][[2]]] := Module[{i, d},     If[N == 2,     Drop[Mi, {1, 1}, {1, 1}][[1, 1]]*Drop[Mi, {1, 1}, {1, 1}][[2, 2]] -      Drop[Mi, {1, 1}, {1, 1}][[1, 2]]*      Drop[Mi, {1, 1}, {1, 1}][[2, 1]],      For[i = 1, i <= Length[M], i++,      d = d + (-1)^(1 + i) *M[[1, i]]*        Minors[Drop[M, {1, 1}, {i, i}],            Length[Drop[M, {1, 1}, {i, i}]]][[1]][[1]]]];      Return[d, Module]]     det1[Mi_ /; Dimensions[Mi][[1]] == Dimensions[Mi][[2]]] :=      Module[{det1},     det1 = Sum[     If[det1 == 1,       Break[], (-1)^(1 + j) *Mi[[1, j]]*det1[Drop[Mi, {1}, {j}]]], {j,       1, Length[Mi]}]; Return[det1 // MatrixForm, Module]]     det1[M_ /; Dimensions[M][[1]] == Dimensions[M][[2]]] :=     Module[{i, d = M},     For[i = 1, i <= Length[d], i++,     If[Length[M] == 1, Goto[end]      If[Length[M] == 2,        d = Drop[d, {1}, {1}][[1, 1]]*Drop[d, {1}, {1}][[2, 2]] -          Drop[d, {1}, {1}][[1, 2]]*Drop[d, {1}, {1}][[2, 1]];        Goto[end], d = d + (-1)^(1 + i) *d[[1, i]]*Drop[d, {1}, {i}]];     Label[end]; Return[d, Module]]]]     det1[M_ /; Dimensions[M][[1]] == Dimensions[M][[2]]] :=     Module[{i, d = M},     For[i = 1, i <= Length[d], i++,      Switch[d, 1, Goto[end], 2,      d = Drop[d, {1}, {1}][[1, 1]]*Drop[d, {1}, {1}][[2, 2]] -        Drop[d, {1}, {1}][[1, 2]]*Drop[d, {1}, {1}][[2, 1]];      Goto[end], _,     d = d + (-1)^(1 + i) *d[[1, i]]*Drop[d, {1}, {i}]];      Label[end]; Return[d, Module]]]     Return[Determinant[Mi]]