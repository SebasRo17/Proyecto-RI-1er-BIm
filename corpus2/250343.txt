The Common Lisp spec states that `nil` is the name of the _empty type_ , but I've never found any situation in Common Lisp where I felt like the _empty type_ was useful/necessary. Is it there just for completeness sake (and removing it wouldn't cause any harm to anyone)? Or is there really some practical use for the _empty type_ in Common Lisp? If yes, then I would prefer an answer with code example. For example, in Haskell the _empty type_ can be used when binding foreign data structures, to make sure that no one tries to create values of that type without using the data structure's foreign interface (although in this case, the type is not really empty).