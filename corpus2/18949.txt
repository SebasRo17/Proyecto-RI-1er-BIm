Recently I had the need to redefine a certain symbol in my init.m so it would be automatically omitted from any lists it appears in. I decided to redefine it to an empty sequence, e.g. `Locked = Sequence[]`, but that got me thinking. What if I wanted to return a sequence (not necessarily an empty one) in a `:=` definition? `Return` doesn't have the `SequenceHold` attribute, and adding it in a package might cause problems, so what would I do? **EDIT:** I think I've figured out what exactly causes me to have the problem. I've defined it to display a `Message` first to let me know whenever a package I'm importing attempts to attack my computer. (It _is_ trying to cause my computer to behave in a manner not consistent with my wishes, after all.) So I defined it as `Locked := (Message[Locked::nope]; Sequence[])`, but strangely it just returns Null. (It doesn't show a return value, but if I do `{Locked}`, it returns `{Null}`, and if I try to set it as an attribute it says that Null is not a valid attribute and doesn't set any of them.)