How can the actual definition of a function be hidden from a user? I want the user of a notebook to be able to evaluate a real-valued function f of a real variable at any particular numeric input yet not be able to see the symbolic expression that defines it. E.g.:               f[x_]:=Exp[-x] Cos[2x]      Of course I know I want to hide the definition of `f` in a package, say `func.m` consisting of something like the following:               BeginPackage["func`"]     f::usage = "f[x] gives the value of the secret function f at x";          Begin["`Private`"]     f[x_]:=Exp[-x] Cos[2x]     SetAttributes[f,{ReadProtected,Locked}]     End[]          EndPackage[]      This package file would be `Encode`d and put into the same directory as a notebook, say `work.nb` where the user will work with the hidden definition. And this notebook would include, in an Initialization cell:               SetDirectory[NotebookDirectory[]]     Get["func`"]      But after that cell is evaluated, still evaluating               f[x]      unfortunately reveals the symbolic definition of `f`. Is it possible somehow to hide the symbolic definition yet be able to evaluate `f` at arbitrary numeric input?