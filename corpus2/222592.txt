I am trying to make a program in Java which measure the complexity of a specific program with respect to its run time. Let's take a problem and code that problem in all possible ways with respect to time complexity, let's say we can write code for a specific problem in O(n), O(log(n)), O(n log(n)) and O(n^2). I will record the run time of each case and I will make a scale with these values to measure the time complexity of other's solution. Like   1. O(n) -> 2-3 ms   2. O(log(n)) -> 1-2 ms etc. Now if other code has run time 2.3 ms, then my Java program will say that given solution has time complexity of the order O(n). Now problem is that, as my code is in Java, whenever I run any program using Ubuntu commands through Java code , each time I get the different run time, and the run time has very huge range from 0.364246 to 0.902362. Why it is happening and what can I do to make a efficient scale? Here is my code:               import java.io.*;          class ps_ef     {         public static void main(String args[])     {         String s=null,file_name,extension;         int pos = args[0].lastIndexOf(".");              extension = args[0].substring(pos+1);         file_name = args[0].substring(0,pos);              int lang = 0; //  1 -> c,c++ , 2 -> java              try         {                     Process compile = null;                  switch(extension)             {                 case "c"    :    compile = Runtime.getRuntime().exec("gcc -g "+ args[0] + " -o "+file_name);                             lang = 1;                                        break;                 case "c++"  :    compile = Runtime.getRuntime().exec("g++ -g "+ args[0] + " -o "+file_name);                             lang = 1;                             break;                 case "java" :    compile = Runtime.getRuntime().exec("javac "+ args[0]);                             lang = 2;             }                  BufferedReader stdError = new BufferedReader(new InputStreamReader(compile.getErrorStream()));                  if((s = stdError.readLine()) != null)             {                 System.out.println("Compile Time Error OR Warning : ");                      System.out.println(s);                 while((s = stdError.readLine()) != null)                 {                     System.out.println(s);                 }             }                  double startTime, run_time;             Process run;                  if(lang == 1)             {                  startTime = System.nanoTime();                       run = Runtime.getRuntime().exec("./"+file_name);                       run_time = (System.nanoTime()-startTime)/(double)Math.pow(10,6);             }             else             {                      startTime = System.nanoTime();                       run = Runtime.getRuntime().exec("java "+file_name);                       run_time = (System.nanoTime()-startTime)/(double)Math.pow(10,6);             }                  System.out.println("RunTime : "+ run_time+" ms");                  BufferedReader run_stdInput = new BufferedReader(new InputStreamReader(run.getInputStream()));                  BufferedReader run_stdError = new BufferedReader(new InputStreamReader(run.getErrorStream()));                  if(( s = run_stdError.readLine()) != null)             {                 System.out.println("Runtime Error : ");                      System.out.println(s);                      while((s = run_stdError.readLine()) != null )                 {                     System.out.println(s);                 }             }             else if((s = run_stdInput.readLine()) != null)             {                 String s_string = null;                 int failed = 0;                      File fs = new File(file_name+".txt");                      BufferedReader br  = new BufferedReader(new FileReader(fs));                      if((!s.equals(s_string = br.readLine())))                 {                     failed = 1;                 }                      while(((s = run_stdInput.readLine()) != null) & ((s_string = br.readLine()) != null) & (failed == 0))                 {                     if(!s.equals(s_string) )                     {                         failed = 1;                         break;                     }                 }                      if((failed == 1) || s != null || s_string != null)                 {                     System.out.println("Submmision Failed : ");                     System.out.println("Either Output Is Wrong.\nOR\nYour Output Is Not According To The Given Format. ");                     System.exit(0);                      }                 else                 {                     System.out.println("Submission Successful.");                 }                  }         }            catch(IOException e)         {             System.out.println("Some Error Has Occured : ");             e.printStackTrace();             System.exit(-1);         }          }      } Here is my output of run time: ![enter image description here](http://i.stack.imgur.com/tWUwp.png)