I am planning to build an expression parser that will be used to graph algebraic functions ( think TI-83 ) with JavaScript. Functions will take the form of `f(x)=` Aside from typical operators such as: `+ - * / ^` I'd also like to add support for inline functions such as: `sin()`, `cos()`, `log()` and `random()`. I have looked at implementing the Shunting Yard algorithm for parsing expressions, but it does not look like an efficient approach to evaluating a function with a hundreds or thousands of inputs. What other known algorithms exist for this task?