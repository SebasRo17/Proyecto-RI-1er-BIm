I have a lot of scripts that use a database connection, and I have realized that my code should be protected against errors in my connection. For example, when my database is out for some technical reason. I tried to use this in a fake broke connection:               sqlConn:=OpenSQLConnection[JDBC["Microsoft SQL Server(jTDS)","187.111.111.111"],"Username"->"myUser","Password"->"myPass"];     (conn = TimeConstrained[sqlConn, 1]) // AbsoluteTiming      But without success as you can see. The 1 second argument is not respected. I get this:               "JDBC::error: Network error IOException: Operation timed out >>"     {76.518145, $Aborted}      Wolfram technical support asked me to try changing `$SQLTimeout`, but that did not work either. I tried before the last code:               `$SQLTimeout=1`      and the time restriction is also not respected. They then told me: > "Most of the timeout functions in Mathematica takes into account only the > CPU time spent inside the main Mathematica kernel process; it does not > include additional threads or processes. And the time OpenSQLConnection > spend is mostly on it's own thread." Some clue on how to deal with this?