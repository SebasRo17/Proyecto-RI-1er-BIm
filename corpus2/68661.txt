I recently made the investment in the newly-printed four-volume set of Donald Knuth's _The Art of Computer Programming._ Like this poster, I probably do not have the time right now to read the entire set, with a full-time programming job, spending time with my girlfriend, doing housework, etc., though I have no doubt I would find it fascinating. Public transit is not available for my commute, and unless there is a "books-on-CD" version, consuming the material during my commute is probably out of the question. After reading this review of Volume 4A, I realized that at least some of the information may be of great help in my thesis. Incidentally, the thesis is for my doctorate in music, which has been on the back burner for a little longer than I would like. It sounds like, from the reviewer's description, combinatorial algorithms could be of great help in solving the problem I am attempting to solve. Am I going to need to read the first three volumes to understand the fourth? While I have no computer science degrees per se, I do have a reasonable amount of experience, and I have succeeded in graduate coursework in algorithms, compilers, and databases. Have any of you read some or all of Volume 4A? What background did you feel you had (or lacked) that helped (or would have helped) you understand the material?