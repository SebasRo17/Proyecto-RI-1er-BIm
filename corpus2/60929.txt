When you have several programming tasks to do at once, do you prefer to go through them one at a time, or to vary them, perhaps based on subtasks or on time? Why? For myself, I find that: Pros for sticking:   * If I lose my concentration or train of thought, it takes a while to get back into it. If I chug through one task, I'll probably get more done.   * Getting to cross things off a todo list feels good and looks good to my employer. Pros for varying:   * Sometimes my most productive work is in the first hour or so that I'm working on a task. If I vary, I get several first hours in a day.   * Getting stuck on a task when you're not making any progress is not much fun. Giving it some time often allows you to come up with solutions in a more relaxed manner. What do you do? Is there a particular time frame between varying tasks that works best?