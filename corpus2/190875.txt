I'm new to dependency injection and I have a few questions about which style I shouldI use in my applications. I've just read _Inversion of Control Containers and the Dependency Injection pattern_ by Martin Fowler, but I can't get the practical difference between constructor, setter and interface injection. It seems to me that the reasons for using one over the other are just a matter of code cleaning and/or clarity. What is the difference? Are there any strong advantages or disadvantages for using one over the other, or is it just what I've stated before? In my opinion, _constructor injection_ is the most intuitive of all, as well as _interface injection_ is the least. In the other hand, _setter injection_ is a middle term, but, are you supposed to be able to change the instance of the dependency object you initially injected? Does this style of injection guarantees that the object which needs the dependency will always have it injected? I believe not, but please correct me if I'm wrong.