Consider this example: I have a website. It allows users to make posts (can be anything) and add tags that describe the post. In the code, I have two classes that represent the post and tags. Lets call these classes `Post` and `Tag`. `Post` takes care of creating posts, deleting posts, updating posts, etc. `Tag` takes care of creating tags, deleting tags, updating tags, etc. There is one operation that is missing. The linking of tags to posts. I am struggling with who should do this operation. It could fit equally well in either class. On one hand, the `Post` class could have a function that takes a `Tag` as a parameter, and then stores it in a list of tags. On the other hand, the `Tag` class could have a function that takes a `Post` as a parameter and links the `Tag` to the `Post`. The above is just an example of my problem. I am actually running into this with multiple classes that are all similar. It could fit equally well in both. Short of actually putting the functionality in both classes, what conventions or design styles exist to help me solve this problem. I am assuming there has to be something short of just picking one? Maybe putting it in both classes is the correct answer?