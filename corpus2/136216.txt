I've read through the NetworkX tutorial and documentation, but was unable to find real world answers for this question. Usually when using NetworkX, I might use strings to define nodes, then set several attributes. e.g.               G = nx.Graph()     G.add_node('John Doe', haircolor = 'brown')     G.node['John Doe'][age] = 22      However, it seems like declaring a class with members instead of attributes is better in practice, especially when there are many attributes and readability might be an issue.               class Person:          name = None          age = None          Person p     p.name = 'John Doe'     p.age = 22     G.add_node(p)      Could someone be kind enough to validate my reasoning? I lack the foresight to see if Networkx node/edge attributes would be preferable.