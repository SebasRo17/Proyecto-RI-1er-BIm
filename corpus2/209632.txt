Searching the web, we can find plentiful examples of various ORMs (nHibernate, EF, LinqToSql, etc.) that implement but don't actually support the full `IQueryable<T>` interface, throwing `NotSupportedExceptions` when they encounter something they don't like, such as LinqToSql and `SkipWhile`. My question is this: why do ORM providers opt to throw a `NotSupportedException` instead of letting certain query operators (that do not translate well or at all to the target data source) trip a query execution and then let Linq to objects handle the rest? I understand that some heavy physical resource usage could occur as a result, but if `IQueryable<T>` instances were _truly_ swappable, would we not be better off?