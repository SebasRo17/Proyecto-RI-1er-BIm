As my differential function is relatively complex I do not want to do the detour of finding an explicit solution via DSolve for it but rather use an FindRoot-like approach by guessing initial starting values. Following example: Let `z[t]` be the differential where the start and end values are known: `z[0]=z0` and `z[tmax]=zend`, but the end time `tmax` is unknown. The (simplified) differential (where the paths of `l2[t]`and `l3[t]` as well as their end values `l2final` and `l3final` are well-defined) is:               DSolve[{z[0] == z0, z[tmax] == zend, z'[t]==f[l20[t],l3[t]],l2[tmax]==l2final, l30[tmax]==l3final}, z[t],t]      The only unkown is `tmax`. So I don't want to do the `DSolve` described as I don't care about an explicit solution of z[t]. But I rather want to search for something like:               FindRoot[z[t]-zend,{t,0,100}]      Does anybody have an idea how to combine both approaches EFFICIENTLY? Btw: `z[t]` is continously increasing as well as `l2[t]` and `l3[t]`