Consider the following command:               TextCell["\!\(\*SubscriptBox[\(H\), \(2\)]\)", "Section"]      How can I display the string as section header and get the DisplayForm? Right now it writes `\!\(\*SubscriptBox[\(H\), \(2\)]\)` as section header which hurts my eyes. **Edit:** To give a little more background. I have a long list of Strings with sub- and superscripts (typed in using keyboard shortcuts), i.e. explicitely not using Superscript[..] etc.. Now I want to create a notebook with one section per list entry and the string should go into the section title with proper display of super/subscripts. Here is a hopefully better example: I create a list of section headers. For A_1 I type `A <Ctrl>+_ 1`, etc. Then I want to create sections from the list. The code copied as input text:               headers = {"\!\(\*SubscriptBox[\(A\), \(1\)]\)",         "\!\(\*SubscriptBox[\(A\), \(2\)]\)",         "\!\(\*SubscriptBox[\(A\), \(3\)]\)"};     FullForm[headers]     CellPrint[TextCell[#, "Section"]] & /@ headers      Edit 2: Using ToExpression almost does the job. I am using the following code. Note that ToExpression scrambles the order of the characters in the header strings. Any idea on how to improve?               headers = {"\!\(\*SubscriptBox[\(B\), \         \(1\)]\)\!\(\*SuperscriptBox[\(A\), \(2\)]\)",            "\!\(\*SubscriptBox[\(B\), \(1\)]\)\!\(\*SuperscriptBox[\(A\), \(3\         \)]\)", "\!\(\*SubscriptBox[\(B\), \         \(1\)]\)\!\(\*SuperscriptBox[\(A\), \(5\)]\)"};     CreateDocument[      Flatten[       Prepend[         Table[          CellGroup[           {            TextCell[ToExpression[i], "Section"],            ExpressionCell[Plot[Sin[x], {x, 0, 6}]]            }]           , {i, headers}]         ,{TextCell["Title", "Title"],           TextCell["created:" <> ToString[DateString[]], "Subtitle"]}]      ,1],     Visible -> True];