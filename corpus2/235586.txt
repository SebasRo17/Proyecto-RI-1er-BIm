first of all, I don't have any code to display in my question here, because I'm still designing the application structure, so i only got design developed. I'm building a phone application that I'm trying to make as secure as possible, i know it's not that necessary on application that is the size of mine, but still, good practice. My app is on Angular with phonegap, server side is accessible through https and is nodejs with mongoDB, is a stateless server, restful api. Once the user is logged in (using user and password or facebook), a session id is stored on the client side (angular cookies) and is required with each access to the server (checking if there is a user logged in with that session id). I also heard about form tokens so i implanted that - On each form that in the end will send a request to the server (for example, changing user information and hitting save) it will also require a form token, random value that is generated for the session on building the form - onLoad function that calls the server to generate a specific form token. Seems pretty cool, but still not sure if it any good. By thinking of it, someone can call my restful method to generate any form token he wants using session id he found (by brute forcing or whatever), and then call any other restful method to change anything for that user.. also, my server should be limited to be accessed only from the application...can't restrict origin because the IP changes from phone to phone...what are the restriction my server should have? I am a starter at security for web apps and any advice, explaining and help would really help! is my application secure enough?