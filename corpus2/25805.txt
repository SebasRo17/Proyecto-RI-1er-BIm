The quatity $R$ is defined by a complicated expression in terms of $a_1,a_2,\ldots,a_n$. Now each $a_i$ is a function of $x$, $a_i(x)$. I would like to know what is the most efficient way to substitute in R the expression for the $a$s and then plot it as a function of $x$. I am only interested in the plot. For concreteness consider the following code:               With[{vecup = Table[(Abs[a[i]]^2 - 1)*If[ε^2 >= 2 i, 1, 0], {i, NN}],            vecdown = Table[(1 - 1/Abs[a[i]]^2)*If[ε^2 >= 2 i, 1, 0], {i,  NN}]},        R = Abs[ψorbR]^2.vecup/(1 + Abs[ψorbT]^2.vecdown)];     v[n_] := Sqrt[1 - 2 n/ε^2];     a[i_] := -I Sqrt[(1 + Sign[i] v[Abs[i]])/(1 - Sign[i] v[Abs[i]])];      I would like to plot `R`. The vectors `ψorbR` and `ψorbT` are very large expressions, and as I increase `NN`, these vectors increase in size causing the expressions of their elements also to increase in size, eventually making `R` impossible to plot. Are there efficient ways to do operations on large expressions such as R that will help in keeping the plotting time reasonable?