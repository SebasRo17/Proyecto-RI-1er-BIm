I wanted to understand a control's lifecycle in WPF. Let me explain my scenario: I have a complex screen containing various container controls hosting forms. Let's say my screen has 3 Accordion Items. In the first Accordion item, I have a TabControl and this TabControl has 4 TabItems. Each TabItem has various Forms containing label-value pairs such as checkboxes, comboboxes, textboxes, RadWatermarkTextBoxes etc.., Now, the user introduces an error in one of the TextBox present in AccordionItem#1 --> TabControl#1 --> TabItem#1 --> TextBox#1 (for example) and then he/she switches over to TabItem#2 within the TabControl#1. Now, when the user switches over to TabItem#2, does the TextBox#1 die? Is it recreated again, when I expand TabItem#1? What exactly happens when a container is collapsed and how can I set focus to an element which is not existing in the view anymore? Let me explain it further in detail ... Now, let's say, the user has introduced various errors in different forms of the TabItems. and has now come out of the AccordionItem#1 and entered into AccordionItem#2. There are lots of errors (the user knows that and would like to correct them later by navigating to them). After finishing all the form filling in all the accordions. He starts looking at the errors before saving. The user needs to navigate and to do this, we have an icon and clicking on this icon, will take us to the next erroneous field, which means I need to automatically open the AccordionItem#1 --> TabControl#1 --> TabItem#1 --> TextBox#1 and set focus to this control, so that the user can start editing it. When the user finishes correcting the error in this field, he/she presses the icon again, and I need to automatically open AccordionItem#2 --> TabControl#2 --> TabItem#3 --> TextBox#4 for example. All these were previously collapsed as we were in AccordionItem#1 previously?! So, I wanted to understand, if something like this is possible or not? I was wondering what kind of a pattern will help us achieve this kind of functionality. When I find an error. Can I store a reference to this element(using its GUID - i.e. x:Name value) and when user clicks on the next error, then raise an event on it, which will propogate up the visual tree letting the parent tab handle it, passing it further and on till I reach the highest level and then pass another event down the line so that each of these parents can then expand themselves come into view and finally setting focus to the errorneous control? Is something like this possible? It is an interesting scenario and probably many developers might have encountered an issue like this when designing and developing huge applications.