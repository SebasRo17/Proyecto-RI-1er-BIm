For an API I'm building what it does is load an XML file that is passed to it as a string, drill to the correct element, modify values, and return the modified XML. I'm doing something like this in my code               if (valid)     {         XDocument docRoot = XDocument.Parse(XMLstring);              var node1 = docRoot.Descendants(namespace + @"node1");              foreach (var result in node1)          {             var child1 = result.Descendants(ns + "child1");                  var test = child1.First();             test.SetValue(Transform(test.Value));         }                   //return the transformed XML          }     else { }      Now I want to create a configuration file in XML format that allows user to specify which nodes in the XML to modify and what modification to perform, (later I want to make use of this in a GUI) so something like               <root Value="">         <Modify Xpath="\parent\child1\superchild\" Attribute="" Mode="delete" />         <Modify Xpath="\parent\child2\" Attribute="Value" Mode="multiply" />     </root>      And I have these two pieces but don't know how to connect them together. I think I have to make a class from my XML configuration file and somehow map those to the values in the other XML.