KernelDevViewpoint (an apparently serious source) makes kernel development look like an accessible art. According to them: > Contrary to popular belief, kernel developers rarely need to know math at > the calculus level. You need to be good at basic arithmetic and you must > know Boolean algebra to work on device drivers. > > One skill that many kernel developers learn on the job is the ability to > build state machines in your head of what the code is doing. (...) and > Technical skills for kernel developers include experience with the C > programming language, and knowledge of Git. Is that the basis of kernel development? Basic arithmetic, Boolean algebra, C and Git? Obviously, I don't expect to read "C in ten days" (or whatever similar book) and start contributing to the Linux kernel development, however, I wonder how difficult will be to obtain the skills to do that?