I'm looking for info about best practices of handling multiple configurations (not to be confused with - multiple configuration files) for seamless development of Spring MVC based app. I come from world of "big" PHP frameworks, where all you have to do is to write confirations specific for each phase (dev, staging, production) in separate files named as framework wants you to (Symfony), or writing one huge config file and dividing it into sections (Zend), and this will actually work. Sometimes you also/additionaly have to put some extra, `vcs` ignored files and it will do. How to handle this in Spring MVC, or Tomcat apps in general? If you're not sure about what I'm talking about, please refer to this article. To clear things up even more:   1. I'm talking (mainly) about `web.xml` and `pom.xml`.   2. I want to have (or maybe what I dream about):      * local configuration - for each developer in team, to run project locally, on `localhost:8080`, displaying full error messages and stack traces     * dev configuration - to run on test server, `dev.example-private.com`, show errors     * staging configuration - client preview, `staging.example-private.com`, nice error pages, send mails with critical errors and stack traces     * production configuration - `example.com`, nice error pages, send mails with errors   3. I don't want to switch configurations manually. I want `spring` to recognise the environment (maybe using `tomcat` config) and use appropriate configuration files. This is mainly because I want to make deployment as easy as merging branches.