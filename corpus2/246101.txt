As I'm finishing a web development course with a few friends with whom I have worked in many projects we're aiming to begin a professional team of developers. Functions are well defined between programmers, analysts and designers, and the team shouldn't get to a much larger number than six members. To quicken development and keep each developer's work from overlapping with others', an MVC framework has been considered by the group. The front-end developers shouldn't mind which one is chosen since it's all based around web standards for them, but me and the other programmers have been considering a few options. Since the question is getting really verbose, I'll just summarize what I would like more experient developers' opinions on:   * What should be considered when choosing a web framework? For small projects, performance shouldn't be a killer factor, but would it still be reasonable to remove Ruby/Python systems from the competition?   * Is being able to work on more than one programming language, or more than one framework in a given language something important?   * Should the learning of one or more frameworks be done in group, or on each developer's own, and then gather opinions on them?