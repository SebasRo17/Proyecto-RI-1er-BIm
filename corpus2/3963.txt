edit: Excellent answers have been provided and I made an animation which is suitable for my use, however, all the examples rely on bitmap/rasterized data; is there a vector based approach? I would like to animate the formation of a voronoi network from a set of semi- random points.               points = Table[{i, j} + RandomReal[0.4, 2], {i, 10}, {j, 10}];     points = Flatten[points, 1];      The final `VoronoiDiagram` can be easily plotted with `DiagramPlot` in the `ComputationalGeometry` package.               Needs["ComputationalGeometry`"]     voronoi = DiagramPlot[points, TrimPoints -> 50, LabelPoints -> False];      I want to animate a series of circles growing outwards uniformly from each of the points until they intersect to form the voronoi network.               ExpandingCircles[r_, points_] :=       Graphics@{Point /@ points, Circle[#, r] & /@ points}     plots = ExpandingCircles[#, points] & /@ {0.1, 0.2, 0.3, 0.4, 0.5};     GraphicsGrid@Partition[Join[plots, {voronoi}], 3]      ![Mathematica graphics](http://i.stack.imgur.com/LH2fJ.png) Similar to that progression but in mine the circles overlap. I want them to stop growing as they hit the adjacent circle to form the voronoi network but I can't figure out how to do this. Based on @R.M.s pointing out @belisarius answer I've tried this:               GraphicsGrid@      Partition[       ColorNegate@          EdgeDetect@           Dilation[ColorNegate@Binarize@Rasterize@Graphics@Point@points,             DiskMatrix[#]] & /@ Range[1, 24, 3], 4]       ![Mathematica graphics](http://i.stack.imgur.com/Mh7h2.png) However, I can't get them to merge into the voronoi structure. Somewhat like this video (http://www.youtube.com/watch?v=FlkrBSh4514) except all of mine start growing at the same point in time.