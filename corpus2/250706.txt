I see the main purpose of `continue` in programming, it can get you out from the rest of loop steps like:               while(condition1){       ... code ...       if(!condition2){         continue;       }       ... code ...       if(condition3){         break;       }       ... code ...     }      I understand that condition2 and condition3 might depend on the inner code so it makes handy to make a separate escape route from loop step. But does it mean the code should be refactored instead building escape routes, like rethinking the original condition1? I would say if I need several `continue` and `break` parts, I feel bad about my code, usually I am working without `continue` and I don't really miss it. An another use of `continue` and `break` which I can accept is optimalization, but I still have the same feeling about it like I told above. For some reasons I have feeling "using GOTO". **Am I right, if I am not, why?**