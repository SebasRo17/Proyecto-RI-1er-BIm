I am new to FUSE and using python-fuse for writing a file system for data deduplication. Let's say, I have a directory named "metadata" and in that directory, there is a file foo and a directory "data". Data contains a data chunks having unique names. These chunks are obtained from the process of data deduplication. foo contains a list of filenames present in data directory. I am taking a metadata directory and exposing it under the mountpoint drive. Till now, I have implemented a `readdir()` method such that If ls command is invoked on a drive, it would only display foo. Now I want to do a following thing. When foo file is read, it should display all the data(combined) from every file whose name is in foo. How do I implement a `read()` method? I have the following idea: Method has the signature `def read(self, path, length, offset, fh)`.               Open a file and read the list.          initialize empty buffer.          For everyItem in list append the content of file named everyItem to the buffer          return buffer      Am I going in right direction? As I want to write a read only fuse, is implementing only `read()` method sufficient?