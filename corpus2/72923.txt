With all the web2.0 hype and webapps being all the rage, the only advantage from a corporate POV that I can think of webapps having is that it is easier to service your user base: upgrades become easier among several things. It's just that the browser is not a good platform. I've been mulling this over for a while now. My original idea was to use python, then I found out about QSA. I like QT. It's widgets are excellent for most purposes, and it's cross platform. A generic QT application is installed on the clients machine. They point it to a URL to begin executing the signed/encrypted application at that location. The actual application could be written in Qt script. It could be developed very much like a traditional MVC application. Or it could, and probably should, be developed like WT, so that a "web" application can be coded the same way as a "desktop" application. Before I go reinventing the wheel, are there any such platforms/frameworks in existence? If I do go inventing this wheel, what are some things I should be aware of?