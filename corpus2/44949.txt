As Mathematica's implemented `Permuations` function is not compilable I tried to write my very own Permutations implementation, called `PermutationsNew`, which I want to compile later on. Unfortunately the only implementation I came up with so far uses recursive programming and looks like this:               PermutationsInternal = Function[{list, listfixed}, If[Length[list] == 1, Join[listfixed, list], Table[PermutationsInternal[Drop[list, {i}], Append[listfixed, list[[i]]]], {i, Length[list]}] ]];     PermutationsNew[list_] := Flatten[PermutationsInternal[list, {}], Length[list] - 2]      The implementation seems to work fine, but because of the recursive structure I cannot come up with any approach that can be compiled, because mathematica has trouble compiling the lists encountered in `PermutationsInternal`. Does anybody have an idea on how to compile the above approach or can offer me an idea for a different compilable solution?