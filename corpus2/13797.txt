How do I constrain the region where I can drag a `Locator` to conform to rules, including rules that apply to computations resulting from the value of the `Locator`? I understand how I can impose some very general constraints using `LocatorRegion`'s `Automatic` and `Full` settings, but these don't (appear to) allow me to:   1. Limit a single coordinate the `Locator` can assume, while allowing the other coordinates to cover the entire range of a plot.   2. Limit the coordinates `Locators` can assume based on a constraint placed on a function they generate. For example, in the following, code, how do (1) I constrain `c5` to the right hand edge of the figure (i.e to have an x value of 1) and (2) constrain all other `Locators` so that the resulting function never goes above the line y=x?               Manipulate[Show[       Plot[x, {x, 0, 1}],       ParametricPlot[f[{{0, 0}, c1, c2, c3, c4, c5}][x], {x, 0, 1}]],      {{c1, {.2, .2}}, Locator},      {{c2, {.4, .4}}, Locator},      {{c3, {.6, .6}}, Locator},      {{c4, {.8, .8}}, Locator},      {{c5, {1, 1}}, Locator},      {{f, BezierFunction, "Form"}, {BezierFunction, BSplineFunction}}]      That is, I want to prevent this, ![enter image description here](http://i.stack.imgur.com/g2qaE.png) by ensuring (1) that `c5` stays at x=1, while being free to assume a range of y values; and this ![enter image description here](http://i.stack.imgur.com/4wF2s.png) by (2) preventing any of the `Locators` from being moved to locations that would result in the generated plot from passing above the y=x line -- though a `Locator` may still be allowed above that line if this condition is not violated: ![enter image description here](http://i.stack.imgur.com/LSAqA.png)