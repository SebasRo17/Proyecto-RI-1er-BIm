I am trying to write a simple program to find the product of two numbers (X, Y) without using multiplication. Meaning that I will only use summation to find the product. I am trying to use the "Divide-and-Conquer" technique, and am using the obviously known concept that: 5*6 = 5+5+5+5+5+5               Multiply(uint X, uint Y)     {              if (Y < 1)             return 23423432453; //any very big random number              if (Y == 1)             sum = sum + X;              else // if (Y != 1)         {             halfY = Y / 2;             if (Y % 2 == 0) // if Y is even #                 return Multiply(X, halfY);             else //if Y is odd #                 return Multiply(X, halfY) + Multiply(X, 1);         }         return sum;     }      **EXPLANATION** 1) I see the problem as (for example) a 5x6 grid. My idea is to keep recursively dividing the number of columns Y until I reach that Y=1 (Y=1 is the base case). When Y=1, the number of rows in each column would be simply "X" and I can just add X+X+X ... according to the #of columns Y, and save the result in the variable               sum      , then I just return "sum" at the end. 2) In this part of the code,                else //if Y is odd #            return Multiply(X, halfY) + Multiply(X, 1);      I added "Multiply(X, 1)" to compensate for the "1" that will be lost due to the integer division operation. \----- As an illustration: For example 5*6, where X=5, Y=6:                                               Multiply(X,Y)                            //Y=6                               /                       \                    Multiply(X, Y/2)                   Multiply(X, Y/2)       //Y=3, Y=3                  /         |        \               /      \          \        Mult(X,Y/4) Mult(X,Y/4) Mult(X,1)  Mult(X,Y/4) Mult(X,Y/4) Mult(X,1) //Y=1,1,1,1,1,1             |           |           |           |            |        |     //BASE CASE!      sum= X + X + X + X + X + X = 5+5+5+5+5+5 = 30 * * * The code seems pretty logic to me, but it won't give me the right output. Is the idea incorrect? Any help in what is wrong would be greatly appreciated. Thanks.