I try to obtain random elements from a set given by multiple inequalities. This is of general interest to me, but let me present one example here: I have multiple inequalities specifying half spaces in 2D given by:               Eta[a_] := {Cos[a], Sin[a]}     NI[a_] := {Cos[a], Sin[a]}     Table[Dot[{Phi1, Phi2}, Eta[b]]] <= Norm[NI[Pi] - Eta[b]]^2 + 2, {b, 0, 2 Pi, 2 Pi/10}]      The set I am interested in is the intersection of all these inequalities (half spaces). Here is a `RegionPlot` of the set:               RegionPlot[And @@ Table[Dot[{Phi1, Phi2}, Eta[b]]] <= Norm[NI[Pi] - Eta[b]]^2 + 2, {b, 0, 2 Pi, 2 Pi/10}], {Phi1, -7, 7}, {Phi2, -7, 7}]      ![enter image description here](http://i.stack.imgur.com/Q0e61.png) Now I want to pick random vectors (elements) from this set. My current approach is to define an indicator function for the set like this:               set[x1_,x2_] = And@@Table[Dot[{Phi1, Phi2}, Eta[b]]] <= Norm[NI[Pi] - Eta[b]]^2 + 2, {b, 0, 2 Pi, 2 Pi/10}]/.{Phi1->x1,Phi2->x2}      Then use a Random number generator for `x1` and `x2` with appropriate bounds, that I get from inspecting the `RegionPlot` of the set to obtain a function that gives me `n` "random" elements from my set:               randomVector[n_] := Module[{list = {}, vector, i = 0},       While[i < n,        vector = {RandomReal[{-3, 6}], RandomReal[{-5, 5}]};        If[set[Sequence @@ vector], i++; AppendTo[list, vector];];        ];       Return[list];       ]      **Do you know of a more elegant way to do this?**