Is it better to have either a   * Deterministic test suite, that results in the same tests succeeding   * Non-deterministic test suite, which potentially possibly covers more cases ? **Example:** You write a test suite to test controller functionality in an MVC application. The controller requires application data from a database as input during the test. There are two options to do this:   * You hardcode which row(s) from the test database are selected as input (e.g. the 10th and 412th row)   * You use a random number generator to pseudorandomly pick the data from the database (two rows selected by a random number generator) The first is deterministic: every run of the test for the same revision of code should yield the same result. The second is non-deterministic: every run of the test suite has the possibility to yield a different result. The randomly picked data might however be a better representation of data edge cases. It might simulate a user feeding our controllers with unpredictable data better? What are reasons to choose one over the other?