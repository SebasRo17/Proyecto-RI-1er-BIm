I'm working on a project where we're adding automated testing to an existing project. We're starting with a central component, and setting up both unit tests at the code module level, and tests that run on the whole component, albeit in the developer environment. The intent is that this test suite must pass before code check-in, and will be run by a continuous integration system on each development branch. What should we call this? Right now we're calling it "dev unit tests", but the pedantic side of me says that's not quite right, because it contains more than unit tests. And our vision is that this suite will grow over time to include full-product acceptance tests. Any input here? Or should we stop arguing about names and go write tests? ### Update Everyone, thanks for good discussion! I think the conclusion I'm coming to is that there's not really a "common" definition - each project/team comes up with names that make the most sense for that project, depending on the technologies (Java, C#, ruby, etc) and methodologies (old-skool waterfall, Scrum, XP, etc) in use.