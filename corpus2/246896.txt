For example lets take this method:               public List<string[]> ReadAll(int listCapacity)     {         List<string[]> list = new List<string[]>(listCapacity);              while (Read())         {             list.Add(GetCurrentRow());         }              return list;     }      If `listCapacity` is less than zero, an `ArgumentException` will be thrown by the constructor of `List<T>`. Does it make sense to double check this? Passing the argument to `List<T>` immediately seems careless, but checking it seems silly because `List<T>` will definitely check it. Important note: the code snippet is not just a copy-paste method, its part of a full utility.