I have 24 x-y points that are supposed to form an ellipse.               points={{31.4799,432.849},{-195.826,356.419},{210.029,121.779},{76.1586,-4.47992},{26.6061,-6.97711},{160.236,27.0398},{203.248,241.865},{-225.351,218.912},{-159.899,109.93},{-106.465,58.164},{-1.98952*10^-11,442.},{-229.146,324.489},{-31.4799,9.15114},{195.826,85.5807},{-210.029,320.221},{-76.1586,446.48},{-26.6061,448.977},{-160.236,414.96},{-203.248,200.135},{225.351,223.088},{159.899,332.07},{106.465,383.836},{-1.98952*10^-11,1.83076*10^-11},{229.146,117.511}};     points//ListPlot      ![points](http://i.stack.imgur.com/osA77.png) I want to numerically fit an ellipse around those points. I tried to use the NMinimize method with least-square shown in this Q&A but the issue in this problem is that x and y are related parametrically (through t), and not directly like that other problem was. Worse, the ellipse will be off-center and tilted, so I can't use the nice $$\left(\frac{x}{a}\right)^2+\left(\frac{y}{b}\right)^2=1$$ but had to use this equation I found on Wikipedia (surprisingly without citation!): ![ellipsewiki](http://i.stack.imgur.com/fXPZD.png) My strategy was to generate 24 X(t) equations and 24 Y(t) equations, or more specifically, X(t1), Y(t1), ..., X(t24), X(t24) with xc, yc, a, b in them. Then, I would use NMinimize to optimize all of the square differences between my points and the ellipse. I would eventually get back xc, yc, a, b, CurlyPhi, and every single t values from t1 to t24. I tried to find a more elegant way of using NMinimized for parametric equations, and I believe the multivariate examples of NMinimized in the documentation are not exactly parametric equations. See also the linked Q&A above for an example. Here's my code to find xc, yc, a, b, t1, ... , t24:               tList = ToExpression["t" <> ToString[#]] & /@ Range[1, 24];     equations = Join[        MapThread[#1 - xc - a Cos[#2] Cos[\[CurlyPhi]] +            b Sin[#2] Sin[\[CurlyPhi]] &, {points[[All, 1]], tList}],        MapThread[#1 - yc - a Cos[#2] Sin[\[CurlyPhi]] -            b Sin[#2] Cos[\[CurlyPhi]] &, {points[[All, 2]], tList}]];     solution = NMinimize[       #.# &[equations],       Join[tList, {xc, yc, a, b, \[CurlyPhi]}]]      ![equations](http://i.stack.imgur.com/v7Req.png) And this is what the ellipse looks like:               Show[           (* Tilted ellipse/disk drawn using Disk and Rotate *)      Graphics[       {Yellow,         Rotate[Disk[{xc, yc}, {Abs@a, b}], \[CurlyPhi]] /.          solution[[2, 25 ;; 29]]}],           (* Starting points *)      points // ListPlot,           (* Ellipse outline plotted by the 2 parametric equations *)      ParametricPlot[{xc + a Cos[t] Cos[\[CurlyPhi]] -           b Sin[t] Sin[\[CurlyPhi]],          yc + a Cos[t] Sin[\[CurlyPhi]] + b Sin[t] Cos[\[CurlyPhi]]} /.         solution[[2, 25 ;; 29]], {t, 0, 2 \[Pi]}, PlotStyle -> Red],           (* Point on ellipse corresponding to t1 to t24 *)      ListPlot[{xc + a Cos[#] Cos[\[CurlyPhi]] - b Sin[#] Sin[\[CurlyPhi]],            yc + a Cos[#] Sin[\[CurlyPhi]] + b Sin[#] Cos[\[CurlyPhi]]} /.           solution[[2, 25 ;; 29]] & /@ solution[[2, 1 ;; 24, 2]],        PlotStyle -> Red],           Axes -> True]      ![ellipse](http://i.stack.imgur.com/bhLQE.png) Even though I got what I want, I just feel that this is clunky way to solve the problem, not least because I don't need to solve for t1 to t24--I just needed xc, yc, a, and b. Another issue is that for some reason the value of my a (supposed to be the long axis) is negative and smaller in magnitude than the other axis*, and the rotate angle of the ellipse is crazy high (88.7 radian). I tried to apply some constrains to NMinimize (a>0 or 90 [Degree] < [CurlyPhi] < 150 [Degree]) but kept getting errors. ![NMinimized error](http://i.stack.imgur.com/81Px2.png) * ![ellipse wiki reference](http://i.stack.imgur.com/nEj9v.png) Lastly, I'd really appreciate any general comment to make my code better as I'm still a beginner in MMA (you probably could tell by my zeal of pure functions in this example; I've just been reading a chapter about them).