Code Complete states that you should aways code _into_ a language as opposed to code _in_ it. By that, they mean > Don't limit your programming thinking only to the concepts that are > supported automatically by your language. The best programmers think of what > they want to do, and then they assess how to accomplish their objectives > with the programming tools at their disposal. (chapter 34.4) Doesn't this lead to using one style of programming in every language out there, regardless of the particular strengths and weaknesses of the language at hand? Or, to put the question in a more answerable format: Would you propose that one should try to encode one's problem as neatly as possible with the particulars of one's language, or should you rather search the most elegant solution overall, even if that means that you need to implement possibly awkward constructs that do not exist natively in one's language?