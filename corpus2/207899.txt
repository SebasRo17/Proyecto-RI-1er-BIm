I am currently writing a C code for a doubly linked list(dll) around which I want to write wrapers for implementing stack, queues etc. instead of writing separate codes for all of them. I'll be using `void *` for making it possible for the doubly linked list to work with any data type. The idea is basically the same as this implementation of stack using pointers in my github. I am thinking of 2 different designs   * Placing the size of elements alongwith the maintenance data. That would make coding easier but any instance of dll would be able to use only a particular data type.   * Placing the size of element in the nodes. That would make it more general but I have concerns whether this approach would be easier to use? This is the confusion that I wanted to clear before implementing any particular one. If there is any confusion regarding what I am trying to implement then please ask and I'll clarify.