I found these two nice links 1) intersecting graphics 2) Implementation of Balaban's Line intersection algorithm in Mathematica which works for 2d. However, I need to find whether a ray(line) intersects with a 3d object (it can be the bounding box np) and count how many of the lines intersect with a particular object. **The code so far**               gr1 = Graphics3D[{         Green,          Polygon[{{-10, -15, 0}, {-10, 10, 0}, {10, 10, 0}, {10, -15, 0}}],         }];     gr2 = Graphics3D[{         Yellow, Cylinder[{{4, 0, 3}, {4, 0, 6}}],         Red, Sphere[{6, 5, 2}, 2],         Blue, Cuboid[{-2, -1, 0}, {2, 2, 2}],         Blue, Cuboid[{-6, -2, 0}, {-3, 2, 4}]         }];          grR = Graphics3D[        Line[{{0, -10, 2}, #}] & /@ RandomReal[{-5, 10}, {50, 3}]];     Show[gr1, gr2, grR]      ![the scene](http://i.stack.imgur.com/GCwve.png) **Question** What is an efficient way of finding intersections in 3d and counting based on the objects. **Some useful links for people who might be interested. In computer graphics the subject falls under 'Line clipping'**   * Line clipping   * Liang–Barsky algorithm   * Liang–Barsky algorithm 3d    * Liang–Barsky algorithm java   * Line Box Intersection c