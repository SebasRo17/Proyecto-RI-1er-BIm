I'm new to Mathematica, so maybe mine is an easy to solve issue, but I haven't been able to figure it out. I have a series of linear ODEs I solve using for:               sol = ConstantArray[0, 1];     For[i = 2, i < 20, i++,           sol = Append[sol,                  First[y[t] /.                  DSolve[{y''[t] == -121/150*y'[t] - 1/10*y[t] -                       3 + (2/3)*D[sol[[i - 1]], t] + 1/10*sol[[i - 1]],                       y'[0] == 25, y''[0] == 0}, y, t]]]]      It runs fast and fine (takes a couple of seconds). I get the first derivative of every solution:               vels = D[sol, t];      Again, everything OK... Then I plot all of them:               Plot[vels, {t, 0, 80}]      ![plot of vels](http://i.stack.imgur.com/Odo0c.png) Pretty fast. I want to know the value of t for which each solution crosses a numeric boundary:               For[i = 2, i < 15, i++,       t10 = AppendTo[t10,         First[t /. NSolve[{vels[[i]] == 10, t < 40, t > 5}, t]]]]      It takes like a second or two for, say, the first 8 terms, but the 9th won't end after like an hour. It's funny because I can 'see' the result, and with a zoom large enough I could estimate the value by myself from the plot. Am I missing something important? Does it have anything to do with the methods used? Do I have to use some other command? Thanks in advance.