I ran into an unexpected behavior of RandomReal function inside the Block environment. If I simplify my problem: I wanted to use two random local variables, such that the second one would be less that the first one. I initialized both of them inside the brackets like this:               ClearAll[x, y]     Block[      {x = RandomReal[10], y = RandomReal[x], z = RandomReal[y]},      Print[x]; Print[y]; Print[z]; Print[x]; Print[y]; Print[z]      ]      I got the following result:               4.84284     0.0453673     1.63126     4.84284     2.68987     1.1345      and a warning:               RandomReal::unifr: The endpoints specified by x for the endpoints of the uniform distribution range are not real valued. >>     RandomReal::unifr: The endpoints specified by y for the endpoints of the uniform distribution range are not real valued. >>      Value of x seems to be the same all the time, but the values of y and z change. Note that the value of y changes even if the variable is not called explicitly (value of z in the third line is greater than the value of y in the second line), but the value of x never changes - I don't want to generalize too soon, but I executed upper code several times and the values of y and z were never greater than the value of x. Since I wanted the values of x,y and z to be fixed, I canged the code into:               ClearAll[x, y]     Block[      {x, y, z},      x = RandomReal[10]; y = RandomReal[x]; z = RandomReal[y];      Print[x]; Print[y]; Print[z]; Print[x]; Print[y]; Print[z]      ]      and got wanted output:               8.72751     2.74445     0.630739     8.72751     2.74445     0.630739      Can someone please explain how Block works? I can't explain the behavior of this construct in the first case I described. I read the documentation but didn't find the answer there - probably missed something? Thanks, Å pela