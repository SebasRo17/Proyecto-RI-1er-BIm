My question is about a special case of the super class Animal.   1. My Animal can moveForward() and eat().   2. Seal extends Animal.   3. Dog extends Animal.   4. And there's a special creature that also extends Animal called Human.   5. Human implements also a method speak() (not implemented by Animal). In an implementation of an abstract method which accepts Animals I would like to use the speak() method. That seems not possible without doing a downcast. Jeremy Miller wrote in his article that a downcast smells. What would be a solution to avoid downcasting in this situation?