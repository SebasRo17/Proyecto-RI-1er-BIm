If you have experience with both Ruby and Haskell, which of the following best describes the applicability and comparative power of the two languages?   1. The two languages better suit different kinds of programs, i.e. Ruby is better for x and Haskell is better for y.   2. They are both general-purpose, and one language better for almost all applications than the other.   3. They are both general-purpose, and whether one language is better than the other is mostly just a matter of personal preference. Or feel free to add your own conclusion. I know Ruby well, and have been studying Haskell for a few weeks without having written any serious applications with it. I primarily want to know which bits of my production Ruby applications I should try rewriting in Haskell, and also what future applications (not toy applications, but real production applications) I ought to consider writing in Haskell rather than Ruby.