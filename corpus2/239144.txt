My code is given below. In the for loop I am getting unexpected output i.e.   before completing the execution of for loop by 1st thread the 2nd thread comes in for loop and shows incremented value.               public class ThreadSafe {         public static void main(String[] args) throws InterruptedException {             System.out.println("main()");                  B b=new B("1st Thread");             B b1=new B("2nd Thread");             B b2=new B("3rd Thread");             b.start();             b1.start();             b2.start();         }     }          class MyCounter {         private static int count;              public static int getCount(){             for(int m=0;m<2;m++){                 System.out.println(count+" "+Thread.currentThread().getName());             }                  return count++;         }              }          class B extends Thread{         public B(String tname) {             super(tname);         }          public void run() {         MyCounter.getCount();         }     }      The question is when 1st thread executes for loop then other threads executing return statement is this the reason of showing increment value or something else? How other thread can show the incremented value unless the 1st thread reaches the return statement?