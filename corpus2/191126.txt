The Falcon programming language advertises itself as supporting tabular programming: > Falcon provides six integrated programming paradigms: procedural, object > oriented, prototype oriented, functional, tabular and message oriented. And > you don't have to master all of them; you just need to pick the ingredients > you prefer, and let the code follow your inspiration. The documentation expands a bit on how the language's flavour of tabular programming works, but it's focused on the language's own structures and syntax, and doesn't really explain the benefits of the paradigm (except of course those that are obvious from the simplistic examples). I'm a bit confused on how the whole thing works internally, from what I understand Falcon's `Table` is a native structure that works more or less as a relational table and could be described (in OO vernacular) as a native Record Set with relational querying capabilities. A horrible description, I know (blame my OO roots and years of abusing tequila). Could you help me get a better idea of what tabular programming is all about and how it works internally? **Clarification:** I am _not_ asking about Tabular Model Programming.