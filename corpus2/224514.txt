As far as I recall, this has been the ongoing trend of the past, I'm just a student, so I might be wrong:   * Long ago: Integer numbers and calculations. Very precise, however cannot present a big range.   * At a later point: Added single-precision floating point numbers (`floats`), and also added FPU's which are incredibly fast at calculating with them.   * Quite recently(?): Double-precision floating point numbers (`doubles`) are starting to become more common. For example in OpenGL Shader Language they are steadily introducing more and more methods that work with doubles natively. I think they are also working on FPU's for doubles? But also there has been a change to 64-bit processing a few years ago, so I've got a few questions:   * Are there more options now to calculate with fixed-point numbers (maybe two int64 registers?)?   * Why are there, as far as I know, no specific units for fast integer calculation with respect to fixed-point numbers? Maybe most of what I'm saying does not make much sense, but I think the question remains valid. Is there a switch we switch to fixed-point arithmetic in the near future?