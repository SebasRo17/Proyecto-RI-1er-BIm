This will probably wind up being a fairly simple question, but it needs some background first... I'm modelling various hardware switches, which can be turned on and off. The switches are configurable, allowing a user to specify the numeric values that are sent to the hardware to signal that it should turn on or off. This is the `Switch` class:-               public class Switch     {         public Id { get; set; }         public SwitchConfig Config { get; set; }              public void TurnOn()         {             WriteToSerialPort(Id, Config.OnValue);         }               public void TurnOff()         {             WriteToSerialPort(Id, Config.OffValue);         }      }          public class SwitchConfig     {         public int OnValue { get; set; }         public int OffValue { get; set; }     }      So far so good. I now need to model a new type of switch that can not only be turned on and off, but can also have a temperature threshold set, so it seems sensible to inherit from the `Switch` class. The configuration will also need extending to include min/max permitted temperatures, e.g.:-               public TemperatureSwitchConfig : SwitchConfig     {         public int MinTemperature { get; set; }         public int MaxTemperature { get; set; }     }      The specialised switch class will look something like this:-               public TemperatureSwitch : Switch     {         public void SetTemperature(int temperature)         {             var temperatureSwitchConfig = Config as TemperatureSwitchConfig;                  if (temperature < temperatureSwitchConfig.MinTemperature                 || temperature > temperatureSwitchConfig.MaxTemperature)             {                  return;             }                  WriteToSerialPort(Id, temperature);         }     }      It doesn't feel "right" where I'm having to cast the `Config` property. I'm sure there must be a slicker OO solution to this, but I think "analysis paralysis" has set in and I can't see the wood for the trees! Or am I worrying over nothing - is the casting an acceptable solution in this scenario?