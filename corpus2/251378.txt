I'm reading a relatively 'friendly' and simple book about compilers named "Let's Build A Compiler" (originally a series of articles). The compiler written in the book generates instructions in some assembly language (68000 assembly). Since I don't know this assembly language, I decided that my compiler will also generate 'assembly' instructions (e.g. `MOVE #4,D0` has the same meaning: "put the number 4 in register `D0`"), only they will be executed by a program I will write, instead of by a physical computer. A kind of "virtual machine". So far I think this shouldn't be a problem, but I have a question regarding this: What is a "generic" way to handle `if` statements in assembly? For example, what would be the simplest assembly translation for this code:               if(a>b){         // do stuff     }