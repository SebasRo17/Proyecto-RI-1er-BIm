My goal is to find a technology which will afford me to build web applications (e.g. simple social networking site) as quickly as possible (with as little code as possible). I was impressed by Stephen Wolfram's video presentation: it looks like that the Wolfram Language is the tool which I sought: such that any task that I can formulate in a few words can also be implemented in the language with a line or two of code. But I've seen no explicit discussion about using Wolfram Language for building websites and web applications. Update. Let me clarity what I mean. Consider the following example. * * * Suppose I’m going to organize an event (a seminar) so I decided to make a website to communicate with participants conveniently: every potential participant will sign up and fill in a registration form; then he will be able to post questions and subscribe to other’s questions he is interested in so that he will be notified by email when such question is answered. And when I want to get some additional info from participants (e.g. an exact time of participant’s arrival to the airport), I add this additional field to the registration form and set up a procedure that will every day send an email “Please answer this additional question” to every user that has not answered it yet. So I write something like this:               mysite = CreateWebsite(     Title: "The seminar"     Authorization: {"Facebook","Twitter","Google"}     )          mysite.AddQuestionnaire(     "Name": text     "Surname": text     "Date of arrival": date     )          mysite.AddQuestionsAndAnswers(SubscribeButton = True, NotificationType = "Email")          mysite.Deploy("http://theseminar.com")      And then I get a standard-looking website with all mentioned functionality. Everything has a default, and if I want to change some details, I just specify the corresponding options explicitly. * * * It seems that this should be the right way to create websites. Such that the website creator can concentrate all his mental efforts on the conceptual design of his application without need to waste it on the low-level stuff like html and css. This looks like fitting well with the ideology of Wolfram Language. This would democratize web development, i.e. a lot of internet users who are not professional web-developers would be able to quickly create web applications tailored for their needs. There are important benefits when the user of a piece of software is himself the creator of this software — the feedback-based iteration becomes extremely fast and effective: when you-as-a- user see some possibility to improve the software, you immediately and accurately convey this vision to you-as-a-programmer who will change the software; then you-as-a-user immediately see the result and assess it; then continue such iterations until the result is perfect.