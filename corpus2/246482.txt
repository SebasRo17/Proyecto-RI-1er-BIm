Generally I'm extremely skeptical of anyone who criticizes the singleton design pattern in software. In the MVC (model-view-controller) design pattern, views and controllers are usually singletons and the only cases of multiples instances of a class are the model classes (usually modeling a database table). In my experience, the only type of software that consistently utilizes Object Oriented programming to the fullest (multiple instances of multiple types of classes) is simulation software, which is no surprise considering Object Oriented software was invented for that purpose. So my question is, besides simulation:   * what other types of software need having multiple instances of a class?