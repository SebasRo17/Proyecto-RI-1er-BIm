We are working on getting a new application lifecycle management (ALM) system, including a bug tracker, a documentation system, project management, etc. The concern is that we deal with quite complex embedded systems and we would like to have the best possible integration of the different services (project management, issue/task tracking, documentation, etc.). If it was software only, I'd just buy something like JIRA, but the fact that we would hope to manage software, firmware (no big problem there), and hardware in the same system makes me doubt a little bit. I'm looking for advice regarding these points:   * What about managing "bugs" with embedded products? In software, you have the versions of the affected module(s). In embedded products, you have different software driving often times different firmware operating sometimes different hardware. Is it good in practice to simply consider hardware parts as if they were software modules in a software-intended system? I tend to believe it will add many custom fields to the bug tracking interface and consequently won't promote its systematic use.   * Some would like to push integration to the level where you have hardware inventory integrated to the rest. This means that a project in the ALM (think JIRA) would have to reserve its hardware components based on the sub-components. It would also mean that, for example, the ALM in question would have to be able to manage part providers and offer facilities to easy purchase order creation, sending, and management in general. I'm wondering, at that point, if everything in an embedded project management process can be integrated in one management system, or if a line has to be drawn between 1) bug/task tracking (possibly software and hardware) and project management and 2) high level project management, inventory tracking, sale/buy orders, etc. What is ultimately wished for seems to be nothing less than an integrated JIRA and ERP. Or is it possible to do proper ALM in an existing ERP or have a decent ERP in an ALM system already? My personal opinion, from what I know right now, would be to split issues and project management (ALM + documentation + ...) from the ERP. The problem with that is that there's documentation about a project both in the ERP and in the project management of the ALM (which would be used for software, firmware, hardware, ...). What's funny in this is that some things might seem very unrelated at first, like the time sheets (ERP) and an issue (bug tracker in ALM), but in the end, it might very well be interesting, wanted, or even required to know how much time was spend on a bug, or a project altogether (bugs, issues, features, other tasks). This gives a point toward total unification of ERP/ALM... At this point, you should get a feel of my questioning. Any helpful input is greatly appreciated. Thanks!