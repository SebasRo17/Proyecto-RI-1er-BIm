Consider these methods:               public List<Employee> GetAllEmployees()     {         using (Entities entities = new Entities())         {             return entities.Employees.ToList();         }     }          public List<Job> GetAllJobs()     {         using (Entities entities = new Entities())         {             return entities.Jobs.ToList();         }     }          public List<Task> GetAllTasksOfTheJob(Job job)     {         using (Entities entities = new Entities())         {             return entities.Tasks.Where(t => t.JobId == job.Id).ToList();         }     }      Using block is the same and has been repeated 3 times here (of course, more than 100 times in the real application). How is it possible to implement DRY (Don't Repeat Yourself) principal for `using` block? Is it considered a breach of DRY principal at all? Update: I'm not talking about what has been implemented inside the `using` block. What I actually mean here, is the `using (Entities entities = new Entities())`. This line is repeated 100 times or more.