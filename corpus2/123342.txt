**When should you prefer inheritance patterns over mixins in dynamic languages?** By mixins, I mean actual proper mixing in, as in inserting functions and data members into an object in runtime. When would you use, for example, prototypal inheritance instead of mixins? To illustrate more clearly what I mean by mixin, some pseudocode:               asCircle(obj) {       obj.radius = 0       obj.area = function() {         return this.radius * this.radius * 3.14       }          myObject = {}     asCircle(myObject)     myObject.area() // -> 0