Let's consider the next situation:   1. We have a module A which has a class Crt570 intended to interact with a device.   2. We have a module B which uses Crt570 in the class called M100Communicator.   3. We have two applications C and D and both of them wants to use module B.   4. Application D wants to use B, but doesn't want to use Crt570 and reference module A, therefore. "Module" here means dll. So we decided to extract an interface from Crt570 and called it ICrt570. But what to do with that now? It's just very strange to move ICrt570 into the domain module (let's call it module E) or somewhere else because after that Crt570 has to reference the module which will contain ICrt570! How to solve the puzzle? **UPDATE** In order to make the question more clear for readers in the future I'll add a bit more details. Module A is the dll which contains nothing but Crt570 class (with it's infrastructure). So this dll is dedicated to manage a device absolutely, nothing more. Module B is the dll which contains models specific for several applications in our domain. At least 3 applications want to use this module and they, of course, don't want to pull dll's they don't need. One of the models that C and D apps want to use is the M100Communicator model. And, in particular, this class (M100Communicator) depends on module A (Crt570 class). Module E which I mentioned is a domain module. It contains many classes and interfaces, so module A doesn't want to use it, apparently.