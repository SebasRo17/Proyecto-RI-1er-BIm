It may sound naive, but is there any programming language, or research thereof, based entirely on category theory? I mean this as opposed to embedding CT concepts as an additional feature (like for Haskell or scala). Would it be too abstract or too complex as an approach, or are there any known reasons that makes it impossible or impractical? I have only a relative understanding of the theory as related to programming, so please give me some explanation if the question doesn't makes sense at all EDIT What I mean is to define a language where categories are first class concepts, instead of let's say types. E.g. haskell is defined in terms of _types_ and _functions_ over those. Does it makes sense to design a language where fundamental entities are _categories_ and _arrows_? From there you would, for example, define algebraic operations on numbers as individual "intances" of the proper algebraic category (ring, monoid, group...) instead of starting from standard integer/float operations and defining the corresponding categorical typeclass. Does it makes sense?