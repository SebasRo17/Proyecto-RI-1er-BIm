I have more or less 0 knowledge in low-level topics, so forgive my possible ignorance. I know that in languages such as C, pointers hold 'memory addresses', i.e. strings (or binary data?) written in hex such as `0x52A132F3`. Judging by the term 'memory address', I assume this number actually leads to some place in memory. But I'm having a hard time understanding what a 'place in memory' actually is and how a hexadecimal number can 'lead' to it. (A Java programmer here..) So two questions:   1. Do the memory addresses point to places on the CPU itself, or anywhere in the computer?   2. Is memory 'ordered' in hardware in some way that it makes sense to refer to it using an 'ordinal' number, such as `0x52A132F3`? How is memory ordered in hardware, and how and why does it make sense to access it using a numerical value?