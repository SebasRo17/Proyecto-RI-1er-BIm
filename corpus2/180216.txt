I saw a conference by Herb Sutter where he encourages every C++ programmer to use `auto`. I had to read C# code some time ago where `var` was extensively used and the code was very hard to understand—every time `var` was used I had to check the return type of the right side. Sometimes more than once, because I forgot the type of the variable after a while! I know the compiler knows the type and I don’t have to write it, but it is widely accepted that we should write code for programmers, not for compilers. I also know that is more easy to write:               auto x = GetX();      Than:               someWeirdTemplate<someOtherVeryLongNameType, ...>::someOtherLongType x = GetX();      But this is written only once and the `GetX()` return type is checked many times to understand what type `x` has. This made me wonder—does `auto` make C++ code harder to understand?