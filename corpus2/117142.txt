Is it good/bad practice to do the following:               public class MyClass {       public MyType MyProperty { get; private set; }            public void SetMyProperty(MyType myProperty) {         MyProperty = myProperty;       }     }      My intention is to prevent `MyProperty` from being accidentally changed outside the class. However, it can be changed if needed. Also, if `MyType` is a reference type, then will the `private set` prevent, for example:               instanceOfMyClass.MyProperty.SomeField = 2;      In other words, will it make `MyProperty` and all its members readonly, or just the reference to `MyProperty`? Sorry if this seems an unintelligent question; I'm afraid I'm a beginner.