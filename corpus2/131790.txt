I'm working for a company that has recently hired me to create a new version of their existing software, which is now over 12 years old. The new software is a complete re-write of the old and they want it to be much more "online" than the previous version. I'm one of two programmers, the other having been with the company for 20+ years and is now close to retirement. The problem I'm facing is that with almost every idea I suggest that doesn't fall in line with what he thinks, it just gets shot-down, ignored and forgotten. So far I've let a lot slide; nothing too critical, and things that could be changed later on if needed. However, we're now on the subject of how to store the data that needs to be accessible to all the customers; he wants to use SQL Azure and store as much data as possible in xaml-string blobs, then use DevForce IdeaBlade to generate all the back end code. I'm not convinced, I think that if we're using a SQL storage solution we should be using relational database tables, which are normalized, etc. OR we shouldn't be using SQL at all, and perhaps use another method that allows storage of C# objects directly? What do you guys think? EDIT: Ok, so to give people a bit more information, the program could be considered a sort of Photoshop-like application, but aimed at a specific market. Users have access to a library of template "backgrounds" which they can then add text, images, etc. on too. When they browse the library of templates, they will be able to filter them by type, color, etc.