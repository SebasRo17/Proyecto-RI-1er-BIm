After seeing an example of what is called “Push-pin Art”, I assumed that _Mathematica_ would be able to handle the kind of image processing required to convert an image to this format. I am not well versed in the area of imagine processing: its vocabulary or methods so after several attempts, I decided to get help. What I would like to do:   1. Take any image and convert it to a Red-Yellow-Blue-White-Black color space with the ability to designate a desired resolution (width and height of the resulting pixel array) - i.e. to find a minimum acceptable image resolution.   2. Also, generate a list (2D array) of the colors used in the resulting image e.g. the color names: {{Y,B,R,R},{W,Blk,Y,B},{etc.}}. When I say RYBWBlk color space I mean that each pixel is forced to only one of these colors, where the eye itself does the blending. Attempts: [Using _Mathematica_ version 8]   * In _Mathematica_ , it did not seem possible to create my own indexed color scheme. Table[ColorData[i,"Image"],{i,ColorData["Indexed"]}]//TableForm   * The RYB… color space is not available to convert to.   * Posterization did not appear to give me control over the colors chosen, only the number of colors.  ImageEffect[Import["http://i.stack.imgur.com/wtgxH.jpg"],{"Posterization",8}]   * ColorQuantize seemed like a possible help but no success here. The following YouTube video and link show Exactly what I would like to be able to accomplish using _Mathematica_ alone. Photoshop image processing example. http://www.youtube.com/watch?v=USzbw90wOKM&feature=endscreen Further explanation. http://www.instructables.com/id/How-to-Make-a-Push-Pin-Portrait/