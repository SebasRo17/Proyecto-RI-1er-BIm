I've always had this question and I think it is time to settle the answer, is it a heavy load to do this :                   public Rect Bounds         {             get              {                 var Top = (_targetPosition + _translationY) - _size / 2.0f;                 return new Rect(callOutStarMargin, Top, _size, _size);              }         }      as an alternative of this :                   private Rect _boundsRect = new Rect();              public Rect Bounds         {             get              {                 var Top = (_targetPosition + _translationY) - _size / 2.0f;                 _boundsRect.Y = Top;                 return _boundsRect;             }         }      doing this I'm avoiding to create a new Rect everytime the property is invoked, I'm not sure if doing this in the first way would create an extra memory/speed overweight, if lets say this property is accessed 1 or 2 times on a list of 100 items each second. So which one should I choose ? **EDIT:** I think I'm not being clear here, my real question is How heavy is it making this new instructions of simple objects like Rect, How efficient is C# garbage collector for example in this scenario of 100 new rects per second , and the cpu cycle difference between one or the other way