I'm on a team that is currently using Scrum, and we're considering adding pair programming to help improve the cross-functional skills of the team, as well as help reduce defects with a "two heads are better than one" philosophy. On our team, each team member typically signs up for a full workload during sprint planning (with "full" being a number that is less than 40 hours a week, allowing for meetings, collaboration, etc.), with a single dedicated owner for each task. I believe this is fairly common on Scrum teams but may not necessarily be by the book. In particular, I'm looking to avoid a situation where team members are hesitant to pair because they have their own tasks to work on, which I'm afraid is likely to happen if the team simply self-organizes without time set aside for pairing. Given this, what is the best way to account for effort/hours/story points in a pairing scenario, to make sure we have appropriately allotted time for pairing? Some options considered are:   1. Allow two people to sign up for each task and (roughly) double the number of estimated hours   2. Only the "hands on keyboard" team member signs up for each task, which is estimated based on that person's estimated hours. Anyone on the team who will be supporting pairing will sign up for fewer tasks in the sprint to allow time to support pairing.