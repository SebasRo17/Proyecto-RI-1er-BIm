Recently, I came across a number of open source Ruby (or majority of it was Ruby) projects on GitHub that when checked with a code analyzing tool like Rubocop, create a lot of offenses. Now, most of these offenses include using double quotation marks instead of single quotes (when not interpolation), not following the 2 spaces per level rule, exceeding the 80 character line length rule, or using `{` and `}` for multi-line blocks. > [The] Ruby style guide recommends best practices so that real-world Ruby > programmers can write code that can be maintained by other real-world Ruby > programmers. ~ Source: Ruby Style Guide Although they are small and easy to fix, is it appropriate to change the coding style of an open source project by fixing the offenses and making a Pull Request? I acknowledge that some projects, like Rails, do not accept cosmetic changes and some are just too large to "fix" all at once (Rails for example generates over 80,000 offenses when Rubocop is run - regardless, they have their own small set of coding conventions to follow when contributing). After all, the Ruby Style Guide is there for a reason together with tools like Rubocop. People appreciate consistency so making these kinds of changes is kind of doing a good thing for the Ruby community in general, right? > [The author(s) of the Ruby Style Guide] didn't come up with all the rules > out of nowhere - they are mostly based on my extensive career as a > professional software engineer, feedback and suggestions from members of the > Ruby community and various highly regarded Ruby programming resources, such > as "Programming Ruby 1.9" and "The Ruby Programming Language". ~ Source: > Ruby Style Guide Isn't not following community coding style conventions and best practices basically encouraging _bad_ practices?