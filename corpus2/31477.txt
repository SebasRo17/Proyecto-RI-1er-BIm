I've got some big lists from which i need some data (one of the big lists). To be specific, I need to divide this biglists in sublists of the same length (10000), and form a new list with the mean of the fourth column of each sublist, and the element of the third column whose correspongin pair of the second column is closest to zero. That sounds a little weird, but since i can't explain it any other way, here's an example: Suppose i have a list which i divide into sublists that look like this `sublist={{1,2,3,4},{1,.2,17,4.02},{1,.22,14,4.16}}` Then what i need too get from each sublist is `newlist={4.06,17}` (Mean[{4.02, 4, 4.16}]=4.06) EDIT With @David Carraher 's solution, plus @Mr.Wizard 's suggestion (and the use of ReadList):               SetDirectory@NotebookDirectory[];     timetotal := 60;srate := 10000;     T[R_] := R/.381 - (3.81*10^-3)^-1;     rules := {         {x_, y_, z_, w_} -> {x, y, z, T[w/.0016]}          };     strm = OpenRead["data6.txt"];     Skip[strm, Record, 3, NullRecords -> False];     meas = ReadList[strm, Real, RecordLists -> True] /. rules;     lst = Partition[meas, srate];     Table[          {Mean@lst[[i]][[All, 4]],           lst[[i]][[First@Ordering[Abs@lst[[i]][[All, 2]], 1], 3]]},           {i, timetotal}];      This code executes in 8.0484603 seconds, which is a bit more than 10 seconds faster than before. Thanks people!