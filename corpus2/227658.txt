When you are reading about web application development, "front controller" and "single point of entry" are frequent words you are confronted with. To my understanding, the point is to provide a single location where you decide what to do in your program. That's all nice and well in theory, but I am confused as to how this would look in reality. In OOP, I suppose your "controller" would commonly be instantiated in the "index.php", or whatever file is your "entry point". But how to go from there and how does the controller class look like? Is it something along the lines of this:               //Dummy-code, it's just to make a point     class Controller {              //first function to be called         public function main() {             switch($appAction) {                 case "login": userLogin(); break;                 case "view" : viewArticle(); break;                 //...             }         }              protected function userLogin() {             //Sanitisation of user input             //making instances of necessary classes etc.         }              //...     }      or did I get the whole concept completely wrong? This is the only thing I can imagine to be the case, but I'm just not sure if there is a major mistake in approaching it this way or if I just misunderstood the purpose of a front controller.