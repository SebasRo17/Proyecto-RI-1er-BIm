I am trying to come up with a data schema/methodology for storing the data collected from various different user application forms. All forms contain the basic info like name, address, etc but then they diverge in what they collect. Each application will have its own unique subset of questions they want to ask. Because of this one "answers" table is out of the question. Would i be better off normalizing the database into a questions table and answers table? Another option considered would be to have a table of answers for the standard/universal questions and then serializing and storing the other answers in a field. Given that, would i be better moving to a straight up nosql database option? Maybe nosql is overkill and i really just need EAV? Once information is collected, it won't be edited. Just needs to be read.