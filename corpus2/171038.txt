So, I am having to deal with seemingly archiac language (called PowerOn) where I have a main method, a few datatypes to define variables with, and has the ability to have sub-procedures (essentially void methods) that does not return a type nor accepts any arguements. **The problem here is that EVERYTHING is global.** I've read of these type of languages, but most books take the aproach _"Ok, we use to use a horse and cariage, but now, here's a car so let's learn how to work on THAT!" We will NEVER relive those days"_. I have to admit, the mind is struggling to think _outside of scope and extent_. Well here I am. I am trying to figure out how to best manage nothing but global variables across several _open_ methods. Yep, even iterators for `for` loops have to be defined globaly, which I find myself recycling in different parts of my code. My Question: for those that have this type experience, **how did programmers deal with a large amount of variables in a global playing field?** I have feeling it just became a mental juggling trick, but I would be interested to know if there were any known aproaches.