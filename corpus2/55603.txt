I have written an application with `Manipulate` that plots the results of several calculations. What I find strange is that when I have my application use `Plot` it runs fine for any values of my parameters. However, when I make the sole change of `Plot` to `LogLinearPlot` it will return an a error on the matrix calculations (`Inverse`,or `Eigenvectors`) done by my program for some parameters and say it is suppressing them for the rest of the calculation. However, the created plots by `LinearLogPlot` look fine from a visual inspection. I find it strange that `Plot` works fine while `LogLinearPlot` seems to be giving issues. The code below resembles the functionality of my code when `LogLinearPlot` is used. When I copy and paste it I get an `unable to find all eigenvalues` error. When `LogLinearPlot -> Plot` it runs fine. Usually the value of \row is what determines the error. I have initialized \row to a value that gives an error for the `LogLinearPlot`               (*First I define a few parameters*)          i=1;     j=2;     a[t12_] = Cos[t12];     b[t13_] = Cos[t13];     c[t23_] = Cos[t23];     s[t12_] = Sin[t12];     r[t13_] = Sin[t13];     t[t23_] = Sin[t23];     m1 = 1;     m2[m21_] = m1 + m21;     m3[m21_, m32_] = m1 + m21 + m32;                    (*Below are the definition for several matrices that resemble the matrices       in my code. First is V which is the product of three matrices, the middle matrix containing \row which is the parameter that seems to trigger the errors.*)                    V[t12_, t13_, t23_, \[Delta]_, \[Rho]_] = Transpose[( {      {a[t12] b[t13], s[t12] b[t13], r[t13] E^(I \[Delta])},      {-s[t12] c[t23] - a[t12] t[t23] r[t13] E^(-I \[Delta]),        a[t12] c[t23] - s[t12] t[t23] r[t13] E^(-I \[Delta]),        t[t23] b[t13]},      {s[t12] t[t23] -         a[t12] c[t23] r[t13] E^(-I \[Delta]), -a[t12] t[t23] -         s[t12] c[t23] r[t13] E^(-I \[Delta]), c[t23] b[t13]}     } )].     ( {      {7.56 .5 10^-14 \[Rho], 0, 0},      {0, 0, 0},      {0, 0, 0}     } ).     ( {      {a[t12] b[t13], s[t12] b[t13], r[t13] E^(-I \[Delta])},      {-s[t12] c[t23] - a[t12] t[t23] r[t13] E^(I \[Delta]),        a[t12] c[t23] - s[t12] t[t23] r[t13] E^(I \[Delta]),        t[t23] b[t13]},      {s[t12] t[t23] -         a[t12] c[t23] r[t13] E^(I \[Delta]), -a[t12] t[t23] -         s[t12] c[t23] r[t13] E^(I \[Delta]), c[t23] b[t13]}     } );          (*Next is the matrix M*)          M[t12_, t13_, t23_, \[Delta]_, \[Rho]_, m21_, m32_, e_] = ( {          {m1/(2 e), 0, 0},      {0, m2[m21]/(2 e), 0},      {0, 0, m3[m21, m32]/(2 e)}     } ) + V[t12, t13, t23, \[Delta], \[Rho]];          (*Then g which uses a SetDelayed because I only want it to deal with numbers*)          g[t12_, t13_, t23_, \[Delta]_, \[Rho]_, m21_, m32_, e_] :=      (Transpose[     Eigenvectors[M[t12, t13, t23, \[Delta], \[Rho], m21, m32, e]]]).( {      {0, 0, 1},      {0, 1, 0},      {1, 0, 0}     } );          (*Then h*)          h[t12_, t13_, t23_, \[Delta]_, \[Rho]_, m21_, m32_, e_] :=        Eigenvalues[M[t12, t13, t23, \[Delta], \[Rho], m21, m32, e]];          U[t12_, t13_, t23_, \[Delta]_, \[Rho]_, m21_, m32_, e_] := ( {       {a[t12] b[t13], s[t12] b[t13], r[t13] E^(-I \[Delta])},      {-s[t12] c[t23] - a[t12] t[t23] r[t13] E^(I \[Delta]),        a[t12] c[t23] - s[t12] t[t23] r[t13] E^(I \[Delta]),        t[t23] b[t13]},      {s[t12] t[t23] -         a[t12] c[t23] r[t13] E^(I \[Delta]), -a[t12] t[t23] -         s[t12] c[t23] r[t13] E^(I \[Delta]), c[t23] b[t13]}     } ).g[t12, t13, t23, \[Delta], \[Rho], m21, m32, e];                    (*Then the Manipulate starts here using the LogLinearPlot *)          Manipulate[               (*The Plot*)          LogLinearPlot[     (\!\(\*UnderoverscriptBox[\(\[Sum]\), \(l = 1\), \(3\)]\(\(U[t12, t13, t23, \[Delta], \[Rho], m21, m32,         e]\)[\([\)\(i, l\)\(]\)]      \*SuperscriptBox[\(E\),      FractionBox[\(\(\ \)\(\(-I\)\ \(h[t12, t13, t23, \[Delta], \[Rho],            m21, m32, e]\)[\([4 - l]\)]*\          L\)\), \(\(\ \)\(1.97327*10^\(\(-\)\(10\)\(\ \)\)\)\)]]      \*SuperscriptBox[\(E\),       FractionBox[\(\(\ \)\(I\ \(h[t12, t13, t23, \[Delta], \[Rho], m21,            m32, e]\)[\([4 - l]\)]*\          L\)\), \(\(\ \)\(1.97327*10^\(\(-\)\(10\)\(\ \)\)\)\)]] \(U[        t12, t13, t23, \[Delta], \[Rho], m21, m32, e]\)[\([\)\(l,        j\)\(]\)]\)\)),{e,10^7,10^8},        AxesLabel -> {"Energy (GeV)", "Probability"},        PlotRange -> All],                (*The declaring of Manipulate variables*)                 {{\[Rho], 10.,"\[Rho]"}, 0.,        12.}, {{m21, 8.1*10^-5}, 0.0000377,      0.0001508}, {{m32, .002119}, 0.001227, 0.0049108}, {{t23, 0.785398, "t23"}, 0.,           2. \[Pi]}, {{t13, 0.1127, "t13"}, 0.,          2. \[Pi]}, {{t12, 0.547381, "t12"}, 0., 2. \[Pi]}, Delimiter,          Style["CP Symmetry factors", 12, Bold], {{\[Delta], 0, "CP factor"},        0., 2. \[Pi]}, ControlPlacement -> Left,       SynchronousUpdating -> False]