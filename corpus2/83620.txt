I have an application object that needs to validate some data. The particular validation algorithm isn't known until runtime, so I pass a validation object to it, using the strategy pattern. The application might need to reuse the validation object; for example, it might need to perform two validations simultaneously. So ideally, the validation object wouldn't contain any state; it would be purely an algorithm. But what if the validation algorithm itself needs some state? For example, it might need to keep a list of validation errors. What's a good approach in this situation? It seems like overkill to create a factory just for this specific validation object. (Assume this is in a language like Java or PHP.)