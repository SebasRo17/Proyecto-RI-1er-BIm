I've been working with some basic extreme programming concepts for the last two weeks, for a small scale, for-profit, multiplayer, arcade game. I've spent a week developing user stories and determining requirements to create a release plan. I've also spent a week coding and applying the first iteration plan I came up with. I've identified a few of the obviously useful concepts for a single developer.   * Continuous Integration   * Never Add Functionality Early   * Test Driven Development   * Choose a System Metaphor   * Use a single Integration Point   * Test out all bugs   * Constantly refactor   * Set a sustainable pace   * Simplicity   * Frequent Releases I'm curious if I'm missing anything in particular that might be suited to working with a single developer project? Also, in this light given the idea of simplicity and test driven development, is it better to use established, feature-rich, ready made platforms? Or should I work from the ground up, when feasible, to avoid running into the issues presented with rules such as constantly refactoring and never adding functionality early?