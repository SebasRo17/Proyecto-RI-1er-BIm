For some time in personal projects I have been using XSL to convert my raw XML data into human-friendly HTML/CSS (in simple projects, I have no JavaScript, so let's leave that out of the equation for simplicity). Now I'm trying to understand the MVC architectural pattern (not my first experience with it, but it is taking some work to go from understanding it basically to understanding it well), and I'm wondering if there is an analogy between the two.   * **XML** : data model; lacks the complexity/logic of a full-blown model component, but intent seems similar   * **XSL** : converts raw data for viewing--seems like a controller   * **HTML/CSS** (rendered): the viewable output Is this analogy fitting? What in it matches well and what does not? (One dissimilarity, I suppose, is that in my example I am not getting any input back from the view--only producing output.)