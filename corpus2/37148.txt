Given a list of 2D points, i.e.                {p1, p2, ..., pn}      the list may contain equal points, i.e. pi = pj. In this case it may also be true that a sublist of consecutive points has an equal somewhere in the list, i.e.:                pi=pj and p(i+1)=p(j+1).      I am looking for the longest of such sublists in the list. For example, in                { {0,0}, {1,0}, {1,1}, {0,1}, {2,0}, {3,0}, {3,1}, {2,1}, {1,0}, {1,1}, {4,0}}      the sublist I am looking for is               {{1,0}, {1,1}}       has length 2 and occurs twice. I am looking for an efficient way to ( functionally ) code this in Mathematica. Question: **How to find the longest matching sublists in a list?** Answers sofar failed on the following testcase, which I shall add for your convenience:L                {{0, 0}, {1, 0}, {1, 1}, {0, 1}, {2, 0}, {3, 0}, {3, 1}, {2, 1}, {1, 0}, {1, 1}, {4, 0}, {0, 0}, {1, 0}, {1, 1}, {0, 1}, {2, 0}, {3, 0}, {3, 1}, {2, 1}, {1, 0}, {2, 2}, {4, 0}};      with as longest matching sublist                {{0, 0},{1, 0}, {1, 1},{0, 1},{2, 0},{3, 0},{3, 1},{2, 1},{1, 0}}