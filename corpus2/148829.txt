Was hoping someone could provide some patterns/techniques/ideas to increase performance for the following scenario. Am integrating with an external ordering system via SOAP. The external system can be slow and unfortunately nothing can be changed at that end. All products are retrieved from this external source and an order is only placed with the external system when they've paid so cart functionality will be implemented locally. When a item is added to the cart, it will check the external source if there's enough stock and then add the item to the cart locally, and the user will stay on the same page (eg. wont' redirect to a cart summary screen). It will also check the rest of the items in their cart to ensure there is enough stock, so depending on how many items they have there could be a lot of calls to the external source. I guess, could only check the stock levels for other items in their cart when they get to the checkout summary screen and subsequent checkout screens but i feel that isn't the best user experience. For reference, local site will be using ASP.NET MVC3 Any suggestions? Thanks