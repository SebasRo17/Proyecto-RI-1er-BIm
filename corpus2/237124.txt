I just read a question asking how Facebook blocks console-based script attacks. The reason for this block was to prevent a recently famous "hack" where one would trick a user to inject a malicious script through the console with the promise of something (instant likes, who viewed me etc). And then I wonder: _Why do browsers these days ship with dev tools anyways?_ Now, some thoughts:   * Not everyone is a developer, and one wouldn't have any need for these tools just to surf the web and read some email.    * If one really would want to debug a page, they could have just shipped it as a separate add-on, much like how Firefox had Firebug before it also had its own dev tools.   * If troubleshooting was the concern, then wouldn't an error console, like in Firefox 3, suffice? And browsers in the older days didn't have debugging tools, only some interface to show the errors (IE had the status bar. Firefox had an error console).   * Wouldn't it be an additional weight to the browser if it had those tools tucked in? So why is this the trend in browsers these days? Is there something I missed that makes vendors push with shipping the tools along with the browser.