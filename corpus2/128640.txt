I talked myself into a hole at work, and I need some good ideas to help me better describe why we should include both Dojo **and** Knockout in our new web project. A little background: I do mostly computer-computer interactions when I program; updating states, reading/writing to the database -- Knockout is exactly where I want to be. So I said, "I don't want to use Dojo"...meaning, "I don't want to do client side user experience/visual effects programming". I think it's a great to utilize other people's work, and I think re-inventing the wheel is a bad thing, generally. I just don't enjoy the process as much. But now its turned into an "all or nothing" decision. Please help me come up with a good way to describe the difference between a library and a web framework, and not in this technical way. I need something simpler to get my point across. # EDIT We're using mustache.js, since it came with the PhoneGap tutorial. Good looking out, PhoneGap. I'd feel bad closing this question, since someone might want to read it later. Feel free to post some answers later on, but I should be okay, thanks!