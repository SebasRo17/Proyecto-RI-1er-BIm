In a program I'm writing, I create a list of lists, that looks something like this:               {{100, {1,2,3,4,5}},      {105, {2,4,6,8}},      {42, {42,39,56}}}      I then pass this list of lists around to other functions. All well and good -- the problem is that this program has been developed iteratively, and this representation has changed, and so now I'd like to take more care in checking that the function is receiving the right kind of input. In another language I could make this list of lists into its own type, and the compiler would enforce things. I know Mathematica has some facility for doing type checking, at least with primitive types, such as:               myFunc[a_String, b_Integer] := ...      But are there facilities available for creating (and enforcing, or at least checking) one's own ADTs?