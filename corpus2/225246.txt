Lets look on a simple example: assume that I have three classes implemeting `IPersonRepository`: `SQLPersonRepository`, `WebPersonRepository`, `InMemoryPersonRepository`. I also have `PersonRepositoryFactory` class which is simple Factory method pattern implementation - contains `GetPersonRepository` methods which have enum/string as parameter. How could I create Factory pattern (or in other words centralize my object creation) when `SQLPersonRepository` needs dependency for: `SQLConnection` or string to database path, `WebPersonRepository` needs some http settings object and `InMemoryPersonRepository` has no dependencies? I could pass it in Factory constructor or as method parameter but it'd be ugly, unclean and unmaintable especially if I had more `IPersonRepository` implementations.