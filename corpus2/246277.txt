Lately I've been in the habit of "masking" Java collections with human- friendly class names. Some simple examples:               // Facade class that makes code more readable and understandable.     public class WidgetCache extends Map<String, Widget> {     }      Or:               // If you saw a ArrayList<ArrayList<?>> being passed around in the code, would you     // run away screaming, or would you actually understand what it is and what     // it represents?     public class Changelist extends ArrayList<ArrayList<SomePOJO>> {     }      A colleague pointed out to me that this is bad practice, and introduces lag/latency, as well as being an OO anti-pattern. I can understand it introducing a very _tiny_ degree of performance overhead, but can't imagine it's at all significant. So I ask: is this good or bad to do, and why?