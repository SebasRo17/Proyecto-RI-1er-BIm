I am trying to constrain my variables in `NDSolve` so that they stay positive for the integration interval. Is is possible to do that? Using Assumptions as in Simplify does not work. WhenEvent also does not help, as it just finds the event once. Here is a code snippet of a minimal example:               a = 10;     sol = NDSolve[{x'[t] == -10, x[0] == 10}, x, {t, 0, 10}];     Plot[Evaluate[x[t] /. sol], {t, 0, 10}, PlotRange -> All]      What I would like to get out is a function, that linearly decreases from 10 to 0 and stays on 0 -- instead of turning negative. ### Edit To clarify the question: I am using _Mathematica_ for fast prototyping. In a C environment I can modify the time integration with an additional step, like `if(x<0){ x=1e-10; }` to ensure my variable does not turn negative. So I am looking for a way to introduce a lower bound into my system. My full system consists of a system of 1st order nonlinear ODEs, which represent positive real quantities. I am aware that this modification will change the resulting solutions. The above just provides a minimal example of what I am looking for. Changing the rhs as suggested below will unfortunately not do the trick, as it only adjusts the rate of change but does not introduce a lower bound for the solution. (Although, strictly speaking this procedure will result in a solution I was describing above ;)