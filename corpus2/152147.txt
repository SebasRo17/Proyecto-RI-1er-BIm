GLSL is fundamentally different from other shader solutions because the server (GPU driver) is responsible for shader compilation. Cg and HLSL are (afaik) generally compiled _a priori_ and sent to the GPU in that way. This causes some real-world practical issues:   * many drivers provide buggy compilers   * compilers differ in terms of strictness (one GPU can accept a program while another won't)   * also we can't know how the assembler code will be optimised What are the upsides of GLSL's current approach? Is it worth it?