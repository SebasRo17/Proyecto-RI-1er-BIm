This week, the market people from my work wanted to put QR codes in shopping cart handles, but when they tested it, the QR code did not work. I noted that the cylindrical curvature (even small) distorted the image, and the cell phone can't read it. ![diagram](http://i.stack.imgur.com/7HVKU.png) Here is some test QR code: ![qrCode](http://i.stack.imgur.com/FHvNV.png) I thought that this would be a nice thing to do with _Mathematica_ , to try to figure out how I could print the QR code into some way that when attached to the cylindrical form, it would be like a normal square, at least at some angles. I tried to simulate how it would be plotted in the handle using `Texture`, and I get this:               qrCode = Import["http://i.stack.imgur.com/FHvNV.png"];     RevolutionPlot3D[{1, t}, {t, 0, 20}, Mesh -> None, PlotStyle -> Texture[qrCode],                      TextureCoordinateScaling -> False, Lighting -> "Neutral", ImageSize -> 100]      ![cylinder with QR code](http://i.stack.imgur.com/WEyn0.png) Here is some code from the docs for `Texture` that I tried to adapt, without success:               RevolutionPlot3D[{1, t}, {t, 0, 1}, PlotStyle -> Texture[qrCode], Mesh -> None,                      TextureCoordinateFunction -> ({#3, #2} &), Axes ->  False,                      Lighting -> "Neutral", ImageSize -> 300, AspectRatio -> 1]      ![texture](http://i.stack.imgur.com/OleNA.png) Does anyone know how I can distort the QR code, in a way? I believe that it's equivalent to projecting the texture onto the surface, and then using the projected image. **update:** This problem is very similar to this, the difference is that we are in the cylinder, and this anamorphic illusion example is in the plane.