Recently in an interview I come across a question: > We have an unsorted array, we need to sort it with minimum number of swap. > We have in sort a 'tax' of 1 is deducted from the number we are swapping. so suppose initially we have an array as               2 4 1 3 5     ^   ^      on swaping say 2 and 1, the new state of the array is:               0 4 1 3 5  // 'tax' of 1 is deducted from 1 and 2      ^   ^      // so we have 0 and 1 at there place after the swap      So we need to sort the array in min. number of swap. Any suggestions regarding the algorithm design? I thought of doing this with merger sort but still not sure if this is the best approach.