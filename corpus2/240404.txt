On SuperUser, I asked a (possibly silly) question about processors using mathematical shortcuts and would like to have a look at the possibility at the **software application** of that concept. I'd like to write a simulation of Japanese Multiplication to get benchmarks on large calculations utilizing the shortcut vs traditional CPU multiplication. **I'm curious as to whether it makes sense to try this.** ![enter image description here](http://i.stack.imgur.com/swF5p.png) **My Question:** I'd like to know whether or not a software math shortcut, as described above is actually a shortcut at all. This is a question of programming concept. By utilizing the simulation of Japanese Multiplication, **is a program actually capable of improving calculation speed? Or am I doomed from the start?** * * * **The answer to this question isn't _required_ to determine whether or not the experiment will succeed**, but rather whether or not it's logically possible for such a thing to occur in any program, using this concept as an example. * * * **My theory** is that since addition is computed faster than multiplication, a simulation of Japanese multiplication may actually allow a program to multiply (large) numbers faster than the CPU arithmetic unit can. I think this would be a very interesting finding, if it proves to be true. If, in the multiplication of numbers of **any immense size** , the shortcut were to calculate the result via less instructions (or faster) than traditional ALU multiplication, I would consider the experiment a success.