I am trying to spend as much time as I can on GitHub nowadays _(even I am the only person in team at work)_ to really feel how it is going to be like for a real world corporate application. One question I am having is to controlling the **version**. Let's say we started a project. Then, team members created some branches and develop there. When we are ready for the production, we merged all of branches with `master` branch. At the end, we go live with version `1.0`. Now that version `1.0` is live and we have some issues filed for that version of that software. We would like to start developing for version `1.1` in order to fix those issues that we had introduced by rushing the project. Now, the question is this: **How should we control the versioning here?** Should we create a new branch for `v1.0` and keep the version `1.0` of the software there and develop on some branches (or not), merged them with `master`, go live with version `1.1`? Is there convention out there for those kind of situations?