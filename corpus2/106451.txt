I'm currently working on a Silverlight app using Caliburn.Micro. At present, we have Views (eg: `PeopleView`) and View Models (eg: `PeopleViewModel`) that equate to 'pages' of the application. `PeopleView` might contain a `ListBox` ("`People`") which is bound to an `ObservableCollection` of `Person` objects, and has an `ItemTemplate` assigned to denote how each `Person` object should be displayed. However, one of my colleagues has begun to implement a list in another way, where each `Person` is a View Model (ie: `PersonViewModel`) and has an associated `PersonView` to determine how that `PersonViewModel` should be displayed in the `ListBox`. The latter seems more MVVM (or at least has more mention of V and VM!) but I'm not sure whether there's a particularly large advantage to doing one over the other. Are both of these ways valid? Is either better than the other?