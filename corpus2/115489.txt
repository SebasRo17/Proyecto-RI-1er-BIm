As always, if this is a duplicate question that I have yet to uncover, please feel free to close or delete it. I'm attempting to get into the programming industry. I've focused mainly on PHP due to how widely it's used, but I have some experience in other languages as well. The thing is, I know SQL syntax quite well, and PHP-wise I don't have much if any problem using either the mysqli interface (if I have to) or PDO. However, I'm a bit stumped as to what to create as a portfolio piece that would be a good showcase of what I can do with SQL. The reason for this is that most frameworks worth their salt include some form of ORM. Most of the grunt work in terms of setting up database queries and so forth is usually both done for you and hidden from you, so that you can focus on your domain logic. I have a _bit_ of experience with CakePHP, which uses its own form of ORM, and am interested in developing this experience further due to it being a fairly popular (and thus likely to show up as a job requirement) framework. Symfony is equally unhelpful AFAIK in that you have the choice of using Propel or Doctrine; I'd love experience with either but I'm not seeing a whole lot of demand for them, at least not for the entry-level jobs I've been looking at. However, I am aware that CodeIgniter will allow you to override its ORM / ActiveRecord capabilities and allow you to write your own SQL queries. I have a relatively simple web app I want to create as a portfolio piece. If I use CakePHP to create it, I wind up with a piece that shows off my CakePHP skills, but not my SQL skills, at least not directly. If I use CI, I can show off my SQL skills directly, but then gain experience in a framework that doesn't appear to be used as often, at least not in industry. The real question comes down to this: if you were (or are) in charge of hiring a new programmer for your team, and your requirements include, for example, MySQL, how would you prefer that the incumbent programmer show his or her expertise in this skill? Would you accept a programmer who only had ORM-based solutions to show you directly but could, if requested, easily whip up a fairly complex SQL query? If not, what would you recommend as a means of demonstrating skill in SQL? I suppose an alternate title for this question could be "What do interviewers expect from entry-level candidates in terms of SQL?"