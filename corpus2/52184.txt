I am attempting to integrate a convolution variable using the following code. However, the program is taking too long to complete the integration. Does anybody have any coding tips that may make this run faster?               convolutionIntegralinEveryone =           Mean[convolutionIntegralinEachIndividual];          plottingDistributionofIntervals =           ParametricPlot[{x/(2*Pi), convolutionIntegralinEveryone},                {x, 0, longestDosingIntervalObserved*3}, AspectRatio -> Full,                 PlotRange -> All]          plottingCumulativeDistributionofIntervals = ParametricPlot[{y/(2*Pi),         NIntegrate[convolutionIntegralinEveryone, {x, 0, y}, MinRecursion -> 4,                AccuracyGoal -> 2]},        {y, 0, longestDosingIntervalObserved*8}, AspectRatio -> Full, PlotStyle -> {Blue, Thick},                PlotRange -> All]      The convolutionIntegalinEveryone is the mean of the convolution integrals in the all of the individuals (there are 100,000 simulated individuals with several intervals each) and the code is as follows: convolutionIntegralinEachIndividual=Table[Sum[(1/totalCountofIntervalsEachIndivi‌​dual[[ii]])*distributionofIntervalsinEachIndividual[[ii,jj,2]]*diracVonmisesConvo‌​lution[[distributionofIntervalsinEachIndividual[[ii,jj,1]]+1]], {jj,1,Length[distributionofIntervalsinEachIndividual[[ii]]]}], {ii,1,Length[distributionofIntervalsinEachIndividual]}]; I would also like to add that the code has ran with other datasets containing different parameters.