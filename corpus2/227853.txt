I've been learning java for about a year, but recently entered the world of javascript. I'm having trouble coming up with meaningful names in function parameters, so that I'll be able to tell and remember what is being passed in and act on it correctly. For example: In java, I could define `void method(Type name)` and always know that name is of object Type.               void printToConsole(String errorMessage) {         System.out.println(errorMessage); <--I know errorMessage is a string     }      In Javascript, I can only do `function method(name)`, and if I come back later, I forget what name is and have to go see where `method` was called and what was passed in. I have started naming the parameter like `nameType` but this seems too verbose. somewhere in code:               getBoxText($("input[type='text']")[0]);          function getBoxText(searchBox) {         //TODO: do something with searchBox;     }      In the second example, its not immediately clear that `searchBox` is an `element`, as opposed to a `nodeList`, XML DOM, or something else, so when I come back to write this method, I have to go find the call and remember what it is. I would be tempted to change the function declaration to:               function getBoxText(seachBoxElement) {      Even worse, later I might be tempted to call `getBoxText(somethingNotAnElement)`. Is there an accepted convention for this? Thoughts?