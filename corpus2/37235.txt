I am trying to solve a system of ODEs with one extra boundary condition.               eq1 = f'''[y] + f[y] f''[y] - m f'[y] - f'[y]^2 - s (f'[y] + y/2 f''[y]) == 0;     eq2 = g''[y] - (s/2(3 g[y] + y g'[y]) + 2 g[y] f'[y] - g'[y] f[y]) + f''[y]^2 == 0;      With boundary conditions               bc = {f[0] == 0, f'[0] == 1, g[0] == 1, f''[b] == 0, g'[b] == 0};      With the arbitrary trial values, the integrated solutions will generally not satisfy the outer boundary conditions.               f''[b] == 0 and f[b] == s b/2      I need to find a way to adjust the two trial values such that the numerical solution eventually matches the required boundary conditions and satisfy the relation `f[b] = s b/2`. Here are my questions   * If I fix `m` (say = 1), then how I can plot `b` vs `s`?   * If I fix `s` (say = 1.2 and 0.8), then how I can plot `f'[b]` vs `m`?   * If I fix `s` (say = 1.2 and 0.8), then how I can plot `f''[0]` vs `m`?  What value `b` will take? Here is my try, but it's not working               g[b_?NumericQ, m_?NumericQ, s_?NumericQ] :=        f[b] /.          NDSolve[{eq1, eq2, f[0] == 0, f'[0] == 1, g[0] == 1, f''[b] == 0, g'[b] == 0},            {f, g}, {y, 0, b}]          s2[b_, s_] := FindRoot[g[b, s, m], {b, 0}]      **Paper and Pen implementation of Shooting method** As it is mentioned by @Peltio, here is the possible Shooting method. **Note** $theta$ is `g` and $\eta$ is `y`. ![enter image description here](http://i.stack.imgur.com/mRqJg.png) **The output should look like this**   1. `b` vs `s` ![enter image description here](http://i.stack.imgur.com/c5iYm.png)   1. `f'[b]` vs `m` ![enter image description here](http://i.stack.imgur.com/tv43X.png)   1. `f''[0]` vs `m` ![enter image description here](http://i.stack.imgur.com/k0ikg.png)