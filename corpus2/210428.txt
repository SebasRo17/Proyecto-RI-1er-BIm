In case of code where you have to do a resource cleanup before exiting a function, is there a major performance difference between these 2 ways of doing it.   1. Cleaning the resource before every return statement              void func()     {         login();              bool ret = dosomething();         if(ret == false)         {             logout();             return;         }              ret = dosomethingelse();         if(ret == false)         {             logout();             return;         }              dootherstuff();              logout();     }        2. Cleaning the resource in a finally block              void func()     {         login();              try         {             bool ret = dosomething();             if(ret == false)                 return;                  ret = dosomethingelse();             if(ret == false)                 return;                  dootherstuff();              }         finally         {             logout();         }     }      I did some basic tests in sample programs and there doesn't seem to be much of a difference. I so much prefer the `finally` way of doing this - but I was wondering if it will cause any performance hit in a big project.