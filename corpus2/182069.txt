I have a mobile app built using jquerymobile, PhoneGap and some custom CSS and JavaScript. The data objects are received in JSON and used to display different forms to the user. For example               { id: 1, type: personal_details, question_1: "First name", question_2: "Last name" },     { id: 2, type: work_details, question_1: "Occupation", question_2: "Experience" }      The user fills out these forms and sends the data back to a .NET application. Things work great when there is a good 3G connection but that is not always the case. As each form is sent there is a danger that not all the forms will make it back together. In our example the personal details could be sent first, the connection is lost and the work details are left on the mobile device or lost on the network either of which frustrates my users. What is the best strategy to handle and recover elegantly from network failures? Relying on the HTTP response codes doesn't seem to be working. E.g.               for ( form in forms ) {         $.ajax({             url: 'http://ac.me',             data: form,             success: function (){                 // delete from localStorage             },             error: function (){                 // show error message 'try again later'             }         });     }      The request can fail and the error function is never called. The alternative I see is sending all the forms in one JSON string but I am concerned about the performance implications of SQL server processing many short requests or fewer longer requests.