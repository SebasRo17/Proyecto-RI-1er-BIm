I am trying to solve a partial differential equation using `NDSolve`. When I am not specifying any method options with `NDSolve`, it gives me a solution which is quite oke but shows oscilations that are not suppose to be there. I expected to be able to solve this using options like `MaxStepSize` to get rid off or at least reduce this oscilations. However, unfortunately, when I use for example `MaxStepSize -> 0.01` I get results that do not make sense and errors like `NDSolve::mconly: For the method IDA, only machine real code is available. Unable to continue with complex values or beyond floating-point exceptions. >>` I do not really understand why I get this error. Hopefully someone could illuminate this to me. Also I guess `MaxStepSize` is not the way to give me a better solution, are there any other options to improve my solution or should I just be satisfied with the one I have so far? Thanks in advance Simplification of the code:               tmin = 0; tmax = 70;     xmin = 0; xmax = 183;     rate = 0.00084;     a = 96;     b = 5/3;          f[t_] :=  If[t > 1 && t < 30, rate, 0];          eq1 = i[x, t] == a *h[x, t]^b;     eq2 = D[i[x, t], x] + D[h[x, t], t] ==  f[t];     ic1 := h[x, 0] == 0;     ic2 := i[x, 0] == 0;     bc1 := h[0, t] == 0;          solution = NDSolve[{eq1, eq2, ic1, ic2, bc1},         {i, h}, {x, xmin, xmax}, {t, tmin, tmax}, (*MaxStepSize -> 0.01*)];     Manipulate[      Plot[Evaluate[i[x, t] /. solution], {t, 0, tmax}, PlotStyle -> Red,        ImageSize -> {350}], {x, xmin, xmax}]      ![result for x=16.4, where the top of the graph is supposed to be flat](http://i.stack.imgur.com/K946n.jpg)