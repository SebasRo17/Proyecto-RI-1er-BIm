**Bug introduced in 7.0.1 or earlier. Persists through at least 10.0.0.** * * * I'm having problems with FindRoot killing the kernel. In my real application, I want to FindRoot on a black-box function containing an NDSolve that takes a list of unequal length lists as input and output. The goal is to find limit cycles of a forced system of differential equation. Sometimes it works, but other times it kills the kernel when I run it (beep, then dead kernel, no messages). The real example is horrible, but here's a minimal example:               f[xs_?(VectorQ[Flatten[#], NumericQ] &)] := {{Sin[xs[[1, 1]]]}};     Do[FindRoot[f[{{x}}] == {{x}}, {x, 0.3}], {1000}]      where the Do loop almost assures failure (Mathematica 10.0.0 on a Mac). Any idea why or how to fix it? For whatever reason, using a single level list seems OK, so maybe that's the solution.