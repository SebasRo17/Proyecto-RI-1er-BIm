Here's something from Slonneger's "Syntax and Semantics of Programming Languages": > A variable may occur both bound and free in the same lambda expression: for > example, in λx.yλy.yx the first occurrence of y is free and the other two > are bound. I assume the free variable is the y right after the λx. and the bound y's are the λy.y which I can sort of intuitively grasp. So ((λx.yλy.yx)a)b) would reduce to (yλy.ya)b) then to bba ? Can someone explain how this came to be? In the end it's the expression b twice. Can someone perhaps provide more examples of bound and free variables?