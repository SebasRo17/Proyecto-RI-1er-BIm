I've got an existing SQL table structure that looks like this:               Orders     - order_id     - organisation_id     - [all the rest of the order data]          Organisations     - organisation_id     - [all the rest of the organisation data]          Users     - user ID     - [all the rest of the user data]      I'm trying to change the `Orders` table so that an Order can be linked to either an `Organisation` or a `User`. I've got two ideas: ### Option A   * Add field `orders.user_id`, and then set either `user_id` or `organisation_id` to null for each order, indicating whether the order was placed by a user or organisation. ### Option B   * Add a table `orderers` (or similar) and then add fields `organisations.orderer_id` and `users.orderer_id`. Then, users and organisations are both orderers, and orderers place orders. ### Evaluation Option B's role-based approach seems to make good sense and seems to be more extensible, but I just can't help but think about the hassle the extra `JOIN`s are going to cause, in terms of performance and SQL complexity. What is the best way to go about this?