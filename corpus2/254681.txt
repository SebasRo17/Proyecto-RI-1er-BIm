I'm at a new job and I _really_ want to set up my VM to be able to emulate some or all of the enviroment locally. I'm told it's not possible, but I hate to accept that. To give some context, I'm very new to a poject that is many years old, but semi-recently (about a year) inherrited by an entirely new team that still doesn't fully understand the codebase the inherrited. The code is huge with dozens of maven projects, and is written with the intent that parts will run on different servers, including logic to sync DB's of versions on either side of a firewall. Currently the team copy their code to a dev enviroment, runs it, and looks at log files for integration testing. Everyone shares the same dev enviroment and communicate to avoid collisions, on a dozen large team. This just feels like an inefficent pain. I've been told the enviroment is too complex to emulate. When I ask about just emulating the GUI/frontend half I'm told that it's too hard to get to integrate with tomcat and others have tried and failed. No one can quite explain 'why' they failed though, and it sounds like they didn't try alternate approches to make it happen. So...should I rock the boat? It seems insanly inefficent the way they are doing things, especially with so huge a team. If I _could_ create an easy way of emulating on local machines and show others to do it I think it would be a major gain. However, if others are right and I fail I've wasted my time by thinking I was smarter then others, not to mention looked pretty incompetent on my first month on the job by getting nothing done except prooving what others told me. Is the gain of being able to run in debuggers and test locally worth the fighting for?