Sorry for the confusing title of this question, but I can't think of an exact way to word it. I have a very long class with hundreds of similar methods and I am trying to find a way to construct it without so many lines of code and so many DRY violations. Each time I add a new property to my class I have to write two methods and update the copy function. There are already over 80 properties. Currently this class is written in Java but I was wondering if it were written in C++ if it could be done more efficiently. I think it can be done using preprocessor x-macros like described in wikipedia here but I am not a fan of macros and would prefer to do it using the language itself if possible. Here is a simplified snippet of my Java class:               class InMemoryPerson implements Person {         private HashMap<String,Object> values = new HashMap<String,Object>();              public InMemoryPerson copyFrom(Person p) {             setName(p.getName());             // more code to copy all the properties...         }              public void setName(String name) {             values.put("name",name);         }              public String getName() {             return (String)map.get("name");         }              // many more methods for all the different properties...         // each method may have a different type     }