I want to define a vector lets say **k** containing elements Symbolize[Subscript[ _k_ , 1]], _k2_ , _k3_ ... etc. When I define lets say _k4_ . I want the symbol automatically added to vector k. Something like below but not working at all.               k /: {k, Symbolize[      ParsedBoxWrapper[      SubscriptBox[      StyleBox["v", FontFamily -> "Courier New", FontWeight -> "Plain",         FontSlant -> "Italic"], "_"]]]} :=      AppendTo[k, Subscript[v, _]];      My Question is; 1) How can I symbolically define elements (with sub scripts) automatically added to a vector. 2) If I assign values to symbols, How can I get elements values only and symbols only. **EDIT 1**               Symbolize[Subscript[k, _]]       Command Symbolizes all subscripts of **k** e.g. _k1_ (`Subscript[k, 1]`), _k2_ (`Subscript[k, 2]`) etc. This is fine. What I want is collect _k1, k2 k3_ in a set (List) **k** with out additional commands or additional functions. Just as soon as sybolize sub scripted ones it should add it self to set k (sort of pattern maching as in `Subscript[k, _]`). When I call k it should give me the list { _k1, k2, k3_ }. @Mr. Wizards answer gives the list but as calling function `ksym`. Sort of what I need but not exactly. @halirutan answer is also interesting but I don' t want to define additional functions or operators (may be as minimum as possible). **EDIT 2** Its sort of bag or set; no order is required, only _k1,k3_ can be given and _k2_ can be missing. **EDIT 3**               << Notation`     (*below line symbolizes all subscripted k_]*)     Symbolize[ ParsedBoxWrapper[        SubscriptBox["k", "_"]]]      somewhere here I need additional code that all _k_ _ are added to k once its been defined. For example:               {Subscript[k, 1], Subscript[k, 2], Subscript[k, 3]} = {1, 2, 3}      after that when I ask k it should give me `{Subscript[k, 1], Subscript[k, 2], Subscript[k, 3]}` as @Mr.Wizard suggested `ksym[] := HoldForm @@@ UpValues[k][[All, 1]]` and for values `kval[] := UpValues[k][[All, 2]]` should work. But, what I' m missing in @Mr.Wizard example is that one needs to define symbols as;               k /: Subscript[k, 1] = "val1";     k /: Subscript[k, 2] = "val2";     k /: Subscript[k, 3] = "val3";      what I need is once I write `{Subscript[k, 1], Subscript[k, 2], Subscript[k, 3]} = {1, 2, 3}` I should be able to get k vector and `{Subscript[k, 1], Subscript[k, 2], Subscript[k, 3]}` is appended automatically to k.