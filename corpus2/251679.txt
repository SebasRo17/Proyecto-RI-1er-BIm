One thing bothers me while I'm writing unit tests of my code. did tests of method should include validation of outcome from other methods? Of course, public methods. Let's go to - rather trivial - example:               public int Solve(string forumla)     {         if (forumla.Contains("+"))         {             return SolveAddiction(formula);         }         if (forumla.Contains("-"))         {             return SolveSubstraction(formula);         }         throw new ArgumentException();     }          public int SolveAddiction(string formula)     {         var strings = formula.Split('+');         if (strings.Length != 2)         {             throw new ArgumentException();         }         int firstFactor = int.Parse(strings[0]);         int secondFactor = int.Parse(strings[0]);         return firstFactor + secondFactor;     }      In this case, should tests of `Solve` methods only test control flow, or each possible scenarios for `SolveAddiction`? Let's assume, that `SolveAddiction` and `SolveSubstraction` have they own tests. Using other words, did test scenarios for `Solve` should contains only:   * 2+2   * 2-2   * 2:2 Or also include:   * 2+2+2+2   * 2-2-2-2   * potato - hamster Best regards