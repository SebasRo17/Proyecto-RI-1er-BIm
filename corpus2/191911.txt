What is separation of concerns? > In computer science, separation of concerns (SoC) is the process of breaking > a computer program into distinct features that overlap in functionality as > little as possible. A concern is any piece of interest or focus in a > program. Typically, concerns are synonymous with features or behaviors. > Progress towards SoC is traditionally achieved through modularity and > encapsulation, with the help of information hiding. From _Pro Asp.Net MVC 4_ book ( page 375 ): > The problem with relying on route names to generate outgoing URLs ( > @Html.RouteLink("Click me", "MyOtherRoute","Index", "Customer") is that > doing so breaks through the separation of concerns that is so central to the > MVC design pattern. When generating a link or a URL in a view or action > method, we want to focus on the action and controller that the user will be > directed to, not the format of the URL that will be used. By bringing > knowledge of the different routes into the views or controllers, we are > creating dependencies that we would prefer to avoid. a) I understand that we create a _dependency_ ( between _action method/view_ and a _routing configuration module_ ) by having `Html.RouteLink` ( called within _action method_ or _view_ ) specifying the name of the _route_ we want to use. But is introducing such a _dependency_ already considered a _violation of SoC_? Namely, even though we created a _dependency_ between the _two modules_ , we haven't actually introduced any additional _functionality/concern_ into either of the modules ( the definition of **SoC** implies that _violation of SoC_ occurs when _new functionality/concern_ is introduced into a _module_ ) b) Anyhow, I don't understand how will simply generating an URL ( within _action method/view_ ) by specifying a _named route_ bring focus to the _format of the URL_? Thank you