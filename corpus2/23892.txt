I am working on images and I need to be able to extract into a list all the image points that fall within a closed region, such as gotten from using "get coordinates". I can extract the points from the region such as:               contour = ContourPlot[x^2 + y^2 == 1, {x, -1, 1}, {y, -1, 1}]          points = Cases[Normal@contour, Line[x_] :> x, Infinity];          lfp = Length[Flatten[points, 1]];          circlepoints = Table[{Flatten[points, 1][[i, 1]], Flatten[points, 1][[i, 2]], 1},      {i, 1, lfp}];          ListPointPlot3D[circlepoints]      And now I would like to use the points on the circumference and the interior to select only those points in my image that fall on or within the circle and to set the remaining, exterior image points to zero. Here is a test image:               image = Table[{i, j, 2}, {i, 0, 1, .025}, {j, 0, 1, 0.025}];          ListPointPlot3D[image]      I tried to use `winding[points,0]`, as suggested, to test if the center of the circle is within the circle, but I get: > During evaluation of In[133]:= ArcTan::argt: ArcTan called with 318 > arguments; 1 or 2 arguments are expected. >> > > Out[136]= {0, 0} Clearly, I don't understand the input syntax for `winding[]`