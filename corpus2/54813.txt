I have a bipartite graph with two sets of vertices.               Needs["Combinatorica`"]     g = CompleteGraph[3, 3];     edgeWeights = {{53, 96, 37}, {47, 87, 41}, {60, 92, 36}};     g1 = SetEdgeWeights[g, Flatten[edgeWeights]];      I want to find the optimal assignment that minimizes the total cost (sum of assigned edges). For this I use:               BipartiteMatchingAndCover[g1]      The answer I get is {{1, 5}, {2, 6}, {3, 4}}, which tells me that vertex 1 is assigned to vertex 5, 2 is assigned to 6 and 3 is assigned to 4. These assignments correspond to a total cost of 96+41+60 = 197. I would have expected the answer to be {{1,6},{2,4},{3,5}} which corresponds to a total cost of 37+47+92=176. It seems like the function is finding the assignments associated with the maximum cost instead of the minimum cost. I tried using `1/edgeWeights` as edge weights, but got the same result. Any ideas?