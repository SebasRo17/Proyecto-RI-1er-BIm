I know how the lambda expresion works and I know it is an argument for `.filter()` that establish the criteria to filter with. But I don't get how `.filter()` uses the argument, in this case a lambda expression, because .filter() does't have an implementation or at least require one at compile time. I search for this unknown implementation in the Oracle's site but there are just a few words explaning how it works and no code at all. Is that implemetation hidden or is created automatically by the java compiler? Does an aggregate operation need one?               double average = roster       .stream()       .filter(p -> p.getGender() == Person.Sex.MALE)       .mapToInt(Person::getAge)       .average()       .getAsDouble();      `roster` is a `List<Person>` instance of `ArrayList<Person>` `Person` is a simple class that represents a person