I have a flight planning system in .NET/SQL Server which needs to perform several validation checks. This needs to work on both a windows and a web client. Currently the checks run synchronously but this is slowing the system down, plus it is often repeating the same checks. Like "is this aircraft in the right start location", "is the aircraft available" and many more complicated checks. This is needed since the current system does not know if other flights have been changed which might cause issues. Am looking for a way in which I could create a single background process which runs independently and asynchronously on an interval and might be triggered by data changes or explicit requests. This process could then update a list of found issues per flight. Another process could simply use this list to report the issues to the user without having to perform the checks itself. Any ideas on architecture pattern and best practices to implement something like this? Would like to keep the installation process fairly simple, so the fewer "moving parts" the better.