According to the documentation, we _can reset $ModuleNumber to a positive machine integer_. There is even an example in the doc:               $ModuleNumber = 17; {Module[{x}, x], $ModuleNumber}      > >     {x$17, 18} >   However, when I try evaluating it again and again, instead of keeping `17`, the "serial number" after `$` increases _every_ time. I double checked that the `$ModuleNumber` does get reset at the beginning:               $ModuleNumber = 17; {$ModuleNumber, Module[{x}, x], $ModuleNumber}      > >     (* first time evaluation: *){17, x$17, 18} >     (*secend time evaluation: *){17, x$18, 19} >     (* third time evaluation: *){17, x$19, 20} >   > > ...... > > ... I did the test in _9.0.1 home edition_ on Windows 8, and also in _10.0_ on Raspberry Pi with the same result: ![$ModuleNumber reseting failed](http://i.stack.imgur.com/BPOo6.png) It's interesting to notice that using loop to automize the evaluation will NOT increase the number _during_ the loop:               Do[        Print[              $ModuleNumber = 17;              {$ModuleNumber, Module[{x}, x], $ModuleNumber}             ],        {5}]      > >     {17,x$19,20} >     {17,x$19,20} >     {17,x$19,20} >     {17,x$19,20} >     {17,x$19,20} >   But               $ModuleNumber = 17;     Do[        Print[              {$ModuleNumber, Module[{x}, x], $ModuleNumber}             ],        {5}]      > >     {17,x$17,18} >     {18,x$18,19} >     {19,x$19,20} >     {20,x$20,21} >     {21,x$21,22} >   > > **So question:** Do I misunderstand the documentation? What do I miss? And most importantly, how can I reset the `$ModuleNumber` so the subsequent `Module`/`Unique` will use the "serial number" I specified?