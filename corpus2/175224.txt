We are in the business of building customizable web applications. We have the core team that provides what we call as the **core _platform_** (provides services like security, billing etc.) on top of which **core _products_** are built. These core products are industry specific solutions like telecom, utility etc. These core products are later used by other teams to build **_customer specific_ solutions** in a particular industry. Until now we have a loose separation between platform and core product. The customer specific solutions are build by customizing 20-40% of the core offering and re-packaging. The core-platform and core products are released together as monolithic apps (ear). I am looking to improvise the current situation so that there is a cleaner separation on these 3. This allows us to have evolve each of these 3 separately etc. I've read through the Mircokernel architecture and kind of felt that I can take apply the principles in my context. But most of my reading about this pattern is always in the context of operating systems or application servers etc. I am wondering if there are any examples on how that pattern was used for architecting business applications. Or you could provide some insight on how to apply that pattern to my problem.