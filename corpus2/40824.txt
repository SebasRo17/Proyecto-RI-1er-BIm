**Updated Problem Description** I have a collection of strings $S$ that only contain two (or $m$ in general) kinds of elements: in this case C and D. For all $s\in S$, the length is the same, the number of C is the same (and so does the number of D). For instance consider the following two strings: CCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDD and CDCDCCDCDCDCDDCDCDCDCDCDCDCDCDCD. They have the same number of characters, the same number of C and D. Could anyone suggest how can I count the minimum number of neighbor swappings needed to transform from the 1st string to the 2nd string in Mathematica? **Information that is irrelevant to the problem itself** : I am doing this to compare how close the best candidate solution obtained by a problem-specific genetic algorithm to the real optimal solution. You are welcome to suggest other measures of "closeness". **Update 1** : There is not periodic boundary condition in my problem. I do not treat the string as necklace. **Update 2** : In the comments, @Stephen mentioned Kendall tau distance, but I'm not sure whether it applies to my problem considering that there is no order relation between C and D and so many characters in the string are the same one, i.e. there are so many C in one string.