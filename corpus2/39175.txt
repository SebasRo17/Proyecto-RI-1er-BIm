I have a problem fitting a triangular function (like potential vs. time in cyclic voltammetry) with a `HeavisideTheta` function. I just want to get used to `HeavisideTheta`as I have to apply it later on, on more complex curves, but I already encounter problems. This is what I have done so far:               data = {{0, 0}, {0.1, 0.1}, {0.2, 0.2}, {0.3, 0.3}, {0.4, 0.4},              {0.5, 0.5}, {0.6, 0.6}, {0.7, 0.7}, {0.8, 0.8}, {0.9, 0.9},              {1, 1}, {1.1, 0.9}, {1.2, 0.8}, {1.3, 0.7}, {1.4, 0.6},              {1.5, 0.5}, {1.6, 0.4}, {1.7, 0.3}, {1.8, 0.2}, {1.9, 0.1}, {2, 0}}          pos[x_] := a*(x - x0)          neg[x_] := -b*(x - x0)          model = neg[x]*HeavisideTheta[x - x1] + pos[x]*(1 - HeavisideTheta[x - x1]);     langfit = NonlinearModelFit[data, neg[x]*HeavisideTheta[x - x1] +                 pos[x]*(1 - HeavisideTheta[x - x1]), {a, b, x0, x1 }, x]      NonlinearModelFit returns: > NonlinearModelFit::nrjnum: The Jacobian is not a matrix of real numbers at > {a,b,x0,x1} = {1.,1.,1.,1.}. >>               Show[ListPlot[data, PlotRange -> {{-2, 2 }, {-1, 2}}], Plot[langfit[x], {x, -2, 2}]]