In general, if I am using an API whose methods have side-effects that I only want to occur once, how can I guarantee that my own application only calls them once even if an error occurs before it can register a response? For example, if I am calling a payment processing API once each month for a subscription service, how can I ensure that I don't double-bill if I create a new transaction and the application suffers a fatal error before I get the response from that? It seems like cooperation with the API would be a solution:               t = Transaction.new(user, price, etc);     if(t.persistToLocalDatabase()){ t.beginRemoteProcessing(); }      Is there a way to solve this for the case where I have no control over the API and it begins processing on transaction creation?