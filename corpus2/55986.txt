It is possible to _numerically_ solve a differential equation if not-smooth data are involved? For example the following instruction return the error NDSolve::bvdisc:               NDSolve[{-u''[x] == UnitBox[(x - 0.5) 0.5/0.2], u[0] == 0,        u'[1] == 0}, u, {x, 0, 1}]      > NDSolve::bvdisc: NDSolve is not currently able to solve boundary value > problems with discrete variables. >> Here I suppose _discrete variable_ means _discontinuous functions_ but maybe the problem is completely different. This error is reported in Mathematica 10, where the Finite Element Framework should be able to return weak, not classical, solutions and should be definitely able to deal with such a simple equation, but maybe we need to enable some option or methods. Please note I know I can do               DSolve[{-u''[x] == UnitBox[(x - 0.5) 0.5/0.2], u[0] == 0,        u'[1] == 0}, u, {x, 0, 1}]      ![result](http://i.stack.imgur.com/czGjQ.png) but in more complex scenarios I cannot hope to get an analytical answer.