In my company we use MS Dynamics AX 2009. This is the ERP of the company. We have around 100 users. The servers of MS Dynamics AX are in the headquarters company. We are developping a new website using Play Framework and Scala language. However, the website server isn't in the headquarters company, the dedicated server is hosted in OVH, an European ISP. The website needs the ERP data in real time, but the MS Dynamics AX Database is located in the headquarters company and the internet connection is very unstable. That's the problem! We need bidirectional comunication between the website and the ERP, but the internet connection of the ERP Servers are very unstable. We've thought two solutions:   * Use RabbitMQ in the headquarters and website. When an event occurs in the ERP, the ERP puts a message in RabbitMQ and the website gets this message when the internet connection works. When an event occurs in the website, the website puts a message in RabbitMQ and the ERP gets this message when the internet connections works. So, we have 2 RabbitMQ, one in the headquarters and another one in the website server.   * Use MS SQL Server Replication to replicate the database from headquarters to ISP, we would need two servers in the ISP: the website (Linux, Apache, MySQL, Play Framework) and the SQL Replica (Windows, SQL Server). When an event occurs in ERP, the SQL Server replication propagate these changes to the SQL Replication server in the ISP, and the website always reads the data in the SQL Replication Server. When an event occurs in website, we also need a RabbitMQ queue like before. What do you think about this architecture? What is the best solution? Could MS SQL Server replicate ussing an unstable internet conecction? Thank you in advance.