It says in the book (APress Ganesh / Sharma) about Java 7: > You create a method named `fill()` in the Utilities class with this > declaration: >   >   >     public static <T> void fill(List<T> list, T val) >   > > You declare the generic type parameter `T` in this method. After the > qualifiers `public` and `static`, you put `<T>` and then followed it by > return type, method name, and its parameters. This declaration is different > from generic classesâ€”you give the generic type parameters after the class > name in generic classes. But why `<T>` as in `public static <T>` ? The syntax looks odd and appears nowhere else in the Java language. What does the `<T>` mean in this case and why is it used?