Suppose we have a long list of random points (cartesian coordinates) in 3D space.               coords := ...;      Until now, I was associating colors in a radial way, from the center to the edge of the distribution :               SpriteColor = Blend[{InternalColor, MiddleColor, MiddleColor2, ExternalColor},#]&;      I'm now wondering how could we associate the colors by random "small patches" over the distribution of points, with smooth blending between the patches. What I mean by "patches" is this : some red here, blending to blue there, red again in another random part, blending to green over there, etc. The random distribution of colors should need the number of "patches" as input, and a set of colors (as in my example above, for the radial distribution). Any suggestion about how to do this ? For a crude example, here's a version with the radial colors (easy to do with the above color directive) : ![enter image description here](http://i.stack.imgur.com/hy9gK.jpg) And here's a **very crude** sketch (hand made) of what I would like to do, instead of a radial coloring. The patches should be randomly placed : ![enter image description here](http://i.stack.imgur.com/1Ni4J.jpg) Notice that I'm working with **_Mathematica 7_**. **EDIT :** Here's a full working example for a radial color distribution on a cube of points. I would like to distribute the colors on, say, 7 spots randomly distributed on the whole distribution of points, instead of an unique radial blend.               InternalColor := RGBColor[0.95,0.0,0.0, 0.99]; (* color at the center of the distribution *)     MiddleColor := RGBColor[0.0,0.95,0.0, 0.9]; (* color of transition to the exterior part *)     ExternalColor := RGBColor[0.0,0.0,0.95, 0.9]; (* color of the exterior part *)          testCoords = RandomReal[{-1,1},{10000,3}];          radialColors = Blend[{InternalColor, MiddleColor, ExternalColor2},#]&;          Graphics3D[{AbsolutePointSize[4],Point[testCoords,VertexColors->(radialColors[Norm[#]]&/@testCoords)]},Boxed->False,BoxRatios->{1,1,1},ImageSize->800,SphericalRegion->True]      Output : ![enter image description here](http://i.stack.imgur.com/pS6xV.jpg)