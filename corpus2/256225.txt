I'm having trouble setting up my program's database the 'right' way. I was hoping you guys could give me suggestions on doing it properly. I am creating a database+client for a non-profit organization that runs all across Canada. I'll describe how it works below to give you guys a better understanding of what I'm trying to do. ## First off, What are you using? - - - - - > ** _Laravel_** I've started to create it already with a web based (PHP with **_Laravel_** , HTML, CSS [bootstrap]) frontend and a MySQL based backend. ## How the organization is setup? Currently the organization I am making this database for has 3 main tiers; Main Management ({MM}) > Sub-Management ({SM}) > and Local ({L}). {MM} has multiple {SM}, {SM} has multiple {L}.   ![Diagram of Org. Structure](http://i.imgur.com/kqurrsW.png)   Currently I am focusing on the _last 2 tiers_ , {SM} and {L}. {SM} makes sure {L} is running properly and {L} regularly submits different paperwork and reports to {SM}. ## What kind of data do you need to keep track of? I am looking to store some Personal information; address, email phone, etc. As well as class/instruction results (marks included). Some inventory management (who has what, very simple). Some positional information (who has what job). And some Attendance info (Who did what, where, for how long). ## So what's your actual question? Currently, I am assigning every {L} an id and using that as a foreign key in all the inventory/personnel/positional tables, but it's getting ridiculous to do the 'where' call everywhere in my queries; tough to keep track of when doing more complex queries.   I was wondering if it would be better to _separate_ each {L} into it's own database and access each depending on which user is logged in? I'm not sure what would be best or what is accepted as best practice. I could **really** use your help! I've been having a **lot** of fun so far learning laravel and amazed at the features it has to offer. **Thanks so much for any and all suggestions,   Chris** **If you need a better explanation or have any questions please ask!** **Edit:** Sorry, I thought about this after... I also (probably) want to be able to allow different members of different {L}s to communicate or transfer member/information between {L}s. Would this be more difficult if they were split up? Maybe I should keep everything together in one database? Yeah. I'm just lost and confused... :)