Have you come across a super programmer? What identifies him or her as such, compared to "normal" experienced/great programmers? Also. how do you deal with a person in your team who believes he is a super programmer? Both in case he actually is or if he isn't? **Edit** : Interesting inputs all round, thanks. A few things can be gleaned: A few definitions emerged. Disregarding too localised definitions (that identified the authors or their acquaintance as super programmers), I liked a couple definitions:   1. Thorbjørn's definition: a person who does the equivalent of a good team consistently for a long time.   2. Free Electron, linked from Henry's answer. A very productive person, of exceptional abilities. The explanation is a good read. > A Free Electron can do anything when it comes to code. They can write a > complete application from scratch, learn a language in a weekend, and, most > importantly, they can dive into a tremendous pile of spaghetti code, make > sense of it, and actually getting it working. You can build an entire > businesses around a Free Electron. They’re that good. Contrasting with the last definition, is the point linked to by James about the myth of the genius programmer (video). The same idea is expressed as egoless programming in rwong's comment. They present opposite opinions as whether to optimise for such a unique programmer or for a team. These definitions are definitely different, so I would appreciate it if you have an input as to which is better. Or add your own if you want of course, though it would help to say why it is different from those.