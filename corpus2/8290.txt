Inset seem better suited for ad-hoc labels and legends than for precision, programmatic placement of annotation. Given the following 'bottom-up' graphic expression:               Graphics[{       Darker@Blue,        Point /@ Table[{k, Last@CountSelectMouseEvents["049", k]}, {k, -10,           10, 0.1}],       Red, Line[{{0, 0}, {0, 55}}], Text["55", {0, 55}, {2, 0}],        Darker@Green, Line[{{1.3, 0}, {1.3, 37}}],        Text["37", {1.3, 37}, {-2, 0}]       }, AspectRatio -> 1/GoldenRatio, Frame -> True]      Which yields: ![enter image description here](http://i.stack.imgur.com/06HNJ.jpg) How can the annotation graphics:               Red, Line[{{0, 0}, {0, 55}}], Text["55", {0, 55}, {2, 0}],            Darker@Green, Line[{{1.3, 0}, {1.3, 37}}]       be `Inset` in `ListPlot` to create the same graphic? (use random points in lieu of CountSelectMouseEvents). I can never get the placement precise enough given the oblique syntax and placement rules.