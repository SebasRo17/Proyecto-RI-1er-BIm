I came across this issue with a more complicated program I was working on. Suppose we have a volatile variable `data`:               In[1]:= data = RandomReal[{0,1},{10}];      As this cell is evaluated,               In[2]:= Dynamic@data      refreshes as expected. However, if we want to save a certain instance of data and later load it in:               In[3]:= DumpSave["filepath.mx",data]      (change value of `data` to something else)               In[4]:= <<"filepath.mx"      the dynamic cell (`In[2]`) isn't updated (unless you evaluate it again). It can be forced to update on the loading of the .mx file by using a `Refresh[...,UpdateInterval->time]`, but it seems odd that re-evaluating `In[1]` instantly changes the dynamic cell while redefining `data` with the .mx file doesn't. Any explanation for this? And is using the `Refresh` method a good solution here?