Given a large group (50+) of programmers:   * All given the same problem,   * All using Test-Driven Development (TDD),   * All pair programming,   * All doing group-based code review, I have personally seen the wide spectrum tests that are possible for the same problem, even on the first test. So, if TDD is design, how do you know your TDD is optimal for the current problem, and how do you know it is not? Following the first test, is the approach for reviewing the consecutive tests any different, and if so, how?