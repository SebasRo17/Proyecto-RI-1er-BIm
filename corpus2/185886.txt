Basically, we have three main projects, two of them are web services, and the other is a web application. While I'm satisfied with covering as much as we can of our web services with functional test (all three projects have their proper unit tests), functional tests for the web application are taking a lot of developer time to get implemented (and by a lot I mean two times, or some times more, the time that takes to implement the functionality being tested with unit test included) The manager policy is to test every single functionality we add, even if is not business critical (i.e a new C.R.U.D). I do agree with testing all of the web services functionality, because is hard to manually test them, and also, this tests run fast and doesn't take to much to implement. So, what's the value in spending more time writing functional test, than writing system code, unit test and fixing QA tikets? Is this normal? shouldn't we be writing functional test only for critical functionality and let QA to do regression tests over no critical functionality? Note: we are not developing medical software or NASA software or nothing that critical. Note2: sorry my bad English!