I just got a batch of LED matrix modules from Sure Electronics (http://www.sureelectronics.net/goods.php?id=1120) and a driver board (http://www.sureelectronics.net/goods.php?id=972). I've got it wired up, and connected to my Mac. I found the right drivers, and I'm now able to send text to the displays using the virtual COM port, as per the documentation from Sure Electronic's website:               start with "0xFE,0x47 (G) 0x01,0x01" followed by 16 characters - display the 16 characters in the first row     start with "0xFE,0x47 (G) 0x01,0x02" followed by 16 characters - display the 16 characters in the second row      The plan is to hook it all up to a Raspberry Pi (when I eventually get one) and use it all to display information from a web service. However, this setup is not optimal. The driver board requires some initialization each time it is powered up, in order to be available via USB. Also, I'd like more control over the display of characters (this setup, for instance, does not support non-ASCII characters, or text scrolling). Heavy googling has led me to believe that I need to go deeper into the HT1632 chip on the driver board. The documentation from Sure Electronics is sparse. The goal would be to be able to address each LED pixel individually from my code running on my computer (as in a 2D array of booleans, for example). I'm totally new to micro programming, so I have no idea where to start. What do I need to do in order to program it? Can I even modify the code of the driver board, or do I need another kind of driver board? And how do I automate the boot up sequence, so that the board is automatically USB enabled? Also, I'm mostly a Java/Web developer guy, so I would like to avoid as much C programming as possible. If anyone with experience with this kind of programming could point me in the right direction to start, I would be grateful.