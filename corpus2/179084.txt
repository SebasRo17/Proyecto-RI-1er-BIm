LGPL requires that it if a program uses LGPL-ed library, users must be able to re-link the program with a different version of the library: > ... > > d) Do one of the following: > > 0) Convey the Minimal Corresponding Source under the terms of this License, > and the Corresponding Application Code in a form suitable for, and under > terms that permit, the user to recombine or relink the Application with a > modified version of the Linked Version to produce a modified Combined Work, > in the manner specified by section 6 of the GNU GPL for conveying > Corresponding Source. > > 1) Use a suitable shared library mechanism for linking with the Library. A > suitable mechanism is one that (a) uses at run time a copy of the Library > already present on the user's computer system, and (b) will operate properly > with a modified version of the Library that is interface-compatible with the > Linked Version. > > ... However in some cases, this can pose considerable difficulties. In particular, Haskell programs are almost always statically compiled. Moreover, the compiler does cross-module optimizations so its not possible to take a part of the code out and replace it with another. So it's very hard to satisfy this condition. (See this link at Haskell Wiki.) _Update:_ Dynamic linking would be a solution, but in many cases, this isn't possible. For example:   * Some platforms may not have dynamic linking at all.   * Some languages don't have the possibility of dynamic linking. Or, it's not possible to make modules multi-platform.   * In some cases dynamic linking would prevent important optimizations. While I'd say this is rarely a serious problem, in languages like Haskell the performance loss could be considerable. Therefore, I'm looking for a standard LGPL-like license that wouldn't require the possibility of re-linking (and I understand that that removes a bit of freedom given to users). Some projects use their own modification of LGPL, for example wxWidgets. But I'd rather use some standard license that is somewhat more official, perhaps checked by some law experts, and (L)GPL compatible. Is there some like that? (Also I'd be interested to know if are there some unforeseen consequences of such a modification of LGPL.)