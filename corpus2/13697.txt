EDIT: IstvÃ¡n Zachar informed me of the **Rasterize[]** command, which does exactly what I need. Danke! I have a self-built function that uses Grid[] to create a table that is more presentation-friendly than TableForm. Example output is: ![Example output of dougTable](http://i.stack.imgur.com/tbBLt.png) What I usually do to copy this into a presentation is take a screenshot with the Snipping Tool. For plots, I can just select the plot in Mathematica and then select Edit -> Copy As -> Bitmap. I want to be able to do the same with this table. Right now, if I try selecting the table, I get a cursor and can start typing in the figure. I was hoping there was a Mathematica function that just puts a selectable bounding box around the entire output of a function, but I've been unable to find one yet. Does anyone have any ideas on how to make this entire table selectable? Source code for my function can be found below, although you shouldn't need to use it to find a solution to the problem: any function with a non-graphic default output should work fine.               Clear[dougTable]     dougTable[data_List, cols_List: {}, rows_List: {}] :=      Module[       {genOpts, none, colHead, rowHead, both, font},       genOpts = {Frame -> All, Background -> RGBColor[1, .9, 0],          FrameStyle -> Thickness[1]};       font = {FontFamily -> "Arial", FontSize -> 12, FontWeight -> "Bold"};       none = {genOpts,          Dividers -> {{1 -> Thickness[2], -1 -> Thickness[2]}, {1 ->              Thickness[2], -1 -> Thickness[2]}}};       both = {genOpts,          Dividers -> {{1 -> Thickness[2], -1 -> Thickness[2],             2 -> Thickness[2]}, {1 -> Thickness[2], -1 -> Thickness[2],             2 -> Thickness[2]}},          ItemStyle -> {{Directive[font], Automatic}, {Directive[font],             Automatic}}};       colHead = {genOpts,          Dividers -> {{1 -> Thickness[2], -1 -> Thickness[2]}, {1 ->              Thickness[2], -1 -> Thickness[2], 2 -> Thickness[2]}},          ItemStyle -> {Automatic, {Directive[font], Automatic}}};       rowHead = {genOpts,          Dividers -> {{1 -> Thickness[2], -1 -> Thickness[2],             2 -> Thickness[2]}, {1 -> Thickness[2], -1 -> Thickness[2]}},          ItemStyle -> {{Directive[font], Automatic}, Automatic}};            Which[Length[cols] == 0 && Length[rows] == 0, Grid[data, none],        Length[cols] != 0 && Length[rows] == 0,         Grid[Prepend[data, cols], colHead],        Length[cols] == 0 && Length[rows] != 0,         Grid[MapThread[Prepend[#1, #2] &, {data, rows}], rowHead],        Length[cols] != 0 && Length[rows] != 0,         Grid[Prepend[MapThread[Prepend[#1, #2] &, {data, rows}], cols],          both]]       ]