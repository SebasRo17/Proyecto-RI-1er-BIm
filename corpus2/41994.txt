I am trying to discretize a long array of real numbers into a uniformly distributed integer array. To do this I am identifying the quantile where each real value sits and writing it out to the output array as shown in the code below. But I am not sure this is the most efficient / optimised way to do this. Is there any more efficient code to discretize arrays?               Qsections = Range[1/#, 1, 1/#] &;      FindQuantile3[data0_, qvalue0_, qts0_] :=        Module[{data = data0, qvalue = qvalue0, qts = qts0},        quantilesT = Quantile[data, Qsections[qts]];        Position[quantilesT, Nearest[quantilesT, qvalue0][[1]]][[1, 1]]        ];     FindQuantile3[RandomReal[10,1000],5,7]      out: 3 (* meaning that 5 is in the 3rd quantile of the randomly created array if we divide it in 7 quantiles*) This is the result I want, but I find the function too complicated and slow for what it needs to do. Any improvement ideas?