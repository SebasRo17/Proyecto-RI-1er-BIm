I am writing a bunch of _Mathematica_ scripts to run command line in a HPC environment. I am organising my solution in small chunks I can test separately. So I have a directory structure like:               ├── test     │   ├── coefficients-test.math     │   ├── main-test.math     │   ├── nearest-test.math     │   ├── rangek-test.math     │   ├── unit.m     │   └── wave-test.math     └── wde         ├── coefficients.m         ├── ???.m         ├── nearest.m         ├── rangek.m         └── wave.m      The `test` folder contains a bunch of unit tests using simple poor man's testing. Each test script begins (say `test/coefficients-test`)               #!/Applications/Mathematica.app/Contents/MacOS/MathematicaScript -script          $Path = Join[$Path, {Directory[]<>"/wde"}];     Needs["unit`"];     Needs["coefficients`"];      and then testing code. I `chmod`ed them with a+x and I just run them like: > $ ./test/coefficients-test.math (Needless to say that in the HPC the _Mathematica_ script path is different, but that is secondary for the moment.) So far so good. The problem is that when I try to develop the main component of my `wde` package, if I name the file `wde/init.m` or `wde/wde.m` or `wde/Kernel/init.m` and try to load it in the test script with `Needs["wde`"]` I get the infamous context not created error; although I have inside it `BeginPackage["wde`"]`. If I name my package, say `wde/main.m` and put inside `BeginPackage["main`"]`, it works. Easy work around, but I was wondering what I am doing wrong in the first place. Do I need to copy my package to a standard _Mathematica_ location for script loading? Why doesn't the `$Path` trick work in this case? Again, this is a purely scripting approach - not sure if this is suitable from the front-end in a notebook, although at this stage this not a concern. Actually, my plan is to develop the script further to generate a CDF via a script and load that in the front-end for demo-ing purposes, etc (I understand this is the recommended solution to CDF production.)