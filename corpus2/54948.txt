This question is related to this one re pivoting on keys. Because of the nesting, using Leonid's method as starting point - single key:               pivotUp[key_] := Query[GroupBy[Key@key], KeyDrop[key]]      How to extend the operation iteratively - but partially - to create hierarhical Datasets from tabular data. Interesting cases include duplicate values, which are pivoted to duplicate keys. Consider:               pivotUp[keys_List] :=       Sequence @@ (Flatten@{GroupBy[Key@#] & /@ keys, KeyDrop@keys})      Given:               data = AssociationThread[{"key1", "key2", "key3"} -> #] & /@  {{1,           "a", 10}, {1, "b", 20}, {2, "c", 30}} // Dataset      ![enter image description here](http://i.stack.imgur.com/aoo6T.png) One way to use pivotUp is this:                 data[pivotUp[Key@"key1"]][All, pivotUp[Key@"key2"]]       This is more compact:               data[pivotUp[{"key1", "key2"}]]                 <|1 -> <|"a" -> {<|"key3" -> 10|>}, "b" -> {<|"key3" -> 20|>}|>,           2 -> <|"c" -> {<|"key3" -> 30|>}|>|> (* normal form *)      But how can "key3" be accessed, either with given pivotUp or alternatives? These don't work:               data[pivotUp[{"key1", "key2"}], "key3"]      ![enter image description here](http://i.stack.imgur.com/DqFVg.png) The desired output is:               data[pivotUp[{"key1", "key2"}]][All, All, All, "key3"] // Normal          <|1 -> <|"a" -> {10}, "b" -> {20}|>, 2 -> <|"c" -> {30}|>|>      Ideally, these partial pivots should handle {__Association} structures.