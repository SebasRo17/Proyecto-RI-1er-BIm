Suppose I have a class `C` with a method `f()` which is meant to be used only within `C`'s implementation, but which should be overridden by `C`'s subclasses. Is it reasonable, or "pythonic", to consider it private, i.e. to name it `_f()` rather than `f()`? In other words would you distinguish the interface provided to subclasses from the interface provided to code outside the inheritance hierarchy?