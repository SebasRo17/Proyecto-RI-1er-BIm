**TLDR:** What is an effective way to use Git to handle ASP MVC code-first EF? Which files need to be included for NuGet? Which files should be left out? We have an **ASP MVC code-first Entity Framework** project that we are building as a school project. For our versioning, we are using **Git to Bit Bucket**. The basic workflow to add a feature or revamp code is to create a branch off of a _Dev_ branch, commit to the new branch until finished and intial testing is done, then merge/pull request back into the _Dev_ branch. We have run into issues with the project setup breaking when a user tries to merge changes to the their branch before merging back into _Dev_. Some questions are:   **For the NuGet Packages, what should be included in the Git repo?** There are some files that seem to update every time, forcing Git to go through all of them during a commit. **Should the Entity Framework be included in the repo?** We have the migrations, but they seem to break any time anyone pulls changes onto their machine. **Is there a good way for Git to handle Visual Studio Project (.csproj) Files?** We had a merge nightmare involving project files when one developer pulled changes from the _Dev_ before trying to push back. For our .gitIgnore, we used an ASP and added a few of our own. A copy of it is at Pastebin.com. Also, as for the horrific mangling of project files, we have looked on StackOverflow and saw this: .NET + Git: how I deal with Visual Studio files?. Is this something that would resolve the Visual Studio project files issue?