Assuming that:   * You are in a team developing some software.   * Your team is using centralized version control in the development process.   * You are working on a new feature which will surely take several days to complete, and you won't be able to commit before that because it would break the build.   * Your team members commit something every day that affects some of the files you're working with for your fancy new feature. Since this is centralized version control, you will have to update your local checkout at some point: at least once right before committing the new feature. If you update only once right before your commit, then there might be a lot of conflicts due to the many other changes by your teammates, which could be a world of pain to resolve all at once. Or, you could update often, and even if there are a few conflicts to resolve day by day, it should be easier to do, little by little. Can we say that it is always a good idea to update often?