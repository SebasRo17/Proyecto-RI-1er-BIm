I am studying the `Array` class in C#. The following is the implementation of `System.Array` class:               [SerializableAttribute]      [ComVisibleAttribute(true)]      public abstract class Array : ICloneable, IList, ICollection, IEnumerable, IStructuralComparable, IStructuralEquatable       I have two questions regarding this:   1. I have read that `System.Array` class is derived from `System.Object`. But why is this not seen in the above definition?   2. ICloneable is implemented in order to allow the Array to be Deep-Copied in case of XML serialization. ICloneable provides only one method - Clone(). What is the advantage of implementing ICloneable explicitly? Why could not Clone() method be directly implemented? Is this a type of providing a Marking Interface pattern where a particular Interface is implemented only to convey a certain characteristic of the class?