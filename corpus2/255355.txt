In Object Oriented Programming, we're taught to think in terms of Polymorphism (the idea that the implementation is decoupled from the interface - and that it makes sense to think of the interface first). This is expressed by Eric Gamma (author of Gang of Four Design Patterns Book) > Program to an interface, not an implementation Later we learned that this is a way of solving The Expression Problem. Other languages such as Clojure address 'The Expression Problem' using protocols. Now coming out of Scala (and perhaps influenced by Haskell) we're seeing a design movement that says _"Design your Types First"_. When I heard that - I thought I'd heard it before. My question is: **Is 'design with types first' ultimately the same as 'design with interfaces first'?**