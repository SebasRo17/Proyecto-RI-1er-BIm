I'm planning to implement a word processor using Java, and Swing for the GUI. I was thinking how I can implement the text area where the user types the text. My idea was to subclass `JTextArea`. It already has a lot of functionality for setting text, changing font size, etc. I will than add all the additional functionality, such as the ability to be affected by button presses on the UI, etc. This seems reasonable to me, however I have a question regarding this: **Is it considered reasonable in a 'serious' program, to implement a major part of the program by subclassing an existing class of a common library?** Is it a 'serious' and 'professional' thing to do? Of course professional developers use and subclass existing code all the time, no point in reinventing the wheel. But here I'm talking about **implementing a major part of the application** , probably the largest part, **largely by subclassing an existing library class.** I am not a professional, and I know I don't have to work 'as professionals do'. But I am interested in how professionals view this. **1-** Is something like this considered reasonable in a 'professional' application? **2-** Have you ever seen this in practice in a 'professional' application?