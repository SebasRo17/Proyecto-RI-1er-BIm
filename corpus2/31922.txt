I have the following loop, for calculating a data for different values of inputs. How I can plot the result at the end of For loop? Its not matter if the plot is inside or outside the loop, I just want to plot the results.               Clear["Global`*"];     b = 10^4;     s = b/2;     tx = ((2*RandomInteger[1, s])-1) + (I*((2*RandomInteger[1, s]) - 1));     For[i = 0, i <= 20, i++, snrdb = i;      snr = 10^(0.1*snrdb);      sd = 1/Sqrt[snr/2];      noise = 1/Sqrt[2]*(RandomReal[NormalDistribution[], {s, 1}] + I*RandomReal[NormalDistribution[], {s, 1}]);      y = tx + (sd*noise);      rx = Flatten[Sign[Re[y]]+I*Sign[Im[y]]];      error = Unitize[tx-rx];      ber = Total[error]/b;      Print["Total number of errors: ",Total[error]];      Print["Error rate: ",N[ber]];      ]     LogPlot[{ber, 10^-4, 10^0}, {snrdb, 0, 20}]      * * * Thanks All, Both techniques was useful. Sorry b is the same as bits, I made a mistake I corrected later. I need the continous line not discrete. how to change the y axis to be from 10^-4 to 10^1? Note: for the purpose of accuracy I increased b to 10^6.               Clear["Global`*"];     b = 10^6;     sym = b/2; tx = ((2*RandomInteger[1, sym]) -          1) + (I*((2*RandomInteger[1, sym]) - 1));     bervals = Reap[         For[i = 0, i < 21, i++, snrdb = i;          snr = 10^(0.1*snrdb);          sd = 1/Sqrt[snr/2];           noise = 1/             Sqrt[2]*(RandomReal[NormalDistribution[], {sym, 1}] +               I*RandomReal[NormalDistribution[], {sym, 1}]);           y = tx + (sd*noise); rx = Flatten[Sign[Re[y]] + I*Sign[Im[y]]];           error = Unitize[tx - rx];          Sow[ber = Total[error]/b];          ]][[2, 1]];     ListLogPlot[bervals, Joined -> True]