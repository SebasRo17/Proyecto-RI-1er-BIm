I work on the implementation of an image processing pipeline in _Mathematica_ in which I also would like to use external programs to do certain processing steps. As an example I have macros for the program FIJI that are written, parameterized and then executed with the `Run` command in _Mathematica_. Some of these processing steps just need to be executed and I do not necessarily need the results in the pipeline later on. For those computations I thought it would be nice to let the computation be run in a background process and continue with other steps while the background process is still running. I've read about pushing computations to background kernels (Computing Many Slow I/O Operations, Concurrency: Managing Parallel Processes) and it works fine. What I've tried is the following: I launch a bunch of kernels, generate some processes and queue those processes using `ParallelSubmit`. I then use `QueueRun` to start the processes in the background and collect the results with `WaitAll` after a while.               CloseKernels[];     Needs["Parallel`Developer`"];     ResetQueues[];     LaunchKernels[5];          ids = Function[i,         ParallelSubmit[(Pause[i^2]; {i^2, DateString[]}),          Scheduling -> i]] /@ {1, 2, 3, 4, 5}      ![enter image description here](http://i.stack.imgur.com/oHcB1.png)               {QueueRun[], $QueueLength}      > {True, 0} ![enter image description here](http://i.stack.imgur.com/wHpGB.png)               WaitAll[ids]      > {{1, "Mon 10 Mar 2014 09:37:53"}, {4, "Mon 10 Mar 2014 09:37:56"}, {9, "Mon > 10 Mar 2014 09:38:01"}, {16, "Mon 10 Mar 2014 09:38:08"}, {25,   >  "Mon 10 Mar 2014 09:38:17"}} ![enter image description here](http://i.stack.imgur.com/RudKp.png)               DateString[]      > Mon 10 Mar 2014 09:41:23 I included `DateString` to see, when the tasks have been processed in the background kernels. As can be seen from the timings it worked as expected and I also was able to do computations in the front end while the tasks were running. Now I'd like to do the same thing with calling external programs like FIJI but for some reasons the tasks are processed not before `WaitAll` is evaluated. The kernels receive the jobs but they do not start until I evaluate `WaitAll`.               CloseKernels[];     Needs["Parallel`Developer`"];     ResetQueues[];     LaunchKernels[3];          ids = {       ParallelSubmit[runFijiMacro["command line code"]],       ParallelSubmit[runFijiMacro["command line code"]],       ParallelSubmit[runFijiMacro["command line code"]]       }      ![enter image description here](http://i.stack.imgur.com/9Kepv.png)               {QueueRun[], $QueueLength}      > {True, 0} ![enter image description here](http://i.stack.imgur.com/dzNo2.png) ( _The returned EvaluationObjects seem to be running but in fact they don't_ )               WaitAll[ids]      ( _now FIJI is started and the tasks are processed. But, also the main kernel is blocked._ ) **Questions**   1. Why does this construct not work with `Run`?   2. Is there a possibility to force the evaluation on the background kernels?   3. Is there a workaround to do this? Thanks for any help or comments!