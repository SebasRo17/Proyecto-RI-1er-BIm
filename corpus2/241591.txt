1. Is it considered an overkill for console application to be design like MVC , MVP or N tier architecture? If not which is more common and if you can link me to simple example of it.    2. I want to implement a tic tac toe game in console application.   I have a solution which hold two projects: `TicTacToeBusinessLogic (Class library project)` and `TicTacToeConsoleApplication (Console application project)` to represent the view logic. In the `TicTacToeConsoleApplication` I've `Program.cs` class which holds the main entry point (`public static void Main`).   Now I face a problem.   I want the game to handle its own game flow so I can: Create new GameManager class (`from BL`) but this causing the view to directly know the `BL` part. So I'm a little confused how to write it in an acceptable way. Should I use delegates? Please show me a simple example.