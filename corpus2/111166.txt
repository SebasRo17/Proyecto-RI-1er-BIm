Currently we've got a directory structure that looks like this               +Inhouse App A     +Inhouse App B     +Core files for inhouse app B     +Inhouse App C     +Something that never came to fruition     +Forgotten Server Project A     +Forgotten Common Files A     +Authentication Server     +Update Server     +Main product Version 5.5     --+[DLL1]     --+[DLL2]       ...     --+[DLLN-1]     --+[Controls]     -----+[Our Awesome Controls]     -----+[3rd party control 1]     -----+[3rd party control 2]     -----+[3rd party control 3]     --+[DLLN]     --+[Utils]     -----+[Util 1]     -----+[Util 2]        ...     -----+[Util N-1]     -----+[Util N]     +Main product Version 6.1     +Main product Version 6.2     +Fingerprint SDK           Obviously, I am covering up some ugliness of this beauty. I've got an install of VisualSVN to replace Visual 'shall not be named' and I get to the point where it says, trunk, branch and something else. and from some other posts here and on SO, I know vaguely what those are for. My question is what do I do to translate my existing file structure to the source control structure. We've give up hope of doing any meaningful import. I've tried just going head first into this already, but I feel I'm missing some key concept. For instance, should all these things be in the same repo? If they're not in the same repository, how are they going to find the files shared between the projects?