Say, I am using a simple recursive algo for fibonacci , which would be executed as:               fib(5) -> fib(4)+fib(3)                 |      |           fib(3)+fib(2)|                     fib(2)+fib(1)      and so on Now, the execution will still be sequential. Instead of that, how would I code this so that `fib(4)` and `fib(3)` are calculated by spawning 2 separate threads, then in `fib(4)`, 2 threads are spawned for `fib(3)` and `fib(2)`. Same for when `fib(3)` is split to `fib(2)` and `fib(1)` ? (I'm aware that Dynamic programming would be a much better approach for Fibonacci, just used it as an easy example here) (if someone could share a code sample in C\C++\C# as well, that would be ideal)