We're trying to come up with a way to handle code that builds dynamic SQL for our application, which is very database centric. Things like Linq to SQL and Entity Framework are out of the question, so please no suggestions of that sort, our path has been defined for us. Our main goal is seperation of the SQL from the rest of the code (business logic etc). Right now, we're thinking of using extension methods to house the SQL, and coming up with some sort of configuration object that developers can use to define how the query should be built (dictated by business logic, outside of the Extension class) So for example, I have some prototype code below. The developers would setup the Configuration Struct (as per business rules), and pass that to GetSQL.               public static class LocationSql2Extension     {              public enum SelectFields         {             Default,             DefaultAnd_Description_LocationSize         }              public enum FilterBy         {             Default,             DefaultAnd_Description         }              public enum OrderBy         {             Default,                         DefaultAnd_LocationType_LocationID_Description         }              public struct Configuration         {             public SelectFields SelectFields;             public FilterBy FilterBy;             public OrderBy OrderBy;         }                   public static string GetSQL(this LocationService2 service, Configuration config)         {                  string sqlSelectFields = string.Empty;             string sqlWhere = string.Empty;             string sqlOrderBy = string.Empty;                  if (config.SelectFields == SelectFields.DefaultAnd_Description_LocationSize)             {                 sqlSelectFields = ", Description, LocationSize";             }                  if (config.FilterBy == FilterBy.DefaultAnd_Description)             {                 sqlWhere = "WHERE L.Description = ?";             }                  if (config.OrderBy == OrderBy.DefaultAnd_LocationType_LocationID_Description)             {                              sqlOrderBy = ", L.LocationDescription";             }                  string sql = string.Format(@"                                            SELECT L.LocationType, L.LocationId                                                   {0}                                            FROM Location AS L                                            INNER JOIN GroupLoc AS GL                                            ON  L.LocationType = GL.LocationType                                                 AND L.LocationId = GL.LocationId                                                 AND GL.SecLocLevel >= 4                                                 AND GL.GroupId = ?                                            {1}                                            ORDER BY L.LocationType||L.LocationId                                            {2}                                           ", sqlSelectFields, sqlWhere, sqlOrderBy);                  return sql;              }            }      and to call the above code, we have this:               public class LocationService2     {         public string BuildSql()         {             var config = new LocationSql2Extension.Configuration();                  //TODO: Add Business Logic to drive these values             config.SelectFields = LocationSql2Extension.SelectFields.Default;             config.OrderBy = LocationSql2Extension.OrderBy.DefaultAnd_LocationType_LocationID_Description;             config.FilterBy = LocationSql2Extension.FilterBy.DefaultAnd_Description;                  return this.GetSQL(config);                          }     }      Developers would be free to setup the Enum's any way they like, and this is just a simple example. We're not comfortable with this Enum/Struct approach, and are looking for something more generic thats easy for developers to work with, but isn't so generic that it won't catch any errors at design time. This is a simple example, and we have some very large and complex queries in our system. Any suggestions?