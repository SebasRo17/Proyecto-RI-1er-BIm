Given a string variable `variable`, for example, the convention to expose it is: > public class SomeClass { >   >   >     public String variable = ""; >     public String getVariable() {return variable;} >     public void setVariable(String variable) {this.variable = variable;} >   > > } Which looks like: > class.getVariable(); // Gets "variable" > > class.setVariable("Hello"); // Sets "variable" * * * **Is the following convention considered bad style?** : > public class SomeClass { >   >   >     public String variable = ""; >     public String variable() {return variable;} >     public void variable(String variable) {this.variable = variable;} >   > > } Which looks like: > class.variable(); // Gets "variable" > > class.variable("Hello"); // Sets "variable" * * * Keep in mind that the established design pattern of fluent interface seems to suggest that one create objects using something like: > public class SomeClass { >   >   >     public String variable = ""; >   >     public SomeClass(String variable) {this.variable = variable;} >   >     public String variable() {return variable;} >     public SomeClass variable(String variable) {return SomeClass(variable);} >   > > } Which looks like: > SomeClass sc = new SomeClass().variable("Hello"); // Instantiates a new > SomeClass object with variable equal to "Hello". Evidently, the word "set" is implied in the _fluent interface_ pattern. (Yes, technically, the fluent interface returns the class instead of void when setting. This is not important.)