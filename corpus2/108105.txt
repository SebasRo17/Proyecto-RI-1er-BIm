I've been Learning `Me A Haskell For Great Good` because I thought it looked interesting. Of course, I'm completely sold on the idea that functional programming will end world hunger, bring about world peace, send crows to peck out the eyes of my enemies, bring many young women with good birthing hips to my beck and call, double my order for free, and just generally improve my life in every way, shape, and form with zero drawbacks whatsoever. I am pretty well-versed in imperative paradigms. I learned Java and C++ before I dropped out of university, after which I taught myself Python. My problem is that even beginner tutorials get way far over my head pretty quickly and I'm not sure if there's something specific I'm missing or not understanding or if I just can't quite wrap my head around the whole paradigm just yet. I made it all the way to Section 4.7 of the Haskell Tutorial for C Programmers before I couldn't understand it anymore. Am I missing something foundational (like those last two years of university)? Or should I just keep going slowly and hopefully it will click? Put another way, what information would help me best bridge the gap between an imperative paradigm and a functional paradigm?