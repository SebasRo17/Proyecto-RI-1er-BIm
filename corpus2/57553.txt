I am interested in the following question: How is it possible to check whether an algorithm is working properly? However, this question is too general for the post and I'd like to restrict attention to spectral clustering. Using the standard Gaussian similarity function found in section 2.2 of this paper http://www.kyb.mpg.de/fileadmin/user_upload/files/publications/attachments/Luxburg07_tutorial_4488%5b0%5d.pdf and setting the parameter sigma to 1 I have constructed the following code:               (*Note: Parameter sigma is denoted as epsilon*)          SpectralCluster[data_, k_, ε_]:=Module[{Similarity, Weight, Walk, LRW, Eigenvals, Eigenvecs, Kvecs},         Similarity= With[{tr = Transpose[data]},Function[point, Exp[-Sqrt[Total[(point-tr)^2]]/ε]] /@data];     Weight = DiagonalMatrix[Total /@ Similarity];     Walk = Inverse[Weight].Similarity;     LRW = IdentityMatrix[Length[Similarity]] - Walk;     {Eigenvals, Eigenvecs} = Eigensystem[LRW];     Kvecs = Take[Eigenvecs, k];     ClusteringComponents[Kvecs, k, 1, Method ->"KMeans",DistanceFunction->SquaredEuclideanDistance]]      Before testing the algorithm I generate the following data:               x1=RandomVariate[MultinormalDistribution[{2, 0},{{1, 0},{0, 8}}],25];     x2=RandomVariate[MultinormalDistribution[{4, 0},{{1, 0},{0, 8}}],25];     x3=RandomVariate[MultinormalDistribution[{6, 0},{{1, 0},{0, 8}}],25];     x4=RandomVariate[MultinormalDistribution[{8, 0},{{1, 0},{0, 8}}],25];     pts=Join[x1,x2,x3,x4];     ListPlot[pts]      ![enter image description here](http://i.stack.imgur.com/1cSOK.jpg) Now I input the data               SpecCluster = SpectralCluster[pts, 4, 1]     ListPlot[{pts, SpecCluster}]      and output               {1,2,3,4}      ![enter image description here](http://i.stack.imgur.com/6DNkl.jpg) I've run the algorithm on a few different sets of data (not always generated from the Multinormal Distribution) and always return a set of increasing integers.