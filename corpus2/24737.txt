Starting with a vector of matrices, `tVec`, I would like to parallelize the multiplication of each element with the same matrix `tMat`. However, employing `Parallelize` yields by far slower results than the plain calculation with a single kernel. There is a minimal working example below. Does anybody have hints on how to improve the situation, and on how to resolve this and thus efficiently use all kernels for evaluation?               dim = 24;     tVec = Table[RandomReal[{}, {dim, dim}], {i, 1, 100000}];     tMat = RandomReal[{}, {dim, dim}];          DistributeDefinitions[tMat, tVec];          Timing[(tMat . #) & /@ tVec;]     (*     >>> {1.08807,Null}     *)          Timing[Parallelize[(tMat . #) & /@ tVec;]]     (*     >>> {11.6207,Null}     *)