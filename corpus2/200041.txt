When forming opinions, it is a good practice to follow scholastic tradition - think as hard as you can _against_ the opinion you hold and try to find counter-arguments. However, no matter how hard I try, I just cannot find reasonable arguments in favor of antivirus (and related security measures) on development machines. Arguments against antivirus(AV) in development are plentiful:   1. It is not uncommon for 1 minute build to take 10 times longer with AV on   2. In a conference talk, IntelliJ developers claim AV software is #1 suspect when their IDE is sluggish   3. Unzipping comes with roughly 100 kb/s speed with AV on   4. AV renders Cygwin completely unusable (vim takes 1 minute to open a simple file)    5. AV blocks me from downloading useful files (JARs, DLLs) from colleagues' e-mails   6. I can't use multiple computers for development, since AV / security measures prevent me from unblocking ports   7. AV kills performance of programs with high file turnover, such as Maven or Ant Last, but not least - what does AV actually protect me from? I am not aware of my AV program ever stopping any security thread. If the reason is fear of disclosing NDA stuff - no AV can possibly prevent me from doing it if I set my mind to it. If the reason is fear of losing source code and/or documentation - there are distributed revision systems for this (there are at least 20 copies of our repo and we sync on daily basis). If the reason if fear of disclosing customer data - developers rarely work connected to real production databases, instead they are playing around in toy environments. Even if there are meaningful arguments in favor of having AV on development machines, they fall apart when faced with the ability to run a Virtual Machine in your paranoidly protected environment. Since I want to keep an open mind of the issue, could anyone present meaningful, strong argument in favor of Anti-virus software for developers?