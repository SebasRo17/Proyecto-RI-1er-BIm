I have the following:               samplePoints = Range[0.0,6.0,1/60.0];     noiseFunction = Function@@{{t},Total[Sin[RandomReal[{\[Omega]s,188.0},12]t]],        {Listable}};     signalFunction = Function[{t},(36(1-E^(-2 t))+        (3*Sin[54*t]+4Sin[35.1*t]))Piecewise[{{E^-((0.5t-2)^2),t<4},{1,True}}],      {Listable}];     inputSignal = signalFunction@samplePoints + noiseFunction@samplePoints      How would one use KalmanFilter or KalmanEstimator to do a good job of suppressing the high frequency noise in (inputSignal). I am not interested in forecasting ahead. I want to estimate the latest sample of signalFunction from the most recent and previous points from (inputSignal). EDIT This figure is a close up of some of the samples. ![enter image description here](http://i.stack.imgur.com/PcEbS.jpg) The noisy points are in red and the single without noise is black. I am trying to simulate a situation where I have the noisy points, and get a good approximation of the black points (without noise).