It seems to me that many bigger C++ libraries end up creating their own string type. In the client code you either have to use the one from the library (`QString`, `CString`, `fbstring` etc., I'm sure anyone can name a few) or keep converting between the standard type and the one the library uses (which most of the time involves at least one copy). So, is there a particular misfeature or something wrong about `std::string` (just like `auto_ptr` semantics were bad)? Has it changed in C++11?