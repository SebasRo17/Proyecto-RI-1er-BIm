In some data entry contexts, I've seen data typists, type really fast and know so well the app they use, and have a mechanic quality in their work so that they can "type ahead", ie continue typing and "tab-bing" and "enter-ing" faster than the display updates, so that in many occasions they are typing in the data for the next form before it draws itself. Then when this next entry form appears, their keystrokes fill the text boxes and they continue typing, selecting etc. In contexts like this, this speed is desirable, since this persons are really productive. I think this "type ahead of time" is only possible in desktop apps, but I may be wrong. My question is whether this way of handling the keyboard buffer (which in desktop apps require no extra programming) is achievable in web apps, or is this impossible because of the way web apps work, handle sessions, etc (network latency and the overhead of generating new web pages ) ? **Edit:** By "type ahead" I mean "keyboard type ahead" (typing faster than the next entry form can load), not suggets-as-you-type-like-google type ahead. > Typeahead is a feature of computers and software (and some typewriters) that > enables users to continue typing regardless of program or computer > operationâ€”the user may type in whatever speed he or she desires, and if the > receiving software is busy at the time it will be called to handle this > later. Often this means that keystrokes entered will not be displayed on the > screen immediately. This programming technique for handling user what is > known as a keyboard buffer.