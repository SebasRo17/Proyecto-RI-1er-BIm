I'm a web developer. I feel like I develop less resource-intensive functionality often times, because I have this feeling that if I ask too much of the web app (animation, calculation, connections, etc), it will get lagged for users with slower computers. I've been curious for a while now about just how much difference there is in the capability (resource allocation) of a web (interpreted) app vs a compiled one. Also, I've heard that interpreted (JS, for example) programs are very inefficient and resource-hungry in comparison to compiled ones (C++, for example). Google's V8 JS Engine is said to make JS faster, but I still see people talk about JS being much less efficient than C++. * * * The reason that I ask this question is to separate fact from biased opinion.   * Is there a difference in available CPU & RAM between a web app and a compiled one?    * Is there a large efficiency difference between a program written in (an interpreted language) JS versus one written in (a compiled language) C++? * * * Edit: I realize that we are comparing apples and oranges here. There are some really well-defined aspects of choosing between C++ (anything compiled) and JavaScript (web) when developing a client application, and this is one side aspect of that decision that I would not want to be misinformed about if it were to come up at any point in my career.