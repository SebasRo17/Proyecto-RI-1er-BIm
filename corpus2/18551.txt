I'm an artist, mostly, though I describe myself as a artist/physicist. While I can do math, deal with words, and the "logical" stuff considered left-brain, it's an effort and I make mistakes, whereas I do well with and most of the time think in terms of those things associated with right-brain thinking - spatial relations, holistic big-picture context, etc. Of course all that is fuzzy, as the right-left brain theory is oversimplified and no mental activity is so simple. Yet I do sense that I fit in fine with artists, video directors, chefs, and other non-verbal thinking, creative types, while most people in "IT" or hardcore software engineers have minds that work differently, with attention to detail, holding many details in mind at one time, and strong rational and verbal capabilities. So here I am in a job being paid to fix fussy and obscure bugs in a massive swarm of C++ software, very heavy on OO, and any one line of code makes no sense unless I hold in mind about twenty other class and method names, relations between them, the flow of execution (very spaghetti-like) and other detail. Besides that, I'm also rather strongly against much of contemporary C++ and OO styles. Those who wrote this code really drank the deep OO and Modern C++ kool-ade. I find it actually makes code much harder to follow, much harder to decide where to fix or change something. I don't know if this is part of the left/right differnce (or whatever you want to call it) or not. But work on the C++ I must - people depend on me for my income. What are tips and techniques to deal with this situation, to be as effective as possible for my employer?