Let's say you need to implement a new programming language and BCL designed specifically for operating in the cloud (it won't be used on client machines ever). It should be optimized for cloud computing; easy to learn, fast, efficient, powerful, modern. What it would look like? What would be it's major differences from C#, Java, Ruby, Python, JavaScript? How would it's BCL (base class library) differ from let's say the one in .NET Framework 4.0? .. The same way Silverlight BCL was built for in-browser/multi-platform use, a totally new BCL should be build for a cloud, don't you think so? .. As JÃ¶rg W Mittag mentioned, a programming language created exclusively for a cloud can have it's own advantages over traditional programming languages. For example this language may evolve without breaking existing applications, let's say you rename a method / change it's signature / or move it to another namespace, all the applications in the cloud will be automatically updated to reflect that change. .. Theoretically C# 5.0 could become such a language with it's complier as a service feature. But that still won't eliminate a need for a dedicated BCL for the cloud.