I am trying to set up a system of 400*N equations to deconvolute spectral data for four different compounds. I monitored 400 different wavelengths in N solvents (3 solvents in this case). In order to do this, I want to try to minimize the following function: $A_{\lambda_i, N_i} - (\epsilon_{1 (\lambda_i, N_i)}C_1 + \epsilon_{2 (\lambda_i, N_i)}C_2 + \epsilon_{3 (\lambda_i, N_i)}C_3 + \epsilon_{4 (\lambda_i, N_i)}C_4 = 0 $ Here $A$ is the absorbance of the spectrum I want to deconvolute at specified wavelength ($\lambda$) in solvent ($N$).   $\epsilon$ is the molar extinction coefficient for each different compound that corresponds to the absorbance at the given wavelength and solvent. Then unknown quantities are $C_1$ to $C_4$ https://drive.google.com/folderview?id=0B5gGZ4-SD7-ZdHFveVY5b2J3OTQ&usp=sharing My data is organized as follows. Each row has 5 entries and I have 400 rows one (for each wavelength) [$A \; \epsilon_1 \; \epsilon_2 \; \epsilon_3 \; \epsilon_4$] Each solvent has a table organized just like this one. How do I used mathematica to set up this system of equations and get the error associated with the minimization? Also, the solution needs to be constrained such that C$_n$ is positive. Import the data (uploaded on google drive)               phosBB = Import["/home/marco/LatexDocs/analytical/uvvis/PHOS_BB.CSV"];     phosMR = Import["/home/marco/LatexDocs/analytical/uvvis/PHOS_MR.CSV"];     phosPT = Import["/home/marco/LatexDocs/analytical/uvvis/PHOS_PT.CSV"];     phosTB = Import["/home/marco/LatexDocs/analytical/uvvis/PHOS_TB.CSV"];     phosUI = Import["/home/marco/LatexDocs/analytical/uvvis/PHOS_UI.CSV"];      PreProcess data to get rid of headings:               phosBB = Delete[phosBB, 1];     phosMR = Delete[phosMR, 1];     phosPT = Delete[phosPT, 1];     phosTB = Delete[phosTB, 1];     phosUI = Delete[phosUI, 1];      Calculate $\epsilon$ from the known solutions (BB-TB):               \[Epsilon]PhosBB = phosBB[[All, 2]]/concPhosBB;     \[Epsilon]PhosMR = phosMR[[All, 2]]/concPhosMR;     \[Epsilon]PhosPT = phosPT[[All, 2]]/concPhosPT;     \[Epsilon]PhosTB = phosTB[[All, 2]]/concPhosTB;      Setup data table [$A_{unk} \; \epsilon_1 \; \epsilon_2 \; \epsilon_3 \; \epsilon_4$]               phosDataTable =        Transpose[{phosUI[[All, 1]], \[Epsilon]PhosBB, \[Epsilon]PhosMR, \[Epsilon]PhosPT, \[Epsilon]PhosTB}];