Second attempt to ask my question more concisely. I want to say I am a Scala fan, or at least I want to be. I've resigned myself to learning one of these functional languages [Scala, Haskell, Erlang]. I've dabbled in all of them, far and away I have spent the most time trying to understand Scala. I've honestly used the tutorials for Haskell and Erlang more as a tool for greater understanding in Scala. I do believe that I have on some level an understanding of the basics. But, the reason why I thought I wanted to go with Scala is proving to be the most fustrating ... The verboseness of most Java libraries are ... umm yeah, SNMP4j makes me want to rip my hair out. So here we go, does anyone know of a site or tutorial similar to "Write Yourself a Scheme in 48 hours." Something that really shows how you go from concept to working project including interpreting some third party libraries. Or is Scala truthfully just a better Java? Meaning that it's best to learn Java before attempting Scala. * * * I didn't mean to infer that Scala wasn't a language in it's own right. On the contrary, I feel that it is a very good language; however, the bill of sale for Scala _IS_ that it is better at Java than Java. So I am really trying to answer for myself how viable it is to learn Scala, while I really don't have much of an interest in learning a lot of Java. I want to use the libraries since there is the biggest advantage, as perceived by some, in using Scala. If some of these library implementations are so 'complex' that they require, not just are best benefited by, having a good grasp of Java programming idioms, then I would like to know that I've been approaching this problem from the wrong direction. I realize there are some good examples of some libraries that have been 'scalifed' or what have you.