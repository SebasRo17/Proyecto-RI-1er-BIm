I am thinking of managing a product source I am doing using Codeigniter + HMVC. Right now my folder structure is something like this:               application       |-modules           |-module1           |  |--controllers           |  |--models           |  |--views           |-module2           |  |--controllers           |  |--models           |  |--views     assets       |-themes          |-default            |-module1            |  |-- module1 theme files            |-module2            |  |-- module2 theme files      I am thinking of cleaning this up and making the modules self contained at development time, like this               application      |-- this will only contain the core files ()      |--modules (an empty directory OR core modules)     modules       |-module1       |  |-controllers       |  |-models       |  |-themes       |  |  |-default       |  |  |  |-module1 default theme files       |  |-assets       |  |  |-css (css files for just this module)       |  |  |-js (js files just for this module)       |-module2       |--//same as above      And then use Phing to build the project during which, the modules will be copied to respective folders, css files and js files will be minified (SCSS compiled) and images copied to respective folders. This looks great for deploying changes, but I think it will just increase development time, as every time I make any changes, I will have to build even to see it in development. Have any one used this approach to development using CI? or even better? I want to keep my core core more trackable and separate the modules for better version controlling, as I will be able to add those modules to the project as sub projects.