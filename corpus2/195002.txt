I was recently asked as an exercise to design a scalable graph. My first intuition was how to seperate the graph and distribute it (sharding,consistent hashing..etc) Turns out my thinking was on the wrong line, I know what scalability is, but it seems it is a bit hard to think about it pragmatically. What is the pragmatic way of thinking about scalability. I know I need high- availability, replication, fault tolerance, but what are some of the common patterns/paradigms needed to implement these key points?