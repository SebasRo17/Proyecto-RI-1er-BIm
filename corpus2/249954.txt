**TL;DR** This questions is about which algorithm(s) can be used for a certain use-case explained below. * * * Imagine this situation in a project management system (Agile-based):               Developers     - John     - Suzy          Testers     - John     - Katy      So John is in both teams. Let's say there are also two simultaneous projects:               Project 1     - Task 1 (2 hours) - Testers     - Another task (4 hours) - Developers     - Last task (2 hours) - Suzy          Project 2     - Some task (4 hours) - John     - Another task (2 hours) - Testers     - Also a task (4 hours) - Katy      Let's say available hours are defined for each person:               John: 8 hours     Katy: 4 hours     Suzy: 10 hours      Now I want to calculate the optimal workload for each person / team. This is being complicated by the fact that persons can be in more than one team and the fact that tasks can be assigned to both teams and individuals. A useful outcome of this could be the following example stats:               John: 150% workload     Katy: 150% workload     Suzy: 60% workload      This can be used for fine-tuning the amount of tasks within one sprint to fit a certain time period. * * * Does anyone know an algorithm that is made for this kind of problem?