To my knowledge, `DiscretePlot` cannot be parallelized, although one can simulate the default behavior of `DiscretePlot` and get the benefits of parallelization with a combination of `ListPlot` and `ParallelTable`. For example.               f[x_]:=(Pause[0.5];x^2);     DiscretePlot[f[x], {x, 0, 2, 0.2}] // AbsoluteTiming      ![Mathematica graphics](http://i.stack.imgur.com/lPOfX.png)               ListPlot[ParallelTable[{x, f[x]}, {x, 0, 2, 0.2}],        Filling -> Axis] // AbsoluteTiming      ![Mathematica graphics](http://i.stack.imgur.com/FmRyo.png) The problem with this alternative is that we lose access to several useful `DiscretePlot` options: `ExtentMarkers`, `ExtentSize` and `ExtentElementFunction`. How can we simulate the behavior of these options in `ListPlot` so that we may preserve the benefits of parallelization?