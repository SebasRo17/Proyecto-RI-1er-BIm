I'm interested in things a programmer should learn/know to provide extremely good application architecture design. As known any design can be regarded as good one for certain circumstances but when it comes to extending app feature set or providing some optimization and etc. it turns out that app was poorly designed or lacks some abstraction. How to be able to predict and include such stuff into app design? And from the other hand, software is here to be robust, efficient and fast. And it's main purpose from some point of view is to bring money (by saving or gaining them). So if one goes deep with abstraction and considered certain stuff that will be needed in 2 or more years, he's not going to end up with good app architecture (he's gonna have lots of unnecessary stuff). So how to understand to which extent certain stuff in app architecture is needed? Hope I made myself clear, else please comment on vague parts.