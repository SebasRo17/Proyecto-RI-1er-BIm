I have been investigating on the viability of a "normal" programming language with dependent types. Think for example in Java and add dependent types to it. One difficulty which I have found is that the type of a variable may change when mutated, like in the following piece of pseudo-code:               let xs = [1, 2, 3]; // The type of xs is List<int, 3>     let ys = [4, 5];    // The type of ys is List<int, 2>     xs.concat(ys);      // We concatenate the lists, so the type of xs is now List<int, 5>      This becomes a problem when we mutate a variable inside an `if` statement:               let xs = [1, 2, 3]; // The type of xs is List<int, 3>     if random_bool {         xs.push(4);     // The type of xs is List<int, 4>     }     // The type of xs is unknown, because random_bool is set at runtime      Is there any research on this topic? Is it possible to address this issue without renouncing to mutability?