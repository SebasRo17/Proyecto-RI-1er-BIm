> **Possible Duplicate:**   >  When is Singleton appropriate? Ok, most people probably know what a singleton is, use them, and know all the drawbacks including race conditions and so on. But what I never really figured out, is why people still use them, and why they are so popular, when the implementation is actually usually error prone or complex. Double locked constructors and so on. Because it seems that even in large projects, it's not really that often when you have an object that should be created only once, and if there is, there seem to be easier ways to achieve it. Has anyone actually been a situation where singleton cruft made their lives easier for the rest of the project?