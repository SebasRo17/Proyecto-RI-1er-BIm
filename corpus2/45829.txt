I'm new to Mathematica, I've been learning by myself, and, being a Java developer for some time, it makes it hard to adapt. I've tried to solve a Reddit challenge, and I came up with this solution:               str = "[can {and it(it (mix) up)} look silly]"     total = ""     str = StringTake[str, {2, -2}]     inix[strn_] :=        Min[StringPosition[strn, "["], StringPosition[strn, "{"],        StringPosition[strn, "("]];     finix[strn_] :=        Max[StringPosition[strn, "]"], StringPosition[strn, "}"],        StringPosition[strn, ")"]];         howmany[strn_] :=        Length[StringPosition[strn, "["]] +        Length[StringPosition[strn, "{"]] +        Length[StringPosition[strn, "("]];     brackets[x_, y_] :=        If[x != \[Infinity], (total =           StringTake[str, {1, x - 1}] <> " " <>           StringTake[str, {y + 1, -1}] <> " " <> total;           str = StringTake[str, {x + 1, y - 1}]) ,           (total = str <> " " <> total; str = "")];          Do[brackets[inix[str], finix[str]], {i, howmany[str] + 1}];     StringSplit[total, Whitespace]     StringJoin[Riffle[%, " "]]      Is there a better solution? From seeing some Mathematica code, this looks to be terribly big code. I would want just some pointers on how to improve.