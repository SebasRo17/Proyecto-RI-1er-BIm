In Don Norman's seminal work "The Design of Everyday Things", the author coined the phrases and explains the difference between "Knowledge in the World" and "Knowledge In Your Head"; an example of this is a multi-switch light panel that can either incorporate "Knowledge in the World" by being a model/map of the room, with the switches in the corresponding location, or "Knowledge In Your Head" (which is how they are almost always designed/implemented) when you have to memorize which switch toggles which light. You could think of "Knowledge in the World" as something you can deduce by using observation and logic, and "Knowledge in your Head" as something that has to be memorized. In the world of DI, and "Auto-Registration," which relies on the "Convention Over Configuration" pattern, would using this process be a case of the programmer using "Knowledge in the World" (the functionality is expected, as the framework provides it) or is it "Knowledge In Your Head" (the programmer has to be aware of and learn the convention). I am taking the wishy-washy/middle-of-the-road view that Convention Over Configuration is a midway world twixt the two. Am I wrong?