Although `BoundedDiagram` function worked well for a small data set, I got errors in a specific case that I cannot explain. I am sorry I am pasting here a large list but you could not verify it otherwise:               Needs["ComputationalGeometry`"];          data2D = {{0., 0.1846}, {-0.1846, 0.}, {0., -0.1846}, {0.1846, 0.}, {0.4189,0.2418},                {0.2418, 0.4189}, {0., 0.4837}, {-0.2418, 0.4189}, {-0.4189, 0.2418},                {-0.4837, 0.},{-0.4189, -0.2418}, {-0.2418, -0.4189}, {0., -0.4837},               {0.2418, -0.4189}, {0.4189, -0.2418}, {0.4837, 0.}, {0.8455, 0.},                {0.8041, 0.2613}, {0.684, 0.497}, {0.497, 0.684}, {0.2613, 0.8041},               {0., 0.8455}, {-0.2613, 0.8041}, {-0.497, 0.684}, {-0.684, 0.497},               {-0.8041, 0.2613}, {-0.8455, 0.}, {-0.8041, -0.2613}, {-0.684, -0.497},                {-0.497, -0.684}, {-0.2613, -0.8041}, {0., -0.8455}, {0.2613, -0.8041},                {0.497, -0.684}, {0.684, -0.497}, {0.8041, -0.2613}, {1.2923, 0.},                {1.2599, 0.2876}, {1.1643, 0.5607}, {1.0103, 0.8057}, {0.8057, 1.0103},               {0.5607, 1.1643}, {0.2876, 1.2599}, {0., 1.2923}, {-0.2876, 1.2599},                {-0.5607, 1.1643}, {-0.8057, 1.0103}, {-1.0103, 0.8057}, {-1.1643, 0.5607},               {-1.2599, 0.2876}, {-1.2923, 0.}, {-1.2599, -0.2876}, {-1.1643, -0.5607},                {-1.0103, -0.8057}, {-0.8057, -1.0103}, {-0.5607, -1.1643}, {-0.2876, -1.2599},                {0., -1.2923}, {0.2876, -1.2599}, {0.5607, -1.1643}, {0.8057, -1.0103},                {1.0103, -0.8057}, {1.1643, -0.5607}, {1.2599, -0.2876}};      You can see in               ListPlot[data2D, AspectRatio -> 1, PlotStyle -> PointSize[Large]]      and in               DiagramPlot[data2D]       that the `Voronoi` Areas appear clear. But when using               BoundedDiagram[{{-4, -4}, {4, -4}, {4, 4}, {-4, 4}}, data2D]      I get errors like : > Solve::svars: Equations may not give solutions for all "solve" variables. > > BoundedDiagram::nobd: Bounded diagram failed. If I limit the data set I get correct results (but not always):               BoundedDiagram[{{-4, -4}, {4, -4}, {4, 4}, {-4, 4}}, data2D[[1 ;; 10]]]      Notice that `VoronoiDiagram[data2D]` produces the correct `Voronoi` data. Can anybody explain why this is happening or is it a _Mathematica_ bug ? **Solution** Following Belisarius' advice, I am rolling my own algorithm. Actually I used `VoronoiDiagram` function (why invent the wheel?). I used a circular bound (of radius 1.5) that seems more appropriate for my application.               v = VoronoiDiagram[data2D];          intersection[ray_, radius_] :=       Module[{start = ray[[1]], end = ray[[2]], sx, sy, ex, ey, l},         {sx, sy} = start; {ex, ey} = end;         l =            (sx*ex + sy*ey + Sqrt[(sx*ex + sy*ey)^2 - (ex^2 + ey^2) (sx^2 + sy^2 - radius^2)])/             (ex^2 + ey^2);         start + l*(end - start)];          {vorvert, vorval} =       {Table[          If[Head[v[[1, i]]] === Ray,             intersection[v[[1, i]], radius = 1.5],             v[[1, i]]],           {i, 1, Length[v[[1]]]}],        v[[2]]};          DiagramPlot[data2D, vorvert, vorval]      ![enter image description here](http://i.stack.imgur.com/WOrTt.jpg) I welcome any improvement - addition.