Suppose I have distinct classes that have the same behavior, which can be represented like this:               public interface Behavior {         void operationA();     }          public class ImplementerA implements Behavior {         public void operationA() {              }     }          public class ImplementerB implements Behavior {         public void operationA() {              }     }      But `ImplementerA` and `ImplementerB` are used by distinct clients; `ClientA` only uses `ImplementerA` and `ClientB` only use `ImplementerB`; other than these, there are no other clients for `ImplementerA` and `ImplementerB`. In this scenario, does the interface `Behavior` have any purpose? Should it be created because maybe future requirements changes...