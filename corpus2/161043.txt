I was experimenting with new overloaded operators, I have created one void operator and another one that returns something when it's called:               #include <iostream>          struct chichachicha{         int operator()(){             return 25;         };     };          struct boomboom{         void operator()() {             std::cout << "Hi folks!" << std::endl;         };     };          int main(){         chichachicha objC;         int f = objC();         std::cout << f << std::endl;         boomboom objB;         objB();         return(0);     }      Is this the best way to write a code that does that? How can I write an operator that can be called from anywhere in the code without instantiating the associated struct, that returns `void`/nothing and only prints a string of text? I'm not considering static methods, just operators.