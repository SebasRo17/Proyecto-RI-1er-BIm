I need to create a string using the following algorithm:   1. Generate a GUID as a byte array.   2. Convert that GUID to a string.   3. From this string, get the UTF-8 encoding as a byte array.   4. From this byte array, hash those bytes to another byte array.   5. From this byte array, get the base64 encoding as a string.   6. Append a string constant to this string. What design pattern(s) would I use? I am thinking builder and/or chain-of- responsibility, although I am not sure I would handle the changing between string and byte array types. **UPDATE:** I am programming in an object-oriented language (C++, Java, C#). The encoding of UTF-8 may change in the requirements, as well as the hashing algorithm in step 4. I am asking about design patterns to adapt for a change in requirements.