I am trying to solve complicated inequalities using `Reduce`, in order to determine whether certain mixed equilibria in game theory are stable. My first question regarding this function is the following: I noticed that `Reduce[expr, {p,e1,e2,e3},Reals]` is, in fact, substantially slower than `Reduce[expr,Reals]` - at least, in my case. I have attached the following .nb to illustrate the problem (https://dl.dropboxusercontent.com/u/118904317/GameTheory.nb). The expressions are too long to copy the code here. Please look at the difference between `myConditionsReduced` and `myConditionsReducedb`. Can someone explain why it is the case that the second option is faster? What is the fundamental difference, and can someone explain whether the result obtained using the faster option is just as good? My second question refers to the combined use of `FullSimplify` and `Reduce`. I originally figured putting the `expr` into `FullSimplify` before putting it into `Reduce` would speed things up. This is not always true, as can be seen by comparing `myConditionsReduced` and `myConditionsReducedc` in my attached notebook. Can someone explain why `FullSimplify` sometimes works well for reducing inequalities, and why it sometimes only slows things down? Thank you, Laurens PS. I have not been able to reach the end of my notebook in terms of evaluation. The final line doesn't produce an output, even after 1 hour for me. If you know a way to make things more efficient, thank you for helping me out.