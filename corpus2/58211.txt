I feel like this should be simple, but I keep running into walls. Say someone gives you the coordinates of the vertices of a pentagon and the center point of the hexagon. Is there any way to get an "ordered" list of the boundary points? Let me try to put this in a picture. For instance, if someone gave me a list `{+,m,\pi,[],2}` plus the center point C, and I plot it and find                                  2                      m              +                        C                         []     \pi      Is there anyway I can extract the list: `{2,+,\pi,[],m}` up to cyclic permutation? Ideally I would like to be able to differentiate orientations, clockwise vs counterclockwise, but I don't really care about cyclic permutation. Thanks for any help in advance! Big CRUCIAL edit: Thanks everyone for your help, I have been trying lots of suggestions, but I let out a crucial element in all of this. **My points are in 3D!** It seems to me that all of these routines, ConvexHullMesh, FindCurvePath, etc. all work with **2D** coordinates. I was thinking about trying to project onto a plane perpendicular to the central point, since I know the center, but that might be too lengthy. * * * Here are the points: Center:               {0.951057,-0.309017,0.}      Neighbors:               {{0.723607, -0.525731, -0.447214}, {0.850651, 0., -0.525731}, {0.894427, 0., 0.447214},       {0.951057, 0.309017, 0.}, {0.587785, -0.809017, 0.}, {0.688191, -0.5, 0.525731}}