Is it ok to have subclass which does not declare its own variables (instance variables) and inherits from super class or base class? It has methods and there are some common methods which it overides but do not have variables of its own. Is it ok to have subclasses which defines behavior only or I am missing something? I want to divide in subclasses to separate logic of my classes. I have `Medication` class and I want to subclass to `DailyMedication` , `WeeklyMedication` but I have all my instance variable in `Medication` as I do not have any specific for these classes. I want to make subclasses to divide logic as I have too much if conditions in my code.               MedicationEntity     name     dose     weekdays    //in case of daily and monthly this is null      monthdays   //in case of weekly and daily this is null     frequencyType  //Daily or weekly or monthly     etc      EDIT: I want to make subclasses because these all classes have diffrent logic.I have enum of `frequency`(for Daily,Weekly etc) in my `Medication` class and this makes worse as i have to put all the checks in my code for these frequency type as if frequency is that than do that and if daily than do that as now i want to remove these switch conditions. 1)Also please suggest any good idea as weekdays is null if frequency is daily or monthly.But i need to send null to server.So where i can put weekdays if i subclass as it is not null only in case of weekly frequency but as i have to send null to server in request for all other frequencies.Should i put `weekdays` in subclass if yes than how i send null to server if frequency is daily as `DailyMedication` have no information about `weekdays`.