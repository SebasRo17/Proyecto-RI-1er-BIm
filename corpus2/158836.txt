I am well aware of best practices for storing user passwords:   * Never store passwords in plaintext   * Never store encrypted passwords; always store password hashes   * Always salt your password hash to deter brute force attacks   * Always use unique salts to deter attacks using rainbow tables. However, I have recently came upon on a potentially legitimate use case for keeping plaintext (or plaintext-accessible encrypted) user passwords: fraud detection. For example, if we have a system that needs to restrict purchases to 1 (or a small number) per person, we have observed that fraudsters often use the same password over and over, so if we have detected fraudulent purchases on one account, we can use the fact that password matches as a useful signal in a fraud detection system. But implementing such a system requires breaking all the best practices for password storage. Question: **If it is determined that the fraud-detection ability of being to retrieve passwords is necessary, what are the best practices for storing passwords securely but in a way that is plaintext-accessible?**