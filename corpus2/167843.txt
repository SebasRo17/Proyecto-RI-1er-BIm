I don't have any question related to coding. My concerns are about embedded systems programming independent of any particular programming language. Because I am new in the realm of embedded programming, I would quite appreciate responses from those who consider themselves experienced embedded systems programmers. I basically have 2 questions.   1. Of the design patterns listed below are there any seen frequently in embedded systems programming?      * Abstraction-Occurrence pattern     * General Hierarchy pattern     * Player-Role pattern     * Singleton pattern     * Observer pattern     * Delegation pattern     * Adapter pattern     * Facade pattern     * Immutable pattern     * Read-Only Interface pattern     * Proxy pattern   2. As an experienced embedded developer, what design patterns have you, as an individual, come across? There is no need to describe the details. Only the pattern names would suffice. Please share your own experience. I believe the answers to the above questions would work as a good starting point for any novice programmers in the embedded world.