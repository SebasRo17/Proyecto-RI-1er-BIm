If I'm using a switch statement to handle values from an enum (which is owned by my class) and I have a case for each possible value - is it worth adding code to handle the "default" case?               enum MyEnum     {         MyFoo,         MyBar,         MyBat     }          MyEnum myEnum = GetMyEnum();     switch (myEnum)     {         case MyFoo:             DoFoo();             break;         case MyBar:             DoBar();             break;         case MyBat:             DoBat();             break;         default:             Log("Unexpected value");             throw new ArgumentException()      }      I don't think it is because this code can never be reached (even with unit tests). My co-worker disagrees and thinks this protects us against unexpected behavior caused by new values being added to MyEnum. What say you, community?