I'm trying to understand the differences between a traditional interpreter, a JIT compiler, a JIT interpreter and an AOT compiler. An interpreter is just a machine (virtual or physical) that executes instructions in some computer language. In that sense, the JVM is an interpreter and physical CPUs are interpreters. Ahead-of-Time compilation simply means compiling the code to some language before executing (interpreting) it. However I'm not sure about the exact definitions of a JIT compiler and a JIT interpreter. According to a definition I read, JIT compilation is simply compiling the code _just_ before interpreting it. So basically, JIT compilation is AOT compilation, done right before execution (interpretation)? And a JIT interpreter, is a program that contains both a JIT compiler and an interpreter, and compiles code (JITs it) just before it interprets it? Please clarify the differences.