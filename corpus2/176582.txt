This has become a large frustration with the codebase I'm currently working in; many of our variable names are short and undescriptive. I'm the only developer left on the project, and there isn't documentation as to what most of them do, so I have to spend extra time tracking down what they represent. For example, I was reading over some code that updates the definition of an optical surface. The variables set at the start were as follows:               double dR, dCV, dK, dDin, dDout, dRin, dRout     dR = Convert.ToDouble(_tblAsphere.Rows[0].ItemArray.GetValue(1));     dCV = convert.ToDouble(_tblAsphere.Rows[1].ItemArray.GetValue(1));     ... and so on      Maybe it's just me, but it told me essentially nothing about what they represented, which made understanding the code further down difficult. All I knew was that it was a variable parsed out specific row from a specific table, somewhere. After some searching, I found out what they meant:               dR = radius     dCV = curvature     dK = conic constant     dDin = inner aperture     dDout = outer aperture     dRin = inner radius     dRout = outer radius      I renamed them to essentially what I have up there. It lengthens some lines, but I feel like that's a fair trade off. This kind of naming scheme is used throughout a lot of the code however. I'm not sure if it's an artifact from developers who learned by working with older systems, or if there's a deeper reason behind it. **Is there a good reason to name variables this way, or am I justified in updating them to more descriptive names as I come across them?**