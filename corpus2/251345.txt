I've read on stackoverflow explicit warnings against using eval() to create objects. The reason that seems to be given is that malicious code could be injected and blindly created objects could compromise a system. Isn't this malicious-intent argument invalidated by the consenting-adult argument, though? Some sample code:               class Test(object):         def __init__(self, vala, valb, valc):             self._vala = vala             self._valb = valb             self._valc = valc              def __repr__(self):             return "<Test(vala={0}, valb={1}, valc={2})>".format(self._vala, self._valb, self._valc)               testlist = [dict(cls="Test", vala="this is vala", valb="this is valb", valc="this is valc"), dict(cls="Test", vala="this is vala II", valb="this is valb II", valc="this is valc II")]          mytestobjects = []          for test in testlist:         newobj = eval(test['cls'])(**{key: value for key, value in test.items() if key != "cls"})         mytestobjects.append(newobj)          print(mytestobjects)