I was recently faced with the task of creating a DensityPlot with a logarithmic colour scale, and with providing it with an appropriate legend. Since I could not find any resources to this effect on this site, I'd like to document my solution here. For definiteness, suppose that I want a plot of the function $$ f(x,y)=\mathrm{sinc}^2(x)\mathrm{sinc}^2(y)=\frac{\sin^2(x)\sin^2(y)}{x^2y^2}, $$ which is the diffraction pattern of a square aperture, over a box of side 20. The problem with such a function, and the reason a logarithmic scale is necessary, is that the function has lots of detail over a wide range of orders of magnitude of $f$. Thus, doing a naive `DensityPlot` of it will produce either whited-out parts with a sharp boundary with the region where the contrast is acceptable, or one bright spot and lots of detail completely lost: ![enter image description here](http://i.stack.imgur.com/hoDKf.png) (Images produced by               DensityPlot[Sinc[x]^2 Sinc[y]^2, {x, -20, 20}, {y, -20, 20},     ColorFunction -> ColorData["DeepSeaColors"], PlotPoints -> 100, PlotRange -> u]      for `u` set to `Automatic` and `Full` respectively.) Because of this, and particularly for plotting a function that has a zero, any solution to this problem must take as arguments the minimum and the maximum values of the range of interest. That range of interest is intrinsically hard- to-impossible for an automated range finder to obtain, so I'm OK with having to supply those values by hand. * * * To give a more concrete example of what the goal is, let me nick the final image from my answer: ![](http://i.stack.imgur.com/7VvVB.png)