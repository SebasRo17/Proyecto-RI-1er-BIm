I intend to add a node and an edge to a RandomGraph when clicking on one of its existing nodes and drag the newly generated node to a new position. However, there always an extra node left behind at the clicked node. What is wrong with the following codes? Please help.               DynamicModule[{ rg },      rg = RandomGraph[{5, 8}] ;      edglst = EdgeList[rg];      vlst = VertexList[rg];      VPOS = VertexCoordinates /. AbsoluteOptions[rg, VertexCoordinates];           EventHandler[        g = Dynamic@Graph[vlst, edglst, VertexCoordinates -> VPOS,          VertexSize -> {.04, .04},          VertexLabels -> "Name",          PlotRange -> 2,          EdgeStyle -> {Thick} ],       {"MouseDown" :>           (pos = MousePosition["Graphics"];           ind = Position[ VPOS, Nearest[ VPOS, pos][[1]]][[1, 1]];          vnumb = Length[vlst] + 1;          AppendTo[vlst, vnumb];          AppendTo[VPOS, pos];          AppendTo[edglst, ind <-> vnumb];          ind = vnumb; ),        "MouseDragged" :> ( VPOS [[ ind]] = MousePosition["Graphics"] )        } ,       PassEventsDown -> True         ]      ]      @ Öskå If the newly generated node is dragged to an existing node, I intend to joint the two nodes. Please note the following codes, so substitute `MouseDown` with `MouseClicked` seems not good enough in this intention.               DynamicModule[{rg}, rg = RandomGraph[{7, 10}];      edglst = EdgeList[rg];      vlst = VertexList[rg];      OVP = VPOS =         VertexCoordinates /. AbsoluteOptions[rg, VertexCoordinates];           EventHandler[g = Dynamic@Graph[vlst, edglst,          VertexCoordinates -> VPOS,          VertexSize -> {.04, .04},          VertexLabels -> "Name",          PlotRange -> 3,          EdgeStyle -> {Thick}],       {"MouseDown" :> (pos = MousePosition["Graphics"];          ind = Position[VPOS, Nearest[VPOS, pos][[1]]][[1, 1]];          tmp = ind;          vnumb = Length[vlst] + 1;          AppendTo[vlst, vnumb];          AppendTo[VPOS, pos];          AppendTo[edglst, ind <-> vnumb];          ind = vnumb;),        "MouseDragged" :> (VPOS[[ind]] = MousePosition["Graphics"]),        "MouseUp" :> (pos2 = MousePosition["Graphics"];          ind2 = Position[OVP, Nearest[OVP, pos2][[1]]][[1, 1]];          vnumb = Length[vlst] ;          vlst = Drop[vlst, -1];          VPOS = Drop[VPOS, -1];          edglst = Drop [edglst, -1];          If[! (MemberQ[edglst, tmp <-> ind2] || MemberQ[edglst, ind2 <-> tmp]),          AppendTo[edglst, tmp <-> ind2]];           )        },       PassEventsDown -> True       ]      ]