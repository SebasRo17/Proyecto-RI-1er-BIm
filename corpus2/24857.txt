I'm working on some pretty intense computation in _Mathematica_ ; when my code started running slowly, I tracked the source of the problem to `Exp[]`. I need to exponentiate every element of a 50x500x500 array; performing the operation on a 500x500 array takes on the order of 3 seconds (according to `AbsoluteTime`), so the entire array should take about 50 times that. Unfortunately, that's calculation needs to happen for every data point. I've read about lots of ways to speed up _Mathematica_ code, but none of those methods seem to apply here. I'm already working in `MachinePrecision`. I have noticed that some of my results are ridiculously small (for example, `4.282835067271648*10^-78127094`), but I'm not sure how to make _Mathematica_ ignore those; they're obviously **much** smaller than `$MachineEpsilon`. Any advice is greatly appreciated! **Update** : Below is a sample of my code and the generated output. To give it some context, `g0`, is a scalar, `σg0` is a length 50 array, and `g` is a 500x500 array.               (* Added after Oleksandr R.'s comment *)     SetSystemOptions["CatchMachineUnderflow" -> False];          n = Length[σg0];     probgs = ConstantArray[N[0], {50, 500, 500}];     For[i = 1, i <= n, i++,       probgs[[i]] =          N[(1/(Sqrt[2 π] σg0[[i]])) Exp[-0.5 ((g - g0)/σg0[[i]])^2]];       ]; // AbsoluteTiming     Precision[probgs]      Output:               {4.816275, Null}     MachinePrecision      Turning off underflow definitely helped; 5 seconds isn't bad at all for what I'm doing.