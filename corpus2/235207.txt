I making a game in node.js. I have players and they can perform a lot of actions. Actions are all coded as functions, and they change certain variables in either User object or other objects that are stored in a database. Actions are like: 1\. Player enters room (filled with other players and some objects)               room.players.push(player);      2\. The room distribute some things to the players (increments a variable in player object) who were already in the room, and the player that just entered.               player.gemDiam++;      3\. A host player in the room asks the player to give up something (decrement some variable) of his own.               player.potion--;         host.potion++;      4\. The player asks other players to give something else to the room. (decrement their own and increment some of the rooms's variable)               room.players.forEach(function(player){             io.sockets.socket(player.socketID).emit('askNicely');             io.sockets.socket(player.socketID).on('agree', function(){                 player.gemCirca--;             });         });      5\. They all give up what the room game them originally (delete the variable Room set a value for on them) and walk out.               room.players.forEach(function(player){         player.gemDiam--;     });      Now, mind that the players are actual players (that are controlled via client- side socket.io) and these actions are just one of many I chose for this example. How should I go about storing all that in a way that I can reproduce without actual players, sort of like a history of what happened in that room?