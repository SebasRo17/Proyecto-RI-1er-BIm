We have handsome library of cakephp modules at my workplace, and we develop custom websites at good pace until the shopping cart comes our way to slow down the process. I have used various ( _Magento, Opencart, Zencart_ ) shopping carts in different project, where we have to merge them with our core cakephp application. Usually very custom requirements make the shopping cart **non-upgradable** and takes **lot of time**. I am thinking to make our own shopping cart ( _quite basic at present, and will we extended as we move on_ ) from scratch so it can adapt the custom requirements easily. Is it worth doing? # UPDATE 24-Aug-11 I continued developing our own shopping cart. Here are my experiences that i want to share with you guys. Benefits   1. New cart is easy to change and extend.   2. It saves time when we have vague or custom requirements, and allow us to directly import modules from our existing code library.   3. No need for dual template implementation for cart & custom website.   4. Single admin panel for our shopping cart & custom website.  Limitations   1. Still not mature enough w.r.t other carts in market.   2. Security concerns. We mostly rely on cakephp security.   3. Lacks functionality Problems faced   1. Developing Shipping/Payment gateways was the real pain. As @davidhaskins pointed out **It saved us significant time which we might have spent hacking standard shopping carts to meet our needs**