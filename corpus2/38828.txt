I am now trying a slightly more complicated model which actually consists of finding the parameters of 2 particles in an Image (I attached an Plot of an image). Although I put very good initial values and constrains Mathematica wasn’t able to produce a result. Note at the final stage I will need to decompose the location of 4 particles...               J[i_, j_, α_, β_, xpos_, ypos_, clip_] := N[Clip[(β α^2*π)/ 4*((Erf[(j - xpos)/α ] - Erf[(j + 1 - xpos)/α ])*(Erf[(i - ypos)/α ] - Erf[(i + 1 - ypos)/α ])), {0, clip}]];     PixelImage[mat_]:=ArrayPlot[Rescale[mat,{0,Max[mat]},{Max[mat],0}],Epilog->{Red,MapIndexed[Text[#1,Reverse[#2-1/2]]&,Reverse[mat],{2}]},Mesh->True];     MyThreshold = 4043;     model1 = Clip[N[(β1 α1^2*π)/4*((Erf[(j - xpos1)/α1 ] - Erf[(j + 1 - xpos1)/α1 ])*(Erf[(i-ypos1)/α1 ] - Erf[(i + 1 - ypos1)/α1]))], {0,MyThreshold}];     model2 = Clip[N[(β2 α2^2*π)/4*((Erf[(j - xpos2)/α2 ] - Erf[(j + 1 - xpos2)/α2 ])*(Erf[(i -ypos2)/α2 ] - Erf[(i + 1 - ypos2)/α2]))], {0, MyThreshold}];     Model = Clip[(model1 + model2), {0, MyThreshold}];     data1 = Flatten[Table[{i, j, J[i, j, 0.7, 500, 6.5, 6.5, MyThreshold]}, {i, 1, 14}, {j, 1, 14}], 1];     data2 = Flatten[Table[{i, j, J[i, j, 0.6, 300, 4.5, 4.2, MyThreshold]}, {i, 1, 14}, {j, 1, 14}], 1];     Data = Transpose[{data1[[All, 1]], data1[[All, 2]], Clip[data1[[All, 3]] + data2[[All, 3]], {0, MyThreshold}]}];     PixelImage[Round[Partition[Data[[All, 3]], 14]]]          nlm = NonlinearModelFit[Data, {Model,         {0.4 <= α1 <= 0.8, 0 <= β1 <= 6000, 0 <= xpos1 <= 8,           0 <= ypos1 <= 8, 0.4 <= α2 <= 0.8, 0 <= β2 <= 6000,           0 <= xpos2 <= 8, 0 <= ypos2 <= 8}}, {{α1, 0.6}, {β1,           300}, {xpos1, 6.5}, {ypos1, 6.5}, {α2, 0.6}, {β2,           300}, {xpos2, 4.5}, {ypos2, 4}}, {i, j}, Method -> "NMinimize"];     nlm["BestFitParameters"]