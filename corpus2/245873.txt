I am designing an API for a driver that manipulates HW. I have done the following:               namespace HWRegister     {         //private:         namespace Data         {             //accessible only within this namespace                  //Represents one of the four HW blocks.             enum EHWUnit             {                 Block0,                 Block1,                 Block2,                 Block3             };                  enum EHWSet             {                 Rx0,                 Rx1,                 Rx2,                 Rx3,                 Tx0,                 Tx1,                 Tx2,                 Tx3             };         }              using namespace Data;              //Returns Error Code         int32_t enableHWUnit( const EHWUnit aHWNumber, const EHWSet aHWSet );         //Returns Error Code.         int32_t disableHWUnit( const EHWUnit aHWNumber );      I would like to get peoples opinion on this. I am wondering if those enums are a good idea, I declare them here and therefore people who use my API are forced to use them, will this cause more problems for the callers of my API? Can I improve this API somehow? I will add more documentation into the API when I am sure it is looking good.