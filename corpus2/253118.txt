I'm always writing observer/subject interfaces in a particular Java project, e.g.:               /**      * Registers the receiver to the dispatcher.       * When data arrives that the receiver can process,       * it will be passed to the receiver.      * ...      */     void addReceiver(IDataReceiver receiver);          /**      * @return      *      True, if the receiver has been registered, false otherwise.      * ...      */     boolean hasReceiver(IDataReceiver receiver);          ...      When a class implements these interfaces, I have to implement the code, test it, debug it, etc. It feels so futile to keep reimplementing such similar logic. Is there _any_ better option in Java?