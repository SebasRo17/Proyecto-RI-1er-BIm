The following works               Compile[{{x, _Real}}, Piecewise[{{{0., 0.}, x > 5.}}, {1., 1.}]]      but if I enter the `Piecewise[...]` in the bracket style, I get two error messages > Compile::cif: The types of the two results in If[True,{1.,1.},0] are > incompatible because their ranks are different. Evaluation will use the > uncompiled function. >> > > Compile::cif: The types of the two results in > If[x>5.,{0.,0.},If[True,{1.,1.},0]] are incompatible because their ranks are > different. Evaluation will use the uncompiled function. >> It seems the bracket style input form of the `Piecewise` function is transformed into               If[x>5.,{0.,0.},If[True,{1.,1.},0]]      and `0` has a different type than `{1.,1.}`. Here is the screenshot: ![enter image description here](http://i.stack.imgur.com/UUQLa.png) `In[2]` works as expected, but when I type the bracket style of `Piecewise` in `In[3]`, it doesn't work. However, if I copy the output bracket style of `Piecewise` in `Out[2]` and put it in `In[4]`, it works again. Why this happens and how to fix it? Am I making stupid mistakes or what?