Something I've been wondering about recently is how to organize types in directories/namespaces w.r.t. their dependencies. One method I've seen, which I believe is the recommendation for both Haskell and .NET (though I can't find the references for this at the moment), is:               Type     Type/ATypeThatUsesType     Type/AnotherTypeThatUsesType      My natural inclination, however, is to do the opposite:               Type     Type/ATypeUponWhichTypeDepends     Type/AnotherTypeUponWhichTypeDepends      **Questions:**   * Is my inclination bass-ackwards?   * Are there any major benefits/pitfalls of one over the other?   * Is it just something that depends on the application, e.g. whether you're building a library vs doing normal coding?