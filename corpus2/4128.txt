The built-in `FindShortestPath` and `GraphDistance` functions find the shortest path between two particular vertices in a graph. I can't think of a simple way to finding _all_ shortest paths between two vertices. Any ideas? My graph has weighted edges and the weights are arbitrarily large, so I'm dead against mapping weighted edges to many unweighted edges. **Motivation** : I have a graph of city traffic routes from point A to point B. I'd like to take the union of shortest paths from A to B to get a subgraph that, I posit, contains (many of) the most frequented intersections.