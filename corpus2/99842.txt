Long story short, I'm president of a programming club at my university. We're all 1st and 2nd year programming students. We have a project we're about to start working on (converting a console program to a gui program, in c#). Only two of us have any experience working with winforms and event driven programming in general. We want to balance learning with production (getting the project finished) as most of us don't have time to commit to a full on, 40 hour a week project. Our adviser is trying to steer us in the direction of not using VS2010's winform designer, he's trying to make it a requirement that we code everything in a "notepad++" type environment. So basically, I need to get some answers to a few questions that I'm having trouble researching, so when we discuss how to proceed later today and tomorrow, I'm armed with some actual knowledge. (We are all, including the adviser, generally "new" to winforms,c#, and .net) In "real world" situations with winforms, how frequent is it that the designer would not at all be used? Are we (the club officers) right in our estimation that what we have figured at a 4-6 month project (using the designer) would double, if not triple coding everything without it? What are the merits of not using the designer at all as a learning tool to "see how its done"? Is it a valid learning opportunity if we use the designer, then look at the generated code to get more familiar with how our custom controls/event handlers should be done? I'm currently at a bit of a loss, and thank you all for your responses. (Also, if possible could you list your years in field, and degrees if you respond, our adviser is huge on only taking opinions from who he considers "qualified", thanks). Edit -- Also take into account that learning is also one of our priorities, not just time constraints (We're trying to strike a balance between learning every single thing that we can, and having a project that needs so much time invested in it that it becomes unfeasible for us).