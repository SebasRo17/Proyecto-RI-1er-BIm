I have a class that has 3 dependencies. WritabbleDBConnection, ReadOnlyDBConnection and a QueryFilter utility object. I want to do constructor Injection so my class would look something like this.               class PersonDataAccessObject {              public function __construct($dbWrite, $dbRead, $queryFilter) {             // sets to local vars         }              public function A() {} // uses $dbRead              public function B() {} // uses $dbWrite          }      This object would most likely be instantiated in a static factory, which knows how to retrieve the DB connections. The problem I see is every time I build this object I need to pass all 3 dependencies although possibly only one of the will be used for the operations I will need to do. I don't like hiding my dependencies inside a service locator class, since I want to keep my dependencies explicit. Are there any solutions for this? Or do I have to live with unused instances?