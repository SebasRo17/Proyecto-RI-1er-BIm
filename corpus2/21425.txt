OK, so I've been working on this problem for over a week and it's driving me crazy. I'm trying to solve a system of two differential equations in $x(t)$ and $y(t)$ using a "time-elimination method," such that $\tfrac{d x}{d t}/\tfrac{d y}{d t}=\tfrac{dx}{dy}$ reduces the system to a single differential equation in $x(y)$. The tricky part is that the initial condition needs to be defined at the steady state of the system $\\{x_{ss},y_{ss}\\}$, where $x'(t)=y'(t)=0$. The slope at this point is undefined since $dx/dy=0/0$ as $y\to y_{ss}$ by construction. I've seen two common ways of dealing with this. The first involves finding a kind of approximation to the solution by slightly perturbing the correct initial condition so that $x'(y)$ is always well defined. For example, suppose the system is defined as:               y0 = 1; yss = 10;     xdot = 2*x[t]-y[t];     ydot = (.01 + .1*x[t])*(Log[yss/y[t]]);      We can find a solution using:               xdoty[y_] = (xdot/ydot) /. {x[t] -> x[y], y[t] -> y};     NDSolve[{x'[y] == xdoty[y], x[yss - .001] == xss}, x, {y, y0, yss - .001}];      which yields the following results for $x(t)$ (purple) and $y(t)$ (blue): ![diffeqns_example1.png](http://i.stack.imgur.com/Kmclb.png) Notice that the solution for $y(t)$ "blows up" as it comes within .001 of $y_{ss}$. The second, more accurate approach is to overcome the ill-defined slope at the steady state via an application of l'Hôpital's rule. In _Mathematica_ , I usually deal with this by passing a `Piecewise` function to `NDSolve`, e.g.:               NDSolve[{x'[y]==Piecewise[{{xdoty[y],y<yss},{xdotyss,y==yss}}],x[yss]==xss},x,{y,y0,yss}]      where `xdotyss` is $x'(y_{ss})$ (a single scalar value) calculated after the application of l'Hôpital's rule. This yields the following results for the system: ![diffeqns_example2](http://i.stack.imgur.com/MBSmj.png) where both $x(t)$ and $y(t)$ are well-behaved throughout. The problem I am having is that this approach does not always seem to work well. Particularly, for some differential systems I can get the first "perturbation" method to give me approximately correct looking results, but the second "l'Hôpital method" always gives me the following error: > NDSolve::ndsz: At y == yss, step size is effectively zero; singularity or > stiff system suspected. Given that the first approach causes no errors, and the second approach is using the same differential equations to derive the value of the slope at that single point, shouldn't this always be a viable approach? I can't think of what would be causing the system to suddenly become "stiff." Any ideas?