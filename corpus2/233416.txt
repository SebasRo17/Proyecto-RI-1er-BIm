I am a student of Computer Science and I am writing my disseration on a **Cloud Storage** application developed in the company for wich I work. My problem is the following one: my supervisor (the teacher that is that oversee my work) ask me to execute a **comparison** between the **Database Concept** and the **Cloud Storage system** that I am presenting in the disseration. He raccomended to me to focus on the **ACID** property that have to be guaranteed in a DBMS concept but, in some way, also in a Cloud Storage application (for example if I put a new file into my Cloud Storage account this operation have to be durable in time, and so on for the others ACID properties) My problem is how to link together the DBMS concept with the Cloud Storage concept. I have write some pages following this street (and I ask you if it could be a good way to link togheter these 2 arguments that, in my opinion, are pretty different...):   1. I describe wath is a **DBMS** as something that decouples the data model seen by applications from the physical representation of the same data on the hard drive.   2. I describe the **Relational Model** (and the concept of **RDBMS** as the classic model to access data). In this section I introduce the concept of relational algebra and I speack about of the **limits of the Relational Model** in the Cloud Context speacking about of **scalability problems** and about **low performance when accessing data in particular contexts** (mainly caused by the **JOIN** operator).   3. Starting from the previous problem of _low performance when accessing data in particular contexts_ * I explain why the **JOIN** operator is the cause and I speack about of the **Object Oriented Databae** as possibile solution of this problem (an object attribute could be the reference to another object and so I often no need the use of JOIN operator to relate together 2 objects but simply I have to follow a pointer, in this way the temporal complexity is dropped from **O(n)** to **O(1)** ensuring performance incredibly higher when the number of data access is hight).   4. Then I put in relaction the presented concept of **Object Oriented Database** to the **Cloud Storage System** developed, stating that they could be see as similar tools because the server that implement our Cloud Storage System use an **object storage architecture** designed to manage petabytes of information and billions of objects across multiple geographic locations as a single system. An **Object storage** is a storage architecture that manages data as objects...and this concept is pretty similar to how **Object Oriented DBMS** see the data.   5. Finally I speack about the **ACID** properties explaining the importance of these properties in the transaction managment of a DBMS (both RDBMS and OODBMS) and traslating these properties into the **Cloud Storage** context. (for example if I put a new file into my Cloud Storage account this operation have to be durable in time, and so on for the others ACID properties). What do you think about this way to relate the DBMS topic with the Cloud Storage Topic? it makes sense or is it a stretch? Other ideas are welcome Tnx Andrea