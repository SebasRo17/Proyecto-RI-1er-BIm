I have a polyline "class" in my Clojure program, which is represented by a vector of points. (It's not really a class or anything.) The polyline's length (in the geometric sense) is something that is often needed for computations. It's also fairly slow to calculate every time it's needed. In OO code, I'd just have the length as a property of the Polyline class. But in functional code, I'm lost. Do I duplicate the OO pattern and make the polyline a map of `{:points points, :length (length points)}`? Do I make a `length` function and `memoize` it? Do I just depend on the compiler to cache the results?