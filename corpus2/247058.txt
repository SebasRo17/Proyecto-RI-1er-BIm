I have read in this SO question that OpenSSL socket communication can be only half duplex in a single thread. Assuming what I have read is true, I am wondering if I can apply philosopher's dining problem to send SSL_write() and receive SSL_read() on a non-blocking socket in a single thread that communicates with a OpenSSL TCP Server. Both server and client are non-blocking. Would that be a good model? Or should I always set priority to read SSL_read()? What would be the best approach to code? I am using C++ to code this single threaded non-blocking socket model (without BOOST or other libraries).