consider the following:               (i+j)/2      i and j are both 32 bit integers and the result should also be. But in the little equation, there's a hidden overflow, i+j could become larger then a 32 bit integer even though the result would always be a 32 bit integer.               public class Sum{          public static void main(String []args){             int i = 2147483647;             int j = 2147483647;                                    System.out.println((i + j)/2);          }     }      Gives me -1 as a result. How do you guard against situations that can overflow but are not always obvious. Is there a pattern that describes this? (apart from declaring everything long) I'm looking for a general answer, the java example is just to provide an example, my Delphi does the same.