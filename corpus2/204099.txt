I am under the impression that an encrypted string cannot be decrypted so the original value is lost forever. However, if the following string **always equals** "dominic" (my name), then can't there be some logical way to reverse it; being as it's not random nor is it based on the date/time, but there is a logical method to it?               0WrtCkg6IdaV/l4hDaYq3seMIWMbW+X/g36fvt8uYkE=      No matter what or how many times I encrypt "dominic" (string), it always equals as above. So, shouldn't there be some way to decrypt a string like that? Example of what I'm talking about:               public string EncryptPassword(string password)     {         return Convert.ToBase64String(             System.Security.Cryptography.SHA256.Create()             .ComputeHash(Encoding.UTF8.GetBytes(password)));     }