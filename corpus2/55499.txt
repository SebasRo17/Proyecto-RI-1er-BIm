I'm trying to reproduce the simulation with demographic stochasticity in Figure 1 from the paper entitled "Dynamical Resonance Can Account For Seasonality of Influenza Epidemics" (http://www.pnas.org/content/101/48/16915.full). My code works just fine when $t$ is small $(0<t<0.02)$, but when I increase the value of $t$ (as below), the simulation doesn't finish compiling. Thus, I'm wondering if there's an issue with my code. Ideally, I would like my code to function when $(10<t<20)$ so I can compare my results to the paper. Any input would be greatly appreciated.               Clear[S, Infe, R, No, b0, b1, b, t, Ro, d, L, event, fun, main, list1, list2, data]      No = 500000;      b0 = 500;      b1 = 0.04;      d = 0.02;      L = 4;      list1 = {};      list2 = {};      b[t_] := b0 *(1 + b1* Cos[2 Pi t]);      main[] := Module[{S = 499999, Infe = 1, R = 0, t = 0},      While[t < .03 && Infe > 0, {S, Infe, R, t} = fun[S, Infe, R, t];     AppendTo[list1, Infe]; AppendTo[list2, t] ]];          fun[S0_, Infe0_, R0_, t0_] :=      Module[ {S = S0, Infe = Infe0, R = R0, t = t0},      TransRate = (b[t]*S*Infe)/No;      RecoveryRate = Infe/d;      ImmunityLoss = (No - S - Infe)/L;      TotalRate = TransRate + RecoveryRate + ImmunityLoss;           t = t + RandomReal[ExponentialDistribution[TotalRate]];      event = RandomReal[UniformDistribution[]];           If[event < TransRate/TotalRate,      S = S - 1 ; Infe = Infe + 1,      If[event < (TransRate + RecoveryRate)/TotalRate,      Infe = Infe - 1 ; R = R + 1, R = R - 1 ; S = S + 1]];      {S, Infe, R, t}         ]          main[]      data = Transpose@{list2, list1};     ListPlot[data]