I'm building a new report generator for our in-house survey system. (No I can not use any off-the-shelf software. These are highly customized reports.) I want to use Topshelf to host the generator as a service. Our current generator is a desktop-app and requires a user to be logged in on the server. I want to try to avoid this. The report-generation itself is very straight forward and procedural in nature. But the server is more than capable of generating several reports at one time. I want the service to spin up a few instances of the generator at the same time, is this something I would use the Task Parallel Library for? A bit of pseudo would look a bit like this:               poller.Poll(order => { // blocking(?) call to listen for new report-orders       var gen = new Generator(order);       gen.process(); // generates report       set gen = null; // or something else to destroy the generator for that report     });      Anyone have any suggestions on how to accomplish this?