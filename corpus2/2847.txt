Is `MultinormalDistribution[]` efficient and easy to use for high dimensions? I have a variable $n$ representing the dimension of a Monte Carlo integration I do on a multivariate Gaussian copula, where typical values of $n$ are near 100. I am using a simple correlation matrix made from `ConstantArray[œÅ, {n,m}]` (except on the diagonal). For now I simply wrote a function that calls `RandomVariate[NormalDistribution[0,1], {n,m}]`, generates the correlation matrix, calculates its Cholesky decomposition, and then multiplies to obtain the correlated multivariate normal samples. It works fine and was easy to code and understand. However, generating correlated multivariate $t$ samples is more involved, so it would be convenient to just drop in a call to `MultivariateTDistribution[]`. That leaves me with two issues:   1. Setting up `MultinormalDistribution[]` with an arbitrary variable count is hard because it seems to want variable names, which I am having trouble generating programmatically.   2. I am not sure that the internals of `RandomVariate` on `MultinormalDistribution[]` and `MultivariateTDistribution[]` are set up to efficiently obtain high-dimensional sample sets. If the efficiency is not expected to be that great I will stick with my current approach. Otherwise I would appreciate advice on using `MultinormalDistribution` in this high-dimensional context, since it would be worth investing the time in this more elegant and Mathematica-like approach.