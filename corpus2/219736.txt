I have a client/server java application with a firebirdsql backend. This is a pain because I have to install java and the client on every workstation, etc So it is now time to rewrite the application, and I am deciding what technology to use. My strengths are php/js/C# The application can be single user or multiuser (I don't however want to force the users to install a full multiuser database service if possible) It needs to work off-grid (some of the locations it will be used have no internet access) It will primarily be deployed on windows desktop pc's and accessed remotely via ipads/laptops. I would like to be able to run the whole app off a usb key, with no installation required. My initial thoughts are just a wamp stack, although I am not sure how easy it will be to bundle it into an easily deployable application. I also need to have a background task running "aka cronjob", and I am not sure how to trigger that from within the application itself short of writing a windows service. My second thought is to look at node+database (which database I am not sure, preferably embedded or standalone). The good thing i see here is that i can handle "cronjob type" tasks relatively easily. The bit where i am stuck is in the database choice. I have looked at sqlite, but the drivers don't seem all that robust. So 3 questions really.   1. what is a good embedded/standalone (non-server) relational databases that can be used with node.    2. has anyone got experience doing a similar project, and any issues they encountered with either node or wamp stacks   3. Are there better technology stacks I could use in this scenario I for one have found that WAMP performs terribly over the network but flies on localhost, and I haven't been able to determine the problem.