Regarding growing of Behavior-Driven Development imposing acceptance testing, are use cases diagram useful or do they lead to an "over-documentation"? Indeed, acceptance tests representing specifications by example, as use cases promote despite of a more generic manner (since cases, not scenarios), aren't they too similar to treat them both at the time of a newly created project? From this link, one opinion is: > Another realization I had is that if you do UseCases and automated > AcceptanceTests you are essentially doubling your work. There is duplication > between the UseCases and the AcceptanceTests. I think there is a good case > to be made that UserStories + AcceptanceTests are more efficient way to work > when compared to UseCases + AcceptanceTests. What to think about?