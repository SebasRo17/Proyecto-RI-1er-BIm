I'm building a package to help me write packages and their documentation. In this post I explained how to make a package and its documentation. In the answer I provided I describe how to build a very simple package. However, I have been looking around the extra packages that come with _Mathematica_ and in some packages I see many .m files. I see this as a good way of dividing the application. Can someone describe the structure of a package? To do this lets try to make a package out of the next simple functions. Suppose that we have the following in a notebook:               AddTwo::usage = "AddTwo[a, b] returns a+b";     AddThree::usage = "AddTwo[a, b, c] returns a+b+c";     DotTwo::usage = "DotTwo[a, b] returns a*b";     DotThree::usage = "DotTwo[a, b, c] returns a*b*c";     AddTwo[a_, b_] := a + b;     AddThree[a_, b_, c_] := a + b + c;     DotTwo[a_, b_] := a*b;     DotThree[a_, b_, c_] := a*b*c;      I would like to put these functions in a package. They all seem to be very simple arithmetic operations so let us make a package named `SimpleArithmetic`. This package is perfect to be divided into sections. One for additions and one for products, so we can make "subpackages" `Addition` and `Product`. If we follow some of the examples in the _Mathematica_ installation we can create a folder called `SimpleArithmetic` in say `$UserBaseDirectory`. Inside `SimpleArithmetic` we can create two other files `Addition.m` and `Product.m`. The code for the additions would be placed in `Addition.m` and the code for multiplications would be placed in `Product.m`. The question now is, how would these files look like? There is also a folder called `Kernel` which contains `Init.m`. Could someone please just explain the best practices to create packages? I've read over the documentation and the whole "context" and "packages" keywords have already confused me. The code in the files I have described would be very appreciated.