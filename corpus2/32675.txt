I am looking for the correct method for accomplishing the unknown piece in the following code snippet:               rolls = Tuples[Range[1, 4], {2}]      > >     {{1, 1}, {1, 2}, {1, 3}, {1, 4}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {3, 1}, > {3, 2}, >     {3, 3}, {3, 4}, {4, 1}, {4, 2}, {4, 3}, {4, 4}} >                 Tally[rolls, Min[#1] == Min[#2] &]      > >     {{{1, 1}, 7}, {{2, 2}, 5}, {{3, 3}, 3}, {{4, 4}, 1}} >                 (*Unknown List Manipulation Code*)      > >     (1*7 + 2*5 + 3*3 + 4*1)/Length[rolls]   >     (*where previous result is in form {{{a, b}, c}, ...} >     the numerator is the sum of Min[a,b]*c for every item in the list that > is >     the previous result) >   I can imagine some very complex solutions, but I suspect that there is an elegant functional solution that I am missing.