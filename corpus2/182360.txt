What are the most obvious drawbacks to this idea for an enterprise(ish) model using the following technologies.   1. Browser based and native developed GUI using Delphi to connect to    2. Datasnap server (Delphi, obviously) via Rest which stores documents in      1. A CouchDB Server  But gets the structure for those documents from a centralized tree of   3. JBoss servers connecting to      1. MySQL databases which have information about all kinds of domain specific things   4. Which connects to another JBoss server, all the way up to a centralized hosted repository to maintain some sort of control over licensing and structure of the program.  I know that's kind of vague, but bear with me. I'm really asking:   1. Whether it's sensible to use a mixture of NoSQL and SQL DB's and    2. Whether it's easier to mix them if they're not connected to the same backend service.   3. If this is just crazy.  I thought of it on the drive to work and it seems to solve all the problems that we have. I'm not sure that datasnap is robust enough, but we could use node.js or another jboss server instead. I just wanted to go with Delphi since we've got it and know it. I think this is a fairly normal model, the difference being the web server (or datasnap server) being the thing that has a database attached to it as well as the data server. I think it's better that way, and it would probably make sense if I said this is for medical records primarily and it's better that documents stay separated from things that need to be updated, but it's meant as a general purpose solution for storing info in a structured way.