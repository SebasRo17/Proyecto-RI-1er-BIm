Consider the following set of points in the 4D space:               points = {{Log[5], Log[2], Log[8/5], Log[23/16]}, {Log[5], Log[2], Log[23/17],        Log[17/10]}, {Log[5], Log[16/11], Log[11/5], Log[23/16]}, {Log[5],        Log[17/12], Log[23/17], Log[12/5]}, {Log[5], Log[23/18], Log[11/5],        Log[18/11]}, {Log[5], Log[23/18], Log[3/2], Log[12/5]}, {Log[5/3],        Log[6], Log[8/5], Log[23/16]}, {Log[5/3], Log[6], Log[23/17],        Log[17/10]}, {Log[11/7], Log[16/11], Log[7], Log[23/16]}, {Log[3/2],       Log[17/12], Log[23/17], Log[8]}, {Log[11/7], Log[23/18], Log[7],        Log[18/11]}, {Log[3/2], Log[23/18], Log[3/2], Log[8]}, {Log[4/3],        Log[6], Log[2], Log[23/16]}, {Log[17/13], Log[6], Log[23/17],        Log[13/6]}, {Log[4/3], Log[12/7], Log[7], Log[23/16]}, {Log[17/13],        Log[13/8], Log[23/17], Log[8]}, {Log[9/7], Log[23/18], Log[7],        Log[2]}, {Log[9/7], Log[23/18], Log[7/4], Log[8]}, {Log[23/19],        Log[6], Log[2], Log[19/12]}, {Log[23/19], Log[6], Log[19/13],        Log[13/6]}, {Log[23/19], Log[12/7], Log[7],        Log[19/12]}, {Log[23/19], Log[13/8], Log[19/13],        Log[8]}, {Log[23/19], Log[19/14], Log[7], Log[2]}, {Log[23/19],        Log[19/14], Log[7/4], Log[8]}}      All the points lie on a 3D hyperplane since `MatrixRank[# - points[[1]] & /@ points]` returns 3. How can I show the points in a 3D space (e.g., using `Graphics3D`) so that the distance of points are kept intact?