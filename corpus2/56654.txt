For my simulation purpose, I need to solve the following system of DEs using 4th-order Runga-Kutta (RK) method in Mathematica: $$ I_{k,0}'(t) = -\beta_1~I_{k,0}(t) + k~\lambda~ \Theta(t) + \gamma~ V(t);\\\ I_{k,i}'(t) = -\beta_{i+1}~ I_{k,i}(t) + \beta_i~I_{k,i-1}(t);\quad \text{where} ~~ i=1,2,...,T-1,\\\ I_{k,T}'(t) = -\alpha~ I_{k,T}(t) + \beta_T~ I_{k,T-1}(t); $$ If $T=1$ and $k = 1$, then the problem involves solving a system of just two DEs: $$ I_{1,0}'(t) = -\beta_1~I_{1,0}(t) + \lambda~ \Theta(t) + \gamma~ V(t);\\\ I_{1,1}'(t) = -\alpha~ I_{1,1}(t) + \beta_1~ I_{1,0}(t); $$ However, in my work, $k$ is a large integer number, say $n$. Even if I assume $T=1$ and $k=n$, I need to solve the following system: $$ I_{1,0}'(t) = -\beta_1~I_{1,0}(t) + \lambda~ \Theta(t) + \gamma~ V(t);\\\ I_{1,1}'(t) = -\alpha~ I_{1,1}(t) + \beta_1~ I_{1,0}(t);\\\ I_{2,0}'(t) = -\beta_1~I_{2,0}(t) + 2~\lambda~ \Theta(t) + \gamma~ V(t);\\\ I_{2,1}'(t) = -\alpha~ I_{2,1}(t) + \beta_1~ I_{2,0}(t);\\\ \vdots\\\ I_{n,0}'(t) = -\beta_1~I_{n,0}(t) + n~\lambda~ \Theta(t) + \gamma~ V(t);\\\ I_{n,1}'(t) = -\alpha~ I_{n,1}(t) + \beta_1~ I_{n,0}(t); $$ Given the initial conditions $I_{k,0}(0)$ and $I_{k,1}(0)$ for all values of $k$, what is the best way to solve such a system using RK method where the number of equations depends on the value of $k$? Any help or snippet is appreciated! * * *               Clear["Global`*"];     lambda = 0.014;     n = 10; m = 2;     alpha = 0.9;     phi = 0.1;      gamma = 0.2;      beta = 0.4;      B = N[1/alpha + 1/beta];      K1 = 200; v1zero = 0.2;          eqns = {Table[Derivative[1][I0[k]][t] == (-beta)*I0[k][t] + lambda*k*(1 - I0[k][t] - I1[k][t])*B*beta*m*Sum[(1/q^2)*I0[q][t], {q, 1, K1}] + gamma*(1 - I0[k][t] - I1[k][t])*V1[t], {k, 0, K1}], Table[Derivative[1][I1[k]][t] == (-beta)*I1[k][t] + beta* I0[k][t], {k, 0, K1}], Derivative[1][V1][t] == -V1[t] + phi*(1 - V1[t])*B*beta*m*Sum[(1/q^2)*I0[q][t], {q, 1, K1}], Table[I0[k][0] == 0.02, {k, 0, K1}], Table[I1[k][0] == 0.02, {k, 0, K1}], V1[0] == v1zero};      > Plot for I0[k][t] in terms of t:               n1 = NDSolve[eqns, Table[I0[k], {k, 5}], {t, 80}];     Plot[Evaluate[Table[I0[k][t], {k, 5}] /. n1], {t, 0, 80}, PlotRange -> All]      > Plot for I1[k][t] in terms of t:               n2 = NDSolve[eqns, Table[I1[k], {k, 5}], {t, 80}];     Plot[Evaluate[Table[I1[k][t], {k, 5}] /. n2], {t, 0, 80}, PlotRange-> All]      Now, I intend to plot `Sum[I0[k][t] + I1[k][t], {k, 1, 5}]` for each value of `t`. In other words, I want to plot the following for each value of t: $$\sum_{k=0}^{K1}(I0[k][t]+I1[k][t])$$ How can I get it done? Thanks in advance!