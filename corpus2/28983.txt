Let say I need and option for `Plot`:               RegionFunction -> (-6 < #2 < 6 &)      But I also want those `-6` and `6` to be take as arguments from overlapped function. The following is not going to work, I only want to show an example               RegionFunction -> ((#1_2 < #2 < #2_2 &)&_2 @@ {-6, 6})      This construction `#2_2` means second argument reffered to the function closed by `&_2`. I know I can do this in about 432 different ways, **this is an abstract question** about particular construction/input syntax. **Edit** After reading answers of Mr. Wizard and jVincent I have to clarify the question. > My goal was to find out if there is a way to reffer `#` to desired `&` if > there is some type of mix like in the example `((#1 < #_2 < #2)&)&_2`. jVincent note about `\[Function]` seems to be the closest to the general idea.