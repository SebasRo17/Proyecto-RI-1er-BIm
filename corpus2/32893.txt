I seem to remember that I was reading that   * `underflow` means you have a too small _magnitude_ that cannot be presented anymore in a type   * `overflow` means you have a too large _magnitude_ that cannot be presented anymore in a type However, in practice I perceive that the terms are used such that   * `underflow` means you have a too small _value_ that cannot be presented anymore in a type   * `overflow` means you have a too large _value_ that cannot be presented anymore in a type What is the correct meaning to use here? Are the terms defined differently for integer and floating point types?