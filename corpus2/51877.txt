The following illustrates what appears to be an incorrect `Plot3D` for this polynomial. I have forced the function to complex argument, changed ranges. In contrast, `ListPLot3D` behaves as expected. Is there something I am missing?               pol1 = x + 1 - x^2 - 2 + 3 x + 4 x^2;     pol2 = -2 Sqrt[x (1 - x^2)];     h[u_] := pol1^2 - pol2^2 /. x -> u      2D plots:               GraphicsColumn[{Plot[h[x], {x, -3, 1},         PlotLabel -> TraditionalForm[h[x]]],       Plot[Abs[h[x]], {x, -3, 1},         PlotLabel -> TraditionalForm[Abs@h[x]]]}, Frame -> All]      ![enter image description here](http://i.stack.imgur.com/ncYWL.png) `Plot3D`:               Plot3D[Abs@h[x + I y], {x, -3, 1}, {y, -1, 1}, Mesh -> None,       PlotPoints -> 100, PlotRange -> {0, 20},       PlotLabel -> Row[{"Plot3D of ", TraditionalForm[Abs@h[z]]}]]      ![enter image description here](http://i.stack.imgur.com/OvpPA.png) This appears to just be a translation of the real valued function along the y-axis and **not** the (or perhaps my) intended outcome...this can be easily confirmed by looking at adding even the smallest imaginary component to any of the 4 real roots. In contrast `ListPlot3D`:               sol = Solve[h[x] == 0, x];     pts = {#, 0, 0} & /@ (x /. sol);     Show[ListPlot3D[       Flatten[Table[{i, j, Abs@h[i + j I]}, {i, -3, 1, 0.1}, {j, -1, 1,           0.1}], 1], MeshFunctions -> (#2 &), Mesh -> {{0}},        MeshStyle -> {Red, Thick}, PlotRange -> {-1, 20}],       Graphics3D[{PointSize[0.04], Point[pts]}],       PlotLabel -> Row[{"ListPlot3D of ", TraditionalForm[Abs@h[z]]}]]      ![enter image description here](http://i.stack.imgur.com/sSfkM.gif) This nicely shows the four real roots and behaves as expected.