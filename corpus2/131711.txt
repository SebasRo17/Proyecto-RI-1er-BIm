I've just begun using a popular, well-documented graphics engine, and was given a month to create some small programs and get familiar with it. The library is huge, and there are sections I haven't explored. Due to a time-crunch, my tech-lead has asked me to start designing my software ( _sequence and class diagrams_ ) even for the parts I haven't explored, just by looking at the documentation and figuring out the capabilities of those classes. It's my understanding that designing software requires good knowledge of how something works. Does it make sense to create a design with only a vague understanding of how a class works, just by looking at the class's documentation? Shouldn't I be prototyping it with a small program, tweaking it here and there and understand how it behaves and THEN do the design for it?