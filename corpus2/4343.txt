Has anyone written a function to pull the function dependencies of a function? That is, it would be nice to have a function that returns a list of function dependencies as a set of rules, terminating with built-in functions, which could then be passed straight to `GraphPlot` or `LayeredGraphPlot`. I am kind of surprised that the such a dependencies function isn't already built in. **Edit:** Alright, in an attempt to contribute a little value of my own to the discussion, let me modify Szabolcs' functions:               SetAttributes[functionQ, HoldAll]     functionQ[       sym_Symbol] := (DownValues[sym] =!= {}) && (OwnValues[sym] === {})          (*My addition:*)     SetAttributes[terminalQ, HoldAll]     terminalQ[sym_Symbol] := MemberQ[Attributes[sym], Protected]          (*added terminalQ to the Select:*)     SetAttributes[dependencies, HoldAll]     dependencies[sym_Symbol] :=       List @@ Select[        Union@Level[(Hold @@ DownValues[sym])[[All, 2]], {-1}, Hold,           Heads -> True], functionQ[#] || terminalQ[#] &]          (*adds hyperlinks to Help:*)     SetAttributes[dependencyGraphB, HoldAll]     dependencyGraphB[sym_Symbol] :=       Module[{vertices, edges},        vertices =         FixedPoint[Union@Flatten@Join[#, dependencies /@ #] &, {sym}];       edges = Flatten[Thread[Rule[#, dependencies[#]]] & /@ vertices];       GraphPlot[edges,         VertexRenderingFunction -> (If[MemberQ[Attributes[#2], Protected],             Text[Hyperlink[              StyleForm[Framed[#2, FrameMargins -> 1, Background -> Pink],                FontSize -> 7], "paclet:ref/" <> ToString[#2]], #1],             Text[Framed[Style[DisplayForm[#2], Black, 8],               Background -> LightBlue, FrameStyle -> Gray,               FrameMargins -> 3], #1]] &)]]      ![The function dependency graph of Shifrin's 'depends' function, according to Szabolc's dependencyGraph, with some mods to allow the inclusion of Built-In functions.](http://i.stack.imgur.com/UObOZ.gif) Now that I think about it, there should be precisely this sort of dependency function built in to all of the `Parallel` functions, so that MMA knows what definitions to send to the kernels. Unfortunately I think they avoid this more elegant method and just send every darned thing that is in the `Context`, which is probably overkill.