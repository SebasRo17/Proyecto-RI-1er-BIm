You task is to design a search algorithm that will find my secret number, which is between 0 and 2^64. If your test value is too low you can test again in 1 second. If your test value is too high you are not allowed to test again the next 300 seconds. Every second I will add 1 to or subtract 1 from the number. I will not tell you what I have done, and while it may be random it also might not be random. How can you find the approximate number fast? The obvious answer is to use a binary search, but since the penalty is high for guessing too high, I would think it needs some adjustment. **Background** I need to find the speed of a system. The speed changes slowly. It takes 1 second to do a guess. If my guess is too low: no problem. If it is too high, then system reboots, causing a 5 minute delay. My goal is to get a decent estimate of the speed relatively fast.