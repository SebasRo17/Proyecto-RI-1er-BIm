When I previously asked what's responsible for slow software, a few answers I've received suggested it was a social and management problem: > This isn't a technical problem, it's a marketing and management problem.... > Utimately, the product mangers are responsible to write the specs for what > the user is supposed to get. Lots of things can go wrong: The product > manager fails to put button response in the spec ... The QA folks do a > mediocre job of testing against the spec ... if the product management and > QA staff are all asleep at the wheel, we programmers can't make up for that. > —Bob Murphy > > People work on good-size apps. As they work, performance problems creep in, > just like bugs. The difference is - bugs are "bad" - they cry out "find me, > and fix me". Performance problems just sit there and get worse. Programmers > often think "Well, my code wouldn't have a performance problem. Rather, > management needs to buy me a newer/bigger/faster machine." The fact is, if > developers periodically just hunt for performance problems (which is > actually very easy) they could simply clean them out. —Mike Dunlavey So, if this is a social problem, what social mechanisms can an organization put into place to avoid shipping slow software to its customers?