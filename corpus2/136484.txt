I've always launched builds after each commit, but on this new project, the architects just asked me to change the frequency to "one build every 15 minutes", and I just can't understand why that would be a good reason vs "building on each commit". First off, some details :   * Objective-C (iOS 5) project   * 10 developpers   * each build actually takes ~1 min, and includes build and unit testing.   * the integration server is a Mac Mini, so computing power isn't really a problem here      * we use Jenkins with the XCode plugin My arguments were that if you build at each commit, you can see right now what went wrong, and correct directly your errors, without bothering the other devs too often. Plus our tester is less bothered by UT errors this way. His arguments were that devs will be flooded by "build error" mails (which is not completely true, as Jenkins can be configured to send a mail only for the first broken build), and that metrics can't be done properly if the frequency of builds is too high. So, what's your opinion on this ?