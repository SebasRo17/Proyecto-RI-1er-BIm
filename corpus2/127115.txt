I am staying in an environment, where people believe:   1. Java generics are the feature exclusively used for library writing and not for the real coding.   2. C++ is an OO programming language; `template` is an optional and avoidable feature Though, these people rely highly on the libraries written using generic programming (e.g. STL, Java containers). If I write a code using `template`s or `generics`, the code reviewer is most likely to reject it and will comment to write it in a **_"proper / understandable / elegant"_** way. Such mentality is applicable from normal programmer to senior most manager. There is no way out, because 90% of the time, these people have their lobbying. What is the best way ( _not being cut throat_ ) of explaining them, the practical approach of writing code which constitutes OO and generic programming both at the same time ?