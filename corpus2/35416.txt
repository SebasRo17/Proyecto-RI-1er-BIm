I am using NDSolve to solve a set of coupled differential equations. When a certain event occurs, I want two equations in the set to be changed radically, for example from `x'[t] == a*y[t] + b*y'[t], y[t] == c*x[t] + d*x'[t]` to `x'[t] == 0, y[t] == -f*y'[t]` For this purpose, I have first tried to use the trick shown in the Mathematica featured example for the ACDC Full Wave Rectifier. So I just wrote the equations like `x'[t] == go[t]*(a*y[t] + b*y'[t]), y[t] == go[t]*(c*x[t] + d*x'[t]) + (1-go[t])*(-f*y'[t])` and set events like `WhenEvent[{y[t] > y0 && go[t]==1}, go[t] -> 0]` `WhenEvent[{y[t] < y0 && go[t]==0}, go[t] -> 1]` to jump back and forth between the two pairs of equations I want to use each time the event is triggered. However, two 'division by zero' errors occur (I assume it's because NDSolve is still trying to solve the parts multiplied by zero). So apparently this method does not work for this type of problem. Anybody knows the 'right' way to do this?