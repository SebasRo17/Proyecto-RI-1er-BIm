I know the idea of strong cohesion applies to methods as much it applies to classes. Just to be clear when I say _strong cohesion_ of a method I mean a method which does only one task and does it well. This idea really works for simple _getters_ and _setters_. But sometimes we usually come across methods that does more than one task internally , although it seems to be doing a single task if you look at a higher level of abstraction. An example of such a method can be :                public void startUp() {             List<SubSystem> subSystems = getSubSystems();             sychronized(subSystems) {                 for (SubSystem subSystem : subSystems) {                     subSystem.initialize();                 }             }         }      And inside those `subSystem#initialize()` methods a lot is going on. So is this a violation of the _high/strong cohesion_ principle ?