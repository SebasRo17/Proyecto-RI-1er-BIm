What's the purpose of a base address in an executable? For example, in Microsoft Visual C++'s linker, you can set a base address, or use the default of `0x1000000`. But with virtual memory, why would a base address be needed? Why would you not just link it to `0x0` and put the initialization routine (`mainCRTStartup` on Windows) there which would make it so writing to NULL (`0x0`) would just overwrite the startup routine (a method that will never be called again). Plus, you could just set the code's pages to execute only on an x86 processor so writing will cause an exception.