## Introduction I created the following code to simulate the many possible interactions between a cylindrical protein crystal and a x-ray beam during serial femtosecond crystallography.               Manipulate[       Graphics3D[         {          { EdgeForm[None], Directive[Yellow, Opacity[0.4], Specularity[White, 20]],             GeometricTransformation[Cylinder[{{-h + x, y, z}, {h + x, y, z}}, 1*10^-6],             RotationTransform[α Pi/2, {1, 0, 0}].RotationTransform[β Pi/2, {0, 1, 0}]]},          { EdgeForm[None], Directive[Blue, Opacity[0.3], Specularity[White, 20]],             Cylinder[{{-1*10^-5, 0, 0}, {1*10^-5, 0, 0}}, r]} },              Axes -> True, AxesLabel -> {"X", "Y", "Z"} ],            {{α, 0}, -1, 1}, {{β, 1}, -1, 1},        {{r, 1*10^-7}, 1*10^-7, 6*10^-6} ,        {{h, 5*10^-6}, 1*10^-6, 10*10^-6},       {{x, 0}, -1*10^-5, 1*10^-5},       {{y, 0}, -1*10^-5, 1*10^-5},        {{z, 0}, -1*10^-5, 1*10^-5} ]      ## Problem I would like to be able to display the volume of the intersection of the two objects. As far as I have looked, this doesn't seem to be possible using only `Cylinder` and `Graphics3D`. If there is a way to find this volume using only `Graphics` objects that someone knows of, please enlighten me. Also, the use of `RegionPlot3D` and `NIntegrate` as demonstrated by this example looks promising.               RegionPlot3D[x^2 + y^2 < 1, {x, -2, 2}, {y, -2, 2}, {z, -2, 2}]     NIntegrate[Boole[x^2 + y^2 < 1 ], {x, -2, 2}, {y, -2, 2}, {z, -2, 2}]      But my problem with using these functions is I don't know how to apply the `Manipulate` function to these raw inequalities in order to get the geometric transforms, variable height, translation, and change in beam radius like I have in my `Graphics3D` model. Really all I care about it that it is manipulatable like the `Graphics3D` model I have shown and that the volume of the intersection is displayed as the model is manipulated. I greatly appreciate any help on this. ## Solution               cyl[{x_, y_, z_}, r_, h_] := y^2 + z^2 < r^2 && -h < x < h     xform[x_, y_, z_, a_, b_] := RotationTransform[a Pi/2, {1, 0, 0}].RotationTransform[b Pi/2, {0, 1, 0}].TranslationTransform[{x, y, z}]          Manipulate[      Graphics3D[       {        {EdgeForm[None], Directive[Yellow, Opacity[0.4], Specularity[White, 20]],        GeometricTransformation[ Cylinder[{{-h, 0, 0}, {h, 0, 0}}, 1*10^-6], xform[x, y, z, a, b]]},        {EdgeForm[None], Directive[Blue, Opacity[0.3], Specularity[White, 20]], Cylinder[{{-1*10^-5, 0, 0}, {1*10^-5, 0, 0}}, r]}      },     PlotLabel -> Chop[10^21 NIntegrate[       Boole[cyl[{x0, y0, z0}, r, 1*10^-5] &&          cyl[InverseFunction[xform[x, y, z, a, b]][{x0, y0, z0}],           1*10^-6, h]], {x0, -2*10^-5, 2*10^-5}, {y0, -2*10^-5,         2*10^-5}, {z0, -2*10^-5, 2*10^-5},       Method -> {"MultidimensionalRule", "Generators" -> 9},        MaxRecursion -> ControlActive[2, 4], AccuracyGoal -> 2,        PrecisionGoal -> 2]],      Axes -> True,      AxesLabel -> {"X", "Y", "Z"}],      {{a, 0}, -1, 1},      {{b, 1}, -1, 1},      {{r, 1*10^-7}, 1*10^-7, 6*10^-6} ,      {{h, 5*10^-6}, 1*10^-6, 10*10^-6},      {{x, 0}, -1*10^-5, 1*10^-5},      {{y, 0}, -1*10^-5, 1*10^-5},      {{z, 0}, -1*10^-5, 1*10^-5}     ]