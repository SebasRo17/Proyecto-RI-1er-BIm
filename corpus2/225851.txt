While preparing SQL introductory material, I've ended asking myself about the line of thought followed by a developer when writing a query. I believe it could be too valuable from a beginner's point of view. Let me illustrate the subject with an example. For the sake of brevity, I won't include the database schema, hoping for the query to be descriptive enough by itself. Suppose we want to write a query for retrieving all _new_ customers from the last quarter. Typical. Me, the first thing I think about is the set of entities involved, beginning with the ones corresponding to the requested data. So, as I want to get customers, first of all I write the following query skeleton:                   SELECT           FROM Customers AS NewCustomer          WHERE       There immediately follow the remaining **entities**. In this fictional context, a new customer is any customer having placed an order for the first time:                   SELECT           FROM Customers AS NewCustomer     INNER JOIN Orders AS RecentOrder      LEFT JOIN Orders AS OlderOrder          WHERE             AND OlderOrder.Id IS NULL      With all the entities identified, I proceed writing the **relations** between them:                   SELECT           FROM Customers AS NewCustomer     INNER JOIN Orders AS RecentOrder             ON RecentOrder.CustomerId = NewCustomer.Id      LEFT JOIN Orders AS OlderOrder             ON OlderOrder.CustomerId = RecentOrder.CustomerId            AND OlderOrder.PlacementDate < RecentOrder.PlacementDate          WHERE             AND OlderOrder.Id IS NULL      Once I'm finished with the entities, it's time for me to define whatever **restrictions** to be applied over the resulting data set:                   SELECT            FROM Customers AS NewCustomer     INNER JOIN Orders AS RecentOrder             ON RecentOrder.CustomerId = NewCustomer.Id      LEFT JOIN Orders AS OlderOrder             ON OlderOrder.CustomerId = RecentOrder.CustomerId            AND OlderOrder.PlacementDate < RecentOrder.PlacementDate          WHERE RecentOrder.PlacementDate BETWEEN @fromDate AND @toDate            AND OlderOrder.PlacementDate < @fromDate            AND OlderOrder.Id IS NULL      Finally, I ask myself which concrete data **fields** I want the query to return, thus completing the `SELECT` clause:                   SELECT NewCustomer.FirstName, NewCustomer.LastName           FROM Customers AS NewCustomer     INNER JOIN Orders AS RecentOrder             ON RecentOrder.CustomerId = NewCustomer.Id      LEFT JOIN Orders AS OlderOrder             ON OlderOrder.CustomerId = RecentOrder.CustomerId            AND OlderOrder.PlacementDate < RecentOrder.PlacementDate          WHERE RecentOrder.PlacementDate BETWEEN @fromDate AND @toDate            AND OlderOrder.PlacementDate < @fromDate            AND OlderOrder.Id IS NULL      Of course, this is a very simple query, without aggregates, nested queries and other advanced stuff. But this is my overall train of thought, whatever the query's complexity:   1. Entities   2. Relations   3. Restrictions   4. Fields My question is, is this a suitable schema to be taught explicitly to a beginner? How could it be improved, anyway, in order to smooth her learning curve?