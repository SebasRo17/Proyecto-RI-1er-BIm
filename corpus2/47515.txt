I understand the importance of well documented code. But I also understand the importance of _self-documenting_ code. The easier it is to visually read a particular function, the faster we can move on during software maintenance. With that said, I like to separate _big_ functions into other smaller ones. But I do so to a point where a class can have upwards of five of them just to serve one public method. Now multiply five private methods by five public ones, and you get around twenty-five hidden methods that are probably going to be called only once by those public ones. Sure, it's now easier to read those public methods, but I can't help but think that having too many functions is bad practice. **[Edit]** People have been asking me why I think having too many functions is bad practice. The simple answer: it's a gut feeling. My belief is not, for one bit, backed by any hours of software engineering experience. It's just an uncertainty that gave me a "writer's block", but for a programmer. In the past, I have only been programming personal projects. It's just recently that I moved on to team-based projects. Now, I want to ensure that others can read and understand my code. I wasn't sure what will improve legibility. On one hand, I was thinking of separating one big function into other smaller ones with intelligible names. But there was another side of me saying that it's just redundant. So, I'm asking this to enlighten myself in order to pick the correct path. **[Edit]** Below, I included two versions of how I _could_ solve my problem. The first one solves it by _not_ separating big chunks of code. The second one _does_ separate things. First version:               public static int Main()     {         // Displays the menu.         Console.WriteLine("Pick your option");         Console.Writeline("[1] Input and display a polynomial");         Console.WriteLine("[2] Add two polynomials");         Console.WriteLine("[3] Subtract two polynomials");         Console.WriteLine("[4] Differentiate two polynomials");         Console.WriteLine("[0] Quit");     }      Second version:               public static int Main()     {         DisplayMenu();     }          private static void DisplayMenu()     {         Console.WriteLine("Pick your option");         Console.Writeline("[1] Input and display a polynomial");         Console.WriteLine("[2] Add two polynomials");         Console.WriteLine("[3] Subtract two polynomials");         Console.WriteLine("[4] Differentiate two polynomials");         Console.WriteLine("[0] Quit");     }      In the above examples, the latter calls a function that will only be used once throughout the program's entire runtime. Note: the code above is generalized, but it's of the same nature as my problem. Now, here's my question: which one? Do I pick the first one, or the second one?