I've been programming both in Unix and Windows environments. Mostly I've worked in Unix, where I've learned Unix Philosophy, which can be summarized as   * Write programs that do one thing and do it well.    * Write programs to work together.    * Write programs to handle text streams, because that is a universal interface. There seems to be a clear difference in programming cultures between Unix and Windows worlds, for example:   * GUI vs CLI   * Registry vs config files   * Lots of tools specializing for any given need vs group of generic orthogonal tools which can combined **Is there equivalent of "Unix philosophy" in Windows world?** What Unix- programmer can learn from Windows or should be aware of when moving to programming in Windows? I would like answers to focus on the best practices of Windows programming (and not a fight between Windows and Unix).