I have implemented a code in Mathematica 9 to simulate a scattering problem, and I got really disappointed about its performance when compared to Matlab. Since I am a newbie in Mathematica, would someone give me clues here?               ClearAll["Global`*"];     integrand[k_, P0_, P1_, rho_, l_] = Module[{x, h},        x = P1*l + P0*(1. - l) - rho;        h = HankelH2[0, Norm[x, 2]*k];        h        ];     innerInt[k_, P0_, P1_, rho_] := Module[{d, r, v, x},        d = Norm[P0 - P1, 2];(* distancia entre os pontos *)        v = integrand[k, P0, P1, rho, x];        r = NIntegrate[v, {x, 0, 1}]*d;        r        ];     solveSystemCylinder[segsStart_, segsEnd_, Ei_, k_, eta_] :=        Module[{colocPts, r, x, t, eiVals},        colocPts = (segsStart + segsEnd)/2;        t[x_] := MapThread[innerInt[k, #1, #2, x] &, {segsStart, segsEnd}];        r = Map[t, colocPts];        eiVals = Map[Ei[#, k] &, colocPts];        N[LinearSolve[r, eiVals]]        ];     Ei[p_, k_] := Exp[I*k*First[p]];          k := 2*Pi/Lambda;     Lambda := 1;     raio := Lambda;     eta := 1;     ND := 30;(* num de divis√µes *)     pts := N[raio*{Cos[#], Sin[#]} & /@ (Range[0, ND]*(2*Pi/ND))];     pts2 := ({0, 2*Lambda} + #) & /@ pts;     allPts := Join[pts, pts2];          startPts := Take[pts, Length[pts] - 1];     endPts := Take[pts, -(Length[pts] - 1)];          startPts2 := Take[pts2, Length[pts2] - 1];     endPts2 := Take[pts2, -(Length[pts2] - 1)];          (*resolve*)     Js = solveSystemCylinder[Join[startPts, startPts2],         Join[endPts, endPts2], Ei, k, eta];