I am learning how to catch exceptions, RecursionLimit::reclim in particular. To see how it works, I came up with the following example:               Clear[a]     a = 1     test[] :=      Check[If[a > 100, a, If[RandomReal[1000] < 1, Print["yupeee"];Print[a], test[]]],        a += 1; test[]]     test[]      With variable `a` I would like to count not how many times `Test[]` has been called, but how many times recursion limit has been exceeded. When I run it, I either get the output               "yupeee"      1      or               $RecursionLimit::reclim: Recursion depth of 1024 exceeded. >>     $RecursionLimit::reclim: Recursion depth of 1024 exceeded. >>     $RecursionLimit::reclim: Recursion depth of 1024 exceeded. >>     General::stop: Further output of $RecursionLimit::reclim will be suppressed during this calculation. >>     1117      I expected something like               "yupeee"     45      or               101      but definitly not               1117      Could someone please explain this strange number? Any idea how can I control the number of exceeded recursion limit? And since I am a beginner, PLEASE, try to make it simple. Thanks