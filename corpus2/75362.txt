Not sure if the title _really_ fits with the question, but figured it was the closest to give an overview of my question.. I'm working on a web application that (fairly heavily) employs the use of browser-specific CSS functions such as -moz-transform) and I'm curious as to what approach those with more experience developing these types of applications use. For context, I'm referringly _solely_ to front end development (my backend pipeline's pretty solid :)). The way I see it, there are two methods of development:   * Get new functionality working in all browsers, only introducing new code once all applicable browsers have all been tested.   * Get your functionality complete in one browser. Once your application is complete, start testing on other browsers and introduce fixes where needed. Generally, I've been following the latter. I feel as though it allows me to concentrate on the core functionality and get more completed faster than if I was essentially halting functional development every time something new was completed to deal with browser nuances. So, what practices do _you_ follow when it comes to client-side development? I don't work professionally as a web developer, so best practices in web development are a little tougher to come by, other than my own trial and error (and scouring w3c recommendations). However, always a good thing to learn from those smarter than you :).