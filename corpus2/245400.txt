In code I am reviewing a common approach I see to storing objects (eg a socket client object), is use a static container to hold the objects. The objects are created by some helper function, eg like this:               create_client(params) {       ...       client* cl = new client(...);       return cl;     }      The thing that confused me at first was function called like this:               if (!create_client (...))        //generate error message      ie a copy of the pointer just seems to be thrown away. But on investigation I see this in the client constructor:               client::client(...) {         ...         coll[id] = this;     }      Where coll is a map of id to a pointer to the object. But anyway, just a collection. coll is static (not sure if that is relevant). Is there a name for this idiom? Is it good practice?