AFAIK, the term _dispatch_ means just a method resolution and calling. It doesn't matter whether it is static or dynamic. I saw many people are using a term like _static dispatch_ and _dynamic dispatch_. What makes me confusing is there're also some mysterious descriptions. I was trying to understand what is _multiple dispatch_ , and it seems just _selecting a subprogram by parameter types_. If I understood it correctly, there can be both of _static multiple dispatch_ and _dynamic multiple dispatch_ , and we can say C++ is providing _multiple dispatch_ via free functions. But, Wikipedia article about _multiple dispatch_ says C++ has no multiple dispatch because it doesn't have dynamic resolution of function by multiple parameters. And I really don't get conceptual difference between Common Lisp example and C++ overloaded function. Because I can't find any conceptual difference unless the term _multiple dispatch_ implies _dynamic dispatch_. And I realized that I am confusing what the _dispatching_ really is I also checked QA entry Multiple Dispatch vs. Function Overloading, and it seems the answer is premising the term _dispatch_ is basically _dynamic_. That also makes me confusing. What is correct meaning of the term _dispatch_? Does it imply _dynamic resolution_? Is this term well defined or just conventional? What am I missing?