I am trying to evaluate an expectation, but it is taking an extremely long time although the expression itself should not be too complicated. My code is               myFun[a_, b_, c_, d_, e_, f_, g_, h_, i_] :=       Module[{\[Alpha], \[Beta], \[Gamma]},       \[Alpha] = Min[i - d + c, h];       \[Beta] = Min[i + d - c, g];       \[Gamma] = d + \[Alpha] - \[Beta] - c;        (a + e) \[Beta] - (b + f) \[Alpha] +         c*Piecewise[{{f, c > 0}, {e, True}}] + \[Gamma]*         Piecewise[{{f, \[Gamma] > 0}, {e, True}}] -         d*Piecewise[{{f, d > 0}, {e, True}}]]          Expectation[      myFun[a, b, c, d, e, f, g, h,        i], {g \[Distributed] GeometricDistribution[\[Lambda]a],        h \[Distributed] GeometricDistribution[\[Lambda]b]},       Assumptions ->        c \[Element] Integers && d \[Element] Integers &&         i \[Element] Integers && i > 0 && Sign[d] == Sign[c] &&         a \[Element] Reals && b \[Element] Reals && b <= 0 <= a &&         e \[Element] Reals && f \[Element] Reals &&         0 < f < e && \[Lambda]a \[Element] Reals && \[Lambda]b \[Element]          Reals && 0 < \[Lambda]a < 1 &&         0 < \[Lambda]b < 1 && ((-i <= d <= c <= 0) || (0 <= c <= d <= i))]      I have introduced all the assumptions to make the job as easy as possible, and if I plug in values for most of the function's arguments the evaluation does complete in a reasonable time. I need, however, the general analytical form (if one exists), and that computation has not terminated in over four hours on a fast machine. Suggestions? **Edit:** using linearity of expectation for and evaluating separately the expectation of               \[Gamma]*             Piecewise[{{f, \[Gamma] > 0}, {e, True}}]      and that of the rest of the function I managed to get the result. The full computation, meanwhile, was still running after almost 8 hours. Why did Mathematica not use the same trick automatically?