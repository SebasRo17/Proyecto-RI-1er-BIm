I'm curious after reading today about a minor code leakage from a large project to some blogs & forums (to say it short: the guys forgot to _anonymize_ the code before asking for help), all detected and (angrily) complained by the **customer** who reasonably wanted to protect the IP they paid for. First of all, I know it's a good practice (correct me if I'm wrong), when required to disclose code to public sites in order to ask for help, to take appropriate _anonymization_ measures, like renaming in all snippets something like `com.thecompanyiworkfor` with `com.somecompany` or `com.bank.MortgageRiskCalculatorClass` to `com.somecompany.SomeGenericRiskIndicatorClass` and so on... Now, suppose I would like to find out **if** and **where** (and maybe _who_ , but it's not important now and it's not part of the question) the originally restricted code was leaked in order to properly react (read "send all the guys an email telling either they delete/clean posts or something bad will happen to the culprit", haha). I suppose that a good way could be googling something _unique_ that you could find in the code. For example, if I worked for Inintech I would try to google for `com.inintech` to see if somebody was stupid enough to paste code full with `import`/`using` directives. It's not a comprehensive method, it's based on the assumption that someone is better trying to protect the _binding_ between company and code (ie. for security by obscurity reasons, public image...) rather than preventing intellectual property from being freely available to the public. My straight questions are: ### Do you know/think there are other good practices to perform such investigations? How would you do that if your boss asks to find if someone leaked the company's code? I don't think someone would ever try to google for an entire source code file in one query string :) ### Do you know if there are companies performing such investigations? If so, what could you tell me about them more than their names, like the way they work?