I have _very large_ rectangular strings (on the order of 30-100 MB in size), which I import into Mathematica from text files using a command like `text = Import["test.txt", "String"];`. A small representative example string `str` is below. Lines of text in the rectangular strings are delimited by the `"\n"` character. I would like to write an _efficient_ function that extracts columns of text from the string. It must be efficient because my actual strings are so large. It seems that splitting the string into individual characters, using something like `Map[Characters, StringSplit[str, "\n"]]`, is not an option, because it seems to take too much memory. So, in `takeFun` below, I have instead located the positions of characters in each column. Can you think of a more efficient way to write `takeFun`? By efficient, I am referring to memory conservation, not speed. Thank you!               str =      "ABCDE     abcde     12345";          pos = Prepend[StringPosition[str, "\n"][[All, 1]], 0];          (* Define a new string take function *)     takeFun[s_, p_, index_] := StringTake[s, Partition[p + index, 1]]          (* Take first column *)     takeFun[str, pos, 1]          (* Take second column *)     takeFun[str, pos, 2]          (* Take fifth column *)     takeFun[str, pos, 5]      which gives this output: > {"A", "a", "1"} > > {"B", "b", "2"} > > {"E", "e", "5"}