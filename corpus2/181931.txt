Persistence ignorance is ability to retrieve/persist standard objects, where standard objects are considered as classes focused on particular business problem and thus don't contain any `infrastructure-related logic`. In DDD a _Repository pattern_ is used to achieve PI. Assuming we don't use ORM's POCO objects to model the _Domain_ , then our _Domain objects_ don't have to adhere to design requirements of a particular O/RM ( such as using _default constructor_ or marking properties as `virtual` ). Such _Domain objects_ would be considered _Persistence Ignorant_. But if we want these _Domain Objects_ to also support features such as _lazy loading_ , then their properties must contain some logic which at some point would need to check whether related data was already loaded and if it wasn't, it would contact the appropriate _Repository_ and request the related data. Now even though these _Domain Object_ are completely unaware of how they are being persisted and as such their _Domain_ is completely decoupled from the underlying _DAL provider_ , couldn't we still argue that such _Domain Objects_ contain `Infrastructure-related logic` and thus still violate _PI_? Thank you