There are 2 ways to make a function listable on the list: Use `Map` or use `SetAttributes`. My question is, which one is faster, more efficient? Does `SetAttributes` use `Map` or another way?               In[135]:= f/@{1,2,3}     Out[135]= {f[1],f[2],f[3]}          In[136]:= g[{1,2,3}]     Out[136]= g[{1,2,3}]          In[137]:= SetAttributes[g,Listable]               g[{1,2,3}]     Out[138]= {g[1],g[2],g[3]}      === EDIT === Thank for the comments of @Yves Klett and of @Leonid, I do a check: There are so many functions that are listable in _Mathematica_ ; I wonder that help improving performance in _Mathematica_. There are total 379 Listable buit-in functions.               Select[Names["*"],MemberQ[Attributes[#],Listable]&]//Length     379      I'm interested in numerical calculation, so I do the `Timing` check:               list=N[Range[10^7]];          Sin/@list;//AbsoluteTiming     {0.721041, Null}          Sin[list]; // AbsoluteTiming     {0.147008, Null}      We found that `Listable` is much faster than using `Map`. So for numerical evaluation, should I `SetAttribute` my function as Listable instead of using `Map`?