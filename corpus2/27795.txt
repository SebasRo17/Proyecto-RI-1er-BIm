Update: A Mathematica wrapper for (https://github.com/zitmen/cuLM) should allow for us to directly implement the Levenberg-Marquardt algorithm in CUDA for nonlinear least squares fitting. In a previous question of mine (here) I asked how one could best use _Mathematica_ 's model fitting capabilities to fit a 2D Gaussian to a set of data.   Two very nice answers were provided by Rahul Narain (who directly computed a mean and covariance matrix for my example data and then used `MultinormalDistribution[]`) and Sjoerd C. de Vries (who used `NonlinearModelFit`). **Questions:**   * Could these methods be adapted to work on a GPU core in _Mathematica 9_ (perhaps via `CUDALink`)?    * Is there some way of using _Mathematica_ to do GPU-based nonlinear least squares (or some other fitting strategy) to accomplish this?