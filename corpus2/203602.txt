We have a module in an application which stores data in multiple files and multilevel directories and access them from multiple threads (both reads and writes). The directory structure is based on a splitted hash value, like:               b1/94/6a/92/a.txt     b1/94/6a/ee/a.txt     a1/0e/db/bb/b.txt     ...      If a caller removes a file the module deletes empty directories immediately. How much should be the concurrency level of the module? Is it worth to create and delete folders from multiple threads at the same time? Can filesystems handle these effectively? Is it worth to use a multi-threaded module? (It would be much easier to write a single-threaded one.) (The application is written in Java and mainly runs on Windows, NTFS, non-SSDs but I'm also interested in other operating and filesystems if there are differences.)