I want to compute equations and assign them to variable. This is a wxMaxima program that calculated symbolic PID gains for an integrating first order system               remvalue(all)$                      /* Undefine                         */     Gp: K*%alpha/(s*(s+%alpha));        /* System transfer function         */     Gc: Ki/s+Kp+Kd*s;                   /* Simple PID controller            */     CLTF: ratsimp(Gc*Gp/(1+Gc*Gp));     /* Closed loop transfer function    */     CE: expand(denom(ratsimp(CLTF)));   /* Characteristic equation          */     DIFCE: expand(CE-(s+%lambda)^3);     Ki: solve(coeff(DIFCE,s,0),Ki);     Kp: solve(coeff(DIFCE,s,1),Kp);     Kd: solve(coeff(DIFCE,s,2),Kd);     grind(Ki,Kp,Kd);      The grind outputs text that I can paste here               [Ki = %lambda^3/(%alpha*K)]$         [Kp = 3*%lambda^2/(%alpha*K)]$     [Kd = (3*%lambda-%alpha)/(%alpha*K)]$      Notice that Ki, Kp and Kd represent equations. This is what I want because I can change the values and compute new gains. This is my Mathematica equivelent               ClearAll["Global`*"];     Subscript[G, p][s] = (K*\[Alpha])/(s*(s + \[Alpha]))     Subscript[G, c][s] = Ki/s + Kp + Kd*s     T[s] = Subscript[G, c][s]*        Subscript[G, p][s]/(1 + Subscript[G, c][s]*Subscript[G, p][s]) //        Simplify     Solve[{CoefficientList[Denominator[T[s]], s] ==         CoefficientList[(s + \[Lambda])^3, s]}, {Ki, Kp, Kd}]      This looks ugly because I haven't found the Mathematica version of grind() yet. Notice that the results are in the form Ki->Lamba^3/(K*Alpha). The -> is not an assignment so I can't treat Ki as a formula.                            3                    2         \[Lambda]          3 \[Lambda]         -\[Alpha] + 3 \[Lambda]     {{Ki -> ---, Kp -> ----, Kd -> --------}}         K \[Alpha]        K \[Alpha]           K \[Alpha]      How do I assign Lambda^3/(K*Alpha) using equations instead of by hand? I give up. formatting what get much better. Edit Solve[{CoefficientList[Denominator[T[s]], s] == CoefficientList[(s + [Lambda])^3, s]}, {Ki, Kp, Kd}] /. Rule-> Equal Does not work. When I type Ki for I get Ki in return and not the equal for Ki. This looks like it works s = Solve[{CoefficientList[Denominator[T[s]], s] == CoefficientList[(s + [Lambda])^3, s]}, {Ki, Kp, Kd}] {{Ki, Kp, Kd}} = { Ki, Kp, Kd } /. s