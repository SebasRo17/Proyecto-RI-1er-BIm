I'm trying to compare Haskell's type classes and C#'s interfaces. Suppose there is a `Functor`. Haskell:               class Functor f where       fmap :: (a -> b) -> f a -> f b      How to implement this type class as interface in C#? What have I tried:               interface Functor<A, B>     {         F<B> fmap(Func<A, B> f, F<A> x);     }      This is invalid implementation and I'm actually stucked with generic `F` type that should be returned by `fmap`. How it should be defined and where? Is it impossible to implement `Functor` in C# and why? Or maybe there is another approach?