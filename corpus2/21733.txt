I have come across a weird phenomenon in Mathematica when dealing with large arrays. When generating a list with all the possible subsets of three elements of another list (thus having elements which are lists of 3 elements), I have observed that if you extract these elements in three separate arrays, Mathematica uses much less memory to store the data, even if the total number of elements we have is exactly the same. My question is surely naive: why does this happen? This is a minimal code that sets an example of what I'm saying, recording the memory used by Mathematica in every step:               n = 100;     memvec = {MemoryInUse[]};          timesubset = Subsets[Range[1, n], {3}];     AppendTo[memvec, MemoryInUse[]];          (*Extract all the first elements*)     t0 = timesubset[[All, 1]];     AppendTo[memvec, MemoryInUse[]];          (*Extract all the second elements*)     t1 = timesubset[[All, 2]];     AppendTo[memvec, MemoryInUse[]];          (*Extract all the third elements*)     t2 = timesubset[[All, 3]];     AppendTo[memvec, MemoryInUse[]];          Clear[timesubset];     AppendTo[memvec, MemoryInUse[]];          Clear[t1];     Clear[t2];     Clear[t0];     AppendTo[memvec, MemoryInUse[]];          ListLinePlot[memvec]      I feel there is an important concept on how is the memory managed that I am missing here.