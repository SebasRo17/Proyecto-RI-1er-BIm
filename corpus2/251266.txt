I am lead developer for a multiplayer game in a small startup company. I would like to present here my solution for token based authentication and hear your opinions about possible weak spots. I am not a security expert, far from it actually. I don't expect that I have made something bullet proof. Just want to minimize some obvious risky paths. Game is written entirely in Javascript and HTML5 and it's running NodeJS backend. Game account is authenticated by one the providers (usually OAuth2). This is simple step of clicking on the button, being transferred to provider website where user confirms access. When it gets back to us, I use provided ID of the user and lookup account in our database. New accounts are created right away here. Now having the account detail, I am using JWT to create token that is encrypted by secret key and contains internal account ID and also identity provided from authentication process. This token is then transmitted to the client browser and stored in localStorage. Most of the communication with the game server is over WebSocket. XHR is used sparsely. I am using Socket.IO library as the wrapper, but I have completely bypassed any handshaking process here. What I do is to let client connect with the server and then I am expecting from him token to be sent over WebSocket within small timeframe. If it fails, client is disconnected. Once I receive the token, it's pretty straightforward, just decrypt the token, read the identity information, fetch the account and compare with account ID with the one stored in the token. That's pretty much it so far. I realize one weak spot when someone can perhaps steal the token and store it in it's localStorage. However since content of the localStorage is not transmitted with every request as it happens with cookies, it makes it somewhat harder. Communication through WebSocket is secured by SSL of course putting another big obstacle in the way. Another way would be XSS attack which would allow someone to access localStorage directly. I would like to prevent this by using CSP header. I am also planning to introduce some kind of expiration of the tokens, but I am not yet sure how to approach it. Do you have other ideas what could be a weak spot for this ?