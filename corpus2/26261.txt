Given a list of the form `{1, 3, 5, 7, ...}`, the lucky numbers are obtained by looking at the first list element after 1 (so 3 in this case), and deleting all list elements whose position in the list is a multiple of the number after 1. So, if we do this to `Range[1, 100, 2]`, the result would be:               {1, 3, 7, 9, 13, 15, 19, 21, 25, 27, 31, 33, 37, 39, 43, 45, 49, 51,      55, 57, 61, 63, 67, 69, 73, 75, 79, 81, 85, 87, 91, 93, 97, 99}      This is done iteratively, so that the list element two positions to the right of 1 in the resulting list (in this case, 7) becomes the new number. List elements whose position in the list is a multiple of that number are then deleted, and so on. The numbers that remain are the "Lucky Numbers", and in the case of `Range[1, 100, 2]`, they are:               {1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51,      63, 67, 69, 73, 75, 79, 87, 93, 99}      The function I defined to determine these lucky numbers is as follows:               luckyNumbers[z : {1, __?OddQ}] :=       Module[{i = 2},        FixedPoint[Delete[#, Partition[Range[#[[i]], Length[#], #[[i++]]], 1]] &, z]      ]      As far as I know, it works as expected. I'm looking for criticism with regards to efficiency and things of that nature. What would you, the StackExchange community, have done differently?