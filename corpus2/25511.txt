Say I generate some Graphics3D object, e.g.:               Graphics3D[{Red, Sphere[{0, 0, 0}, 1], Blue, Sphere[{1, 0, 0}, 1]}]      Does it make sense to ask for the color of a "voxel" / volumetric pixel in this image? In other words, is it possible to call some three-dimensional analogue of PixelValue or ImageValue to determine what region in the 3D box is red or blue? What might happen at the intersection of the red and blue spheres? Shouldn't this be possible given that I can select a subregion of the graphics3D object to display in some bounding box? And if so, couldn't I just make the bounding box around the area of interest arbitrarily small, save the output as a TIFF and call ImageValue[] or PixelValue[] on the center of the TIFF image? Surely there's a better way to proceed? Update: george2079 hits the nail on the head in my opinion with his suggestion that we should think about this problem as a problem of making a 3D implementation of Rasterize[]. A problem that may or may not be relevant, though, is that most of the Graphics3D objects are hollow. To see this, try zooming around a Graphics3D output using some amazing code written by the user rm -rf: Implementing a first person view of 3D objects in a scene