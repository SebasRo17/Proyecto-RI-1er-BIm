I have a number of business logic methods that store and retrieve (with filtering) objects and lists of objects from cache. Consider               IList<TObject> AllFromCache() { ... }          TObject FetchById(guid id) { ... }          IList<TObject> FilterByPropertry(int property) { ... }      `Fetch..` and `Filter..` would call `AllFromCache` which would populate cache and return if it isn't there and just return from it if it is. I generally shy away from unit testing these. What are best practices for Unit Testing against this type of structure? I considered populating cache on TestInitialize and removing on TestCleanup but that doesn't feel right to me, (tho it could well be).