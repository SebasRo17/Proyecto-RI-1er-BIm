I am new to _Mathematica_ and wanted to solve an equation that depends on parameters. The code is below                   theta = 0.3;         v = 0.05;         alpha = 1;              q := InverseCDF[ GammaDistribution[ alpha, 1], (1 - theta)]         rk[k_, r_] := r k         rkplus1[k_, r_] := r k + 1              Lfun[k_, r_] :=            (1/rkplus1[k, r])^alpha Exp[ rk[k,r] q] CDF[ GammaDistribution[ alpha,                                                                           1/(rk[k, r] +1)],                                                        q]              Lplustheta[k_, r_] := theta + Lfun[k, r]         logLplustheta[k_, r_] := Log[ Lplustheta[k, r]]         LHS[k_, r_] := rk[k, r] q Lfun[k, r]/Lplustheta[k, r] - logLplustheta[k, r  ]         RHS[r_] := r v         r := 1;             While[ r < 100,              { While[ LHS[ k 0.00001, r 0.05] < RHS[r 0.05], a = k 0.00001; k++],                 Print[ r 0.05, " ", v, " ", theta, " ",                       Lfun[k 0.00001, r 0.05], " ", a, " ",                        a/Lplustheta[ k 0.00001, r 0.05], " ",                        a - (a/Lplustheta[k 0.00001, r 0.05])]; k := 1}; r++]      The code works but is extremely slow. Is there a faster way to accomplish what I trying to do?   Essentially solve `RHS - LHS == 0` for `k`, for a range of `r`, and print?