The hot topic in our organization is Service Design Approach. First Approach - The team wants to design services which essentially have one operation, can take any XML and return response XML message. The operation and the parameters are in the request XML message. Once the message is received the service determines the action/method that is requested. Reasons cited are ease of deployment and flexibility of introducing future operations. Second Approach - The second group is adamant about well defined service contracts and specific messages. Reasons cited are better performance, message validation and versioning. This is my preferred approach as well. What are the Pros and Cons? Can there be challenges introducing an ESB later in the architecture if we have chosen the first approach?