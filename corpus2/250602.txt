The purpose of the `Accept` header from the client is to tell the server what kind of data it will accept as a response to its request. We can set this header in asynchronous HTTP calls in Javascript, but not in HTML. For example, consider a link such as `<a href="/some/resource">Get as CSV</a>`. If an attribute like `accept="text/csv"` were allowed, and the browser interpreted that to send an `Accept: text/csv` header with that request, the server could respond to the semantics of the request. Without it, we might create a link such as `<a href="/some/resource?format=csv">Get as CSV</a>`, and the server must respond to the arbitrary query string parameter instead. What are the reasons, both technical and historical, behind the HTML\DOM specification not allowing the setting of an `Accept` header through markup?