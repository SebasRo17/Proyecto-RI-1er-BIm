Normally what happens is that I work on something for a while and then when I am done I check it in(After the test/review process of course). Sometimes I have to go back and fix something that I got wrong the first time due to me not understanding the problem enough, lack of testing, etc.. What is an acceptable rate for this? Ideally you would hope that you never have to go back but sometimes you do. What rate does the average programmer have and what is the expert programmers rate? Do people track this? Lastly what kind of checks are best at preventing this? PS: I am not counting the cases where the requirements have changed and you have to go back in. I know that there is no real answer to this so let me change the actual question to: "What general checks could be implemented, before code is sent for review or checked in, that would help prevent the need to revisit the change later?"