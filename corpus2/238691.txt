* Say I have 9 jobs with estimates of how long they will take to complete, and 3 queues that process these jobs - this constitutes one batch. Note that all the jobs are allocated to a queue beforehand and not at run-time. So with poor-scheduling, some queues may remain idle while others continue to process a job.    * All these jobs should be distributed across the queues in such a way that the total time to complete all the queues is nearly equal.  Consider: 1.Below Q2,Q3 complete in 15mins and remain idle while Q1 takes another 10mins to complete. Batch1:               +------+----+----+----+     |  #   | Q1 | Q2 | Q3 |     +------+----+----+----+     | 1    |  5 |  5 |  5 |     | 2    | 15 |  5 |  5 |     | 3    |  5 |  5 |  5 |     +------+----+----+----+     | Time | 25 | 15 | 15 |     +------+----+----+----+     | Total| 25           |     +------+----+----+----+      2.Now ideally the jobs should be distributed as...               +------+----+----+----+     |  #   | Q1 | Q2 | Q3 |     +------+----+----+----+     | 1    | 15 |  5 |  5 |     | 2    |  - |  5 |  5 |     | 3    |  - |  5 |  5 |     | 4    |  - |  5 |  5 |     +------+----+----+----+     | Time | 15 | 20 | 20 |     +------+----+----+----+     | Total| 20           |     +------+----+----+----+      * * * This seems to be a straightforward scheduling problem, but I am dealing with hundreds of such jobs, divided into multiple batches. Where each batch will start only on the completion of the first. So I would require some algorithm to decide the schedule. Any ideas..? Thanks * * * **Update:** _Adding more information based on feedback..._   * The jobs in a batch are fixed.    * There are no dependencies between jobs within a batch, but there are dependencies between batches. _So we can look at solving the problem for a single batch and the solution will apply across all batches._   * Real-world problem: I am modelling a problem on loading data (ETL) and the entire load process takes 5-6hrs, which has several batches. Looking for ways to reduce the overall time.