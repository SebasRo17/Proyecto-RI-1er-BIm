I've been reading over the Enumerable module in Ruby, and it contains a few methods that follow the pattern of               enum.foo(n) {|obj| block } → nil     enum.foo(n) → an_enumerator      Which is to say, they seem to return an iterator when chained and nothing otherwise. What's the reasoning behind taking this approach instead of just returning a sequence? (I'm asking about general reasoning for this approach, not necessarily just its use in Ruby)