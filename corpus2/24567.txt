Our company is hiring C++ developers and we have to estimate applicants skills based on resumes and (usually) code samples. I find it problematic to decide whether I'm realistic in my assessments. For example, there was a guy who stated two software development jobs, 5 years of experience total. He claimed that he worked in a project for porting some operating system to new hardware and one of his duties was "fixing bugs in the operating system". Then I open the sample and see the following:                char buffer[someSize];      strncpy( buffer, someString, someSize );      obviously this code will not null-terminate the destination once the string is of length equal to or greater than `someSize` and the program might run into undefined behavior. Now my thought goes like this: "that guy claims he fixed bugs in the operating system code and now he can't properly use a simplest C runtime function... WTF???" and this motivates me to write a feedback to our HR that he can only qualify for a position right above the entry level. What bothers me I can't get rid of a feeling that I'm being too harsh and demanding. How can I decide if my expectations are realistic or not in such situations?