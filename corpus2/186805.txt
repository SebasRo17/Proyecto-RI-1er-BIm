What are the major obstacles (and potential solutions, if known) for implementing "continuous delivery" software development when an application relies on varied programming languages or modules... especially when the same version-control and/or automated testing packages do not exist for those disparate platforms? For example, a **Java web application** that is deployed and running on a **Linux** host, talking to a **DB2** database back-end via **JDBC** , with occasional calls to stored-procedures that wrap **RPG** or **COBOL** or **C** programs on that same back-end? What if the code for all of that cannot be contained in **the same version-control/source-control system**? **Is it possible to get to the illusive "push-botton release" in this situation? Or do you have to have EVERYTHING in the SAME VCS?** Additionally, how would one manage the creation/modification of database schema, and so- called soft-code control values in the database? **Is there a more-or-less "canonical" published work on this type of thing?**