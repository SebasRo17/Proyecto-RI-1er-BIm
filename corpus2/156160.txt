Does it make sense to use an ORM in Android development or is the framework optimized for a tighter coupling between the UI and the DB layer? * * * **Background** : I've just started with Android development, and my first instinct (coming from a .net background) was to look for a small object- relational mapper and other tools that help reduce boilerplate clode (e.g. POJOs + OrmLite \+ Lombok). However, while developing my first toy application I stumbled upon a UI class that explicitly requires a database cursor: `AlphabetIndexer`. That made me wonder if maybe the Android library is not suited for a strict decoupling of UI and DB layer and that I will miss out on a lot of useful, time-saving features if I try to use POJOs everywhere (instead of direct database access). * * * **Clarification** : I'm quite aware of the advantages of using ORM _in general_ , I'm specifically interested in how well the Android class library plays along with it.