the following function can be compiled successfully               Clear[mat]         mat = Compile[{e, kx, {ii, _Integer}, {label, _Integer}, η},            Inverse[{{e - I η,               -E^(-I kx), 0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0, 0, 0, 0,                0}, {-E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0,                0, 0, 0, 0, 0, 0}, {0, -E^(((I kx)/2)),                e - I η, -E^(-I kx), 0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0,                0, 0}, {-E^(-((I kx)/2)), 0, -E^(I kx),                e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0,                0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),                0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0}, {0, 0, -E^(-((I kx)/2)),                0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0, 0,                0}, {0, 0, 0, 0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),                0, -E^(((I kx)/2)), 0, 0, 0, 0}, {0, 0, 0, 0, -E^(-((I kx)/2)),                0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0,                0}, {0, 0, 0, 0, 0, 0, 0, -E^(((I kx)/2)),                e - I η, -E^(-I kx), 0, -E^(((I kx)/2)), 0, 0}, {0, 0, 0,                0, 0, 0, -E^(-((I kx)/2)), 0, -E^(I kx),                e - I η, -E^(-((I kx)/2)), 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0,                0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),                0, -E^(((I kx)/2))}, {0, 0, 0, 0, 0, 0, 0, 0, -E^(-((I kx)/2)),                0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0}, {0, 0, 0, 0,                0, 0, 0, 0, 0, 0, 0, -E^(((I kx)/2)),                e - I η, -E^(-I kx)}, {0, 0, 0, 0, 0, 0, 0, 0, 0,                0, -E^(-((I kx)/2)), 0, -E^(I kx), e - I η}}][[            2*(ii - 1) + label, 2*(ii - 1) + label]], CompilationTarget -> "C"]      as you can see the function calc the one of the matrix element of the inverse matrix. the result of the above code is               CompiledFunction[{e,kx,ii,label,\[Eta]},Block[{Compile`$498,Compile`$502,Compile`$503,Compile`$507,Compile`$508,Compile`$509,Compile`$510,Compile`$504,Compile`$505,Compile`$506,Compile`$514,Compile`$515,Compile`$516,Compile`$511,Compile`$512,Compile`$513,Compile`$518,Compile`$519,Compile`$520},Compile`$498=I \[Eta];Compile`$502=-Compile`$498;Compile`$503=e+Compile`$502;Compile`$507=1/2;Compile`$508=I kx Compile`$507;Compile`$509=E^Compile`$508;Compile`$510=-Compile`$509;Compile`$504=-I kx;Compile`$505=E^Compile`$504;Compile`$506=-Compile`$505;Compile`$514=-Compile`$508;Compile`$515=E^Compile`$514;Compile`$516=-Compile`$515;Compile`$511=I kx;Compile`$512=E^Compile`$511;Compile`$513=-Compile`$512;Compile`$518=ii-1;Compile`$519=2 Compile`$518;Compile`$520=Compile`$519+label;Inverse[{{Compile`$503,Compile`$506,0,Compile`$510,0,0,0,0,0,0,0,0,0,0},{Compile`$513,Compile`$503,Compile`$516,0,0,0,0,0,0,0,0,0,0,0},{0,Compile`$510,Compile`$503,Compile`$506,0,Compile`$510,0,0,0,0,0,0,0,0},{Compile`$516,0,Compile`$513,Compile`$503,Compile`$516,0,0,0,0,0,0,0,0,0},{0,0,0,Compile`$510,Compile`$503,Compile`$506,0,Compile`$510,0,0,0,0,0,0},{0,0,Compile`$516,0,Compile`$513,Compile`$503,Compile`$516,0,0,0,0,0,0,0},{0,0,0,0,0,Compile`$510,Compile`$503,Compile`$506,0,Compile`$510,0,0,0,0},{0,0,0,0,Compile`$516,0,Compile`$513,Compile`$503,Compile`$516,0,0,0,0,0},{0,0,0,0,0,0,0,Compile`$510,Compile`$503,Compile`$506,0,Compile`$510,0,0},{0,0,0,0,0,0,Compile`$516,0,Compile`$513,Compile`$503,Compile`$516,0,0,0},{0,0,0,0,0,0,0,0,0,Compile`$510,Compile`$503,Compile`$506,0,Compile`$510},{0,0,0,0,0,0,0,0,Compile`$516,0,Compile`$513,Compile`$503,Compile`$516,0},{0,0,0,0,0,0,0,0,0,0,0,Compile`$510,Compile`$503,Compile`$506},{0,0,0,0,0,0,0,0,0,0,Compile`$516,0,Compile`$513,Compile`$503}}][[Compile`$520,Compile`$520]]],-CompiledCode-]      I want to speed it a little, So I defined a function                Clear[invmat]     invmat[m_?MatrixQ, i_, j_] :=       Det[Drop[m, {j}, {i}]]*(-1)^(i + j)/Det[m]      which gives (i,j)th element of the inverse matrix of m directly with calc the whole matrix inverse. and then I compile the function below               Clear[mat2]     mat2 = Compile[{e, kx, {ii, _Integer}, {label, _Integer}, η},        invmat[{{e - I η,          -E^(-I kx), 0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0, 0, 0, 0,           0}, {-E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0, 0,           0, 0, 0, 0, 0}, {0, -E^(((I kx)/2)), e - I η, -E^(-I kx),           0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0, 0, 0}, {-E^(-((I kx)/2)),           0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0, 0,           0, 0, 0}, {0, 0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),           0, -E^(((I kx)/2)), 0, 0, 0, 0, 0, 0}, {0, 0, -E^(-((I kx)/2)),           0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0, 0,           0}, {0, 0, 0, 0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),           0, -E^(((I kx)/2)), 0, 0, 0, 0}, {0, 0, 0, 0, -E^(-((I kx)/2)),           0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0, 0, 0}, {0,           0, 0, 0, 0, 0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),           0, -E^(((I kx)/2)), 0, 0}, {0, 0, 0, 0, 0, 0, -E^(-((I kx)/2)),           0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0, 0, 0}, {0, 0, 0,           0, 0, 0, 0, 0, 0, -E^(((I kx)/2)), e - I η, -E^(-I kx),           0, -E^(((I kx)/2))}, {0, 0, 0, 0, 0, 0, 0, 0, -E^(-((I kx)/2)),           0, -E^(I kx), e - I η, -E^(-((I kx)/2)), 0}, {0, 0, 0, 0, 0,           0, 0, 0, 0, 0, 0, -E^(((I kx)/2)),           e - I η, -E^(-I kx)}, {0, 0, 0, 0, 0, 0, 0, 0, 0,           0, -E^(-((I kx)/2)), 0, -E^(I kx), e - I η}},         2*(ii - 1) + label, 2*(ii - 1) + label], CompilationTarget -> "C"]      **But`mat2` cannot be compiled because the output is the same. I think at least it should compile the matrix variable in `invmat`** the output of `mat2` is               CompiledFunction[{e,kx,ii,label,η},invmat2[{{e-I η,-E^(-I kx),0,-E^(((I kx)/2)),0,0,0,0,0,0,0,0,0,0},{-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0,0,0,0,0,0,0,0,0,0,0},{0,-E^(((I kx)/2)),e-I η,-E^(-I kx),0,-E^(((I kx)/2)),0,0,0,0,0,0,0,0},{-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0,0,0,0,0,0,0,0,0},{0,0,0,-E^(((I kx)/2)),e-I η,-E^(-I kx),0,-E^(((I kx)/2)),0,0,0,0,0,0},{0,0,-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0,0,0,0,0,0,0},{0,0,0,0,0,-E^(((I kx)/2)),e-I η,-E^(-I kx),0,-E^(((I kx)/2)),0,0,0,0},{0,0,0,0,-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0,0,0,0,0},{0,0,0,0,0,0,0,-E^(((I kx)/2)),e-I η,-E^(-I kx),0,-E^(((I kx)/2)),0,0},{0,0,0,0,0,0,-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0,0,0},{0,0,0,0,0,0,0,0,0,-E^(((I kx)/2)),e-I η,-E^(-I kx),0,-E^(((I kx)/2))},{0,0,0,0,0,0,0,0,-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η,-E^(-(1/2) (I kx)),0},{0,0,0,0,0,0,0,0,0,0,0,-E^(((I kx)/2)),e-I η,-E^(-I kx)},{0,0,0,0,0,0,0,0,0,0,-E^(-(1/2) (I kx)),0,-E^(I kx),e-I η}},2 (ii-1)+label,2 (ii-1)+label],-CompiledCode-]      So how to Compile `mat2`?