I think this problem is not the hardest one, but I can't hit on it. I want to NSolve an equation. For this equation I use a transformation rule "ampTimes". First I used it like this:               ampTimes = {tf -> .03, th -> .002}     NSolve[E^(th/t) + E^((tf + th)/t) == 2 E^(tf/t) /. ampTimes, t, Reals]      > >     {tf -> 0.03, th -> 0.002} >     {{t -> 0.00288552}} >   and it worked. I get a solution for `t`. Due to clearity, I switched to this expression:               ampTimes = {tf -> (.315 - .285), th -> (.287 - .285)}     NSolve[E^(th/t) + E^((tf + th)/t) == 2 E^(tf/t) /. ampTimes, t, Reals]      > >     {tf -> 0.03, th -> 0.002} >     {} >   The output for `ampTimes` stays the same, but I didn't get a solution for my equation. I thought, the transformation rule may couldn't handle the difference, so I changed it to               (.315 - .285);     (.287 - .285);     ampTimes = {tf -> %%, th -> %}     NSolve[E^(th/t) + E^((tf + th)/t) == 2 E^(tf/t) /. ampTimes, t, Reals]      > >     {tf -> 0.03, th -> 0.002} >     {} >   Again, the output fpr `ampTimes` seems right, but I didn't get a solution. It wouldn't be a problem to use the transformation rule explicitly, but as said, wouldn't be supporting for clearity. Plus the problem get me and I realy want to know WHY it doesn't work the way I thought. EDIT: I guess it has something to do with the precision.