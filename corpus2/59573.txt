I am interested in evaluating a two dimensional interpolating function produced by solving the wave equation. Here is the code that includes the resulting interpolating function.               pde = D[y[x, t], t, t] == D[y[x, t], x, x]          solnDerivative = NDSolve[{pde, y[x, 0] == Exp[-(x)^2], Derivative[0, 1][y][x, 0] == 0,        Derivative[1, 0][y][-50, t] == Derivative[0, 1][y][-50, t],       Derivative[1, 0][y][50, t] == - Derivative[0, 1][y][50, t]},        Derivative[0, 1][y][x, t], {x, -50, 50}, {t, 0, 130}]          ifunDerivative  = First[Derivative[0, 1][y][x, t] /. solnDerivative]      Here, I wanted to first integrate squared of `ifunDerivative` with respect to t from `{0,130}` then get a new interpolating function as a function of `x` only. The first problem I ran into is that it won't evaluate this integral and spits back out the input.               integratedFunction = Integrate[(ifunDerivative[x, t])^2, {t, 0, 130}, x]      How can I go about numerically integrating interpolating function squared with respect to `t`? Then, obtain a solution that depends only on `x`? Please help me! Thank You!