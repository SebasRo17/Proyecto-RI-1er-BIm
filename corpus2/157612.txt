Ok, I have used the word _python_ in the question, but it well could be language agnostic in that: If a language X has a well optimised compiler targeting assembly and an OS is written in that language, then will it compete favorably with C in benchmarks? This comes from two conceptions I have (could be wrong):   * Languages are defined by grammar rules (syntax-semantics); they themselves are independent of performance. Performance is a function of implementation.   * C is often efficient because the most popular OS(es) are written in it - so limited wrapping and unwrapping - and it compiles to (these days) well optimized assembly code. And, yes, before some of us pull out guns, I understand and appreciate that in certain situations some languages may outperform C, but by and large C does better than most languages in most situations.