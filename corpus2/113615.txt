I'm a recent graduate and there are a few (three generally) languages I switch between based on the requirement. What I've found is I always have to look up syntax whenever I code. I know I'm not alone because Ryan Dahl, author of node.js, was not sure of JavaScript syntax during a demo. That's somewhat reliving to know. On the other hand, companies recruiting (at least FB because that's what they have told me for the upcoming interview) expect you to _quickly find the most effecient_ algorithm in your head first and then code it bug free. I don't know how much creative thinking one can do under pressure but for this question I'm concerned with the second part. So my question, > How does one before proficient learn "inside workings", idioms and in > general become proficient in a language? If the advice is language specific, I love Python the most so how does become a _Pythonista_? I want to be able to code without having to look up syntax, know and use idioms wherever apt, follow the standard practices, etc. ## Update Those who suggest practice, practice only makes permanent. Practice reinforces what you already know. So that may work for syntax, but you have other issues like internal workings, idioms, not-as-expected cases, etc.