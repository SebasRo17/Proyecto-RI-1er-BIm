I am rereading Refactoring by Martin Fowler. In Chapter 4, Building Tests, I came across the following passage. > In fact, one of the most usefull times to write tests is before you start > programming. When you need to add a feature, begin by writing the test. This > isn't as backward as it sounds. By writing the test you are asking yourself > what needs to be done to add the function. Writing the test also > concentrates on the interface rather than the implementation (always a good > thing). It also means you have a clear point at which you are done coding-- > when the test works. While I am an advocate of test-driven development now, I did not remember having been introduced to the concept when I originally read this book nearly 5 years ago. According to Amazon.com, this book was originally published on July 8, 1999. Is this the first published reference to test-first programming or is there something even earlier?