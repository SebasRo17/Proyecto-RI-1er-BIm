I don't even know whether this is the correct StackExchange site to ask such a question but here it is... I principally lurk on StackOverflow; and I am frankly flabbergasted by the number of questions on this site with regards to file handling still using the old file API. But I am even more appalled by the number of answers _still_ giving a solution using this API without even asking if the OP uses Java 7+, which has been out since basically the dawn of 2012. Why? Because there is simply no comparison. To give a few examples:   * the new API gives meaningful exceptions: `AccessDeniedException`, `NotDirectoryException`, `FileAlreadyExistsException`, `AtomicMoveNotSupportedException`, etc etc;   * common file operations, such as deletion, creation, renaming, etc throw an exception instead of returning a boolean;   * the new filesystem API allows you to access basically anything over a `FileSystem`; Oracle's JDK provides `FileSystem` access to ZIP files (therefore jars, wars, ears as well), Google provides an in-memory filesystem and I have even cooked up a `FileSystem` over FTP;   * with the new API, you can query and set "real world" file attributes, such as mtime, atime, ctime, owner, group, ACLs, etc etc;   * when dealing with text files, `Files` doesn't give you room for error since it requires that you specify a `Charset`, unlike all other `Reader`s accepting `File`s as arguments;   * the new API has support for symlinks and so called "hard links" (which are really links to the filesystem);   * filename existence correctly relies on the current character encoding. So, why does this API see so little usage?