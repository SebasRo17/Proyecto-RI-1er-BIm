**Device targeting for product XML catalog** We currently have a webservice that outputs an XML of products based on get parameters in the request. The webservice is consumed from a windows mobile application. In front of the webservice we have an HTTP accelerator/cache that caches the results for identical URLs. The business guys, want a new feature to allow products to be targeted for specific device configurations. We consider a device configuration can be made of parameters such as:   * hardware model   * firmware   * geographic location   * cellular provider   * etc... This may drastically kill the cache hit/miss ratio (efficiency) since we will be sending a param "deviceConfigId" which will be different for many devices, but will affect the list of applications outputted. We are talking 10,000 configs minimum. Our hit/miss ratio went from 75% to 40% after adding a few new features and filters via the URL one year ago. Except for using mechanisms such as Edge Server Includes ( http://stackoverflow.com/questions/5960598/varnish-and-esi-how-is-the- performance/9914643#9914643 ) , one of the ideas we are flirting with is to movie part of the filtering to the mobile devices. **Moving filtering client side** The mobile developers cringe because this may make their mobile devices less responsive. The client devices will need to download all product information(page by page as people scrolll down) but the device will need to filter out entries. Additionally, at the beginning of loading the device must download a list of rules applicable to the specific configuration in order to apply them on all future requests and the products listed in the XML. **Keeping all filtering on the backend** The backend developers cringe with the idea of adding the "deviceConfigId" to all the requests. This will require adding even more network infrustructure and resources. The problem can be solved by adding a better load balancer and adding more servers behind it (as well as moving to more distributed technologies later on). If we consider that user experience should be the highest priority and that slower/older devices should function as smooth as possible it seems we should use server side filtering for the product listings. However, newer devices are coming out and older devices are being thrown out continously. Forcing the clients to do some filtering but keeping load off the backend is quite tempting. Are there any other pros/cons, and more importantly solutions to such an issue? Thanks