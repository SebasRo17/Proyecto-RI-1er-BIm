**Note: Cross-posted atWolfram Community** I want to include a Mathematica animation in PowerPoint presentation. My code is:               poskus = Manipulate[       Graphics3D[        Dynamic@{{GrayLevel[.3], Line[space[[1 ;; t]]]}, {Blue,            PointSize[.015], Point[space[[t]]]},}, Axes -> True,         AxesStyle -> Directive[FontSize -> 20, FontFamily -> "Helvetica"],         AxesLabel -> {"x [nm]", "y [nm]", "z [nm]"},         BoxRatios -> {1, 1, 1}, ImageSize -> 700,         BoxStyle -> Directive[Dashed, Thick],         PlotRange -> {{-2620, 1600}, {-1700, 1450}, {-3500, 350}},         SphericalRegion -> True],        Row[{Control[{t, 1, Length[data], 1, Animator, ImageSize -> Small,            AnimationRunning -> False, AnimationRate -> 50,            AnimationRepetitions -> 1}], Spacer[10],          Dynamic["time = " <> ToString[data[[t, 1]]]]}], FrameMargins -> 0]      I want to place the animation into the PowerPoint slide so that the first frame is shown. Then I want to start it by mouse click. It should stop in the end position and wait for my next mouse click (for next slide). How can I achieve it? The best I could get was when exporting to swf. But the problem is that it runs immediately after I reach the slide. And it doesn't stop at the end, but it goes in reverse direction and then forward ... It is also very fast. And my computer becomes slow. The file size (test.swf) is 146 KB. Some things I would like to know:   * How to export without the sliders showing   * which format best to use   * how to influence the frame rate, length and direction of the animation   * how to most conveniently integrate the animation into PowerPoint **Edit** Sample of my data: first column is time multiplied by a factor, the others are coordinates.               data={{0.146, -160.582, 125.712, 20.1735}, {0.288, -192.582, 182.712,        58.1735}, {0.431, -207.582, 237.712, 201.174}, {0.576, -250.582,        134.712, 162.174}, {0.723, -234.582, 226.712,        292.174}, {0.877, -259.582, 236.712, 175.174}, {1.02, -303.582,        241.712, 61.1735}, {1.16, -362.582, 282.712,        17.1735}, {1.3, -448.582, 268.712, 114.174}, {1.45, -309.582,        188.712, 87.1735}, {1.58, -275.582, 193.712,        31.1735}, {1.73, -142.582, 182.712, -67.8265}, {1.88, -296.582,        257.712, -41.8265}, {2.02, -412.582,        307.712, -80.8265}, {2.16, -389.582,        366.712, -119.826}, {2.31, -337.582,        402.712, -273.826}, {2.46, -470.582,        499.712, -179.826}, {2.6, -432.582,        546.712, -208.826}, {2.76, -386.582,        539.712, -339.826}, {2.9, -467.582,        429.712, -377.826}, {3.05, -479.582,        462.712, -338.826}, {3.18, -514.582,        383.712, -239.826}, {3.32, -592.582,        279.712, -169.826}, {3.46, -574.582,        313.712, -134.826}, {3.61, -575.582,        262.712, -198.826}, {3.74, -542.582,        269.712, -241.826}, {3.89, -570.582,        201.712, -179.826}, {4.04, -637.582,        156.712, -128.826}, {4.19, -784.582, 155.712,        30.1735}, {4.33, -837.582, 212.712, 31.1735}, {4.48, -750.582,        144.712, -121.826}, {4.62, -858.582, 110.712,        58.1735}, {4.76, -880.582, 41.7125, -70.8265}, {4.89, -884.582,        117.712, -171.826}, {5.04, -874.582,        56.7125, -209.826}, {5.2, -924.582, -11.2875, -228.826}, {5.35, \     -896.582, -38.2875, -270.826}, {5.5, -869.582, -44.2875, -317.826}, \     {5.64, -915.582, -132.288, -221.826}, {5.8, -971.582, -51.2875, \     -349.826}, {5.94, -992.582, -95.2875, -377.826}, {6.08, -1060.58, \     -5.2875, -266.826}, {6.23, -1054.58,        3.7125, -431.826}, {6.38, -1099.58,        31.7125, -505.826}, {6.53, -1211.58,        85.7125, -477.826}, {6.68, -1203.58,        108.712, -508.826}, {6.83, -1001.58,        67.7125, -649.826}, {6.98, -1051.58, -1.2875, -675.826}}