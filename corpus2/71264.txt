Software development techniques exist to solve problems. I think a key problem we face is conquering complexity. Also, software developers must often classify and understand complex systems, separating accidental complexity from essential complexity. I believe that sufficiently useful definitions of these terms all exist on Wikipedia. My question is: What techniques are most valuable in conquering complexity, as a professional software developer, and/or software architect? Answer examplar; a blog post on conquering complexity that seems to be coming at things from a java/c++/OOP centric perspective.