I'm still in the design phase of my REST API, and I'm a bit stuck on how to configure the resources. The API will be consumed by mobile devices (Android, iOS, and Windows). Communication through HTTPS. These are the features the API will support:   1. View a list of previous reservations    2. View a previous reservation   3. Create a new reservation   4. Create a new anonymous reservation I was thinking of naming my resources as following:   1. api/users/{id}/reservations (GET)   2. api/users/{id}/reservations/{id} (GET)   3. api/users/{id}/reservations (POST)   4. api/users/0/reservations (POST) I'm not sure if the resource for 4 is a good design? Also 1, 2, 3 require a user to have an account and be authenticated. Authentication will be done using an access-token. This means the user has to log in every X period. Is it bad to store the user id on the device so it is able to perform requests where the user id is required? Or should I just remove the /users/ part from the resource and have the server decide based on the access-token which user is trying to perform a specific action? The REST API will be built using ASP.NET MVC4.