I'm looking at using Go (aka golang) for a project (a SQL database, but that mostly doesn't matter here) where performance is critical, but under low load the primary bottleneck will be I/O to disk. In this case, I think Go would be great! Under high load or while hitting cache a lot, CPU and memory utilization will increasingly become bottlenecks, and I'm worried that Go could make the high- end of the performance spectrum significantly lower than what C/C++/D might provide. Can anyone with experience working in Go give some insight into how quickly that bottleneck is reached (networking applications are subject to the same bottleneck, typically) and what you can do to relax it in Go other than rewriting the bottleneck in a faster language? * * * Note my question was sufficiently different that I asked it anyway after reading related question:   * What kind of software is done best with The Go Programming language? I have a specific application I'm asking about, and I've limited my concerns to performance (not usability, library support, development tools, etc).