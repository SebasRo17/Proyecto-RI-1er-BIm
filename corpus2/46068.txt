Ok, I think this is not the best way to do this, so I'm open minded for every suggestion doing it in a better way. The Question is why does `ListLinePlot` not plot all the data when it's inside `Manipulate`? I created a dataset w/ and wo/ noise:               dataFunc[x_] := .5 Sin[x^2 + x]          dataRaw = Table[dataFunc[x], {x, 0, 2 π, .001}];     dataNoise =        Table[dataFunc[x] + RandomReal[{-1, 1}], {x, 0, 2 π, .001}];          Grid[{ListLinePlot /@ {dataRaw, dataNoise}}]     ListLinePlot[{dataNoise, dataRaw}]      ![dataset wo/ and w/ noise](http://i.stack.imgur.com/Cd3Ik.png) I'm doing the built in low-pass filter with `Manipulate`               Manipulate[       ListLinePlot[{LowpassFilter[dataNoise, ω, n], dataRaw}],       {{ ω, .3}, .001, Pi, .001}, {{n, 100}, 1, 500, 1}]      ![enter image description here](http://i.stack.imgur.com/NZQ3c.gif) Now I added my own low-pass filter:               discLowPass[T_, τ_] :=        ToDiscreteTimeModel[ TransferFunctionModel[ 1/(1 + T s), s], τ]      And here it is: Without the dataRaw it works               Manipulate[       ListLinePlot[OutputResponse[discLowPass[T, τ], dataNoise]],       {{T, .1}, .005, 25}, {{ τ, .005}, .001, .025}]      ![enter image description here](http://i.stack.imgur.com/tBp1h.gif) ... but adding the signal without noise to the `ListLinePlot` it doesn't work anymore.   Why?               Manipulate[       ListLinePlot[{ OutputResponse[discLowPass[T, τ], dataNoise],          dataRaw}],       {{T, .1}, .005, 25}, {{ τ, .005}, .001, .025}]      ![enter image description here](http://i.stack.imgur.com/lmRFy.gif) It's just plotting the raw signal without the noise. **EDIT** : Using `Show` it works for the `OutputResponse`, too.               Manipulate[       Show[{         ListLinePlot[OutputResponse[discLowPass[T, τ], dataNoise]],         ListLinePlot[dataRaw, PlotStyle -> Red]}],       {{T, .25}, .005, 5, .005}, {{ τ, .01}, .001, .025}]      ![enter image description here](http://i.stack.imgur.com/8bdwW.png)