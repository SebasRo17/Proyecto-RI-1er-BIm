I would like to automate the process of selecting a number of proposal reviewers that fit a conflict of interest criterion. Let's say I have 5 reviewers and 5 applicants from 5 departments. The department of a person can be obtained from the function `getdept`:               depts = { "science",  "language",  "art", "history",  "education"};     reviewers = { "mary", "jane", "bob", "joe", "john"};     applicants = { "mary", "pete",  "al", "fred", "patty"};     getdept[person_] :=       person /. {"mary" -> "science", "jane" -> "language",         "bob" -> "art", "joe" -> "history", "john" -> "education",         "pete" -> "language", "al" -> "art", "fred" -> "art",         "patty" -> "language"}      Each proposal must be read by three reviewers, none of whom can be from the same department as the applicant. I can generate a table of possible reviewers:               possrev =       Table[{i,         DeleteCases[reviewers, x_ /; getdept[x] === getdept[i]]}, {i,         applicants}]      And looking at the result in this trivial example, I can manually identify reviewers:               possrev[[All, 2]] // MatrixForm      ![Mathematica graphics](http://i.stack.imgur.com/0ZcPI.png) I'm stuck with how to select sublists. It looks to me as if I should end with a 3xN matrix where N is the number of applicants. No element in the resulting matrix would be represented more than three times. (We can assume that `Length[reviewers] >= Length[applicants]`). I suspect that there will not be unique solutions and I do not need all solutions (although that would be interesting). Is it possible to find a solution matrix, `assignments` such that:               Length/@Union/@assignments = 3      and               Count[Flatten[assignments], #] & /@ reviewers <= 3       [I think these are the correct mathematical representations of my criteria, but I may be mistaken.]