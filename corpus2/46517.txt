I don't understand why many (many) companies treat software developers like they are assembly line workers making widgets. Joel Spolsky has a great example of the problems this creates: > With programmers, it's especially hard. Productivity depends on being able > to juggle a lot of little details in short term memory all at once. Any kind > of interruption can cause these details to come crashing down. When you > resume work, you can't remember any of the details (like local variable > names you were using, or where you were up to in implementing that search > algorithm) and you have to keep looking these things up, which slows you > down a lot until you get back up to speed. > > Here's the simple algebra. Let's say (as the evidence seems to suggest) that > if we interrupt a programmer, even for a minute, we're really blowing away > 15 minutes of productivity. For this example, lets put two programmers, Jeff > and Mutt, in open cubicles next to each other in a standard Dilbert veal- > fattening farm. Mutt can't remember the name of the Unicode version of the > strcpy function. He could look it up, which takes 30 seconds, or he could > ask Jeff, which takes 15 seconds. Since he's sitting right next to Jeff, he > asks Jeff. Jeff gets distracted and loses 15 minutes of productivity (to > save Mutt 15 seconds). > > Now let's move them into separate offices with walls and doors. Now when > Mutt can't remember the name of that function, he could look it up, which > still takes 30 seconds, or he could ask Jeff, which now takes 45 seconds and > involves standing up (not an easy task given the average physical fitness of > programmers!). So he looks it up. So now Mutt loses 30 seconds of > productivity, but we save 15 minutes for Jeff. Ahhh! Quote Link More Spolsky on Offices Why don't managers and owner's see this?