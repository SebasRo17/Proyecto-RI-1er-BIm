I'm making a program that uses LWJGL to render a Display window, and it also listens for keyboard input to prompt it to open a swing window. The problem is, upon the first keyboard prompt, it opens the window successfully. But when you close it and try it again, it seems the LWJGL window 'sticks' down the key you just pressed and instead starts opening up infinite new Swing windows... I'm not sure how to resolve this issue. Here is some code to demonstrate my problem... public class Launcher{               public static void main(String[] args){         new Launcher();     }          public Launcher(){         loadGUI();         go();     }          public void go(){         while(!Display.isCloseRequested()){             listen();             glClear(GL_COLOR_BUFFER_BIT);             Display.update();             Display.sync(60);              }     }          private void listen(){         if(Keyboard.isKeyDown(Keyboard.KEY_SPACE)){             System.out.println("fk");             Example e = new Example();         }     }          private void loadGUI(){              try{             Display.setDisplayMode(new DisplayMode(480,480));             Display.setTitle("Example");             Display.create();         }catch(LWJGLException e){             e.printStackTrace();             Display.destroy();             System.exit(1);         }              glMatrixMode(GL_PROJECTION);         glLoadIdentity();         glOrtho(0, 480, 480, 0, 1, -1);         glMatrixMode(GL_MODELVIEW);          }          private class Example extends JFrame{              public Example(){             add(new JPanel(), BorderLayout.NORTH);             pack();             setResizable(true);             setTitle("Test");             setVisible(true);         }          }      }