I was looking for a _dictionary_ where are described the meanings and purposes of each directory name used in softwares file trees.   I can't find anything except for the Linux FHS, but that is restricted to GNU/Linux OS. So I would like to ask you something to understand the meaning of the following folders:               /controllers     /models     /vendor     /src         This is what I've understood so far:   * **`/controllers`** ~~is where I should put the files that have the purpose of _control_ other files. For example in controllers I could have a PHP file that load a file to call MySQL queries, then one that parse the queries to structure an array, and then one that calls the template manager.~~   * **`/models`** I've no idea of what is intended for...   * **`/vendor`** is where are located external dependencies needed by the software.   * **`/src`** is where the source files are located.    My doubts are:   1. What is the **`/models`** folder?    2. If for example I include in my project, Mustache.php, I will have Mustache located in **`/src/Mustache`**.   But it also adds some dependencies in the **`/vendor`** folder.   The problem is, in my project, even **Mustache** is a "vendor" thing (I guess), so shouldn't it moved to **`/vendor`**?   3. If I'm writing in PHP, HTML, JS and CSS. Every file I use for the production will be also the source file, so why shouldn't I put everything in the **`/src`** folder and keep out maybe only the minified `.js`, `.css` and `.html`?