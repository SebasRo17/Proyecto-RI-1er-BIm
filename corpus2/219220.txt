I've found a question that I'm having trouble to realize. It's as follows: Consider the program               P ::           x := 1;           y := 1;           z := 1;           u := 0;          and the program          Q ::           x,y,z,u := 1,1,1,1;           u := 0;      Which of the following is true? (only 1 option is correct)                1. P and Q are equivalent for sequential processors.      2. P and Q are equivalent for all multi processor models.      3. P and Q are equivalent for all multi core machines.      4. P and Q are equivalent for all networks of computers.      5. None of the above.      At a first glance it appears that option (1) is true. But in order for P & Q to be equivalent, their respective instructions are to be executed sequentially, they themselves can be executed in any order (even parallelly). Which holds true for options (1) & (2) [or even with option (3)]. > E.g: P is being executed on processor-1 & Q is being executed on processor-2 > (parallelly), but their individual instructions are being executed > sequentially on their respective processors. In such a case both of them are > equivalent, which makes option (2) true. Here is where ambiguity comes in. Can anybody help me ?