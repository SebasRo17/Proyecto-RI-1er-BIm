We are about 40 developers working on the same code base and we use Git for version control. My question is: can there be problems if, for example, some developers have a much older version of Git installed on their system ? Or should we try to enforce some rule that says something like "you should upgrade Git on your machine to the latest version at least once per year" ? Maybe in older versions of Git, the structure of the objects may be slightly different. Or there may be some bugs in the algorithm that calculates which lines were added/removed from files. These issues can cause corrupt repositories or different values for the SHA-1 hashes in places where it should have the same value.1 Obviously, since Git is a distributed VCS, a corrupt repository won't ever mean critical loss of data, since there are 40 other people from which you can clone a new copy. So it's more a curiosity than a concern. I suspect that backwards- compatibility is something extremely important when it comes to releasing a new version of Git; but still: the potential issues mentioned above are a possibility. 1 = as far as I know, we had no such problems... yet.