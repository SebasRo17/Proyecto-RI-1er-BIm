Often, many decent languages just won't get popular because of the chicken- and-egg problem where a language lacks resources (books, tutorials... other than for some basic language documentation), tools (IDE support, debuggers), libraries (other than for some kind of small standard library) and very few people have adopted it. The language might not have been standardized either. Such languages do still get used occasionally, as otherwise, we wouldn't have any popular languages today. Some got popular because they were created for a specific major product and used for that (e.g. C for UNIX), but some languages weren't, but still got quite popular (e.g. Java and Python). What would such a poorly supported language need to offer in order for you to adopt it for a software project you are going to create? Surely, there would have to be something quite revolutionizing or unique about the language.