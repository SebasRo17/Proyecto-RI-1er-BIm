Here's a very cool Wolfram Blog Article with incomplete code, that can apply the Droste Effect to an image is various interesting ways. Copying this code, in the journal doesn't provide a working solution. What's missing here to get this code to work?               InitializeSources[source_, p1_, p2_] :=       Quiet[Block[{imgbytes = Import[source, "Byte"],     sourcebytestream},     If[imgbytes === $Failed, $Failed,       sourcebytestream = FromCharacterCode[imgbytes];       LaunchKernels[];       DistributeDefinitions[OriginalValueFns,        DrostifyRegion, ReplicateRegion, TransformCoordinates,        CropData];       ParallelEvaluate[$ImageInterpolationFn =          OriginalValueFns[CropData[           Reverse@Developer`ToPackedArray[             N[ImportString[#, {"JPG", "Data"}]]], p1, p2]/255.];] &[     sourcebytestream]]]     ]          OriginalValueFns[data_] :=      ($AspectRatio = 1/Apply[Divide, Most[Dimensions[data]]];       Apply[Function, {{x, y},          If[Abs[x] > 1 || Abs[y] > $AspectRatio, {1., 1., 1.}, #] &[          Table[ListInterpolation[             data[[All, All, channel]], {{-1, 1}, $AspectRatio {-1, 1}},         InterpolationOrder -> 1][x, y], {channel, 1, 3}]      ]}]);          DrostifyRegion[start_, end_, res_, opts : OptionsPattern[]] :=           Image[Table[      Apply[$ImageInterpolationFn,          TransformCoordinates[{x, y}, opts]], {x, end,          start, -2/(res - 1)}, {y, -$AspectRatio/$AspectRatio, 2/res}]     ];          DrosteImage[resolution_, opts : OptionsPattern[]] :=     ImageAssemble[     ParallelTable[      {DrostifyRegion[-1 + 2 (slice - 1)/#, -1. + 2 slice/#,        resolution, opts]},      {slice, #, 1, -1}]] &[Max[Length[Kernels[]], 1]     ];          (*Find the center of the selected rectangle*)     $DrosteScale = Max[Flatten[{Abs[r2 - center]/(center - {1, 1}), Abs[r1 - center]/      Abs[Reverse@Take[Dimensions[data], 2] - center]}]];     CropData[data_, r1_, r2_] := Block[{center, xlo, xhi, ylo, yhi, innerdims},     center = Mean[{r1, r2}];          (*Find the scaling of the cropped image to the rectangle*)          innerdims = Abs[r1 - r2]/$DrosteScale;     {{ylo, xlo}, {yhi, xhi}} = Round[{center - innerdims/2, center + innerdims/2}];     Return[data[[xlo ;; xhi, ylo ;; yhi, All]]]];          TransformCoordinates[{x_, y_}, opts : OptionsPattern[]] := FixedPoint[     ReplicateRegion, {Re[#],        Im[#]} &@((OptionValue[          Zoom] E^(I OptionValue[Rotation])) (OptionValue[XShift] +           I OptionValue[YShift] + x +           I y)^(OptionValue[CopiesPerRotation] +           OptionValue[Spirals] I  Log[$DrosteScale]/(2 \[DoubledPi]))),     OptionValue[MaxRecursion]];     Options[TransformCoordinates] =     {Zoom -> 1, XShift -> 0, YShift -> 0, Rotation -> 0,     CopiesPerRotation -> 1, MaxRecursion -> 10, Spirals -> 1};          ReplicateRegion[{x_, y_}] := Which[     (*If outside the image area, move closer*)          Abs[x] > 1 || Abs[y] > $AspectRatio,         {x, y} $DrosteScale,     (*If inside the frame move out to the main image*)          Abs[x] < $DrosteScale &&         Abs[y] < $DrosteScale $AspectRatio,         {x, y}/$DrosteScale,     (*otherwise use the calculated coordinates*)     True, {x, y}     ];