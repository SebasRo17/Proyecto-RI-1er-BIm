I need to hire a senior software developer. I've switched to a new recruiter and he's asked for about 3 questions to ask each candidate on the phone that he'll send the answers to when I see the CV to help me screen out the obvious bad ones. I quite like the idea of not having to phone screen people who just cannot code but I'm struggling to be honest. The notion of quickfire hire/no hire questions intrigues and worries me in equal measure. I reckon it's possible to come up with some useful ones but most of the questions I ask in an interview are open ended, language agnostic and based on cultural fit. Now, the recruiter has told me that the candidate wont be able to google the answers since they'll be asked immediately before he sends the CV but I clearly don't want to ask questions that are 'googleable',..I don't care if they routinely google those sorts of questions. In fact, I'd rather they did! So, if you were in my position what questions would you ask? For what it's worth, the primary platform is .Net, C#, Sql Server et al along with the normal slew of legacy technologies. **Edit** Just to be super clear... knowing whether the candidate knows what the volatile keyword does in C# or how they would create a regex that validates UK postcodes would be pointless information. That's classic google fodder. I want something that demonstrates a deeper understanding than that. I considered simple 'what is polymorhism' type questions or 'explain the difference between an 'HTTP PUT vs POST' but these seem pretty straight forward for a senior. I'm looking for something to help support the decision to interview a senior.