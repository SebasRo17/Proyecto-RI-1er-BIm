I'm having a discussion with a co-worker on Linq, I'll copy here: > Co-Worker: Lets be honest here. Linq syntax sucks. It's confusing and non- > intuitive. > > Me: oh come on, more confusing than T-SQL? > > Co-Worker: uh, yes. > > Me: it has the same basic parts, select, where, and from > > Co-Worker: Linq, to me, is a bastardization of relational + OO. Co-Worker: > Don't get me wrong - it's incredibly powerful, but they repurposed SQL to > use agains object collections. I'm of the opinion that using Linq + Lamda's is very powerful (he agrees), and also makes code easier to read (he disagrees on that point):               pickFiles = from f in pickFolder.GetFiles("*.txt")     where ValidAuditFileName.IsMatch(f.Name)     select f;      or               var existing = from s in ActiveRecordLinq.AsQueryable<ScannedEntity>()     where s.FileName == f.FullName && s.DocumentType != "Unknown"     select s;      or (VB code here)                  Dim notVerified = From image In images.AsParallel          Group Join verifyFile In verifyFolder.GetFiles("*.vfy").AsParallel.Where(           Function(v) v.Length > 0           ).AsParallel        On image.Name.Replace(image.Extension, ".vfy") Equals verifyFile.Name          Into verifyList = Group         From verify In verifyList.DefaultIfEmpty         Where verify Is Nothing         Select verify      To me this is clean and easy (at least easier than the alternatives) to read, what are your opinions on it?