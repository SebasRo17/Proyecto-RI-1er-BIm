I am new to _Mathematica_ , and I am trying measure length and diameter of rectangular objects in an image. I wanted to fit rectangles in the objects, and then get the values. Can I do that with `ComponentMeasurements`? how does the {"Rectangle"} command work? How can I set aspect ratio, or verticality selection rules? or other types conditions to rectangle fit? What I did so far is as follow:               image = Import["http://i.stack.imgur.com/5WGzV.jpg"]      ![image of some objects](http://i.stack.imgur.com/5WGzV.jpg)               imageNS = ImageCrop[image, {1024, 650}, Bottom]      so far I just removed the bar at the bottom.               imageA = ImageMultiply[imageNS, 2.8] // ImageAdjust;     imageB = MeanShiftFilter[imageA, 5, 0.03, MaxIterations -> 20] // ImageAdjust;      in this way I have enhanced the contrast of the image.               binaB = MorphologicalBinarize[imageB, {0.4, 0.7}];      Then I binarize the image. since in the binarized image there is no bottom line for the "trees", I try to find it as follows:               imageR = RidgeFilter[imageB, 1.5] // ImageAdjust;     binaE = MorphologicalBinarize[imageR, {0.075, 0.7}];     a = EdgeDetect[binaE, "StraightEdges" -> 0.55];     b = Closing[a, 6];     c = GradientFilter[b, {{1, 100}, 10}];     d = Binarize[ColorNegate[Dilation[c, {{1}, {1}, {1}, {1}, {1}}]]];     ebin = Closing[ImageMultiply[binaB, d], 1]      Now I have the bottom line of the trees, although the problem is that morphologically the trees still belong to the same domain, they are all "connected". This makes the problem more complicated since ComponentMeasurements[ebin,"BoundingBox"] fit bigger rectangles that groups bunches of trees... Any idea how to fit these rectangles into the trees? I have tried a different approach to get at least the length of these structures.I use a derivative filter and horizontal erosion to get the top of the structures. Then I get the position of the top of the strcuture with Pixelvalue positoin, get the y coordinate, and subtract it to the bottom line.               qr = Binarize[Erosion[DerivativeFilter[ebin, {1, 0}], {{1, 1, 1, 1}}]]      get the max points positions               ebinm = PixelValuePositions[qr, "Max"];     ebinmy = Table[ebinm[[i]][[2]], {i, 1, Length[ebinm]}];      sum the raws of the matrix to get the baseline               ebinmm = Total[ImageData[qr], {2}];      get the baseline position               baseline = Position[ebinmm, Max[ebinmm]] [[1]][[1]];      get the length of the nws by doing the difference between               lenghts = Subtract[baseline, ebinmy];     Histogram[lenghts]      Still, how do I get the diameters? I found a nice approach in: Image processing: Floor plan - detecting rooms' borders (area) and room names' texts I tried to implement it as follows:               distTransform = DistanceTransform[ebin] // ImageAdjust;     centerAreas = ImageDifference[GeodesicDilation[distTransform, ebin],distTransform];     watershed = ImageMultiply[Dilation[WatershedComponents[centerAreas] // Image,{{1},{1}}],ColorNegate[qr]]     rooms = ComponentMeasurements[watershed, "BoundingBox"];      Although the fact that the trees are not individually morphologically defined gives me troubles, and no rectangles are fit into it.This is what I get: ![enter image description here](http://i.stack.imgur.com/h9hbs.jpg) Anybody able to fit rectangles into it? Cheers!