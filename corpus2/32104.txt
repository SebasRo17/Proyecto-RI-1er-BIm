Why `LinearModelFit` is slower than `NonlinearModelFit`?               data = Table[{x, 0.68 x - 0.33 + RandomReal[1000]}, {x, 0, 200000}];          nlm = NonlinearModelFit[data, a + b x, {a, b}, x] // AbsoluteTiming     > {0.081027, FittedModel[500.052 +0.679998 x]}          lm = LinearModelFit[data, {1, x}, x] // AbsoluteTiming     > {1.168421, FittedModel[500.052 +0.679998 x]}      It's almost 16 times slower, than `NonlinearModelFit`!