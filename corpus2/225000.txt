I'm working on a modest sized web application that receives circa 30k unique users per day, this is an MVC C# application hosted on 3 web servers and backed by a single SQL server, everything is hosted in one data center. The issue is we are seeing dom complete times upto 3 times slower in some parts of the world. We have done all the usual "quick wins" as suggested by yslow \- and are now looking to make architectural changes. Our initial plan is to create a web api that wraps our server tier, and then host the web tier in a second data center in a different part of the world closer to the users with the poor latency. The hope is that this in combination with caching and will help reduce latency. I appropriate that there will be latency between the api service tier and web tier, but the hope is that these will be lightweight http calls. Does this make sense?