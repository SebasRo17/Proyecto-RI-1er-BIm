I mean did you ever reluctantly adopt a less than ideal solution because management told you that "customer is always right"? I'll go with mine first. A few years back, me and my team developed a website of quizzes. Users create quizzes, answer them, rate/tag/vote/share etc. If a quiz had more than 10 questions in it, the UI would serve the quiz in segments. A 30 question long quiz will be split into 3 segments. We used JavaScript and DOM manipulation to let the user easily switch back and forth between segments, without ever having to refresh the whole page. The customer, a big US corporation that owned the site, wasn't happy with this. They didn't care about user experience, they just wanted high page hits. So they wanted the whole page to refresh when the user hit 'Next' or 'Previous'. We had to replace the JavaScript solution, with a very ugly hack involving PHP and Smarty. The result was a sluggish UI, which irritated the H out of the testers. In the same project, the team researched the best practices for improving front-end performance and worked hard to implement them. But all those efforts were in vain when the customer injected their heavy Flash based ads into the pages, making them load real slow. I know it's not an objective question and very likely to be closed, but I would like to hear from the members of the community if they ever had such experiences.