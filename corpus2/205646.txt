From the official documentation...               Modifier    Class   Package Subclass    World      public      Y       Y       Y           Y      protected   Y       Y       Y           N      no modifier Y       Y       N           N      private     Y       N       N           N       The thing is, I can't remember having a use case where I needed to access protected members from a class within the same package. What were the reasons behind this implementation? **Edit:** To clarify, I'm looking for a specific use case where both a subclass and a class within the same package needs to access a protected field or method.               package some.package;     public class A {      protected void protectedMethod(){       // do something      }     }          package another.package;     public class B extends A{      public void someMethod(){       // accessible because B is a subclass of A       protectedMethod();      }     }           package some.package;     public class C {      public void anotherMethod(){       // accessible because C is in the same package as A       protectedMehtod();      }     }