I'm a nub programmer, using python, and my current project is a chatbot for an irc channel I reside in. I wish to make it capable of keeping conversations organized, primarily between its self and one other person. Right now, I'm creating a conversation object when the bot is initially addressed. The object has the attributed of _peer_ (the other conversation member), _topic_ (the basic topic of the conversation), _log_ (a log of past messages to and from the peer), _lastsent_ (super-simplified forms of the most recent 10 messages sent to the channel by the bot), and _lastrecv_ (the last 10 messages received sent to the channel by the peer, also super-simplified). As messages are received, the bot checks the topic and runs through a list of expected replies. If one is matched, the bot chooses a response and send it to the channel. It then updates the topic if needed and the bot's conversation dictionary. The bot has a conversation dictionary list, the key is the user's nickname, and the definition is the conversation object. I feel this is unnecessarily excessive. I was wondering what some other approaches to keeping track of conversations were. Are there any simpler, easier approaches?