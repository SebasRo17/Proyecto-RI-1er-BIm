This question has to do with error handling, I guess. I am using Brent's Method in order to numerically find the root of a function. This is just an example of what I am doing:               functionexample[a_, b_, c_, x_] := Sin[a*x] + Cos[b*x] + Log[c*x]     rootexample[a_, b_, c_, result_] :=       FindRoot[functionexample[a, b, c, x] == result, {x, 1, 12},          Method -> "Brent", PrecisionGoal -> 16][[1]][[2]]     a = 1     b = 1     c = 1     Plot[{functionexample[a, b, c, x], 2, 4}, {x, 1, 12},       PlotRange -> Automatic]     rootexample[a, b, c, 2]     rootexample[a, b, c, 4]      And this is what I get: ![MWE Mathematica](http://i.stack.imgur.com/5Ed1V.png) So, at the end `rootexample[1, 1, 1, 4]` (that's when Brent's Method returns an error message) seems to take value 4. I would like to define `rootexample[a_, b_, c_, result_]` in such a way that when an error arises in the root finding procedure, an special value is assigned to the result of the function (something like `""` or `Null` or `None` or something similar). [ **EDIT:** The idea is: if there is a root, then return the root; if not, then return `None`.] I mean, I would like to properly control/handle possible errors coming from Brent's Method within the definition of the function `rootexample`. I have no idea about how to do this.