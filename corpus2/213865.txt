My repository has a branch `production` and is filled with countless tags of the format `production-20130101-1234` that point to what has been actually shipped on the given datetime. I think this solution is somewhat messy and unwieldy and I wonder if reflogs would skip in here better. The objective is **"make sure you can always find out what version has been deployed and when exactly"**. Tags do the job, but reflogs sound even nicer because:   * They are made automatically,   * They allow a good amount of awesome, like in the form of `git checkout origin/production@{3 months ago}`. That said, I don't know that much about reflogs and I'm not sure about possible downsides of such approach.   1. I assume `origin/production` has its own reflog totally independent of my local remote-tracking `production` \- is that correct?   2. Doing 3 consecutive no-ff merges from an integration branch to my local `production` branch would make 3 entries in my local reflog, but pushing it to the central repo (as a part of the deployment procedure) would make 1 new entry in the "oracle" `origin/production` reflog, correct?   **I'd like to maintain the "1 deployment = 1 record" invariant.**   3. How to make sure a reflog of `origin/production` isn't pruned and continues to provide complete historical information for everyone?   4. Any downsides or possible problems I didn't think of?