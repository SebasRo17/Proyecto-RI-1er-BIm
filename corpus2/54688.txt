I want to create a function something like this: `test[x_] := (Print[1]; Return[2];)` Except it prints `1` when executed as `test[a]` for any `a` on the notebook, but when used in computations uses the `2` value instead. Thus `test[2342]` will output just `1` but `test[43589] + 1` will output just `2` (because the value returned, 2, is used instead). I have looked into `Interpretation` but that returns a held object and does not allow you do perform operations like `test[1] + 123` without explicitly releasing the hold.