I want to solve the following partial differential equation (PDE) by NDSolve in MMA. ![enter image description here](http://i.stack.imgur.com/M9BKg.png) I want to plot the profile of h(x,t) and find out the time at which h=0 or h->0. I tried the following code, but it does not work. There seems some singularity near h=0 and the grid spacing is too large according to the warning messages given by MMA.               mdfun = First[     h /. NDSolve[{D[h[x, t], t] + D[h[x, t]^-1*D[h[x, t], x], x] +      D[h[x, t]^3*D[h[x, t], {x, 3}], x] == 0,      h[-Pi*2^0.5, t] == h[Pi*2^0.5, t],      h[x, 0] == 1 + 0.1*Sin[x/2^0.5]},      h, {x, -Pi*2^0.5, Pi*2^0.5}, {t, 0, 10},      MaxStepSize -> 8.8857658763167324940317619801214/40]]     Plot3D[Evaluate[mdfun[x, t]], {t, 0, 4.05}, {x, -Pi*2^0.5, Pi*2^0.5},      PlotPoints -> 100]      Now I have three questions:   1. I am wondering whether MMA solves a PDE numerically by Finite Difference Method, or some other method?   2. Is there any possible to assign explicitly the method using by MMA? For example, I want to use space central difference scheme, Crank-Nicolson Method in time, and the resulting difference equation is solved by Newton-Raphson iteration.   3. NDSolve works by taking a sequence of spatial steps in x and time steps in t, then using an adaptive procedure to determine the size of these steps. How to control the spatial mesh size and time step in my program? For example, I want to firstly fix the spatial grid while reducing the time step for successive iterations until the change in the computed value is negligible, then the time step is fixed and the spatial grid is refined to run the iterations to find the solution.