I've been programming for years now, working my way through various iterations of Blub (BASIC, Assembler, C, C++, Visual Basic, Java, Ruby in no particular order of "Blub-ness") and I'd like to learn Lisp. However, I have a lot of intertia what with limited time (family, full time job etc) and a comfortable happiness with my current Blub (Java). So my question is this, given that I'm someone who would really like to learn Lisp, what would be the initial steps to get a good result that **demonstrates the superiority of Lisp in web development**? Maybe I'm missing the point, but that's how I would initially see the application of my Lisp knowledge. I'm thinking "use dialect A, use IDE B, follow instructions on page C, question your sanity after monads using counsellor D". I'd just like to know what people here consider to be an optimal set of values for A, B, C and perhaps D. Also some discussion on the relative merit of learning such a powerful language as opposed to, say, becoming a Rails expert. Just to add some more detail, I'll be developing on MacOS (or a Linux VM) - no Windows based approaches will be necessary, thanks. **Notes for those just browsing by** I'm going to keep this question open for a while so that I can offer feedback on the suggestions after I've been able to explore them. If you happen to be browsing by and feel you have something to add, please do. I would really welcome your feedback. **Interesting links** Assuming you're coming at Lisp from a Java background, this set of links will get you started quickly.   1. Using Intellij's La Clojure plugin to integrate Lisp (videocast)   2. Lisp for the Web   3. Online version of Practical Common Lisp (c/o Frank Shearar)   4. Land of Lisp a `(+ (+ very quirky) game based)` way in but makes it all so straightforward   5. Install Clojure and Sublime 2 on MacOS an **excellent** getting started guide   6. Look at the Clojure in Action book. Worked for me.