I have to solve the following set of ODEs and just can't get good results using Mathematica $$ r\frac{d}{dr}\left(\frac{1}{r}\frac{d}{dr}A(r)\right)-\xi^2F(r)^2\left(A(r)-1\right)=0 $$ $$ \frac{1}{r}\frac{d}{dr}\left(r\frac{d}{dr}F(r)\right)-\frac{n^2}{r^2}F(r)\left(A(r)-1\right)^2-\frac{1}{2}F(r)\left(F(r)^2-1\right)=0 $$ There are two parameters $\xi\in\mathbb{R}^+$ and $n\in\mathbb{Z}$. There also are boundary conditions at $0$ and at $\infty$. $$F(0)=A(0)=0$$ $$F(\infty)=A(\infty)=1$$ These gave me the first puzzle: how to implement boundary conditions at infinity? I solved this by taking a finite number (in my case 5) instead of infinity. Do you think it is a good approach or is there a more elegant way to implement boundary conditions both at zero and infinity?   Next I want to solve these equations numerically. Here is the Mathematica code for $\xi=1$ and $n=1$               paramND = {         r D[1/r D[A[r], r], r] - \[Xi]^2 F[r]^2 (A[r] - 1) == 0,         1/r D[r D[F[r], r], r] - n^2/r^2 F [r] (A[r] - 1)^2 -            1/2 F[r] (F[r]^2 - 1) == 0,         A[5] == 0.99, A[0.01] == 0,         F[5] == 0.99, F[0.01] == 0} /. {\[Xi] -> 1, n -> 1};          numSol = NDSolve[paramND, {A[r], F[r]}, {r, 0.01, 5}] // Flatten;          paramPlot = {A[r], F[r]} //. numSol;          Plot[Evaluate@paramPlot, {r, 0.01, 5}, PlotRange -> {0, 1},       PlotStyle -> {{Black, Thick}, {Red, Thick}},       PlotLegends -> {"A(r)", "F(r)"}]      For $\xi=1$ and $n=1$ this works fine and I get a result that I expect:   ![xi=1,n=1](http://i.stack.imgur.com/cm13c.png)   The problem is that the numerical solution only works if both parameters $\xi$ and $n$ are close to $1$. Changing these parameters to values different from $1$ produces somewhat awkwrd results: $\xi=3$, $n=1$:   ![xi=3,n=1](http://i.stack.imgur.com/xvz79.png) $\xi=1$, $n=5$:   ![xi=1,n=5](http://i.stack.imgur.com/RQJWI.png)   As you can see, the last two plots don't even respect the boundary conditions! Why is this so? All solutions should look more or less like the first plot, which clearly isn't the case.   I suppose that I lack some fundamental knowledge about how to use NDSolve to produce results which I expect. Can you suggest a good strategy in order to obtain good solutions to these ODEs? I've also tried using the "Shooting" algorithm, which, however, didn't give any useful result either. Maybe you can point out to me what the exact reason is, why NDSolve fails here so I know what to cure. Up to now it was rather a try and error procedure.   So, to sum up, my two questions are:   1. How to implement boundary conditions at infinity?   2. How to choose a good strategy for NDSolve to obtain results one expects?