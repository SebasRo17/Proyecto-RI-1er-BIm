I'm currently writing a series of classes in java that are meant to translate a regular expression (written with the formal definition, not language- specific shortcuts) into a deterministic finite automaton. To make the DFA, it first converts the regex to postfix, then to a syntax tree, then to an NFA, then finally to the DFA, which is then minimized. Should I keep a reference to each intermediary object as a member of the object it was used to create? e.g. A reference to the syntax tree in the NFA, and a reference to the NFA in the DFA? They're not publicly accessible, so are they just unnecessarily bloating the classes and the program?