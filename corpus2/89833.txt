Has anyone defined a standard for reading code out loud, for any language? I imagine this is important to software like screen readers for the vision- impaired. This sort of thing also comes up when you are discussing code with someone, reviewing it in a group, or teaching a class. In the C family of languages, there are a lot of words with "obvious" pronunciations. Some are simply English words: `for`, `break`, `case`, `default`, etc. Some abbreviations, like `int`, are unambiguous. And then there's `char`. I always tend to say it (and hear it in my head) like the first syllable of "charcoal". It was jarring to me the first time I was talking about code with someone who pronounced it like "car", which actually makes more sense because `char` is really an abbreviation of the word "character", so clearly it should be pronounced the same. But even knowing that, char-as-in-coal feels more right to me. And then there are statements like `foo = bar ? *(++baz) : zardoz`. Has anyone anyone produced a document dictating the correct way (in their opinion) how to read code aloud? Either for a specific language or maybe code in general?