I'm working on an cross platform C++ project, which doesn't consider unicode, and need change to support unicode. There is following two choices, and I need to decide which one to choose.   * Using UTF-8 (std::string) which will make it easy to support posix system.   * Using UTF-32 (std::wstring) which will make it easy to call windows API. So for item #1 UTF8, the benefit is code change will not too many. But the concern is some basic rule will broken for UTF8, for example,   * string.size() will not equal the character length.   * search an '/' in path will be hard to implement (I'm not 100% sure). So any more experience? And which one I should choose?