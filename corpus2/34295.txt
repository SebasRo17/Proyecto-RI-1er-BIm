In order to color `Edges` in a `Graph` after applying a function such as `VertexDegree` I did the following code (on _Mathematica 8.0.4_ ):               g = GridGraph[{4, 4},VertexLabels->"Name",ImagePadding->10,DirectedEdges->True];     (* highlight is taken from the documentation of VertexDegree *)     highlight = Table[       Style[VertexList[g][[i]],         ColorData["TemperatureMap"][VertexDegree[g][[i]]/Max[VertexDegree[g]]]],       {i, VertexCount[g]}];     edgeList = EdgeList@g;     Flatten@Table[{edgeList[[i]] -> (       Function[Evaluate@         Line[#, VertexColors -> {highlight[[edgeList[[i, 1]], 2]],             highlight[[edgeList[[i, 2]], 2]]}]])},       {i,Length@edgeList}];          HighlightGraph[SetProperty[g, EdgeShapeFunction -> %], highlight]      giving me: ![Graph with colored edges](http://i.stack.imgur.com/yzmhv.png) which is basically what I was waiting for in terms of what it should look like. Although since I'm using `Line[#, VertexColors -> {Color1, Color2}]` the fact that the `Edges` are either `Directed` or `Undirected` is not preserved in the `Graph`. **Thus my question is:** Is there a way to preserve the `DirectedEdge`/`UndirectedEdge` property and to gradually color the `Edges` in terms of its two vertices?