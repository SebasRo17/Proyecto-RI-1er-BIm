_A junior asking..._ **First a rather large chunk of background** Assume you have done some programming and now you want to take the next step out in the real world or at least learn more. I have no mentor, not yet anyway, but I have no intention sitting at home and twiddle my thumbs. My idea is to study the vast sea of open source. The problem is to understand a project. You can see the files and read the code line by line but it is of little help since there is > 1000 files with > 1000 lines of code. It is like standing in the middle of a forest at midnight. Where do you go ? The Internet have a lot of ideas on how to get involved in open source. As a developer, it is assumed you have at least > 2 years of experience. You read code like a newspaper. Fluent and with great ease. This is not very helpfull since I don't have that kind of experience yet. My idea is to use UML to get started. This should show some interest too, and will generate good questions to ask. I will start at the top with the packages, the folders. For a given file the include statement (or import or ...) provide all required dependencies. Dependencies can be divided into external och internal. The classes is of various types like subclass, abstract, data, factory, template and so on. This provide more relations between classes. Once you know something about the structure you can start to understand the flow. Now you can start to see the forest. The UML diagram can be auto generated of course but I will learn so much more by doing this by hand. Learning is the key here. This is my idea on how to get started with an alien code base as a junior. I have just started so I would be very happy if you shared your view, ideas and experience. **My question is:** _Imagine you stand in front of an alien code base, what do you do in order to understand the flow of the code ?_ For me it is a just huge set of files, I can't really see the flow between them. I really would like to be a good developer and know I still have much to learn. Hope you understand. **Thanks !! // Jim G**