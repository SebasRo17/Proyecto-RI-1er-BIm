I have some data that represents small-scale surface topography. The data is planar but not flat because it's impractical to level this microscope to a tolerance of microns. It looks like this: ![An example of 3D profilometric data with a nonzero planar slope](http://i.stack.imgur.com/nQcLB.jpg) I'd like to postprocess that slope out, such that the major axis is colinear with the long side of the blue rectangle and the vertical axis can then be rescaled to show meaningful topographic variation instead of the (really large) planar slope. One approach here might be to do an orthogonal transformation via (basically) principal component analysis, eg. find the three eigenvalue/eigenvector pairs, and then treat the eigenvectors corresponding to the largest two eigenvalues as the new X and Y axes. I'd be very interested to see how this (or some better way) might be done efficiently in Mathematica (this data is generally in the millions of rows). An example of my data is here. and this is the code I've written so far (which depends on version 9+ for `Downsample[]`):                   pathToDatafile = "path\\to\\file\\6000s.xyz";         data = Import[pathToDatafile,"Table","HeaderLines"->15];         data = DeleteCases[data,{__,_String,_String}]; (*remove the "no data" lines that the instrument creates*)         data=Delete[data,-1]; (*throw away the instrument's pound sign at the end of the file*)         data = Downsample[data,{100,1}];(*downsample by a lot because we have way too many datapoints*)         ListPlot3D[data,         Mesh->None,         BoxRatios->Automatic,         PlotStyle->LightBlue,         Boxed->False,     Axes->{True,True,True},     AxesLabel->{"\[Mu]m","","\[Mu]m"},     PlotRange->{Automatic,Automatic,{0,250}},     ImageSize->Large     ]