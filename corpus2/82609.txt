In situations where I need to write observer/subscriber code, how would I choose between the following approaches? A) Declaring an event that simply notifies a client something happens but requires the client to make a query for data e.g.               class SoothSayer{              int DaysUntilApocalypse{get;}              event EventHandler<EventArgs> TheEndIsNigh;          }      B) Declaring an event with specific _XXXEventArgs_ containing the event data e.g.               class SoothSayer{              event EventHandler<ApocalypsePendingEventArgs> TheEndIsNigh     }          class ApocalypsePendingEventArgs:EventArgs{         int DaysLeft{get;}     }      C) Using a callback rather than an event e.g.               class SoothSayer{              public SoothSayer(Action<int> endIsNighCallback){             _endIsNightCallBack = endIsNighCallback;         }     }