This question is inspired by that one. Reading it, I noticed that while (I think) I know what happens when entering an expression directly to the kernel (i.e. after typing `math` in the terminal), the notebook adds extra complications which I don't fully understand. To start with, I describe what I think happens when interacting directly with the Kernel (so you can correct me if I'm wrong):   * After the expression is input, it first is a string, which is passed to `$PreRead` (if set). That function is expected to return a string, which gets assigned to `InString[$Line]`.   * Then this string is parsed (I guess with `MakeExpression`), and the resulting expression assigned to `In[$Line]`   * Then `$Pre` is applied to this expression, if defined.   * Finally, the expression obtained this way is evaluated (After the expression is evaluated, other things happen to generate the output, but that's outside the scope of this question.) Now, for Notebooks, things are obviously more complicated:   * To start with, as far as I understand, the notebook cells contain boxes, not strings. However I noticed that nevertheless `InString` is set. What is not clear to me is whether this string is part of the processing, or if the boxes-to-string conversion is only done in order to set `InString`.   * Next, there's the `Notation` package, which also is involved in the pre-evaluation process. However being a package, I guess it has to hook into some lower-level interface to do its work.   * There's also the fact that notebooks can define their own private contexts. Those contexts also have to somehow be communicated to the kernel. Since expressions from different notebooks can be sent to the kernel in arbitrary order, those contexts need to be associated with the expression, and setting them must thus be part of expression pre-evaluation.   * There might be other things which I'm not aware of. Therefore my question is: What is the exact sequence of events which happens when submitting a notebook cell, as far as customizable behaviour is concerned?