I am asking this as an objective question and have no interest in inciting a flamewar. My point here is to gather some evidence to assist in decisionmaking and communicating with non-technical folks up the management chain. I'm on a UX team at a software company. Weâ€™ve worked with WPF and Silverlight in the past, but some managers have bought into the hype and are considering moving everything into HTML5. Our concerns with pursuing HTML5, based on several months of experimentation with it, are these:   * HTML5 provides a dramatically less evolved development, backend and UI model than WPF or Silverlight. It takes a long time to do anything and the end result is far less smooth.   * Collaboration between designers and developers. One big WPF advantage was that the UX team could design the entire UI and hand it over to developers for remaining work. With web apps we are back to designing redlines/wireframes and throwing them over the wall, given the lack of good tools and the amount of coding required to get even basic animations to work.   * Cross browser headaches. Our experience has been that browser support is very inconsistent and fallbacks are required for pretty much anything.   * It is not clear how HTML5 is any different from previous HTML/JS/CSS. The new tags (section, nav, etc) don't provide any obvious benefit. We lose all binding, security, database functionality and the rich UI.   * Styling, UI presentation. We can't style controls beyond very basic styling or needing to resort to hacks.   * Typography is undependable compared to WPF/Silverlight. So my question is: has done any similar analyses for HTML5 vs a native app (and by this I don't mean a trivial phone app, but a very large enterprise complex application), and has sources or analysis they can share?