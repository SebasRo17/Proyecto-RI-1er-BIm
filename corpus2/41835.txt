This question was prompted by this answer, where I quote,"agile + ORM on a large constantly changing database is brutal". So, how can an agile process deal with a constantly changing database? I am interested in both cases:   1. Where the database design will stablelize, after using it a while to see how it works   2. Where constantly changing data schemas require that the database changes often A couple ideas I had were:   * Use a NoSQL database   * Creating key/value tables for different classes of data. This could create bigger tables, but might work well for data that is not inherently relational.