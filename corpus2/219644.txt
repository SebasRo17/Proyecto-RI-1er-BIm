I have a class `Container`, which represents wrapper around `std::list`. This class contains following public methods:   * `void add(Shape *item)`   * `void next()`   * `void setBegin()`   * `Shape* curr()` and protected variables   * `std::list <Shape*> _container`   * `std::list <Shape*>::iterator _iter` Now I need add sorting of Container without changing existing class code. Which pattern should I use? I think, that Decorator is most appropriate pattern in this case. Should I redesign class Container?