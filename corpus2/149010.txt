I'm wondering if someone has done some experiments correlating code metrics (SLOC, Cyclomatic Complexity, etc) with bug density in Object Oriented applications. I'm not looking for experiments that only prove or disprove a correlation, but on both. I'm not trying to find a silver bullet as I believe that the bug density of a project _might_ correlate to one or more metrics for a given project or team and the correlation can change during the lifetime of the project / team. My goal is to   1. Measure all interesting metrics for 2-3 months (we already have quite a few from sonar).   2. Find one metric that correlates with the number of new bugs.   3. Do a root-cause analysis to check why this happens (e.g. Do we lack a certain design skill?).   4. Improve the skill and measure change for a couple of itereations.   5. Rinse and repeat from 2. If you don't have any experience on this, but remember seeing a paper / blog on this subject, I would appreciate if you can share it. * * * So far I've found the following links with some information about this subject   * Do Bugs Reside in Complex Code? - just the slides from a presentation.   * Changes and Bugs: Mining and Predicting Development Activities - Just slides frmm a presentation. Bottom line the more dependencies, the higher the chances of bugs (I think this is quite a general rule).   * Failure is a four-letter word - A parady about the correlation between bugs and metrics.