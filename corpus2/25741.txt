I'm having a rather baffling problem that Wolfram was unable to help me diagnose, and I'm hoping one of you geniuses in residence here can figure it out. (I don't get access to the Technical Support folks at Wolfram because of the fact that mine is a home license.) If I open a new notebook and run `Factorial[10]//AbsoluteTiming` I will get the expected results for my machine: `{0.000024, 3 628 800}`. However, if I execute it again, the notebook reports "Running" for 3-5 minutes before giving nearly the same output. During that period, the Mathkernel process is cranking with 100% CPU usage, however the actual time reported in the output to perform the evaluation is tiny. There is a pattern. After either canceling the hanging evaluation or letting it run through to its tardy completion, the next evaluation runs normally (i.e. quickly). However, the next evaluation AFTER that hangs again. And the pattern continues indefinitely as far as I have tested it: every other evaluation hangs for 3-5 minutes. My setup: 2012 Macbook Pro Retina running OS X 10.8.3, with Mathematica version 9.0.1.0. I have 8 GB RAM, and plenty of space on my 250GB SSD. 2.3 GHz Intel Core i7. What I have tried: Sleep --> Wake, Restart, Shut Down and Reboot, uninstalling and reinstalling Mathematica, including deactivating and reactivating it. What might be causing this mysterious problem? All other software on the machine is performing normally and I ran the Apple Hardware Diagnostics, which turned up nothing. _UPDATE_ More clues: -Invoking Mathkernel from the terminal to execute an m file works fine. (I haven't tested keeping a Mathkernel alive from the terminal and sending commands one at a time, like you might in the front end.) -If I leave Mathematica and do something else for a few minutes and come back, the first evaluation always works fine and the second hangs. -If I press command+'.' (abort evaluation) before evaluating, it always works. What the....? -If I run Factorial[10]//Timing a few times successfully, the typical response is actually `{6.x10-6, 3 628 800}`