Are there any best approaches for refactoring a programming project that has previously been written with the static reference anti-pattern (the majority of classes refer at some point to a static bean, where all of it's variables are public. Half-way through a class, for instance you'll see something like: `EvilClass.Variable = returnsABoolean()`. Then in a different class, you'll see something like:               if(EvilClass.Variable == foo){         doSomething();     }else{         doSomethingDifferent();     }      Up until recently, I've been working with this pattern as I don't want to mix the styles and get things confused between the styles. But I want to slowly but surely 'fix' this project. I'm the only dev on this, and I don't have the time to just sit down and refactor it (otherwise, I'd push for a full rewrite!). Are there any best practices to be aware of when working with/fixing this kind of project/problem?