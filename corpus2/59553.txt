I am defining a new analytic function of six variables. I have algorithms to evaluate it numerically, and have amassed a large catalog of analytic properties. It is easy for me to program the numerics using:               funcF[a_?NumericQ, b_?NumericQ, c_?NumericQ, d_?NumericQ, e_?NumericQ, f_?NumericQ] = (*...*)      I know the analytic expression for its derivative with respect to each argument. I also know the location of all the singularities and the Taylor/asymptotic series expansion of this function near these singularities in all six variables, and a bunch of other identities. **Question** : I want to make a package that incorporates this function into _Mathematica_. What do I need to do to to make it work as seamlessly as possible with its built-in functions like `Derivative`, `Limit`, `Series` `Simplify`, _etc._ Clearly, there will be a lot of coding to do, but I'm more than willing. * * * I already have a head-start from the answer to this question, which nicely makes the custom function `ln` work well with `Derivative` and `Series`. I stumbled upon this page: http://functions.wolfram.com/NB/StruveH.nb which includes functions like `DomainAndRange`, `Singularities`, etc. and thought this would be the key to accomplishing my task. Alas, these functions aren't `Mathematica` functions and can't be evaluated. Is there a template/guideline for this?