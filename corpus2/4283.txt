While working on a solution to this question I've come across a case where I simply don't understand Mathematica's behaviour. I've got the following definitions:               PatternImplies[(x:(Verbatim[Blank]                       |Verbatim[BlankSequence]                       |Verbatim[BlankNullSequence]))[h_],x[]]:=True          (*CatchAll rule*)     PatternImplies[_,_]:=Maybe;      Now I try this:               PatternImplies[_Integer,_]     (*     ==> Maybe     *)      I would have expected `True`. My first thought was that I probably got the pattern wrong, so I tested:               MatchQ[PatternImplies[_Integer,_],            PatternImplies[(x:(Verbatim[Blank]                              |Verbatim[BlankSequence]                              |Verbatim[BlankNullSequence]))[h_],x[]]]     (*     ==> True     *)      In other words, the pattern matches. Moreover, looking at `Downvalues` I see that the special rule is indeed stored before the catch-all rule. So why does Mathematica chose the second definition (and more importantly, what can I do about it?)