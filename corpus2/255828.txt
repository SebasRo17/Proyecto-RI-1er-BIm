When answering a question on Stack Overflow, the library appeared to have a weird way to specify configuration, through an `Action` passed to the constructor:               public Parser(Action<ParserSettings> configuration)     {         if (configuration == null) throw new ArgumentNullException("configuration");         this.settings = new ParserSettings();         configuration(this.settings);         this.settings.Consumed = true;     }          internal Parser(ParserSettings settings)     {         this.settings = settings;         this.settings.Consumed = true;     }      So to specify the settings you provide a `Action<ParserSettings>` that modifies the settings:               var parser = new Parser( s => { s.CaseSensitive = false; } );      I don't understand what this pattern accomplishes. What is the benefit of passing a delegate to the constructor instead of just having the client code create and pass the `ParserSettings` to the constructor?