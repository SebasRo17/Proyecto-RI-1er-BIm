We're starting to develop many small web projects in our company, where mostly they will have one shared resource with some code pieces (SDKs, utilities and etc...) Our team is small (~5) but is growing and is expected to grow x2-x3 in several months. We're discussing what would be the right way to build our source control and came up with 2 main ideas:   1. Put all code in one repo which will be synced with Github. Everyone will have the copy of all projects and will have the shared resources folder as well - thus will be able to pull/push the shared code and the project code with only one action. Also, there will be no need to follow multiple repositories. On the other side, this might create confusion and errors - as all the code pulled/pushed even if working only on one project.   2. Put each project in its own repo and put the shared resources project in its own repo. Thus everyone who is working on a project will work only on that repo and won't have to push / pull other repos. This will create a more streamlined work - but will make everyone work with at least 2 repositories (shared resources and his project), which might create confusion. I would be glad to know if one of the options is a bad idea or if there is a better way. Thanks!