I'm trying to create a function "InContext" to execute a piece of code inside a certain context (and to return the result of evaluating that piece of code). One approach is to place the code inside a given string.               InContext[context_String]:=Module[{action},     Begin[context];     action = ToExpression[#];     End[];     action]&;      This can be checked by giving the code string "a=1":               InContext["customcontext`"]["a=1"]     (*1*)     a     (*a*)     customcontext`a     (*1*)      However I would like to use a full Mathematica Expression as code (i.e. not inside a string), ideally something like Hold[code]. I've tried, for example:               InContext2[context_String]:=Module[{action},     Begin[context];     action = ReleaseHold[#];     End[];     action]&;      But the result is not the intended, as the code gets evaluated in the Global context:               InContext2["customcontext`"][Hold[b=2]];     (*2*)     b     (*2                      should be b*)     customcontext`b     (*customcontext`b        should be 2 *)      Why is the context changing differently this time, and how can it be made to change "correctly" so that the code is evaluated in the custom context?