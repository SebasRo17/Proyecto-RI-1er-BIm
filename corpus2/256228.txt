I am a beginner in computer programming with C/C++. I have previous experience in programming for the web. There is some confusion that I am having with the software development process in desktop applications. Web applications are easy to upgrade because it is basically a bunch of source files, but I have a question about desktop applications. The major thing I notice about desktop applications is that they are released in different versions. This requires the user to go through the uninstall/re-install process in order to obtain a newer version of the software. In C/C++ software for various platforms, how would a programmer implement an "upgrade" option that would allow a user to update an already installed application without having to go back to a website. How hard is it to upgrade an executable file on platforms like Windows and Linux. I understand that the process may be different for different platforms. Say, for example, I have a desktop application (version 1) that the user has already downloaded and installed onto their own PC. After a while, I make some changes to the software and make improvements that the user would want applied to their software. The user has made customizations to the software, but would like to upgrade to version 2 without having to re-customize their application all over again. Originally, I thought that an "upgrade" feature would replace certain parts of an executable file, but is that really what you would have to do? My main question is: How exactly would someone go about accomplishing this "upgrade" process? Is it possible?