I'm trying to bruteforce an optimization problem and I want to generate roughly a million function evaluations. I was wondering what would be the best for me to do in terms of having the expressions evaluated faster. Curently the expressions are in plain symbolic form and I tried using the ReplaceAll[] or /. operator and it runs really slowly. My expressions are quite large, when I output them into a text file that amasses to a few thopusand lines of equations, so yeah, it's kinda slow because of that. I did optimize it a little in terms of that when in bruteforce, only a single variable of an expression evaluates for a For loop at certain depth and the entire expression doesn't really evaluate a gazillion times, but it's still kinda slow. I know there are a trillion ways to tell mathematica the same thing (turn the expression into a function, etc..) and I was wondering what is the type of definition that would make the evaluation run faster. tl;dr So basically, a simple, somewhat noobish solution to the problem of faster expression evaluation is what I'm looking for