I have a series of functions defined in my notebook, and then want to use this to solve a diffusion-reaction type equation. At the moment, something like this works:               eqn = D[Ef[r, t], t] - Def5*( D[Ef[r, t], r, r] + (2/(r )) D[Ef[r, t], r]) + q[r ] Ef[r, t];          ic = {Ef[r, 0] == kd, Ef[rn, t] == kd, Ef[ro, t] == kd};     s = NDSolve[{eqn == 0}~Join~ic, Ef, {r, rn, ro}, {t, 0, 60}];     Plot3D[Evaluate[Ef[r, t] /. s], {r, rn, ro}, {t, 0, 60},      AxesLabel -> Automatic, MaxRecursion -> 8, PlotPoints -> 32]       `q[r]` is a predefined function, and `rn` and `ro` are boundaries. Now, the above code works, BUT the boundary conditions are wrong and inconsistent; I want to change them to Neumann-type conditions so that $d(Ef)/dr = 0$ at both `ro` and `rn`, but I am having trouble implementing this; any ideas? All help appreciated! This is probably very simple but I'm new to _Mathematica_ and sometimes screw up syntax... DRG