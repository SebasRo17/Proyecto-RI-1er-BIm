On my server I've a model that consists of several objects and attributes, which I persist on a relational database. All CRUD operations are supported. The very common and usual. I need to support several synchronization scenarios: I need to Synchronization between clients and server:   * Clients have a well defined subset of the model (based on permission)   * Clients should be able to perform any CRUD operation on the model, and eventually synchronize with the server.   * Clients don't always have connection with server   * Other clients may modify the model. These changes should arrive to client as soon as possible (ideally - near real time latency when network is on).   * I've a framework to send messages from server to client and vise verse (full duplex) when network is available. This seems to be very similar to our Microsoft Exchange is synchronizing the mail database (mail, folders, contacts, etc.) with Outlook clients, or - to certain extent, how centralized Source Version Control perform synchronization. I've a general idea (keep a version for each entity, maintain a log, implement a conflict resolution algorithm, using GUID for ID's, etc.) - not sure I'm covering all the details. Ideally - I'm looking for a library/framework/platform that does it all for me (me providing mean to send messages, and somehow define the model). One could thing that this is a common enough problem that has already been investigated and implemented. If a library doesn't exist, I'm looking for tips/papers/web sites/pointers.