Continuing with the code at the end this topic, I am now searching for a way of constraining the movement of the locator so that it doesn't "jump" from one "part" of the graph of f to another. So, if for example the graph of f has an intersection, as in               f[t_] := {Cos[5 t], Sin[4 t]}      then, I'd like the locator to be constrained for increased values of t, so that it "simply" continues the graph of `f` without "jumping" `t`-values. Now, I thus tried, instead of using `fvalues` as defined in the earlier link, to use something like this               Table[{t, f[t]}, {t, 0, 2, 0.1}];      and then to sort it accordingly with               SortBy[fff, Function[f0, Norm[f0[[2]] - #]]      but when I insert this into the second argument of the `Dynamic` of the `Locator`, the constrained movements don't change... Any help, as always, very much appreciated!