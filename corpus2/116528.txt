How much do you, as .Net developers, consider the changes between Windows XP, 7, & 8 when choosing your development environment and libraries? We are nearing the end of Windows XP; Windows 7 is noticeably and aggressively making it's mark; Windows 8 (Win R/T) is on the horizon. Granted, **flexibility** is completely expected from the customer's perspective. But we are faced with developing to the current OS, Windows 7 ( _understandably, some may argue the current OS is still XP_ ) ...and maintain legacy code for the outgoing OS, WinXP. So, Windows 8 and all the Win R/T goodness flares the imagination and you can't help but ask yourself, " _what will still be relevant in 5 years?_ " Well, at least I can't help but ask the question. During periods of rapid evolution of an OS, what considerations do you plan for in application design, libraries, frameworks, and choosing development environments; and, in doing so, how do you determine the length of relevance a particular design will have?