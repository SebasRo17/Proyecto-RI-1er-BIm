Background: Consider the following ( for the purpose of illustrating this question ) simplified, but working snippet of code.                TabView[       {        {patt, "Pattern" -> 1},        {motif, "Motif" -> Column[{           Button["Type", Print[" NOT IMPLEMENTED YET"], ImageSize -> 100],           Button["New shape", Print[" NOT IMPLEMENTED YET"], ImageSize -> 100],           Button["Pixel", Print[" NOT IMPLEMENTED YET"], ImageSize -> 100]}]}       },       Dynamic[tab]]      I have a GUI in a Module / Manipulate construction which contains a tabview that displays several views of the same data on its tabs. Each tab contains a series of buttons to further specify the particular view on that tab. Each tab consists several buttons and other controls, i.e. setterbars, 2D sliders. After each click or other action on a control the data is modified and all views are recalculated and displayed on the tabs. The issue is that after each tab the tabview always returns to page 1. I have already made accomodations by using the following format of TabView:                 TabView[{         {value1, "Tabname"->CodeOnTab1},         {valueN, "Tabname"->CodeOnTabn} },        Dynamic[VAR]      As I understand the Tabview opens tabN if VAR is set to valueN. This leads to the following question: what is the best =coding strategy= to make a TabView aware of the tab it should display ( open ) when it is re-displayed ( considering the last user action ) ? **The goal / criteria is: minimal code use.**