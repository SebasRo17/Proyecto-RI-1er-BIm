Golang seems promising. I've been following this lang since its first release. It might take time to be a very good competitor to other programming languages. One brilliant aspect of Java and .NET I see is their designers chose to create their own Virtual Machine so that other programming languages can run on it. Now I see Scala seems to be a very good competitor to Java. It can run on JVM and it has better syntax/concept and very promising chart progress on Tiobe. To make this topic more specific, by _Future_ , I only scope its scalable usage in **various prominent industries** as well as for **campus** and **government**. As golang compile to machine code, my question is **will golang support multiple languages?** Like many languages can run on Java and .NET VM. I can't find other than these 2 environments example that don't have VM but directly compile to machine code like C/C++ or Go Lang. I read from Golang blog that Google invested in golang that much, I wonder what strategy would Google take to boost golang penetration. I saw archive from Golang mailing list about golang roadmap, but no one answered that question. Or would golang make its hybrid into another form, just like how JavaScript can take off this far from its Lisp soul deep down beneath JavaScript, quoting from JS The Good Parts Book by Douglas Crockford: > JavaScript's functions are first class objects with (mostly) lexical > scoping. JavaScript is the first lambda language to go mainstream. Deep > down, JavaScript has more in common with Lisp and Scheme than with Java. It > is Lisp in C's clothing. This makes JavaScript a remarkably powerful > language. Or probably like how FP languages have been inspiring so many other languages this far. If golang really is promising (just like Scala) I would invest one or two of our programmers to learn golang. So far, I just support them to strengthen their concepts instead on OO(A)D, FP, and Theoritical CS to get their fundamental strong enough to face any language progress in the future.