I am used to user testing in Java, and I also manually test each section of code I write, but now, I want to automate it. There is no GUI for this project, so user testing is not required and I can focus code testing. The fact is, I don't know how to test code other than by calling the methods by hand, passing different parameters to them, and check the return value. I suppose automation is a solution, but don't have a clue how to pass from manual testing to automated one. Are there tools which can create the relevant tests for me, or do I need to write tests manually? What can be automated? Here is an example of code I want to test. Do I need to transform it somehow in order for it to be unit tested?               def netInfoToSend(tm, our_or_ip_version, our_or_addr_len, our_op_ip, version_their_ips,                       num_their_ips, len_their_ips, their_ips):              cellNetInfopkt = struct.pack(">I", time.time())              #         Number of addresses    [1 byte]         # cellNetInfopkt += struct.pack("B", num_their_ips)         #         Their OR's addresses    [variable]         print "peerAddress", peerAddress         print "peerAddress type", type(peerAddress)              cellNetInfopkt += struct.pack(">B", 4)         cellNetInfopkt += struct.pack(">B", 4)         cellNetInfopkt += struct.pack("B" * len(peerAddress), *peerAddress)              cellNetInfopkt += struct.pack(">B", 1)              # Address format is a type/length/value         #         This OR's address     [variable]         cellNetInfopkt += struct.pack(">B", our_or_ip_version) # IPV4         cellNetInfopkt += struct.pack(">B", our_or_addr_len)         cellNetInfopkt += struct.pack("B" * len(ownAddress), *ownAddress)              return cellNetInfopkt