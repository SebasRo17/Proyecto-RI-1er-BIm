So I'm in the process of looking for a job. And I have had plenty of test and just recently someone sent me a puzzle. It's the crackless wall problem and I have no idea how to approach it. I could cheat and google the answer, but I'm an honest fellow and it's taken me 2 days and still no solution. Also performance is a key issue as well. Should I take some time to master solving programming puzzles? Or should I focus on learning the language first, then master optimization techniques? I'm having issues choosing the best approach. Just today I found out from a previous interview that they chose someone else over me because that candidate seemed more knowledgeable than me because during the technical interview this candidate was a bit more snappy with his/her responses. I knew all the answers but I wasn't fast enough with them. Does this matter with all interviewers? Should I invest time in mastering core concepts in java so I can have just as fast recall? (To shed some light on my background: I am a recent graduate with a little over a year of java programming experience under my belt. I only have a bachelors degree. I know this is irrelevant, but I'm also 23.)