I'm currently trying to cover our shopping cart with unit tests. Class `ShoppingCartItem` has property `Term`. It also loads available terms for this item upon object creation. Currently this is done using call to static class in constructor. **Current state:**               public class ShoppingCartItem     {         private Dictionary<Guid, ShoppingCartTerm> terms;          public ShoppingCartItem(int productID)         {             terms = SKUInfoGopasProvider.LoadAllTerms(productID);         }      }      My question is. How to make data source interchangeable? Should I introduce factory class? Obvious answer is use constructor injection but that doesn't seem somewhat right to me. I am thinking about making something along these lines.               public class ShoppingCartData     {         private readonly ShoppingCartItemFactory _factory;              public ShoppingCartData(ShoppingCartItemFactory factory)         {             _factory = factory;         }              public void AddItem(int productId)         {             var item = _factory.CreateCartItem(productId);             _items.Add(item);         }     }