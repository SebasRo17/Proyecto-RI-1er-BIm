I am pursuing object oriented design. So we don't want to use globals but yet sometime we have a module that most other modules use. This means we have to just pass it to all other modules and this can be literally all modules!               class Logger     {     public:         Logger(void);         ~Logger(void);     };               class Calculator     {     public:         Calculator(Logger *logger);         ~Calculator(void);     };               class Taxation     {     public:         Taxation(Logger *logger);         ~Taxation(void);     };      So the idea is that the `Calculator` and `Taxation` modules use the `Logger` module to log everything. Similarly most other modules will use it too, and logging is required everywhere. Is this method okay or should `Logger` be global instead?