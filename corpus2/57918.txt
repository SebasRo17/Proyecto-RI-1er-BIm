I tried to solve a system first order differential equations together with a constraint equation. I use the `Method -> Projection` to check if the constraint holds at each step. However, two problems occur: The first problem is that I get the messages: > General::ovfl: Overflow occurred in computation. and General::unfl: > Underflow occurred in computation, I do not know how to handle these messages. The second problem is that I get the message: > NDSolve::nlnum: "The function value {Overflow[], Overflow[], Overflow[], > Overflow[]} is not a list of numbers with dimensions {4} at {t, u[t], x[t], > y[t], z[t]} ... I have attached the image of the code with the given explanations in (**) for convenience. I would appreciate it if anyone would give me some help.               Needs["DifferentialEquations`NDSolveProblems`"];     Needs["DifferentialEquations`NDSolveUtilities`"];     Needs["DifferentialEquations`InterpolatingFunctionAnatomy`"];      ( _Defining constant parameters_ )               θ = 0.182; w = 0; ρi = 4.2; xi = 0.0; ui = 8.71; adot = \     -6.4; zi = 26.57; om = 11.72; ti = 0.0; ts = 10000;      ( _Defining an invariant quantity that must hold true during the \ dynamical evolution of the system_ )                ina = -Exp[-3 x[t]]/(      2 (2 om + 3)) (om/6*y[t]^2 - u[t]^2*z[t]^2 + u[t]*y[t]*z[t]) +       u[t]*Exp[3 x[t]] (-16*π*ρi*Exp[3 (1 + w) (xi - x[t])])      ( _Defining the system of first order differential equations to be \ solved numerically_ )                 eqs = {x'[t] +        Exp[-3 x[t]]/(       2 (2 om + 3)*       u[t]) (om/3*y[t] +         u[t]*z[t] + θ (y[t] - 2 u[t]*z[t]) z[t]) - (θ*        Exp[3 x[t]]/u[t]) (-16 π*ρi*        Exp[3 (1 + w) (xi - x[t])]) == 0,       u'[t] + Exp[-3 x[t]]/(2 (2 om + 3)) (y[t] - 2 u[t]*z[t]) +       6 θ*      Exp[3 x[t]]*(-8 π (1 - w)*ρi*        Exp[3 (1 + w) (xi - x[t])]) == 0,       y'[t] - Exp[       3 x[t]]*(48 π*ρi*(1 - w)*Exp[3 (1 + w)*(xi - x[t])]) ==      0, z'[t] -       Exp[-3 x[t]]/(2 (2 om + 3) u[t]) (y[t] - 2 u[t]*z[t])*z[t] +       Exp[3 x[t]]/u[t] (-16 π*ρi*Exp[3 (1 + w)*(xi - x[t])]) ==      0}      (*Defing initial conditions: *)               ics = {u[ti] == ui, x[ti] == xi, z[ti] == zi,      y[ti] == -(1/(3 zi*θ + om))       3 (6 adot* E^(2 xi)*ui + ui*zi - 2 ui*zi^2*θ +        96 E^(6 xi)* π *θ *ρi +        4 adot* E^(2 xi) *ui *om +        64 E^(6 xi)* π*θ *ρi* om)}      (*Defining variables to be evaluated: *)                vars = {x, x', x'', u, u', y, z}      (*Using the NDSolve Command: *)               g = NDSolve[{eqs, ics}, vars, {t, ti, ts},      Method -> "StiffnessSwitching",      Method -> {"Projection", Method -> "ExplicitRungeKutta",      "Invariants" -> ina == 0}, InterpolationOrder -> Automatic,      WorkingPrecision -> MachinePrecision]      ![This image is a print screen of the code together with codes for convenience](http://i.stack.imgur.com/4fCoi.png)