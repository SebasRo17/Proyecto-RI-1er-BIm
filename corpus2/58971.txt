I have two tensors:                   tensorS = Array[Subscript[s, #1, #2, #3, #4] &, {2, 16, 16, 19}];         tensorR = Array[Subscript[r, #1, #2, #3] &, {2, 16, 19}];      Here is a `Part` of the solution that I want to obtain:                   Map[Plus[tensorR[[1, 1]], #] &, tensorS[[1, 1]], {1}];      which is the same as:                   Thread[Plus[Transpose[tensorS[[1, 1]]], tensorR[[1, 1]]], List];      or:                   Inner[Plus, tensorS[[1, 1]], tensorR[[1, 1]], List];      The resulting tensor should have `Dimensions` `{2,16,16,19}`. It can be seen from the part of a solution, that I want to add every element of a `tensorR` (defined by it's indices `i1,i2,i3`) to the corresponding elements of a `tensorS` `i1,i2,i3,i4`, for all indices `i3` of a `tensorS`. First `i1`, second `i2`, and third index `i3` of `tensorR` correspond to first `i1`, second `i2` and fourth `i4` index of `tensorS`, respectively. This is the solution I want to get, but without using Table:                   Table[Map[Plus[tensorR[[i, j]], #] &, tensorS[[i, j]], {1}], {i, 1, 2}, {j, 1, 16}];      $Q$: How to use the combination od `Thread`, `Map`, `MapThread`, `Transpose` and `Inner` functions to obtain the above result? I want to avoid using `Part` and `Table`. I'm sure that there's elegant solution that can be written in one line, but I'm not that good with deeply nested lists, so I decided to ask for your help. I've searched the forum and couldn't find the solution. I apologize if my question is a duplicate.