Let's say I have a database of persons who have some properties. For the sake of this problem let's say all of these properties relate as N-N. I can either create two tables for each property (one for different values and one for cross-referencing them to the main object). Or, I can make the following structure: ![enter image description here](http://i.stack.imgur.com/S93FG.png) Basically having just one huge table of values. Are there any advantages to this approach? Also, does this approach or pattern have a name that I can look up? UPDATE: For example, we make classifier `pets` with properties `cat`, `dog` and `fish`. So one person may have a `cat` and a `dog` (or one pet, or none). And we make a classifier `hobby` with values `skiing`, `skating`, `football` and `TV`. So Joe has properties `cat`, `dog`, and `TV`. Then `cat` and `dog` are `pets` and `TV` is `hobby`. The question is, is it worthwhile to put this data using this diagram, or is it a better idea to just create `pets`, `pets_xref`, `hobby`, `hobby_xref` tables?