I would like a fast method of creating a sample of random numbers which corresponds to the eigenvalues of a Wishart matrix: ![definition of Wishart matrix](http://i.stack.imgur.com/6xYr3.png) For M>N the eigenvalues \lambda_i are given by the jpd ![eigenvalue distribution](http://i.stack.imgur.com/WA02Y.png) Where $K_N$ is a normalisation constant and $\beta = 1,2$ depends on whether $X$ is real or complex. Does anyone have any suggestions for a fast way of implementing this? My goal is to play with multiple realisations of eigenvalues representing 100x100 matrices. Many thanks in advance! EDIT: Ok, here is a very basic example:               n = 1000;     m = 1001;     μ = 0;     σ = 1/Sqrt[n];     AbsoluteTiming[     a = RandomVariate[NormalDistribution[μ, σ], {n, m}];     wish = a.a\[ConjugateTranspose];     ewish = Eigenvalues@wish;     ]     ewishPlot = Histogram[ewish, {0.1}, "PDF"];          ηp = n σ^2 (1 + Sqrt[η])^2;     ηm = n σ^2 (1 - Sqrt[η])^2;     η = m/n;     ρmp[λ_] := 1/(2 π n σ^2 λ)Sqrt[(ηp - λ) (λ - ηm)];     ρmpPlot = Plot[ρmp[λ], {λ, 0, 4}];     Show[ρmpPlot, ewishPlot]      I guess speed won't be a problem but I would still very much like to know the best way of doing this.