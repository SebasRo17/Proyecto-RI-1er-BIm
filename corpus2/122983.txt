I'm in the process of creating a grammar for a scripting language but as I'm working on it I started to wonder what makes a language good in the first place. I know the goals for my script but there are always 1000 different ways to go about doing things. Goals:   * Easy to use and understand (not my grandma could do it easy, but the secretary at the front desk could do it or the VP of marketing could do it type of easy)   * No user defined functions or subroutines.   * Its use would be in events of objects in a system similar to HyperCard. Conceptually I was thinking of a language like this:               set myVariable to 'Hello World'     set counter to 0     repeat 5 times with x     begin         set counter to counter add x     end     set myVariable to myVariable plus ' ' plus counter     popup myVariable          set text of label named 'label' to 'new text'     set color of label named 'label' to blue      The end result would popup a dialog with the contents `Hello World 15` it would also change the text of a label and make it blue. But I could do the same thing 1000 different ways. So what makes one language any better than another when both are designed for the same goals?