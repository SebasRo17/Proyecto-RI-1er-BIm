Are there scenarios where polling for events would be better than using the observer pattern? I have a fear of using polling and would only start using it if someone gave me a good scenario. All I can think of is how the observer pattern is better than polling. Conside this scenario: > You are programming a car simulator. The car is an object. As soon as the > car turns on, you want to play a "vroom vroom" sound clip. You can model this in two ways: **Polling** : Poll the car object every second to see if it's on. When it's on, play the sound clip. **Observer pattern** : Make the car the Subject of the observer pattern. Have it publish the "on" event to all observers when itself turns on. Create a new sound object that listens to the car. Have it implement the "on" callback, which plays the sound clip. In this case, I think the observer pattern wins. Firstly, polling is more processor intensive. Secondly, the sound clip does not immediately fire when the car turns on. There can be up to a 1 second gap because of the polling period.