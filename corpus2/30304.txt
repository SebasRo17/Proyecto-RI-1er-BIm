I'm using this distance function to compare distance between strings:               distance[str1_String,str2_String] := Module[{split,r},         split="*"<>#<>"*"&/@StringSplit@str1;         r=N@Total[Boole@StringMatchQ[str2,#,IgnoreCase-> True]&/@split]/Length@split         ]     totalDistance[str1_String,str2_String]:=(distance[str1,str2]+distance[str2,str1])/2      `totalDistance` works just nice, but it's one order of magnitude slower than native distance functions like `EditDistance`. Here is some code test:               testList=ConstantArray["Distance String Test with Mathematica",50000];     totalDistance["String distance test with MMA",#]&/@testList//AbsoluteTiming//First     EditDistance["String distance test with MMA",#]&/@testList//AbsoluteTiming//First      > 4.063474 > > 0.433012 Some clue on how to optimize this code?