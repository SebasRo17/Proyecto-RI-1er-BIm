I'm having some trouble deciding on a proper way to layout some of my schemas in Mongoose. I have a User schema currently as:               {       name: { type: String, default: "" },       phoneNumber: {type: String, required: true, unique: true },       contacts: { type: [ObjectID], ref: 'User', index: true },       ...     }      But I am curious if removing contacts from the user schema and having another collection (Contacts) like the following isn't a better idea:               {       user: { type: ObjectID, ref: 'User', index: true },       contact: { type: ObjectID, ref: 'User', index: true }     }      Where each entry would compose a composite key. Two questions pop to mind when I would need to query the data.   1. Who are user `x`'s contacts?   2. Which users have user `x` as a contact? (My reason for this post) I've tested my current setup, option 1, with about 1 million users with 100 contacts each and the index created on the contacts field is about 3GB with fast search results for question 2 (< 80ms). However, I'm not certain if it's the right approach or if that index size is acceptable. I want to lean towards option two and normalize the data, but am I right to do so in this case?