Is there a way to tell `ParallelMap` to use just some specific kernels (as is possible for `ParallelEvaluate`)? **Background:** I have 6 local and 16 remote kernels. During some analysis I call `ParalleMap` twice. One `ParallelMap` is quicker using all the kernels, but one is actually slower (probably bandwidth limited). This is why I would like to run one `ParallelMap` on all the kernels and the other only on the local kernels. I don't want to close the kernels in between if possible. I also tried setting the parallelization method to `"CoarsestGrained"` or `"FinestGrained"`, but that didn't help much. **Edit:** Could somebody shed light on why the following does not work?               num = 10;     list = Range[num];     function = Labeled[Framed[#], $KernelID] &;     ParallelMap[function, list]     aKer = Kernels[];     Block[{Parallel`Protected`$kernels = aKer[[{2, 3}]]},        ParallelMap[function, list]     ]      ![Mathematica graphics](http://i.stack.imgur.com/M9OxY.png) The second map is still run on 4 of the Kernels instead of just two. I traced `ParallelMap` to               Parallel`Developer`ParallelDispatch[Parallel`Combine`Private`cmdl]      and               Parallel`Developer`ParallelDispatch[Parallel`Parallel`Private`cmds_] :=         Parallel`Developer`ParallelDispatch[Parallel`Parallel`Private`cmds,Kernels[]]     Kernels[]:=Parallel`Protected`$kernels      so overriding `Parallel`Protected`$kernels` should in theory work.