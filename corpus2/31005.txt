The following code runs error-free in _Mathematica_ 8.0 under Linux.               ClearAll["Global`*"];     x = RandomReal[{0.1, Pi}, 100];     g[t_] := x[[Ceiling[t]]]/Max[x]     RevolutionPlot3D[         {g[t] Sin[t]^2 + 1, t},         {t, 0, 5},                    (* see comment in 'EDIT' regarding the t=0 case *)         {θ, 0, 2 Pi}]      The same exact code produces the following errors when is executed in _Mathematica_ 9.0.1 under Mac OSX (copied by hand): > Part:pspec : Part specification Ceiling[t] is neither a machine-sized > integer nor a list of machine-sized integers.>>   >  General::stop : Further output of Part::pspec will be suppressed during > this calculation.>> **EDIT** : `g[0]` yields `0.32669List`, but changing the domain to say `{1,5}` does _not_ fix anything. Despite the errors an almost original image is produced. I used an evaluation monitor to check whether `g[t]` is properly calculated like:               ClearAll["Global`*"];     x = RandomReal[{0.1, Pi}, 100];     g[t_] := x[[Ceiling[t]]]/Max[x]     RevolutionPlot3D[         {g[t] Sin[t]^2 + 1, t},         {t, 0, 5},                    (* see comment in 'EDIT' regarding the t=0 case *)         {θ, 0, 2 Pi}, PlotPoints->3,  (* restrict points or else we will get flooded *)         EvaluationMonitor :> Print["t=", t, ", g[t]=", g[t]]]      The output I get is of the form: > ... Part::pspec : ...   >  t[2.5x10^-6, g[t]=0.40655   >  t[2.5], g[t]=0.811194   >  ... which looks ok. Finally, I don't think that my problem has to do with `RevolutionPlot3D[]` per se, but rather with the way I define and call `g[t]` in this context.