I am trying to understand dealing with immutable data in FP (specifically in F#, but other FPâ€™s are ok as well) and break the old habit of state-full thinking (OOP style). A part of the selected answer to the question here reiterated my search for any write-ups around problems that are solved by stateful representations in OOP with immutable ones in FP (For ex: A queue with Producers & Consumer). Any thoughts or links are welcome? Thanks in advance. **Edit** : To clarify the question a little more, how would immutable structures (ex: queue) be shared concurrently across multiple threads (ex: producer and consumer) in FP