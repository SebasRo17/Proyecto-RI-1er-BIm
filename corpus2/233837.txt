Dependencies are services required by an object to perform its responsibilities. In OOP context it can be thought as a parameter in a constructor. In my experience I've never found a case for a valid cyclic `A <--> B` dependency. Every time I find this it turns out to be one of two cases:   * `A` and `B` should actually be a single component (`AB`)   * one of components violates single responsibility principle and should be divided into separate ones (`A1 --> B --> A2`) To be clear, I'm not talking about cycles in objects used for data structures. I'm interested in components which provide behavior and collaborate between themselves.