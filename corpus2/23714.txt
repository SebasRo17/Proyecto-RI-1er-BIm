One of the many attractions of Mathematica is that integers are generally treated as exact symbolic entities, and not just as numbers. I was just playing with Sqrt, and was puzzled by what appeared to me to be an inconsistency that must have been there since day 1, and yet which I have somehow not noticed before. This works as expected:               Sqrt[x^2]     Sqrt[x^2]      so that this evaluates correctly:               Solve[y == Sqrt[x^2], x]     {{x -> -y}, {x -> y}}      But, if I enter exact integers, only the positive branch solution is returned:               Sqrt[9]     3      and so:               Sqrt[(-3)^2]     3      * * * In Summary: The various comments below make it clear that the Sqrt function:   * only ever returns the positive branch, by design.    * Sqrt[x^2] is left unevaluated, so that the positive branch can be selected with appropriate assumptions, as per: Simplify[ Sqrt[x^2], x<0] -> -x This leaves the prevailing issue: Is there perhaps a variant of Sqrt (or option) that gives both solutions that I have missed? Why does there not seem to be a function in Mathematica that returns the mathematically rigorous solution set {negative branch, positive branch} ... rather than just returning the positive branch that seems to operate more like a 20thC pocket calculator? For example:               Sqrt[  Interval[{-2, 0}]^2 ]     -> Interval[{0, 2}]      ... is correct given how the Sqrt function is defined (to always return the positive branch), but most confusing given that we actually seek the set of possible solutions. Many thanks for the suggestions below! It would be nice to see something like this added to the Sqrt functionality in mma.