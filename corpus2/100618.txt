I'd like to know if there's a general guide or best practice for wrapping basic functions. Let's take J for example. It has several 1-or-2 character "functions" called primitives. Examples:   * `,` : Flatten a matrix or append to a vector   * `{` : Catalogue combinations or take nth item of a matrix   * `{.` : Take first or n elements of a matrix   * `}` : Amend items in a matrix Some J programmers think it best to use them as such, other will wrap them in functions like so:   * `Append =: ,`   * `TakeFirst =: {.` I found that's not always practical because I'm used to the actual "symbols", but that basically means I'm biased. So, any advice on the best practice to use? To wrap or not to wrap?