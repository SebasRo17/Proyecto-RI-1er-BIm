I've been hearing a lot of enthusiasm about functional programming languages lately, with regards to Scala, Clojure, and F#. I've recently started studying Haskell, to learn the FP paradigm. I love it, it's really fun, and fits my math background. But will it ever really matter? Obviously, it's hardly a new idea. Here's my questions:   1. What has contributed to the recent FP enthusiasm? Is is merely boredom with OO, or has something changed to make FP more needed than before?   2. Is this indicative of a FP future? Or is this a fad, like object orient databases? In other words, can anyone help me understand where this comes from and where it might be going?