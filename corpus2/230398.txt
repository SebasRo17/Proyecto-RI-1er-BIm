Often boolean setters are pretty self-explanatory, like `setLogErrors($bool)`. I do see some benefit of providing some additional information in the documentation, in this instance maybe where these errors are logged. But how much documentation is too much, especially when it comes to documenting the value that is passed to the setter? Documentation tools like phpDocumentor would like that variable to be documented as well, but from the context it is pretty clear that it takes a boolean. Often I personally find it better when the code speaks for itself, especially in situations like this. What is the best practice in situations like this? **Should the argument be documented** or not, how about **the setter, should it be documented**? Wouldn't the code readability improve if there was less documentation in this circumstance? I am not part of a large developing team and I don't read a lot of code written by others. I was hoping to gain some insight into **what standards are set in larger organizations and what is the easiest for people to read when the code is not their own**. I hope this questions is not too opinion based.