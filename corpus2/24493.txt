Suppose I work for organisation PQR, and have been developing a suite of packages, `PQRUtilities`, `PQRVisualization` etc, all of which are neatly arranged in a context `PQR`. They can all then be loaded with a single package call `Get["PQR`"]`. The only content of the PQR package is               BeginPackage["PQR`" ,{"PQR`PQRVisualization`","PQR`PQRUtilities`"}]     (* Exported symbols added here with SymbolName::usage - but nothing here *)         Begin["`Private`"]     (* Implementation of the package - nothing here either*)       End[]         EndPackage[]      I have noticed that if I call the subsidiary packages directly with `Get["PQR`PQRVisualization``"]` or the `Needs` equivalent, I get predictive code completion pop-ups including my custom functions. However, if I just call `Get["PQR`"]`, my functions are loaded but I do not get the nice predictive code completion. Ultimately all these packages will be put in the `Autoload` part of the path, so maybe this doesn't matter. I would like to be able to provide the simpler way to load all the custom packages I've developed, and still enjoy the benefits of the code-completion suggestions. Some of my function names are quite long, e.g. `PQRScatterGraph`. Is there a way I can get functions from packages loaded in this way to be visible to the code completion functionality?