This has been bugging me for a while. Most of the time, when it comes to storing data in structures such as hashtables, programmers, books and articles insist that indexing elements in said structures by String values is considered to be bad practice. Yet, so far, I have not found a single such source to also explain WHY it is considered to be bad practice. Does it depend on the programming language? On the underlying framework? On the implementation? Take two simple examples, if it helps: An SQL-like table where rows are indexed by a String primary key. A .NET Dictionary where the keys are Strings.