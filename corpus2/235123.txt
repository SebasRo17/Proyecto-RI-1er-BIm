I am working on a website, which is to have multiple brands. The core functionality for all brands will be the same, however there will be a number of differences between them. Those differences may appear, obviously, in assets, models, views or settings. One example would be that one brand will have one extra field for one of our models. This means that we need to have an extra database column for this brand only, together with proper validations within the model and modified view. The question is, what would be the best way to implement this? There is a number of ways we can think of, none of them is perfect:   1. Conditionals (previous implementation): at the application start, set the global variable called `BRAND` and then fork our logic depending on that constant. This obviously is not what we are looking for, as it will clutter the code terribly as we are planning to have a large number of brands.   2. Load path precedence (current implementation): We can have one folder with core functionalities and another with brand specific overrides. On the application start we can prepend load paths with brand-specific folder path. This way it will always try to load brand-specific models and fall back onto core if none are defined there. The downside of this approach is that we need to duplicate each file we want to modify for given brand. So if we want to add an extra field to the brand, we need to copy the core view to the brand folder and modify it there. If at any point we would like to change the core view, this change needs to be added to this branded view as well manually.   3. Using git branches (proposed): The core implementation sits on git master branch and each brand occupies its own branch. Then any brand specific changes are committed to underlying brand branch. If we need to modify all the brands, we modify master branch and then we merge this change to all brands. Downside: for a large number of brands merging this change might be quite a long and conflict-prone process Are there any other ways to implement flexible branding for ruby on rails application? I am definitively in favour of the git option - are there any obvious `no-no`s for this solution?