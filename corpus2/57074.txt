**Question** : Consider the following numerical resolution:               NDSolve[eqn, {x1[t], x2[t], y[t]}, {t, tmin, tmax}      where `eqn`, `tmin` and `tmax` are given. Suppose this gives an error (for example, a stiff system detection, or any numerical error). How would you do to adjust _automatically_ `tmin` and `tmax` to the largest (or a "large") interval where `NDSolve` doesn't give any error? I tried using `Check` but I don't manage to use it efficiently as I cannot catch the defective times. **Context** : In case you're wondering, I'm asking because I have a large number of odes `eqn` to solve, some of which work fine on $[t_\mathrm{min},t_\mathrm{max}]$, but some others don't. And of course I don't want to adjust the time interval by hand! **Example** : With               eqn = {x1'[t] == -x1[t]^2 - x2[t] + y[t]^3, x2'[t] == x1[t] - x2[t] + x1[t]^2 x2[t]^2,      y'[t] == x2[t]^2 + y[t] + x1[t]^2 y[t]^2 + 0.5` y[t]^3, x1[0] == 1, x2[0] == 1, y[0] == 1};      the following               {tmin, tmax} = {-1, 1};     NDSolve[eqn, {x1[t], x2[t], y[t]}, {t, tmin, tmax}];      yield an `NDSolve::ndsz` error while               {tmin, tmax} = {-0.5, 0.5};     NDSolve[eqn, {x1[t], x2[t], y[t]}, {t, tmin, tmax}];      works fine.