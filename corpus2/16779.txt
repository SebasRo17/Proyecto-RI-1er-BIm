As a software developer, I've worked on projects ranging from tiny home-made apps to medium-size enterprise applications. **In nearly every project I used a database** or regretted choosing not to use it from the beginning. Now, I am wondering a few things about the databases and their usage in general applications:   * Why Windows itself doesn't use any "central" SQL database? For example:      * Errors Reporting data is stored in a bunch of files,     * Windows Update stores everything in flat files,     * Icons cache is stored in a very strange single file which doesn't seem to be accessed through SQL, etc.   * Why so many large applications avoid using databases? For example, wouldn't Microsoft Outlook gain by using a real database instead of reinventing the wheel by having its own format for .pst files and storing some data in registry? If database adds an additional layer of an overall complexity and a tiny performance loss, it is a price of a huge advantage of making the code simpler in most circumstances, especially when it comes to the storage of small organized chunks of data instead of large binary streams. So why so few products are actually using databases? Probably the only application I know which actually uses Sqlite database is Firefox, and maybe Microsoft Exchange (but the last one is not a desktop application)? Also, wouldn't _a set_ of applications, like Microsoft Office or Microsoft Expression, benefit from having an _unified SQL database_ , making it easier to deploy the applications, to update/upgrade the data, to share data between those applications, to make backups, etc.?