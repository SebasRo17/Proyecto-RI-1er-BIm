I am creating a simple radix2 FFT algorithm (based on Cooley-Turkey) by using a recursive function to obtain the fft. The function is supposed to work on a list (assuming the length is a power of two). and it's supposed to give back a list of the same size. The code I wrote gives back a single output. It looks like the For loop is not working. Would anybody know why the For loop is not working? ![enter image description here](http://i.stack.imgur.com/EQ1hb.jpg)               Clear[fft2]     fft2[L_] :=       fft2[L] = Module[{Le, Lo, n, w, k}, (*Rememeber previous step*)        n = Length[L];        If[n == 1, (*Tests if N=1 and assigns that value if true*)           L,           Le = Take[L, {1, -1, 2}]; (*Creates a new list of size N/2 with even indexed elements*)           Lo = Take[L, {2, -1, 2}]; (*Creates a new list of size N/2 with odd indexed elements*)          For[k = 0, k < n, k++, (*Combines terms*)              w = Exp[-2 Pi I *k/n];              Xk = fft2[Le] + w*fft2[Lo];              Return[Xk]             ]           ]        ]