I developing a client using Flex and ActionScript that is run in the browser and communicates with our server backend. There has been concern that the application "needs" to have a graphic indicator to show whether the client has a connection to the server or not. Part of the problem of this requirement is that is coming from a high-level perspective that because the interface looks "broken" (i.e. doesn't update properly). I have an idea where the problem is, but that doesn't mean that the error is in the interface. I believe that a connection monitor feature is unnecessary because:   1. Users won't be able to do squat. Our user base is largely non-technical.   2. Flex generates HTTP error events but does not specify what happened. I can't tell what _real_ problem is which could be:      * The user actually has no network connection.     * The application server code is broken in some way.     * The server itself is messed up (i.e. "Oops, I broke the Apache config").     * Server load is too high and becomes unresponsive.     * There is a some other problem (e.g. network or hardware) beyond my or users' control. How do I convince that this feature is not valuable to develop? If it is something worth keeping, what are alternatives to showing a "network status" or server connection problem in the client? I would rather spend the time to dig at the root of the problem and _prevent_ it from happening rather than creating an additional "feature" that doesn't solve anything.