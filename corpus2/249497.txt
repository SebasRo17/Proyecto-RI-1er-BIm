I have been working on a change release application for some time now. The workflow is as follows:   1. Archive the staging file   2. Archive the current prod file   3. move staging to prod      * Delete prod file     * Copy staging file to prod dir     * Delete orig staging file When I execute my code against a Windows Server using UNC (i.e.: \Server1\d$\Production) it works perfectly. My issue is that most our changes happen against a Net App file system. When I execute against this, I have gotten many different errors based on how my code is structured. Currently, I get 'The process cannot access the file '\Netapp\share\files\FILE_NAME.ext' because it is being used by another process.' Here is my current code:               Private Sub ReleaseToProd_Click(sender As Object, e As EventArgs) Handles ReleaseToProd.Click     Dim fs As System.IO.StreamWriter = My.Computer.FileSystem.OpenTextFileWriter(LogPath, True)     Dim i = 1          fs.WriteLine("--- " & Now)          TextBox1.Text += "Releasing to Production:" & vbNewLine     For Each item In ListBox1.SelectedItems              If My.Computer.FileSystem.FileExists(Path.Combine(ProdDir, item)) Then             'Delete existing production file             Try                 File.Delete(Path.Combine(ProdDir, item))                 fs.WriteLine("Deleting " & Path.Combine(ProdDir, item))                 'Copy staging to production                 Try                     File.Copy(Path.Combine(StageDir, item), Path.Combine(ProdDir, item))                     fs.WriteLine("Copying " & Path.Combine(StageDir, item) & "\nTO: " & Path.Combine(ProdDir, item))                     Try                         File.Delete(Path.Combine(StageDir, item))                         fs.WriteLine("Deleting " & Path.Combine(StageDir, item))                     Catch ex As Exception                         MsgBox(item & ": issue deleting from staging!!" & vbNewLine)                         TextBox1.Text += item & ": issue deleting from staging!!"                         fs.WriteLine("--- Error Releasing - Step 3 ---" & vbNewLine)                         fs.WriteLine("Stack Trace:" & vbCrLf & ex.StackTrace & vbNewLine)                         fs.WriteLine("Stack Trace:" & vbCrLf & ex.Message & vbNewLine)                     End Try                 Catch ex As Exception                     MsgBox(item & ": issue copying file to production!!" & vbNewLine)                     TextBox1.Text += item & ": issue copying file to production!!"                     fs.WriteLine("--- Error Releasing - Step 2 ---" & vbNewLine)                     fs.WriteLine("Stack Trace:" & vbCrLf & ex.StackTrace & vbNewLine)                     fs.WriteLine("Stack Trace:" & vbCrLf & ex.Message & vbNewLine)                 End Try             Catch ex As Exception                 MsgBox(item & ": issue deleting production file!!" & vbNewLine)                 TextBox1.Text += item & ": issue deleting production file!!"                 fs.WriteLine("--- Error Releasing - Step 1 ---" & vbNewLine)                 fs.WriteLine("Stack Trace:" & vbCrLf & ex.StackTrace & vbNewLine)                 fs.WriteLine("Stack Trace:" & vbCrLf & ex.Message & vbNewLine)             Finally                 TextBox1.Text += item + " released" & vbNewLine             End Try              Else             TextBox1.Text += item + " released" & vbNewLine             fs.WriteLine("Releasing Stage:" & vbNewLine & StageDir & "\" & item & vbNewLine & "To:" & vbNewLine & ProdDir & "\" & item & vbNewLine & "With Overwrite" & vbNewLine)             My.Computer.FileSystem.MoveFile(StageDir & "\" & item, ProdDir & "\" & item, True)         End If         i = i + 1     Next          ListBox1.Items.Clear()     fs.Close()     End Sub      I know all my variables/constants are as they should be. I have full control over the destination directories, and I have launched the application as administrator Here are the stack traces received: > \--- Error Releasing - Step 1 --- > > Stack Trace: at System.IO.__Error.WinIOError(Int32 errorCode, String > maybeFullPath) at System.IO.File.Delete(String path) at > ChangeManagementApp.Form1.ReleaseToProd_Click(Object sender, EventArgs e) > > Stack Trace: The process cannot access the file > '\Netapp\share\files\FILE_NAME.ext' because it is being used by another > process. It obviously looks like a lock, but I am being assured that our application, that reads these files, does not hold locks... additionally, I can manually overwrite it with no issues at all. Any ideas on how I might be able to fix this issue? * * * The failing code is here:                   If My.Computer.FileSystem.FileExists(Path.Combine(ProdDir, item)) Then             'Delete existing production file             Try                 File.Delete(Path.Combine(ProdDir, item))                 fs.WriteLine("Deleting " & Path.Combine(ProdDir, item))                 'Copy staging to production                 Try