I have need of a two dimensional version of `Range[]`. I have a few ideas of varying speeds, and I was wondering if anyone knew a better way to do this.               rangeX=2000;evaluatedRangeX=Range[rangeX];     rangeY=2000;evaluatedRangeY=Range[rangeY];     speed1=First[AbsoluteTiming[test1=Table[{y,x},{y,rangeY},{x,rangeX}];]];     speed2=First[AbsoluteTiming[test2=Outer[{#1,#2}&,evaluatedRangeY,evaluatedRangeX];]];     speed3=First[AbsoluteTiming[test3=Array[{#1,#2}&,{rangeY,rangeX}];]];     speed4=First[AbsoluteTiming[      test4=Table[Transpose[{ConstantArray[y,rangeX],evaluatedRangeX}],{y,rangeY}];]];     speed5=First[AbsoluteTiming[Range[rangeX*rangeY];]];     test1==test2==test3==test4     {speed1,speed2,speed3,speed4,speed5}      With results:               True     {2.813062, 2.179700, 0.575586, 0.082393, 0.019547}      So my best effort is still four times slower than using `Range[]` to make a one dimensional range of the same size, which seems like a reasonable lower bound. Can anyone suggest a better way?