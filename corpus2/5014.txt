In a demonstration, I would like to display a `PopupMenu` with a list of small PDF images, each weighing in at approximately 50k. The code of interest is below: ![PopupMenu](http://i.stack.imgur.com/uBuWR.png) After hitting `Shift`+`Enter`, the demo requires 25 seconds before being ready to operate. However, once it is ready, it works responsively, without hesitation. A simple list of numbers in the `PopupMenu` works much better:               {{s, 2, ""}, Range[12], PopupMenu, ControlPlacement -> Bottom}      One second or so after hitting `Shift`+`Enter`, the demo is ready to go. I realize that I could save some memory by using images with smaller footprints (e.g. moving to 8-bit or even 1-bit images), but there may be other things I should be considering to increase the efficiency of `PopupMenu`. Any suggestions would be appreciated. * * * **Update** Image file size was not the culprit in this case. It turns out that some of my PDF images were not in a format fully acceptable to Mathematica. When halirutan was able to quickly import and display large PDF files using my code (but adding the additional burden of importing), I decided to use his code to import my large files. Mathematica refused to import several of my files as `Images`, using the routine Halirutan included in his response. However, Mathematica does allow those same files to be imported via the menu via "Insert/Picture/From file". Because MMA had accepted all my images when I manually inserted them into the `Popupmenu` control (as shown above), and because it displayed them correctly (albeit after an initial delay), I did not suspect that some of the files (but not others) were in a format uncongenial to MMA. It accepted the corrupt files and "reluctantly" figured out how to display them properly in the PopupMenu control. So halirutan provided the essential resources that turned out to be instrumental for solving the issue. * * * **Update 2** Neither .pdf nor .png graphics files produced from OmniGraffle Pro (v. 5.3.6) can be successfully imported by Mathematica via the `Import[..., "Images"]` command. However GraphicConverter (v. 7.2) can import either of these. While in GraphicConverter, simply "saving as" a .png file from OmniGraffle to .pdf will produce a file that can then be imported by Import into Mathematica. That file will have a white background even if the original .png file had a transparent background. But the important thing is that MMA will accept it readily. By the way, by making my PDF's this way, they turn out to be 7k in size.