I have a Mathematica script to help me copy images from PDFs and then make the (presumably white or nearly white) background transparent. Typically, I am looking at the PDF in Adobe Acrobat and I use the snapshot tool to copy the image to Microsoft Window's clipboard. Then I paste the image into mathematica and assign it the name q. Where I typed `{IMAGE}` below is where I paste the image into the code:               q = {IMAGE};     p = ColorNegate[Binarize[ImageApply[Min, q], 0.99]];     s = SetAlphaChannel[q, p];     Export["img.png", s];      I run the code and I get a PNG with a transparent background and then I can insert the png with the transparent background into OneNote. The point of doing this is images with a transparent background are easier to arrange since the don't obscure the other texts. This makes it a snap to place graphs and equations in my notes. I would like to make this even easier by enhancing my script. This is why I am asking for help. My goals are:   1. Is there some Mathematica command I can use to copy the image from the clipboard automatically without having to manually paste it.   2. Is there a way to get Mathematica to place the image back into the clipboard with a transparent background, thus cutting out the step of using a file. What I have found is if I use a command like `CopyToClipboard[s]`, it doesn't work.   1. Are there any other enhancements that would make the whole process more automated? (A side note: it's been a while since I wrote this code, but if I remember correctly, I convert the image to black and white, figure out the background then use the pixels that were designated as background to figure out which pixels to set as transparent in the original image.)