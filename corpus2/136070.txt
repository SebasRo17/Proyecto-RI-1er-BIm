Let's say you have some automated processes that generally go through the following states; scheduled - initiated - validating - executing - completed On top of that these processes can prematurely end because of an error or explicit user cancellation. My first impulse is to simply add _error_ and _cancelled_ to the list of possible status values, but I was wondering about the (conceptual) advantages of separating _result_ from _status_ (even though it seems to me that one might argue that error and cancelled are also simply different states than the _completed_ state).