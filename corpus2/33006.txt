I was plotting reciprocal frame projection using `Locator`s for a point to be expressed in terms of both the original basis (also specified with `Locator`s and reciprocal basis.) EDIT: Here's a stripped down example of the code (no longer matching the image)               Manipulate[DynamicModule[{f1, f2, xf, o, r, s}, o = {0, 0};       s = {0.1, 0.1};       r = Inverse[{e1, e2}]; f1 = Part[r, All, 1]; f2 = Part[r, All, 2];       xf = {x.f1, x.f2};       Graphics[{Arrow[{o, x}], Arrow[{o, xf[[1]] e1}],         Arrow[{xf[[1]] e1, xf[[1]] e1 + xf[[2]] e2}], Text["x", x + s],         Text["e1", e1 + s], Text["e2", e2 + s]}]], {{x, {4, 2}},       Locator}, {{e1, {1, 1}}, Locator}, {{e2, {1, 2}}, Locator}]      I've placed labels on some of the arrows that represent the vectors, but did this by fudging things adding in a fixed offsets (variable `s` above). ![reciprocal frame locators with problematic text labels](http://i.stack.imgur.com/4LixQ.png) The manual offsets are in some cases positioned reasonably for some of the labels (because my hardcoded offsets are implicitly related to the initial geometry of the `Locator`s). I'd like to avoid hardcoding those offsets in the hacky way that I've done. Is there a better way to automatically position those `Text` labels so that they are offset slightly (e.g. the width of a text character) from nearby graphics elements?