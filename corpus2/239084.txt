I am mapping Field1 to Field2. The map object instantiates the field object and vice versa, creating an infinite loop. This is in PHP.               class field {       protected $maps; // mapCollection object. all the mappings of this field to others          }          class map {       protected $field1; // field object       protected $field2; // field object     }          class mapCollection {       protected $maps; // array of map objects     }      The mappings and fieldsets are stored in a database where they each have a unique ID. So I decided to allow fetching them using their ids in the constructors.               class field {       protected $maps; // map object       public __construct($id = 0 ) {         if(!empty($id) ) {           $this->maps = // get mapsCollection. data from db         }       }          }          class map {       protected $field1; // field object       protected $field2; // field object       public __construct($id = 0 ) {         if(!empty($id) ) {           $this->field1 = // get field1 data from db           $this->field2 = // get field2 data from db         }       }     }          class mapCollection {       protected $maps; // array of map objects       public __construct($field_id) {         // get maps from db by field id         foreach($dbdata as $map_id) {           $this->maps[] = new map($map_id); // instantiates new map, which instantiates new field, etc         }       }     }      How should I be doing this?