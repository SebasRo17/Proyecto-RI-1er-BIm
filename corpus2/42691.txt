What I would like to do in Mathematica is something like               f[x_] := a x     g[a_] := NIntegrate[f[x], {x, 0, 1}]      But then of course I get               g[1]         NIntegrate::inumr: The integrand a x has evaluated to non-numerical values for all sampling points in the region with boundaries {{0,1}}. >>     Out= NIntegrate[f[x], {x, 0, 1}]      But I found that I can circumvent the problem with               g[a_] := Hold[NIntegrate][f[x], {x, 0, 1}] // Evaluate // ReleaseHold // Evaluate         NIntegrate::inumr: The integrand a x has evaluated to non-numerical values for all sampling points in the region with boundaries {{0,1}}. >>     g[1]     Out= 0.5      I don't really understand why this works nor why the definition of `g` throws an error. As I haven't found any other solution to my problem, I would really like to understand why my "solution" works which should also provide an answer to whether there is a simpler solution. (I understand I can solve this simple problem with `f[x_, a_]` but I have in fact a more complex environment in hand where this approach becomes inconvenient.)