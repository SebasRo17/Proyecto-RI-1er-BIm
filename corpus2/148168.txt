Some of us can say a Distributed Version Control System (e.g. Mercurial, git) will have a positive impact on developers only out of the experience of using one (under the right conditions: higher productivity, higher code-base stability, etc.), but, in what situations could a customer ( **i.e. the observer of the outcome of the software development lifecycle** ) tell there is a difference from using a CVCS and a DVCS?. Anyone with empiric evidence of a customer "feeling" a difference upon DVCS adoption gets a big double-chocolate cookie with whipped cream and a cherry on top. Note: "tell the difference" doesn't mean "know there was a DVCS involved" nor even remotely "know what a DVCS is"