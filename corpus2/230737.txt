I am about to start building a mobile (iOS/Android) app that uses a local database (probably sqlite). Since this is my first "real" mobile app, I am wondering what the standard approaches are to version management of the DB. My thinking is I would do this:   * include a base creation SQL script in the resources of the app. This would include the creation of a `versions` table, which would have one record for every version of the app.   * for every new version of the app, include a corresponding upgrade SQL script. At a minimum, that script would insert a new entry into the `versions` table   * write a data store management service. This service would be responsible for creating the initial DB (via the create script), reporting the current version of the DB, and upgrading it if necessary (via the upgrade scripts)   * leverage the data store management service during application initialization to create/upgrade the database as necessary. This would of course be done asynchronously and with UI telling the user what is happening Is this approach reasonable? Am I overlooking anything obvious?