To define some package-wide functions/variables, what approach is recommended? I tried to use contexts with the `Begin` function, but this failed:               Clear[fun];     fun[] := Module[{},        Begin["myContext`"];        x = 1;        End[];        ];     fun[]     myContext`x      I would expect `myContext'x` to be 1, but it seems to be undefined. Why does this fragment fail, what should I do instead?