If you are trying to hide implementation, would declaring STL variables be too revealing?               // in Word_Bucket.h     class Word_Bucket {     private:         std::vector<std::string> contents;              ...etc     }      ... but then if you wrap it up, to hide the implementation, won't you have to reveal it in the wrapper's interface anyway?               // in Word_Bucket.h     class Word_Bucket {     private:         Bucket contents;              ...etc     }          // in Bucket.h     class Bucket {     private:         std::vector<template_stuff> contents;              ...etc     }