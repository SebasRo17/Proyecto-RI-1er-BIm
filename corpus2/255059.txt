I have a web service based on a number of entity classes. one of them is shows below               @Entity     @Table(name = "users")     @XmlRootElement     @NamedQueries({     @NamedQuery(name = "Users.findAll", query = "SELECT u FROM Users u"),     @NamedQuery(name = "Users.findByUserName", query = "SELECT u FROM Users u WHERE u.userName = :userName"),     @NamedQuery(name = "Users.findByUserPassword", query = "SELECT u FROM Users u WHERE u.userPassword = :userPassword")})          public class Users implements Serializable {          private static final long serialVersionUID = 1L;          @Id     @Basic(optional = false)     @Column(name = "user_name")     private String userName;          @Basic(optional = false)     @Column(name = "user_password")     private String userPassword;          @JoinColumn(name = "user_category_id", referencedColumnName = "category_id")     @ManyToOne(optional = false)     private UserCategory userCategoryId;          @OneToMany(cascade = CascadeType.ALL, mappedBy = "userName")     private List<UserRecord> userRecordList;          public Users() {     }          public Users(String userName) {         this.userName = userName;     }          public Users(String userName, String userPassword) {         this.userName = userName;         this.userPassword = userPassword;     }          public String getUserName() {         return userName;     }          public void setUserName(String userName) {         this.userName = userName;     }          public String getUserPassword() {         return userPassword;     }          public void setUserPassword(String userPassword) {         this.userPassword = userPassword;     }          public UserCategory getUserCategoryId() {         return userCategoryId;     }          public void setUserCategoryId(UserCategory userCategoryId) {         this.userCategoryId = userCategoryId;     }          @XmlTransient     public List<UserRecord> getUserRecordList() {         return userRecordList;     }          public void setUserRecordList(List<UserRecord> userRecordList) {         this.userRecordList = userRecordList;     }          @Override     public int hashCode() {         int hash = 0;         hash += (userName != null ? userName.hashCode() : 0);         return hash;     }          @Override     public boolean equals(Object object) {         // TODO: Warning - this method won't work in the case the id fields are not set         if (!(object instanceof Users)) {             return false;         }         Users other = (Users) object;         if ((this.userName == null && other.userName != null) || (this.userName != null && !this.userName.equals(other.userName))) {             return false;         }         return true;     }          @Override     public String toString() {         return userName;     }           }      I was able to successfully deploy the web service and then i added a new Restful web client using netbeans, which created the following class               public class Client {     private WebTarget webTarget;     private javax.ws.rs.client.Client client;     private static final String BASE_URI = "http://localhost:31691/ProductionEntitiesService/api";          public Client() {         client = javax.ws.rs.client.ClientBuilder.newClient();         webTarget = client.target(BASE_URI).path("entities.users");     }          ...     public <T> T find_XML(Class<T> responseType, String id) throws ClientErrorException {         WebTarget resource = webTarget;         resource = resource.path(java.text.MessageFormat.format("{0}", new Object[]{id}));         return resource.request(javax.ws.rs.core.MediaType.APPLICATION_XML).get(responseType);     }               public <T> T findAll_XML(Class<T> responseType) throws ClientErrorException {         WebTarget resource = webTarget;         return resource.request(javax.ws.rs.core.MediaType.APPLICATION_XML).get(responseType);     }          public void close() {         client.close();     }          }      This line of code then returned an xml result of the query               result = c.findAll_XML(String.class);      which had this format               <?xml version="1.0" encoding="UTF-8" standalone="yes"?>     <userss>     <users>         <userCategoryId>             <categoryId>2</categoryId>             <userCategory>admin</userCategory>         </userCategoryId>         <userName>admin</userName>         <userPassword>d033e22ae348aeb5660fc2140aec35850c4da997</userPassword>     </users>     </userss>      However, this line of code               List<Users> l = (List<Users>)c.findAll_XML(Users.class);      produces an exception, which seems to be caused by the "userss" tag that surrounds the xml result, I'm not sure how that came about. Can anyone help me resolve this?               Exception in thread "AWT-EventQueue-0" javax.ws.rs.BadRequestException: HTTP 400 Bad Request     at org.glassfish.jersey.message.internal.AbstractRootElementJaxbProvider.readFrom(AbstractRootElementJaxbProvider.java:124)     at org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$TerminalReaderInterceptor.aroundReadFrom(ReaderInterceptorExecutor.java:188)     at org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.proceed(ReaderInterceptorExecutor.java:134)     at org.glassfish.jersey.message.internal.MessageBodyFactory.readFrom(MessageBodyFactory.java:988)     at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:833)     at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:768)     at org.glassfish.jersey.client.InboundJaxrsResponse.readEntity(InboundJaxrsResponse.java:96)     at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:740)     at org.glassfish.jersey.client.JerseyInvocation.access$500(JerseyInvocation.java:88)     at org.glassfish.jersey.client.JerseyInvocation$2.call(JerseyInvocation.java:650)     at org.glassfish.jersey.internal.Errors.process(Errors.java:315)     at org.glassfish.jersey.internal.Errors.process(Errors.java:297)     at org.glassfish.jersey.internal.Errors.process(Errors.java:228)     at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:421)     at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:646)     at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:375)     at org.glassfish.jersey.client.JerseyInvocation$Builder.get(JerseyInvocation.java:275)     at service.Client.findAll_XML(Client.java:83)     at examples.Find.<init>(Find.java:44)     at examples.Find$1.run(Find.java:166)     at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)     at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:744)     at java.awt.EventQueue.access$400(EventQueue.java:97)     at java.awt.EventQueue$3.run(EventQueue.java:697)     at java.awt.EventQueue$3.run(EventQueue.java:691)     at java.security.AccessController.doPrivileged(Native Method)     at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)     at java.awt.EventQueue.dispatchEvent(EventQueue.java:714)     at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)     at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)     at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)     at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)     at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)      Caused by: javax.xml.bind.UnmarshalException: unexpected element (uri:"", local:"userss"). Expected elements are <{}userCategory>,<{}users>     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext.handleEvent(UnmarshallingContext.java:681)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:247)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.Loader.reportError(Loader.java:242)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.Loader.reportUnexpectedChildElement(Loader.java:109)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext$DefaultRootLoader.childElement(UnmarshallingContext.java:1086)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext._startElement(UnmarshallingContext.java:510)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext.startElement(UnmarshallingContext.java:492)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.SAXConnector.startElement(SAXConnector.java:163)     at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:509)     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:378)     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:604)     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3122)     at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)     at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)     at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)     at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)     at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)     at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)     at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)     at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:649)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal0(UnmarshallerImpl.java:243)     at com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallerImpl.unmarshal(UnmarshallerImpl.java:214)     at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:140)     at javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(AbstractUnmarshallerImpl.java:123)     at org.glassfish.jersey.message.internal.XmlRootElementJaxbProvider.readFrom(XmlRootElementJaxbProvider.java:140)     at org.glassfish.jersey.message.internal.AbstractRootElementJaxbProvider.readFrom(AbstractRootElementJaxbProvider.java:122)     ... 33 more