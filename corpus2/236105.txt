Factory pattern (or at least the use of `FactoryFactory..`) is the butt of many jokes, like here. Apart from having verbose and "creative" names like RequestProcessorFactoryFactory.RequestProcessorFactory, is there anything fundamentally wrong with the factory pattern if you have to program in Java/C++ and there is a usecase for Abstract_factory_pattern? How would another popular language (for example, Ruby or Scala) avoid having to use it while managing similar complexity? The reason I am asking is I see mostly the criticism of factories mentioned in the context of the Java/Java EE ecosystem, but they never explain how other languages/frameworks solve them.