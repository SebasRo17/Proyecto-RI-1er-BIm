I need to check an algebraic number for membership in a list of algebraic numbers. The numbers can be expressed in different forms (combinations of radicals, `Root` objects, trig functions), but the check should be exact. Now I use the following code:               ContainsAlgebraicQ[list_, a_] :=        MatchQ[Intersection[ list, {a}, SameTest -> (MinimalPolynomial[#1 - #2] === (#&) &)], {_}]      but in some cases evaluation of `MinimalPolynomial` takes significant time, although I only want to check the difference for zero. Is there a better approach for my task?