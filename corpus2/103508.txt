Today I've just seen this article which described the relevance of SOLID principle in F# development- F# and Design principles â€“ SOLID And while addressing the last one - "Dependency inversion principle", the author said: > From a functional point of view, these containers and injection concepts can > be solved with a simple higher order function, or hole-in-the-middle type > pattern which are built right into the language. But he didn't explain it further. So, my question is, how is the dependency inversion related to higher order functions?