Is there an established framework or methodology for documenting functional or use cases and mapping them to units of code? E.g. assume you are a new developer hire assigned to work on an application. What better way to get up to speed would there be than going through a list of that application's features or functional case scenarios, i.e. what all you can do with the application? For example, let's take Evernote (my favorite SaaS) as an example:   1. Successfully log in (duuhh, but still technically a use case)   2. Fail to log in (what happens next)   3. Create some notebooks   4. Create a basic, text only note   5. Move the note from one notebook to another   6. Create a note with media attached   7. Delete a note   8. Share a note publicly through a fixed URL etc. Now, that is simple. But what I would like to be able to do is have a way to map each one of those items to the pieces of code that utilize it. That way, when inspecting or learning or reverse engineering the code base, you could (provided that the documentation is up to date) easily trace a function, method, script, HTML document, REST service, servlet etc. to all the functional cases that utilize it and are affected by it.