I have the function which take the last list in nested list, reduce it somehow in several ways so the length of list reduces and output new list wherein input list appended with defferent reduced lists. Maybe my explanation a little bit illegible but here is an example code:               cov = {{0, 3, 1, 2}};     l = 2;     detach = Function[{cov, l},        s = Last[cov];        Table[Append[cov,           Delete[ReplacePart[s, i -> l + Total[s[[i ;; i + 1]]]],            i + 1]], {i, 1, Length[s] - 1}]        ];     detach[cov, l]          Output: {{{0, 3, 1, 2}, {5, 1, 2}}, {{0, 3, 1, 2}, {0, 6, 2}}, {{0, 3, 1, 2}, {0, 3, 5}}}      Now I need to apply recursively the same function to all lists of output list so for proposed example I shoud get the following result:               {{{0, 3, 1, 2}, {5, 1, 2}, {8, 2}, {12}},       {{0, 3, 1, 2}, {5, 1, 2}, {5, 5}, {12}},       {{0, 3, 1, 2}, {0, 6, 2}, {8, 2}, {12}},       {{0, 3, 1, 2}, {0, 6, 2}, {0, 10}, {12}},       {{0, 3, 1, 2}, {0, 3, 5}, {5, 5}, {12}},       {{0, 3, 1, 2}, {0, 3, 5}, {0, 10}, {12}}}      I tried to apply NestWhile or FixedPoint but did not succeed to get desired result.