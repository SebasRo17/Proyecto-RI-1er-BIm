After having had endless issues with INI-style configuration files and parsing them correctly (let along getting binary data right), a crazy idea crossed my mind recently: What if an INI file like               # settings.ini     [Windows]     DirectorySeparator='\\'     PathSeparator=';'          [Linux]     DirectorySeparator='/'     PathSeparator=':'      Would rather be stored in the file system; each group is a directory, each key/value pair is a file, so               settings/Windows/DirectorySeparator (contains just `\`)     settings/Windows/PathSeparator      (contains just ';')     ... you get the idea ...      Disadvantages:   * Possibly slow due to IO work, but maybe file system caches help?   * Running low of inodes on some file systems?   * Group/Key names may only consists of characters which are also valid for directory/filenames, may be rather restrictive depending on the FS. Advantages:   * Arbitrarily deeply nested groups   * No worries about escaping, binary data is easy. Just have each file contain the raw data.   * Automatic locking, access control and whatever the filesystem provides   * Easy to access with most programming languages, even by hand I'm very tempted to try this in my next project, I wonder whether anybody else has experience with this approach already?