With the latest trends about C and C++ applications, and with latest I mean the latest years, I was expecting to see `std::allocator`s to be used way more frequently than what it really is. Modern applications are usually multithreaded or with form of concurrency in them, and they manage a significant amount of memory, especially in some fields like games and multimedia applications; so the usual high cost of the allocation/deallocations rises and impacts the performances even more than in old applications. But for what I can see this kind of memory management through `std::allocator`s is not popular, I can't even count 1 library that I know of, that is using any rationale about a standardize way of managing memory. There is a real reason why `std::allocator` is not popular ? Technical reasons ?