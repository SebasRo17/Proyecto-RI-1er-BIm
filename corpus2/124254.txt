During a discussion, one of my colleagues told that he has some difficulties with his current project while trying to solve bugs. "When I solve one bug, something else stops working elsewhere", he said. I started to think about how this could happen, but can't figure it out.   * I have sometimes similar problems **when I am too tired/sleepy to do the work correctly** and to have an overall view of the part of the code I was working on. Here, the problem seems to be for a few days or weeks, and is not related to the focus of my colleague.   * I can also imagine this problem arising on a **very large project, very badly managed** , where teammates don't have any idea of who does what, and what effect on other's work can have a change they are doing. This is not the case here neither: it's a rather small project with only one developer.   * It can also be an issue with **old, badly maintained and never documented codebase** , where the only developers who can really imagine the consequences of a change had left the company years ago. Here, the project just started, and the developer doesn't use anyone's codebase. So what can be the cause of such issue **on a fresh, small-size codebase written by a single developer who stays focused on his work**? What may help?   * Unit tests (there are none)?   * Proper architecture (I'm pretty sure that the codebase has no architecture at all and was written with no preliminary thinking), requiring the whole refactoring?   * Pair programming?   * Something else?