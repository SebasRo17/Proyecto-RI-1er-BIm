Can one `Map` a simplifying function to the summands of an `Expand` before fully expanding the expression in question first? Consider the following example: I want to integrate the following product over `[0,1]` in the variable `t`.               imax = 30;     p1 = Product[a t^i + b t^(imax - i) , {i, imax}];      For that I define a custom integration (much faster than the general Integrate)               CustomIntegration[exp_] := exp /. t^k_. -> 1/(k + 1)      for which I have to use `Expand` first. The problem is that the expansion really eats a ton of memory, even though the final result is actually much smaller.               ByteCount@p1     ByteCount[p2 = Expand@p1]     ByteCount[CustomIntegration /@ p2]      gives               9376     1404216     13696      So, the expansion requires around 100-times as much memory as needed. My actual script currently needs around 70 GB of memory. So, how could I reduce that?