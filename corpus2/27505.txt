How to Control the Precision and Accuracy of Numerical Results   Arbitrary-Precision Numbers > _Mathematica_ works with exact numbers and with two different types of > approximate numbers: machine-precision numbers that take advantage of > specialized hardware for fast arithmetic on your computer, and arbitrary- > precision numbers that are correct to a specified number of digits. > > * * * > > To be sure of `n` correct digits, use `N[expr, n]`. > > * * * > > When you do a computation, _Mathematica_ keeps track of which digits in your > result could be affected by unknown digits in your input. It sets the > precision of your result so that no affected digits are ever included. This > procedure ensures that all digits returned by _Mathematica_ are correct, > whatever the values of the unknown digits may be. > > * * * > > _Mathematica_ automatically increases the precision that it uses internally > in order to get the correct answer Of course, this sounds very reassuring, but I still have some doubts that all decimal digits ever returned by _Mathematica_ when working with arbitrary- precision numbers are always provably correct, no matter what functions I invoked. What are those cases when I can be certainly sure all displayed digits are correct? * * * _Update:_   Here is an example when some incorrect decimal digits are returned when working with arbitrary-precision arithmetic:               a = 1`7     (* 1.000000 *)          a // Precision     (* 7. *)          d = Derivative[0, 1][StieltjesGamma][0, a]     (* -1.6450 *)          MachineNumberQ[d]     (* False *)          d // FullForm     (* 1.64501552391043694947251282378009083269`5.155856939311388 *)          d // Precision     (* 5.15586 *)      So, _Mathematica_ claims that at least 5 (hence, all) decimal digits of the result `-1.6450` are correct. But in fact, the exact result is `-Pi^2 / 6` that is `-1.644934...`, so only 3 digit are correct. I am also concerned that `Precision[...]` itself returns a machine-precision number, that is subject to uncontrolled error-accumulation that possibly can result in claiming more digits of precision in a number than there actually are. Can I assume that _Mathematica_ always errs on the safe side when computing a precision? * * * _Update 2:_   Another (gross) example:               a = 2`6     (* 2.00000 *)          Derivative[0, 1][StieltjesGamma][0, a]     (* 0.324 *)          d // FullForm     (* 0.32399522609896337580027385456880978489`3.339102855094484 *)          Precision[d]     (* 3.3391 *)      Here, one would expect that at least `0.32` are correct digits. But in fact, the exact result is `1 - Pi^2/6` that is `-0.644934...`. No correct digits, even the sign is wrong.