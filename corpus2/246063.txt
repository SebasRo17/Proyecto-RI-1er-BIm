I have several projects in my solution:   * **Logan.Web.DBContext** defines the DbContext for the database and builds the data model   * **Logan.Web.Objects** defines the classes that will represent the tables in the database   * **Logan.Web.Data** defines the data layer that the application will use   * **LoganMVC** is the actual MVC website Obviously I don't want the MVC website to know too much about the database so I have no links between it and the Objects/DBContext projects. Instead, the Data project acts as a "middle-man" between them and contains all the CRUD functionality. The problem I'm having with this structure is that, to show anything on the Views, the Models need to know the properties for the data as defined in the Objects classes. I'm not sure how to expose them without referencing the Objects project in the MVC project, but it is my understanding that this would not be good practice. Instead, I'd prefer, if at all possible, to expose them through the data layer, but I also can't figure out how to do that in any way that makes sense. I've posted all the code for most of these projects as such currently exists on pastebin: http://pastebin.com/eFahpGzE   * DBContext namespace starts on line 1   * DBObjects namespace starts on line 141   * Data namespace starts on line 185 What's the best way to expose the properties of the classes in Logan.Web.Objects so that they can be used in LoganMVC given the structure defined here?