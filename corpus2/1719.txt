In chapter one of "The Pragmatic Programmer" the first learning goal is: > **Learn at least one new language every year.** Different languages solve > the same problems in different ways. By learning several different > approaches, you can help broaden your thinking and avoid getter struck in a > rut. [...] To achieve this over a career, the list of languages is likely to get quite long (particularly if you do not want to "progress" into management). Clearly the education of a programmer (or whatever form) is going to get you started with a core of commercially useful languages (the usual list from job posting: C, C++, Ruby, Python, JavaScript, C#, Java, VB, ...). Additionally a formal or informal learning programme is likely to have covered functional approaches (via something like Haskell, LISP or an ML derived language) But once a reasonable subset of that list is learned- what's next, _and why_?