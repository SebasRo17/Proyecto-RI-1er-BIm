When developing software, I often have a centralised 'core' library containing handy code that can be shared and referenced by different projects. Examples:   * a set of functions to manipulate strings   * commonly used regular expressions   * common deployment code However some of my colleagues seem to be turning away from this approach. They have concerns such as the maintenance overhead of retesting code used by many projects once a bug is fixed. Now I'm reconsidering when I should be doing this. What are the issues that make using a 'core' library a bad idea?