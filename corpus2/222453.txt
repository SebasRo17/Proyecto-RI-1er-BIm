I am new to c++ and have been making the good old Calculator. I have gone forward from a 2 value calculator to a 3 value calculator and wondered.. How is it possible to make a 10 digit calculator (purely using +,-,*,/) that doesn't forever to code.. I have a if statement which returns what happens if the operators are + and + or + and - etc.. and if i was to go to 4 value, i would be writing 64 ifs, and 5 value would be 256 if statements. Is there a way to change this such that it wouldn't require writing out so many if statements? Here is my the important parts of the code: Calculator.cpp:               #include "stdafx.h"     #include <iostream>     #include "headers.h"     using namespace std;          int main()     {     int nInput1 = GetUserInput();     char chOperation = GetMathematicalOperation();     {         if (chOperation == '=')         {             cout << "The answer is: " << nInput1 << endl;             return 0;         }     }     int nInput2 = GetUserInput();     char chOperation2 = GetMathematicalOperation();     {         if (chOperation2 == '=')         {             int nResult = CalculateResult(nInput1, chOperation, nInput2);             cout << "The answer is: " << nResult << endl;             return 0;         }     }          int nInput3 = GetUserInput();          int nResult = CalculateResult2(nInput1, chOperation, nInput2, chOperation2, nInput3);          PrintResult(nResult);     }      CalculateResult.cpp:               #include "stdafx.h"     #include <iostream>     #include <string>     using namespace std;               int CalculateResult(int nX, char chOperation, int nY)     {     if (chOperation == '+')         return nX + nY;     if (chOperation == '-')         return nX - nY;     if (chOperation == '*')         return nX * nY;     if (chOperation == '/')         return nX / nY;          return 0;     }      GetMathematicalOperation.cpp:               #include "stdafx.h"     #include <iostream>     #include <string>     using namespace std;          char GetMathematicalOperation()     {     cout << "Please enter an operator (+,-,*,/ or =): ";          char chOperation;     cin >> chOperation;     return chOperation;     }      CalculateResult2.cpp:               #include "stdafx.h"     #include <iostream>     #include <string>     using namespace std;               int CalculateResult2(int nX, char chOperation, int nY, char chOperation2, int nZ)     {     if (chOperation == '+' && chOperation2 == '+')         return nX + nY + nZ;     if (chOperation == '+' && chOperation2 == '-')         return nX + nY - nZ;     if (chOperation == '+' && chOperation2 == '*')         return nX + nY * nZ;     if (chOperation == '+' && chOperation2 == '/')         return nX + nY / nZ;          if (chOperation == '-' && chOperation2 == '+')         return nX - nY + nZ;     if (chOperation == '-' && chOperation2 == '-')         return nX - nY - nZ;     if (chOperation == '-' && chOperation2 == '*')         return nX - nY * nZ;     if (chOperation == '-' && chOperation2 == '/')         return nX - nY / nZ;          if (chOperation == '*' && chOperation2 == '+')         return nX * nY + nZ;     if (chOperation == '*' && chOperation2 == '-')         return nX * nY - nZ;     if (chOperation == '*' && chOperation2 == '*')         return nX * nY * nZ;     if (chOperation == '*' && chOperation2 == '/')         return nX * nY / nZ;          if (chOperation == '/' && chOperation2 == '+')         return nX / nY + nZ;     if (chOperation == '/' && chOperation2 == '-')         return nX / nY - nZ;     if (chOperation == '/' && chOperation2 == '*')         return nX / nY * nZ;     if (chOperation == '/' && chOperation2 == '/')         return nX / nY / nZ;     return 0;     }