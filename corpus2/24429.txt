If I have a Graphics3D object that was generated from manipulations to PolyhedronData rather than via an explicit equation, for example the Spikey ![Spikey 6!](http://i.stack.imgur.com/N2Kqn.png) (for which the entire code can be found here _The Cover Image: Making the Mathematica 6 Surface-Textured Hyperbolic Dodecahedron_, but which culminates with the following command,               Graphics3D[{EdgeForm[],        addHatToL /@ Take[Flatten[Take[LsOnDodecahedron, All]], All]},       PlotRange -> All, Boxed -> False, ImageSize -> Full,       Lighting -> {{"Ambient", RGBColor[0.2, 0, 0]}, {"Point",          RGBColor[0.4, 0.4, 0.4], {2, 0, 2}}, {"Point",          RGBColor[0.4, 0.4, 0.4], {2, 2, 2}}, {"Point",          RGBColor[0.4, 0.4, 0.4], {0, 2, 2}}, {"Point",          RGBColor[0.2, 0, 0], {-2, -2, -2}}}]      Is there a way for me to extract/generate a table of 3D points along the surface of (or within, I don't actually care) the object? I saw _Efficiently determining if 3D points are within a surface composed of polygons_, which went a bit over my head, but many of the answers given seemed to either require a 'nice' shape (i.e., no concave surfaces, no cusps, no self-intersections, etc.) or be based on the fact that he had generated the object with generated data sent to ListContourPlot3D, which is not the case here.