I have a codebase where the programmer tended to wrap things up in areas that don't make sense. For example, given an Error log we have you can log via               ErrorLog.Log(ex, "friendly message");      He added various other means to accomplish the exact same task. E.G.               SomeClass.Log(ex, "friendly message");      Which simply turns around and calls the first method. This adds levels of complexity with no added benefit. Is there an anti-pattern to describe this?