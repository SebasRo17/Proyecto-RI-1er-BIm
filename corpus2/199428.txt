I've taken on some side work for this non-profit and last week was my first week on the job. They have two SQL Server Databases each with many tables in them that represent over 20 different applications such as   * **Course signup** - Trainers can signup to teach different available classes   * **Course Approval form** - trainers complete this form to get new courses approved to be added to the list of available classes.   * **Schedule** - schedule of important dates for a term (holidays, start date for classes, etc.)   * **Trainer** - list of all trainers and other information about a trainer (contact info, education, etc.)   * **Training Calendar** - List that students can look at to see what's available for the current term   * **Training plan** - a report that is printed for student with all of the classes they've signed up for   * **Certificate** - Print a certificate for a student once the training course has been completed There are about 15 other applications but it's all related to trainers, training, courses, students, etc. This data is all over the place as there are no relationships between tables and very tedious processes have to be done to complete simple task. For example, for every new term you have to copy the data in the "old" table, create a new table, paste the old data into the new table and append the new data for the current term to the new table. So there's a table for every term (3 terms per year) for the past 10 years and that's only the beginning. There's a lot of copying and pasting from Excel to SQL Server to get the data into the database and their front-end to manipulate the data isMS Access which I'd like to replace with ASP.NET (they have IIS 7). To properly architect this and have good documentation, I've installed Visio 2013 and I'm learning about UML. So that boss can know exactly how this system will be re-architected, and how all the pieces will fit together what UML diagram should I create for him? Would that be a component diagram? I need to give him the 10,000 foot view so something like use-case, sequence, or database diagrams is way to low-level for him.