I found the answer to my question here. How to extract the numerical value of a dynamical variable Is it possible to have the return value from a `DynamicModule` be just the value and not the whole `DynamicModule` definition? Here is a (much) simplified version of the problem that I am having. The actual code has several interacting `Dynamic` variables that provide the end result.                   func[var_List] := DynamicModule[            {insideFunc, choice},            insideFunc = RadioButtonBar[Dynamic[choice], var];            DialogInput[             {},             Row[{insideFunc, Button["Return", DialogReturn[choice]]}]             ]            ];      Now, if I call `func` with a simple list, the output that I get is indeed the answer that I chose (2),                   In[63]:= func[{1, 2, 3}]              Out[63]= 2      But in the end I want to write this piece of data to a file for later use, and upon doing that, I find that really that simple little number 2 is the actual `DynamicModule`, here illustrated by `FullForm`.                   In[64]:= % // FullForm              Out[64]//FullForm=          DynamicModule[          List[Set[insideFunc, RadioButtonBar[Dynamic[choice], List[1, 2, 3]]],            Set[choice, 2]], 2, RuleDelayed[DynamicModuleValues, List[]]]      So, is there a way to back out the end value rather than the `DynamicModule`? A naive attempt to just use `Evaluate` failed. Also, I have played around with putting the `DialogInput` on the outside of the `DynamicModule` and in my particular case, a variety of things break in the various dynamic actions when I do that. While I have played around trying to debug those errors, it was to no avail. Hmmm, I should have done a little bit better research in this wonderful database, because about 1 minute after my original posting, I stumbled on the right answer. To fix the problem I simply needed to use `Setting` as you can see below.                   In[75]:= % // Setting // FullForm              Out[75]//FullForm= 2      Hopefully, my title will help somebody find this answer in the future.