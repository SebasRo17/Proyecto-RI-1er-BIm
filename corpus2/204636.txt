For example I have this code.               class Command {              var $responseFactory;         var $service;              /**          * Returns the class name of the responseFactory if it is set           * or the default class name for the responseFactory of the service if it is set.           */         public function getResponseFactory(){             if ($this->responseFactory != null) {                 return $this->responseFactory;             }                  if ($service != null) {                 return $service->getResponseFactory();             }                  return null;         }     }      Although it is fine by itself it could lead to someone being surprised in the future if they cloned a Command object, changed it's `service` property which then 'magically' changes the results of `getResponseFactory`. The counter argument for why it should be named just `getResponseFactory` is 'duh, of course the internal behaviour of the class should be a black box`. Should non-trivial `get` functions be called differently to indicate that they are not a trivial getter? _Edit_ Just to clarify the return type is the same if it is the `Command` responseFactory that is returned or the `Service` responsefactory.