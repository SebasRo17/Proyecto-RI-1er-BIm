After reading the article- When to Use Delegates Instead of Interfaces (C# Programming Guide), I need some help understanding the below given points, which I found to be not so clear (for me). Any examples or detailed explanations available for these? **Use a delegate when:**   * An eventing design pattern is used.   * It is desirable to encapsulate a static method.   * Easy composition is desired.   * A class may need more than one implementation of the method. **Use an interface when:**   * There are a group of related methods that may be called.   * A class only needs one implementation of the method. _**My Questions are,_**   1. What do they mean by an eventing design pattern?   2. How the composition turns out to be easy if a delegate is used?   3. if there is a group of related methods that may be called,then use interface-What benefit it has?   4. if a class only needs one implementation of the method, use interface-how is it justified in terms of benefits?