I want to maximize over the space (output of NDSolve, in appendix to the question) but I do not think this is strictly important in this case), to get the maxima of the solution as a function of time:               MAX11[t] = NMaximize[{Evaluate[SolVec1[[1]][[1]]], 0 <= x <= L}, x]          NMaximize::nnum: The function value -     InterpolatingFunction[{{0.,10.},{0.,500.}},{3,10,1,{25,254},{6,4},0,0,0,0},{<<1>>},     {Developer`PackedArrayForm,{<<1>>},{<<1>>}},{Automatic,Automatic}] is not a number at      {x} = {1.30494}. >>      But, in fact, at that point, the function doesn't diverge:                Plot[SolVec1[[1]][[1]][1.304935615948057, t], {t, 0, T}]      ![enter image description here](http://i.stack.imgur.com/aykcw.jpg) Now, I wonder whether the problem is the fact that I don't impose at any point to maximize only for $t$ between $0$ and $T$. How can I solve this? **Appendix:**               sol1 = {\[Theta], \[Phi]} /.         First[NDSolve[{eqn1[\[Lambda], w, \[Beta], \[Alpha]j, 1, 0, g] == 0,             eqn2[\[Lambda], w, \[Beta], \[Alpha]j, 1, 0, g] == 0,        \[Theta][0, t] == 0, \[Theta][L, t] == 0,                \[Theta][x, 0] == First[InitialMode[x, 1, 0.5]],        Derivative[1, 0][\[Phi]][0, t] == 0,             Derivative[1, 0][\[Phi]][L, t] == 0, \[Phi][x, 0] ==         Last[InitialMode[x, 1, 0.5]]}, {\[Theta], \[Phi]},              {x, 0, L}, {t, 0, T}, AccuracyGoal -> 4,       PrecisionGoal -> 5]];       Where:               InitialMode[x_, kk_, fact_] := {fact Sin[ Pi kk x / L],                                  Subscript[\[Phi], 0] - Cos[ Pi kk x / L]};      and eqn1, eqn2 are two higly nonlinear expressions in $\theta(x,t)$ and $\phi(x,t)$. Here is the link to the minimal version of my code: Code