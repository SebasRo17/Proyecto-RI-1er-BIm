I'll try to keep this question as specific as possible.. I'm about to start building an API for an upcoming project. I'm currently thinking PHP/Symfony2. It will be a farily simple HTTP-based api for CRUD on the site's models (and relationships between them). There will also need to be a CMS for users. Traditionally when building a CMS (if it's bespoke) I'd just use some standard MVC based approach, but for this particular project I'm thinking I could build it using Ajax calls to the API that will already exist. My question is essentially to decide which way to go, but to keep it specific I'd like to know what drawbacks there might be. In favour of this, it should reduce duplication of controller logic, why have `/api/model/save/` and `/cms/model/save` doing very similar things? Currently the only two drawbacks I can think of are that:   * It may be hard to support a wide range of browsers. For this particular scenario, this shouldn't be a problem - but who knows what might happen in the future?   * Some parts of the site would require traditional PHP logic or an extension to the API (for any parts not part of the core API itself), for example to handle admin authentication. Is there anything I've missed, some overwhelming reason not to take this approach?