I've made a lot of progress on my problem the last few days thanks to all the help I've received on here. I think I'm upto the final step of greatly improving the performance of NIntegrate[..] on my setup. I have an integral that looks like $$\int^{x_f}_{x_i} \mathrm{d}x\, \exp{(ix)} \exp{(i\omega t(x))} \phi^*(x)$$ (* refers to complex conjugation).The $\exp{(ix)}$ is slowly oscillatory compared with everything else. The $x_i,x_f$ are negative; typical values might be $-115,-75$, the closer you get to $-4/3$ the more problematic things get, $x>x_h=-4/3$. Similarly the bigger $\omega$ gets the more oscillatory things are. The function $t(x)$ is $$t(x)=3x_h (x/x_h)^{1/3}+x-3x_h\text{arctanh}{\left((x_h/x)^{1/3}\right)}$$ and satisfies $$\frac{dt}{dx}=\frac{1}{1-\left(\frac{x_h}{x}\right)^{2/3}}$$ and $$\phi''(r)+\frac{2(r-1)}{r(r-2)} \phi'(r)+\left(\frac{\omega^2 r^2}{(r-2)^2}-\frac{2}{r(r-2)}\right)\phi(r)=0$$ where $r=2(x/x_h)^{2/3}$. So this can be transformed into an ODE in x. Is it possible using this information to construct the "DifferentialMatrices" and "Kernel" of the LevinRule? If this turns out not to be possible, is it possible to tell Mathematica to use LevinRule only in some finite range of integration where one of the above factors becomes non-oscillatory and I can lump it in the amplitude.