Suppose I have lists of normals and points for planes. There's a convex polyhedron whose faces lie on these planes and are bounded by plane intersections. What would be the easiest way to produce an image of this polyhedron (preferably with the vertices known) in Mathematica? I thought of one really ugly way to do it, but I'm looking for something more automated/efficient than:   1. Iterate through all triples of planes looking to see if they have a common intersection point, and throwing those intersection points into a list.   2. Using a Mathematica command to strip duplicates from the list.   3. `ListPointPlot3D` to display those points so I can manually decide which should be grouped together in a polygonal face.   4. Using a Mathematica command to build the polyhedron from properly oriented lists of vertices for faces. **Edit:** As requested, here's an example: Suppose I have               normals = {{0, 0, 1}, {0, -2, 2}, {2, 0, 2}, {0, 2, 2}, {-2, 0, 2}}      and               pts = {{1, 1, 0}, {0, 0, 1}, {0, 0, 1}, {0, 0, 1}, {0, 0, 1}}      Then I can make a bunch of plane equations with, say               Table[Table[       Dot[normals[[i]], {x, y, z} - pts[[i]]], {i, 1,        Dimensions[normals][[1]]}][[j]] == 0, {j, 1,        Dimensions[normals][[1]]}]      Three of these five planes intersect at a single point at exactly five points (which could be calculated in a number of ways): those in `{{0, 0, 1}, {1, 1, 0}, {1, -1, 0}, {-1, 1, 0}, {-1, -1, 0}}`. The final result I'd be looking for in this case would be something like               Graphics3D[      Polygon[{{{0, 0, 1}, {1, -1, 0}, {1, 1, 0}}, {{0, 0, 1}, {1, 1,       0}, {-1, 1, 0}}, {{0, 0, 1}, {-1, 1, 0}, {-1, -1, 0}}, {{0, 0,       1}, {-1, -1, 0}, {1, -1, 0}}, {{1, 1, 0}, {-1, 1, 0}, {-1, -1,       0}, {1, -1, 0}}}]]