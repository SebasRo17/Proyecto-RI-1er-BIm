I am a programming intern who has worked for a company for 6 mnths now (this is my 1st programming job so I have 6 mnths experience). I am a 1 man team right now & I am creating a mobile application using the Mosync C++ API. **I am looking for advice on how to report a bug to a boss who is not a programmer. I have had trouble in the past explaining the gravity of a bug/programming issue & he will say "just work on something else for a couple of days" with the expectation it will be fixed in a couple of days anyway. The major problem is that he thinks that amount of effort directly relates to the outcome of solving a bug & if it is not fixed after a couple of days its due to lack of effort or skill** How can I explain that I cannot determine how long a bug will take to fix, & that if it does take a long time to fix its not related to lack of effort or skill? Some background information: I have a bug in a the current project(mobile app) I am working on. The mobile app was complete but my boss wanted me to add features to it. After adding a feature the app now crashes after transitioning screens X amt of times & it is very difficult to replicate the bug(seems random & intermittent) but it is also very serious because releasing an app that randomly crashes is obviously very bad. As a young programmer I know that my experience is most likely to blame for an error in my app & that there is much I could have done to avoid issues like this such as regression tests, maybe better app architecture design to allow for component based development(add new features that work well with existing ones). But I also know that bugs are a fact of programming & it will always happen.