During testing, our software testers reported a NullException error in an application and I was tasked to fix it. I did some investigation, proposed a fix, and sent out a code review to the team. I white box tested my solution by playing around with the application to make sure NullException does not occur any more and possibly something else is not broken either and, to me, it was fine so I sent out the code review. My manager, who is also our lead architect, replied back in an email and told me to avoid sending out code reviews like this and that he will consider this incident in my annual review. I want to reply and apologize for not white box testing it thoroughly before sending the code review and will do my best in future, but I also say something in my defense. I did perform some white box testing on the application, but he has much more knowledge about the application so he can white box it much better than me. Plus, what is the whole point of performing a code review at all?! We perform a code review so other team members can review our code and find out potential issues with our code so we can fix them before shipping the code to the client, so why is he mad? That's why code reviews exist, right? What do you think?