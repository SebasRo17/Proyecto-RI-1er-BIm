Let's say I have the following architecture:               module Keyring         @keyring = Keyring.new         class Keyring             def key             def add_key             def update_key             def remove_key         class KeyStorage         class Encryptor             class AesEncryptor     class Connection         def id         def user_id         def protocol         def name     class FtpConnection         include Keyring         def host         def port         def username_encryption_id         def passsword_encryption_id         def is_passive         def username             # Return the decrypted value given an encryption key id.             return @keyring.key(self.username_encryption_id)         def password             # Return the decrypted value given an encryption key id.             return @keyring.key(self.password_encryption_id)      As you see, FtpConnetion uses Keyring. Now, isn't Keyring coupled to the Keyring module (by name)? If I want to use FtpConnection in another project, I'd have to bring along Keyring or implement another module with exactly that name, right? Isn't this bad design?