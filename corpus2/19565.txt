Recently I had to solve a problem similar to this: Let's say I have a list of list of rules               Clear[a, b, c, d]     l = {{a -> 2, b -> 1, c -> 3, d -> 2}, {d -> 2, b -> 1, a -> 1, c -> 2},           {c -> 3, a -> 1, b -> 2}};      What is the best way to sort the values of `{a, b, c}` in each sublist without touching the rest of the sublist. So the first sublist should be:               {a -> 1, b -> 2, c -> 3, d -> 2}      and the whole result should be               {{a -> 1, b -> 2, c -> 3, d -> 2}, {d -> 2, b -> 1, a -> 1, c -> 2},       {c -> 3, a -> 1, b -> 2}}      There are no duplicates in the subsists (so `a -> _` appears only once). The order of rules in the sublist does not matter. In an effort to expand my pattern matching skills I would like to know: What's the best way to achieve this? Here "best" means elegant code, but still efficient enough to work ~10^5 subsists.               testdata =        Table[MapThread[         Rule, {RandomSample[{a, b, c, d, e, f, g, h, i, j, k}, 10],           RandomReal[{-1, 1}, 10]}], {ii, 10^5}];      * * * I'm posting my answer below, so that I won't get accused of not showing any effort:)