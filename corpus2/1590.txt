**Background** I'm trying to create a workaround for what seems to be a bug in MMA's graph functions related to edge weights: SO: _How to Label Graph Edges with their weights_ According to MMA's documentation for MorphologicalGraph: _For EdgeWeight->Automatic the weight of each edge is set to the number of pixels in the corresponding skeleton connection. If more than one connection exists, the shortest one is chosen to represent the weight of the edge._ However, looking at the AdjacencyGraph, it seems to always fill in 0's and 1's, so I assume this not to be working. What I am looking for can be illustrated with the following code:               img = Import["http://i.stack.imgur.com/Z6RtX.png"]      ![img](http://i.stack.imgur.com/Z6RtX.png)               g = MorphologicalGraph[img, EdgeWeight -> Automatic]      ![g](http://i.stack.imgur.com/m3Osn.png)               (ColorNegate@        ImageAdjust@         SkeletonTransform@img)~MinFilter~2.~Colorize~(ColorFunction ->         "SunsetColors")      ![image manipulated with edge colour corresponding to width](http://i.stack.imgur.com/Kkvw3.png) This last image shows that it is possible to compute the edge weights using SkeletonTransform, and I assume these to be the ones that MorphologicalGraph is supposed to return. **Question** How can I get the corresponding edge weights in the graph (or, for example as an AdjacencyMatrix), that corresponds to the pixelwidth of each edge in the image? **Additional question** How can I visualize these graph weights as thickened coloured edges so that a GraphPlot corresponds to the coloured image above?