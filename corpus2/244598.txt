Assuming that I am dealing with dedicated physical servers or VPSs, is it conceivable and does it make sense to have distinct servers setup with the following roles to host a web application?   1. Reverse Proxy   2. Web server   3. Application server   4. Database server ![cloud diagram](http://i.stack.imgur.com/ycKgq.png) Specific points of interest:   1. I am confused how to even separate the web and application servers. My understanding was that such 3-tier architectures were feasible.   2. It is unclear to me if the app server would reside directly between the web and database server, or if the web server could directly interact with the database as well. The app server could either do the computational heavy-lifting on behalf of the app server or it could do heavy-lifting _plus control all of the business logic_ (as implied in the diagram above, thus denying the web server of direct database access).   3. I am also unsure what role the reverse proxy (ex. nginx) could and should fulfill as a web server, given the above mentioned setup. I know that nginx has web server features. But I do not know if it makes sense to have the reverse proxy be its own VPS, given that the web server–in theory–would be separate from the app server.