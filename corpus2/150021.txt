I'm working on an open source project that has full time professional developers from several universities, plus a couple of other organisations. The product has something like a dozen deployments, various variations, plugins, related components etc. Generally development so far has been driven by institutions "scratching their own itch", but with an effort to merge improvements back to a central code base. As it's starting to mature, I'm interested in possible models of open source governance to follow. (So this question isn't "what are some good things to do", it's specifically "what existing, tested models are worth looking at and possibly following") Specific aspects that such models might cover:   * How decisions about big-impact changes are made (and what happens if someone makes big changes without discussing them first)   * Who manages the product's public image (product marketing, for want of a better term)   * Who represents the product in any comparisons with "competing" products   * Whether enhancements become "core", "plugins", "related products" etc   * Whether and how roadmaps are created and published   * How variations on the product are handled (in this case, versions for different academic disciplines)   * Expectations and obligations of participants in the project   * Expectations and obligations of the institutions for which those developers work We'll be looking for something as lightweight and informal as practical.