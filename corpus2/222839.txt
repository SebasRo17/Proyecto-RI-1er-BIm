In general, I have been presented with these sorts of heirarchies for programming language abstraction: Assembly < C < C++ < Java < Python where C abstracts less than C++ and so on. You could also consider this on a compiled vs translated vs interpreted language basis (which is usually how this topic is considered, putting C and C++ together), but I'd like to think in terms of levels of abstraction for this question. Lisp dialects, my favourite language, seem to vary on implementation and fit in between these, along with languages like Haskell and Prolog, but languages like Ruby and Python are undoubtedly at the top. Are there languages that abstract even more significantly than Python or Ruby? Are these languages desirable to use? Having started with Lisp/C++, I was not expecting to so thoroughly enjoy Python and Ruby. I was also not expecting them to make my coding so much better, since you can use features like Scipy's Weave to use Python to do high level computation for most things and then low level computation for bottleneck code. So I'm wondering if there are even higher level languages available of which I'm unaware and that I should try out.