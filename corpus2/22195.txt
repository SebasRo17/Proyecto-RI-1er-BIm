What would be the ideal integration strategy for a function like this: $$f(x_1,x_2,\dots,x_N)=\prod_{i=1}^Nx_i^{c_i}\Theta(x_i-p_i)$$ where $x_i,p_i\in \mathbb{R}$, $\Theta$ is the Heaviside function and $c_i\in \mathbb{N}^+$ when trying to integrate something like $$\int_0^1\mathrm{d}x_1\int_0^{1-x_1}\mathrm{d}x_2\dots\int_0^{1-x_1-x_2\dots- x_{N-1}}\mathrm{d}x_Nf(x_1,x_2,\dots,x_N)?$$ **Edit:** $N$ is usually rather small, namely $N<10$; the $c_i$, however, can be of the order of $10^2$. **Edit 2:** I am aware that this question is quite general, but maybe there are general rules how to `NIntegrate` monotonous functions like this. **Edit 3:** An example for $f$ would be               f[x1_,x2_,x3_] = x1^23 x2^45 x3^123 HeavisideTheta[ x1-1/20 ] HeavisideTheta[ x2-1/20 ]       **Edit 4:** Since I was apparently confusing some people, here's roughly what I want to compute:               NIntegrate[f[r1, r2, r3], {r1, 0, 1}, {r2, 0, 1 - r1}, {r3, 0, 1 - r1 - r2}]      This gives a result `(2.8227403075197916*^-78)` but also states: > NIntegrate::slwcon: Numerical integration converging too slowly; suspect one > of the following: singularity, value of the integration is 0, highly > oscillatory integrand, or WorkingPrecision too small My question is: What is the fastest and most robust NIntegrate Integration Strategy when I wand to do this with arbirtary $1<N<10$ and $\left\\{c_i\right\\}$?