I've heard that you should read 10 times more than you should write. This applies to both literature and source code. Therefore, I'd like to study the best c++ packages we've developed. I'm interested in discovering extremely high quality software packages that use c++, c and assembly. This begs the question, "What determines high quality?". Well, that's kind of up to you. Could you provide a bulleted list of **_your reasons for choosing your packages_** and also **_the list of open source c++ packages_**. For example my list of qualities that I think make good software are:   * Well commented (with full javadoc comments for every function, method and class signature)   * Well organized (files broken up into logical, manageable pieces)   * Well documented (a reasonable amount of up to date, bug free documentation. Hopefully with some documentation on the high level structure)   * Well named classes and variables (succinct, verbose variable names; this should reduce the need for inline comments, however inline comments are always welcomed; no single-letter variables)   * Should have unit tests.   * Consistent style and formatting.   * Hopefully demonstrates clean and recommended usage of a good library like Boost, Qt, STL, etc. My list of packages is:   * TrueCrypt (Though is doesn't have full javadoc signatures)   * Chrome   * OpenSceneGraph I'm aware of this post. It's two years old and doesn't have the list of reasons. Thank you very much for your contributions, in advance. :-) UPDATE: I've created a github repository will all of the packages listed below. I'll continue to update it as more are added. https://github.com/homer6/c_reading