I want to numerically calculate the maximum of a function defined by the minimization of another function, like the following:               NMaximize[b/.NMinimize[(a^2+b)^2,{b}][[2]],{a}]      Obviously the intended result (for this simple test function) would be:               {0., {a->0.}}      because the inner minimization would give b=-a^2 for any value of a, and maximizing that gives 0 for a=0. However I get the error message `NMinimize::nnum: "The function value (-0.829053+a^2)^2 is not a number at {b} = {-0.829053}."` and the result `NMaximize[b/.{b},{a}]`. I figured that this is due to premature evaluation of the argument (i.e. before `a` got anumerical value), therefore I tried to wrap either the whole first argument of just the `NMinimize` call in `Unevaluated`, but neither helped. So my question is: How can I do this combined numerical optimization?