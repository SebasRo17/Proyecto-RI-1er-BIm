I am not asking for code but rather design ideas. I am trying to develop a new system to learn more about client/server development. I would have 3 systems: `Client 1 : Client` `Server 1 : Server` `DB Server 1: DB Server` I would develop a server application as well as a client application What happens is that my idea would be to use DB authentication where the clients actually have different access rights which are stored in a DB table on the DB server. However, different access rights would get access to different features in the application. For example, a superuser would log in with his account by sending data from the client to the Server application running on Server 1, which would then check the superuser table in the DB to check if the account exists. My initial idea would be to send the account object back to the client in which the client application would check what type of account it belongs to and actually displays the corresponding form/User Interface to the user. However, this approach does not seem very feasible as it seems too flimsy and incorporates a lot of bad design. Perhaps someone could give me a better idea on how do i approach this problem. Summary : It would be just like a client server application but there would be different kinds of users being allowed different rights and different features.