In an MVC architecture pattern (for e.g., in iOS) there is a controller per view. In UML there is a concept of having Control object per use case to encapsulate an use case, which may span more than one view. Sometimes a same view can support multiple use case, in which case it would be nice to have multiple 'use case control' objects. Should i create a separate 'control' object apart from iOS 'Controller' to encapsulate the use case? Any idea on how to implement 'use case control' object in iOS MVC? I am really interested in the concept of having control object for an use case, rather than per (use case fragment) view.