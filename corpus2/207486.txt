First of all, I'm looking for a book, publication, project or any kind of information that should probably exceed the limits normally imposed on answers in this kind of forum. I know the rules about not asking to advice a book, but hold your breath, don't vote to close yet. I've been searching every place and returned empty-handed. Eventually I came across the mention of "Theory of data structures by relational and graph grammars" book, but I cannot find it. This book is really old, the author didn't continue the work in the same direction, instead he published several books related to programming practices rather then theory. Well, I cannot believe that was the only book. Will you please help me find more? TL;DR The motivation, if you are interested. Through the course of last few years I was specifically trying to reach to any, even if very exotic languages to have a better idea of how they organize their system of data structures. The reason to do so was that the mainstream languages provide the programmers with very fragmented, not unified under any rigorous theory set of tools. Some try to build a hierarchy / heterarchy of things they put into that basket, but really, it's just random. SQL has very nice theory (relational algebra) to back it up, alas, that doesn't include the very common things, like strings or lists etc. For some time I had a gut feeling that the general case of any data structure must be a graph and other data structures would be some kinds of either degenerate graph (list is an acyclic direct graph with the requirement that there should not be a vertex that connect more then one other vertex, etc.) or a "projection", like a two-dimensional relation. I found several pages from the book I mentioned earlier, where the author expresses what I've taken to be the same / similar idea. But there must be more to it. Similar to how relational algebra defines a set of operations on relations, that book mentioned basic graph operations, but the details were lost.