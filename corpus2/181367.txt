I am deciding between Qt (in C++) and JavaFX for GUI development for an application with a complex back-end (the back-end will be written in C++). If I use JavaFX for the GUI, I will be using JNI to exchange data between the GUI and the C++ back-end. Except for one major issue, I would prefer to use Qt (C++) for the GUI, rather than JavaFX. The issue is that it is possible that JavaFX has a much larger developer community. On a related note, it will presumably be easier to transfer development of the application to other developers in the future if the GUI is built in JavaFX. (The quality of both of these GUI frameworks seems, on the whole, comparable; see, for example, JavaFX 2.0 and Qt for cross-platform application, Cross- platform desktop development, and Is using Java the proper language/platform for developing a GUI based accounting app?. If I'm mistaken, and in fact if the quality of one of these frameworks is clearly significantly higher than the other, that would become a major factor.) My impression from "the blogosphere", as well as from the fact that Qt is being actively maintained, is that Qt has a large following - though presumably the Java Swing community is larger (which will probably also be the case for the JavaFX community after some time has passed, since JavaFX is superseding Swing). My question is: How large of a user base (developer community) does Qt have, in comparison to JavaFX?