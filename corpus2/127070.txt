As anyone who has used Smalltalk knows, one of the main benefits (other than a late-bound language that discourages many poor practices), is that the system is totally transparent and reflective, which makes understanding APIs and existing code easy, and locating functionality pretty easy. Is there anything that creates a similar environment for Python? A few examples of features of a smalltalk development environment, not natively found in python are:   * search class/method/etc names,    * examine inheritance hierarchies   * functionality to show the full interface of a given class/object, and where the properties therein originate   * an integrated graphical debugger which allows one to examine the full state of everything in the system, and see every instance of a given type, as well as all threads.  Note that I use windows, so anything that works well on windows would be particularly useful.