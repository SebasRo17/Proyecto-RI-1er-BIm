Since I discovered the powers of the `final` keyword in Java a few years ago, it helped me to make my codes a lot more readable, since people can easily see what are read-only variables. It may also provide a little boost to the JIT, and while that's a very limited one, it can't harm, especially when targeting embedded devices such as android platforms. But more than everything, it contributes to make a design more robust to changes, and guide other committers when they need to modify the code base. However, while browsing some of the JDK source code, I never stumbled upon this keyword, either for classes, methods, or variables. The same applies for various systems I had to review. Is there a reason? Is it a common design paradigm to let everything mutable from the inside?