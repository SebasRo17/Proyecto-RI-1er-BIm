**Context:** I recently had to deal with a class file generated by XSD.exe. It was 3500 lines long with ridiculously-verbose class / variable names (think `someRidiculouslyLongPrefixThenMaybeOneThingUniqueAtTheEnd` \- difficult to compare at a glance with `someRidiculouslyLongPrefixThenMaybeOneOtherThingChanged`) and annotations all over the place. Bottom line is it took me ages to work out what the heck was going on. I read it and thought I would never put my name next to something so... Un-clean. **Question:** 1) Is it bad practice to mess with generated code (i.e. clean it). 2) Would it be better practice to write a mapper to map the generated classes to my own nice, clean classes (which I could then get to work with, quite happily)? **EDIT:** Thanks for all the comments. If I was actually going to do anything interesting with it (i.e. if there were domain objects which were anything but transport objects) then I think I'd map them to 'cleaner' classes, which I'd have to do anyway to get any kind of functionality out of them. In this case the classes are effectively DTOs so perhaps it makes sense that the naming matches the corresponding elements. As stated, I don't need to touch it - just to call accessors / mutators before passing the data down to another layer for processing. For now, I think I'll leave them well alone.