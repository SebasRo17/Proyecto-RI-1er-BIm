Obviously some old applications can't be or is extremely difficult to unit test because of the way it was written in the first place. But in places, like some helper methods which could probably be unit tested, should I bother writing unit tests for them? I mean, they could be written like a dog, but however complexly fragile the logic, the test of time has proved that it works the way it should. Should I only bother to unit test if I'm say re-factoring it or should I write unit tests for them whenever I have the time? Is there any value in doing this? Take into account also that the method definition may be vague, and I may need to research what some of the methods should actually do in given conditions.