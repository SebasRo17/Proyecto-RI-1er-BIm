In the case of a newly designed functional language, consider e.g. the _not equals_ operator, spelled `/=` as is common among functional languages. Of course this operator is also known as `!=` in C family languages, and `<>` in SQL et al. It would be easy to make the parser accept these as synonyms, in the hope of cutting down on the number of things for someone not very familiar with the language to trip over. But on balance is this a useful thing to do, or would it just add more confusion than it's worth? Most mainstream languages don't provide synonyms, probably on the basis that they're designed for programmers who are familiar with the syntax. But what if you're designing a scripting language, for scenarios in which many users will not be very familiar with it, and may be specialists in something other than programming? Does that tip the balance in favor of providing synonyms to make things easier for newbies?