I have been considering the following situation as part of documenting and interface (`A`) and an implementation (`B`) of that interface. The interface `A` contains methods which involve the following two arguments:   1. A _percentage_ , passed as an integer.   2. A _name_ , passed as a string. The valid values for the _percentage_ are the closed range [0, 100]. No matter how you implement the interface, it is an error to allow a value outside this range as an input. The _name_ , as defined in the interface, allows any string containing [1, 100] characters. I want to document the interface in such a way that it neither _requires_ nor _disallows_ an implementation to support a _name_ with more than 100 characters. Clearly the valid range for _percentage_ is a closed, inclusive interval. **How would you refer to a range like I defined above for the number of characters in _name_?** I can't refer to the interval as right-open, because the implementation might not support values with more than 100 characters.