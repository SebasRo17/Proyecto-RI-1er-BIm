I need to label some data in arbitrarily nested ragged lists, with a stream of unique labels. It's very convenient if the labels are consecutive integers, starting at 0 or 1, and if I can produce the same stream every time I label a given data set. I can do this with recursive functions that thread around the current label in the parameter list and conventionally in every output (say the first element in a list, by convention; this is essentially an explicit simulation of the state monad of Haskell). It's cumbersome and ugly, so I'm looking for a better solution. `Unique` comes close to fitting the bill. In a fresh kernel, MMA version 9.0.1 on Mac 10.8.4, consider the following               Table[Unique[],{3}]           {$3, $4, $5}      Great. Let's try starting them at 1, following the documentation,               $ModuleNumber = 1;      Table[Unique[], {3}]          {$6, $7, $8}      Ooops, surprise! The following, which was my first attempt, produces an internal ENULL bugcheck               Block[{$ModuleNumber = 1},      Table[Unique[], {3}]]          Mathematica has detected an internal error:       vMessage ENULL          Please report this error as soon as possible to     support@wolfram.com giving as many details as possible     of the circumstances under which it occurred.      I can mimic the entire thing with my own global state variable and mimic of `Unique`, but thought I'd first check here for insight and advice.