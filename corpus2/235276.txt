The Algorithm below is written in pseudocode and for simplicity the storage of the actual route in the Data structure is not included.                LengthFromSrc   = 0;      LengthFromDest  = 0;      TotalNumberHops = 0;           X = SRC;  /*Last Node Visited from Random walk starting at SRC;*/      Y = DEST; /*Last Node Visited from Random walk starting at DEST;*/           /* Randomly select a route length */      do {         Length = rand( ) % Max;      while( Length < Min );                while( TotalNumberHops < Length ) {                           Next = Toss Coin to Pick Random Walk from Src or from Dest;            if( Next == RandWalkFromSrc ) {           Z = Randomly select an adjacent node to X;           TotalNumberHops = 1 + LengthFromSrc + LengthFromDest                                 + shortest-path from Z to Y;            if( TotalNumberHops > Length )                 break;           X = Z;            /*include the node in the route*/                   Store X in the route data structure                LengthFromSrc++;       }       else {  /* Next = RandWalkFromDest */           Z = Randomly select an adjacent node to Y;           TotalNumberHops = 1 + LengthFromSrc + LengthFromDest                                 + shortest-path from Z to X;            if( TotalNumberHops > Length )                 break;           Y = Z;                               Store Y in the route data structure                LengthFromDest++;       }      }      I would kindly ask if someone could give me a brief analysis of the Graph as i would like to understand it better. My main problem is understanding the first part from do to while (TotalNumberHopse < Length). The if else part is clear to me :) Thank you very much in advance for your help! PS:http://www.onion-router.net/Archives/Route/ \--> My Source