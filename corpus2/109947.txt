I'm adding a click-tracking feature on my website to track click-thrus for my advertisers. So, on my site, instead of having a _direct link_ , I link to my _re-direct page_ passing the destination url as an argument. This re-direct page then tracks the click thru and then 301 re-directs the user to the correct external url. I want to prevent 3rd partys from harnessing this system to make it re-direct to arbitrary urls. I'd like the code that creates the links to: Create `special token` using ( `destination url` \+ `secret` ) Then, pass the `destination url` \+ `special token` arguments as query string parameters to my _re-direct page_ in public. Upon receiving the arguments the re-direct page will do a check: Given ( `destination url` \+ `special token` \+ `secret` ), `destination url` is either:   * good - re-direct it to destination   * bad - do not re-direct it to destination and it should _not_ be possible for Doctor Evil to: Create `secret` using ( `known valid destination url` \+ `its special token` ) * * * Ideally the `re-direct` page would not have to do any url-specific look-ups on data to validate the parameters - it should just be able to tell from 'the two params given + the secret + the known algorithm'. I'm not very knowledgeable about encryption so was wondering what kind of method one would use to create and validate the parameters given the shared secret. I'm sure this is a common technique but I have no idea what its called - thus its difficult to learn more about it. Any help is appreciated.