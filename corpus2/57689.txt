From the Joel Test, of the 12, which do you think are the absolute must-haves to at least have a decently running software department/company? I realise there is no absolutely right answer. I'm just trying to get opinions of others out there. My own organization only manages a measly 5 of 12. If you check listings on Careers 2.0, most companies don't score a full 12 either but I'm sure they're doing fine. Does SO publish the stats for those anywhere? Or has anyone tried scrapping the results? Would be interesting to know which are practised the most. And whether because they are easier to implement or whether they actually have the most impact. Thanks. EDIT: These are the ones practised by my company and for the given reasons   1. Having source control. - Have to agree with one of the answers that that is the one I would not negotiate about.   2. Fix bugs before writing new code. - Matter of principle but not a must-have.   3. Have a spec. - In a small software house with tight margins, specs save life. But I could see it done away with in other companies without affect.   4. Candidates write code during an interview. - Saved us hiring the wrong candidate many many times over. This is the other non-negotiable must-have for me.    5. Hallway usability testing. - Easy for us. Our whole office is a hallway. It's really easy to grab people anytime. But that also means we don't have a quiet working environment for developers.