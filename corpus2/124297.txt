In a nutshell and for those who didn't know it, Lisp functions/operators/constructs are all uniformly called like this:               (function arg0 arg1 ... argN)      So what in a C-like language you would express as               if (a > b && foo(param))      is transformed to a Lisp sexp like               (if (and (> a b) (foo param)))      . As things get more real/complicated, so do their corresponding s-expressions, for me. I'm aware that this is most likely a subjective question, but - is for many Lisp hackers this one little annoyance one will have to always deal with? Or does one mostly get used to this (lack of) syntax sooner or later? In any case, is adding breaklines (that you wouldn't add in your C equivalent, most times) for readability a good idea, especially on the long run? Any other suggestions would be welcome.