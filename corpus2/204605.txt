## Background One of the advantages of decoupled components in systems is that you can extend the system without having to touch the existing code. Sometimes you don't even have to recompile the old code because you can dynamically load classes from disk like this:               clazz = Demo.class.getClassLoader().loadClass("full.package.name.to.SomeClass");      That allows for a kind of plug-in architecture of sorts (give or take). ## Question How do you prevent malicious code from running when dynamically loading a class from disk using `ClassLoader` ?