I have two segments of code that do the same thing and I want to determine the which is more efficient. What are the considerations when determining efficiency of Mathematica code?   * Correctness/Equality of code segments   * `AbsoluteTiming` vs `Timing` ... **Why?**   * Clearing the cache   * Memory footprint (speed vs size) ... **Any suggestions on how to measure this?**   * **More?** Any useful packages out there to assist in this? * * * **Hypothetical Code Segment 1**               numbers = {}; For[i = 0, i < 100, i++, AppendTo[numbers, i]]; numbers      * * * **Hypothetical Code Segment 2**               Range[0, 99]      * * * **Testing Code**               (* Test Equality *)     Print["Equality: ",          numbers = {}; For[i = 0, i < 100, i++, AppendTo[numbers, i]]; numbers ==          Range[0, 99]]          (* Timing Comparison *)     iterations = 10000;          times = Map[{           AbsoluteTiming[            numbers = {}; For[i = 0, i < 100, i++, AppendTo[numbers, i]]; numbers            ][[1]],          AbsoluteTiming[            Range[0, 99]            ][[1]]          } &, Range[1, iterations]];     {times1, times2}  = Transpose[times];          PrintStats[times_] :=           Print["Sum: ", Fold[Plus, 0., times], "  Min: ", Min[times],        "  Max: ", Max[times], "  Mean: ", Mean[times], "  StdDev: ",        StandardDeviation[times]]          PrintStats[times1];     ListPlot[times1, PlotRange -> All]     Histogram[times1]          PrintStats[times2];     ListPlot[times2, PlotRange -> All]     Histogram[times2]      _Results:_ ![enter image description here](http://i.stack.imgur.com/vVfC1.png)