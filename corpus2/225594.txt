Some would say: write a lot of code. That's certaintly true, writing a lot of code has helped me. I seen see the pitfalls. I refactor. I read. I've read countless books and I acknowledge design patterns. However, when it comes to actually using them in real life they escape me. I see code littered with fancy features and elegant solutions and I wonder: gee, why didn't I think of that? How does one go from intermediate to expert? What things should you be reading daily? How can you improve your skill? Your apt for problem solving? Ultimately, how can you bridge the gap from good to great?