**The scope of this question is intended to be global in nature:** techniques (approaches to solving a problem, such as the use of a layer palette), operations (actions that the software or its user can take, such as using a paint bucket tool to fill in a selection or otherwise bounded area), etc. If the development process comes into play, such as Person A saying "We need to implement this one cool feature in Software X" and perhaps any study of that functionality via decompilation, hex-editing, etc. (vs. a more genuine, independent process of imagining functionality or writing up the spec), then that would be appropriate to mention. I am in the process of creating a substantial application, and I don't know how much of a problem software patents will be. I'm of the impression that no one can patent a "paint bucket" tool (though I wouldn't know the legal justification behind why that can't be patented), but perhaps if you stray much further from that, you'll get hit with a lawsuit? I really have no idea! In my case, I'm not even looking at competitor's software for this very reason. I did sit down with someone who uses software that is currently on the market long enough to know that I can easily demolish it, but I would just consider that market research. The only things that excited me during that little demo session were instances where I would dream up some functionality and his response would be "Yeah, that would be really useful, and no, this software can't do that." There was no "I really need to copy that feature!" because, well, the application was garbage for the most part, despite it price tag.