I saw these methods in the Line2D Java Docs but did not understand what they do? Javadoc for `ptLineDist` says: > Returns the distance from a point to this line. The distance measured is the > distance between the specified point and the closest point on the > infinitely-extended line defined by this `Line2D`. If the specified point > intersects the line, this method returns 0.0 Doc for `relativeCCW` says: > Returns an indicator of where the specified point (PX, PY) lies with respect > to the line segment from (X1, Y1) to (X2, Y2). The return value can be > either 1, -1, or 0 and indicates in which direction the specified line must > pivot around its first endpoint, (X1, Y1), in order to point at the > specified point (PX, PY). > > A return value of 1 indicates that the line segment must turn in the > direction that takes the positive X axis towards the negative Y axis. In the > default coordinate system used by Java 2D, this direction is > counterclockwise. > > A return value of -1 indicates that the line segment must turn in the > direction that takes the positive X axis towards the positive Y axis. In the > default coordinate system, this direction is clockwise. > > A return value of 0 indicates that the point lies exactly on the line > segment. Note that an indicator value of 0 is rare and not useful for > determining colinearity because of floating point rounding issues. > > If the point is colinear with the line segment, but not between the > endpoints, then the value will be -1 if the point lies "beyond (X1, Y1)" or > 1 if the point lies "beyond (X2, Y2)".