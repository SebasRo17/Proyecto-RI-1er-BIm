I want to find roots from a transcendental equation using FindRoot as a function of a real parameter and then plot the solutions vs. the parameter. The following commands work perfectly:               equ[a_?NumericQ] := FindRoot[x == E^(-a x), {x, 1}][[1, 2]];          Plot[equ[a], {a, 0, 5}]      However, I actually have a much more complicated equation which is very sensitive on the starting value. Thus, starting from the second point, I want to set as the initial guess for each solution the value obtained on the previous point. The trick proposed here works for a `Table`:               sol = {x -> 0};     sols = Table[sol = FindRoot[a x == 1, {x, sol[[1, 2]]}], {a, 1, 10}]      > >     {{x -> 1.}, {x -> 0.5}, {x -> 0.333333}, {x -> 0.25}, {x -> 0.2}, {x -> > 0.166667}, >      {x -> 0.142857}, {x -> 0.125}, {x -> 0.111111}, {x -> 0.1}} >   However, when I tried to plot the solutions I followed the suggestion here: plotting output from FindRoot But the command               ListPlot[a /. sols]      only produced an empty graph. So, how do I accomplish this? I would rather be able to define a function of the roots in terms of the parameter a and then plot the function, but if I try something like               sol = {x -> 0};          equ[a_?NumericQ] := {sol = FindRoot[x == E^(-a x), {x, sol[[1, 2]]}]};          Plot[equ[a], {a, 0, 2}]      it will generate an empty plot again.