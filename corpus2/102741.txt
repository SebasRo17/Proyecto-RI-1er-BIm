Is this **agile**? **Scrum**? Any suggestions on how this can be made more agile under the circumstances? Which points are positives and which can be improved?   * The product is developed for a customer who will re-sell it while paying us royalty.   * The team does not get to talk directly to the end user. Only to the reseller.   * A product requirements document was created before starting development.    * The requirements are rigid and do not change.   * A delivery schedule was agreed on with milestones such as "alpha", "beta" etc. and features/times attached to those milestones.   * All developers on the Scrum team report to the product owner, a software manager.   * Testers on the team report to a QA manager.   * The product owner has directed the team towards certain high risk technical tasks. The output of those tasks is not usable by the end user but rather some technology/code that will eventually be used in the product.   * The product owner has created a backlog based on the requirements.   * The product owner is unable to answer some questions regarding the product. He refers to others or to the documented requirements.   * The team goes through the motions of Scrum. Daily Scrum, Sprint Planning, Retrospective etc. There is a ScrumMaster.   * Every sprint the product owner and management decide what backlog items the team works on.   * There is a burndown chart. Scrum board with stories and tasks. The estimates on those come from the team.   * The team sits in an open floor "bull pen" shared with other teams, all visible and audible. There is cross-team noise and there is foot traffic around the team area.   * The team may be required to attend various meetings not directly related to the goals of the sprint.   * There are pressures to select certain technical solutions. Some tools and processes are mandated.