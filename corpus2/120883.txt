As much as I understand both concepts, I can't see how can I take advantage of JavaScript's closures and prototypes _aside_ from using them for creating instantiable and/or encapsulated class-like blocks (which seems more of a workaround than an asset to me) Other JS features such as functions-as-values or logical evaluation of non- booleans are much easier to fall in love with... **What common programming problems are best solved by using propotypal inheritance and closures?**