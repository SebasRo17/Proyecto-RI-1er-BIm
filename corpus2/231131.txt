I started my programming career a long time ago when I was 14 years old, and I started with a book by James Lee, suggested by a Unix Systems Administrator I met in Barnes and Noble. In a month I had digested that sucker, bought a set of carrier grade servers, and had an AMP stack running -- but never used PHP. The wonder of Perl absolutely captivated me, and I loved it. After learning everything I needed to know about HTML and hosting websites, and making that HTML content dynamic with Perl, and parsing input with regular expressions -- and, admittedly, that also included hacking a couple of HTML files with regular expressions, blissfully ignorant to grammars, let alone Chomsky hierarchies -- cutting my teeth on that stuff was _fantastic_ , especially after I learned to make money with it. It got better and better, but before long; alas, I discovered a new baby. Yes, the evil of the evil, C# and it occupied my attention for a very long time. Oh the _joys_ of static application development captivated me, and before long I had forgotten the whole motivation for me to program: it was no longer about money, but about the intellectual desire and will to hack at problems, and most importantly, make pretty much every single math problem my ... well, not so much. I got out of the whole thing and it wasn't too long before all these standards changed and a boxed website -- which was really never acceptable -- was absolutely positively, well, done. I worked in my field doing everything from botting apps to scraping html webpages regular expressions, and doing computer repair too. I wanted to do this for a living. So I went to college for it, B.S. Computer Science, yep, that's me. Junior year I found out that I was basically a math major, and lo I wasn't frightened because Computer Science reinforced the math and vice versa: I learned to appreciate the _same_ abstraction and formality that I absolutely **loathed** when I first cut my teeth with Perl -- "object orientation?! who needs it!" In a year I'm going to leave this school and seek employment in my field, and I've come to the crude and harsh realization that not _if_ but _when_ I go back out there, less blissfully ignorant of what it _means_ to compute, people are going to want me to develop webpages. I've dodged the bullet so far, but some of my peers haven't -- they seem to actually enjoy coding in the non- homogeneous, parse-html-with-regex, hack modules, PHP wonderland of rubbish and javascript, ..., **nonsense** that is all contained in that whole world. There's answers everywhere: "use joomla," "use wordpress," "heroku/ruby on rails," ..., all of which gets some of these people super excited. Perl is the outlier, and it is such a wonderful language. They're going to want me to make the logo their 8 year old drew in MS Paint look gorgeous when I get stuck trying to vectorize that sucker and plug it into a website and clean it up; they're going to want me to change specifications at every possible turn; and they're all going to want some PHP/ASP.NET nonsense to construct it. I'm just absolutely cringing at the thought of being made to develop websites, my brain is just `nop` sliding me into the financial dooms of programmer hell. I need to know how people at my level or higher console themselves into creating gorgeous and clearly well thought out websites. How do I start over and fall in love with website development, again? Is there a python `from website import awesome` utility or something that I can use? Where do I go? * * * Edit: I've read a lot of comments about this thread, and yes it is long, but I can't think of any material to cut -- I'm really trying to voice my frustration here. Let me clarify a few points though. I don't loathe object orientation, or PHP, and I sure don't have any problem with the more mathematical and formal portion of programming. As far as my math stuff, I'm up to snuff with it. It's funny that one of you mentioned quantitative finance because I have a client with a passion for futures trading; however, at the end of the day my company hired a programmer capable of generating gobsmacks of garbage code so it can be put on a website. To make matters worse, the magnitude of garbage code ... to put it in car terms, it is like riding in the passenger seat with a newly licensed 15 year old driver -- with a manual transmission -- somehow we all get to the grocery store. Yes it works, but the transmission is shot and I need a shower by the end of it all. Web development just seems, well, so unnatural. Going about writing a webpage is as painful for most programmers as reading this post: long, verbose, roundabout the point, and at the end of the day some clever parser figures out what it all means and puts the discombobulated mess into a format the browser can understand. Cheeky, right? Gears are ground down to stubs by the time Javascript lubes it all together. How verbose? Well, let's say that six Linux kernel have less code that your grandma's 6 page website at this point -- there's a Joomla module for that, but you have to have a commercial license to post more than 6 cat pictures at a time. Something as simple as email address validation can perhaps only be compiled into a regex (by the way, which totally is not a regex) by extended Perl compatible regular expressions -- and indeed, that thing is at least 3 pages long and would make a drunk Ken Thompson blush. The worst part of it all is that there has got to be way better languages and frameworks for doing this kind of work. I want round boxes and edges that are beautiful, but I don't want to have to hack in illustrator for half an hour to do it just so I can load it in some div that arbitrarily positions it, according to browser specifications, in a combination that not even Bruce Schneier could enumerate. I need closure, and the functional definition of closure would be nice, but no host will well-support anything but PHP -- assuming PHP can be well-supported in the first place. At one point I was hoping that C# would be my panacea, nope. Maybe I'm not getting a fundamental element of web design. I attempted to get involved in the middleware side of web development, but that didn't work either. A polyglot of perl, python, and some regular expressions later and I had scraped his webpage, only to have a Joomla module butcher my beautifully normalized table. Feel free to mercilessly edit my post at will. ## **Links** ClojureScript: http://himera.herokuapp.com/synonym.html   Dancer: http://www.perldancer.org/documentation