Before we start this, let me say I'm well aware of the concepts of Abstraction and Dependency Injection. I don't need my eyes opened here. Well, most of us say, (too) many times without really understanding, "Don't use global variables", or "Singletons are evil because they are global". But what really **is** so bad about the ominous global state? Let's say I need a global configuration for my application, for instance system folder paths, or application-wide database credentials. In that case, I don't see any good solution other than providing these settings in some sort of global space, which will be commonly available to the entire application. I know it's bad to **abuse** it, but is the global space really **THAT** evil? And if it is, what good alternatives are there?