The simplest example of the change being sought is a greek letter, typed in as plaintext nu, and its may be replaced by the symbol, ν: `expr = 3nu*kx*ky`\+ `expr /. nu -> ν` yielding `3νkxky` However, I need to make a variable with a subscript correspond **_to a large number of different subscript values_** (many different possibilities for x in "k_x"). In any one of my (100+) equations, it's easy enough to change its couple of variables to their more visually comprehensible counterpart manually using the above method along with `Subscript`, but I am having trouble finding an efficient way to have _Mathematica_ take _ANY_ given `kz` and output the corresponding `Subscript[k,z]` output. A method of achieving this here automatedly from _Mathematica_ taking a glance at my plaintext system of equations would be great. Thank you! Edit: After talking with Bill S briefly in the comments, he suggested I upload an example of what I have so far and what I hope to accomplish. If arrays are a better way to handle a majority of my input, even in conjunction with subscripts at times, I am more than willing to use them. Here's an examplary 3 equations where R# signifies the rate of change of Z[#], where Z[#] on the RHS **_only coincidentally_** contains the function bracket notation due to use of other software.               R6 = kf*(z[1] + mu*z[5]) - 2*z[6] + mu*kd^2*z[7] - kd^2*z[6]     R7 = kf*(z[1] + mu*z[6] - 2*z[7]) + kd^2*z[8] + kd^2*z[7]     R8 = kf*(z[1] + (mu*z[7] - 2*z[8]) + kd^2*z[9] + kd^2*z[8]      As you can see, the number of options for x in k_x is only 2: f & d, so I can input the `/. rules` easily manually. However, to avoid confusion between my plaintext input form's z[x] and _Mathematica's_ traditional single-function notation, I would like to change ALL z[x] to z_x (z with subscript x), regardless of specific x. However, here there are 140 different values rather than 2, so manually inputting each `/. rule` is less practical. My current goal is to simplify the appearance and allow for symbolic manipulation of all the parameters, but I do hope to do curve-fitting eventually. Does anyone have advice on how to approach this scenario, either via subscripts or `Array`? I suspect # and possibly `ToRules` will be involved but am not sure yet how to do this. _**Answered!_** Please see the answer and, if you're **only** interested in efficiently replacing any symbolic expression with another, see the comment on the answer.