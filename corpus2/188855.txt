I'm working on a simple widget system (single window, fixed size). Each widget gets its parent (i.e. the widget containing it) passed into its constructor - except for the root widget, which I called _Screen_. I have some doubts if that approach makes sense. I did it because most of the widget systems I used before do it (Qt, GTK, ...), but I realised that these are quite a bit more complex than mine:   * I have no window resizing   * I don't plan to size containers based on their children's sizes   * I don't think I need it for memory management (I'm using C++), I can use shared pointers instead (basically how it would work in Java) **Is there any reason why a widget would need a reference to its parent?** It's a major refactoring to change this. So before I go ahead and implement containers and layouts, I want to have a good idea of whether or not I'm going to need that parent. **Edit:** Please note that the parent does know all its children anyway, I'm just wondering if the children need to know the parent as well.