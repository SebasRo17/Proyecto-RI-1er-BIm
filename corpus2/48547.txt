This question has been in the back of my mind since I started with WPF and Silverlight. **In general, is it better to use nested grids, or just set the Column/Row Span properties in a single Grid?** Better could be measured in many ways (not limited to these): * Easier to read * Easier to maintain and/or extend * Better performance * Quicker to implement/type For example, consider that I want to divide my view into three regions. One region spans the width of the top half of the page. The other two regions each span half of the bottom of the page. I'll attempt to draw it in text:               ---------     |   1   |     ---------     | 2 | 3 |     ---------      The heart of the question is, "which of these two solutions to the example is better and why?" Solution 1:               <Grid>       <Grid.RowDefinitions>         <RowDefinition />         <RowDefinition />       </Grid.RowDefinitions>       <Grid.ColumnDefinitions>         <ColumnDefinition />         <ColumnDefinition />       </Grid.ColumnDefinitions>            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">1</TextBlock>            <TextBlock Grid.Row="1" Grid.Column="0">2</TextBlock>            <TextBlock Grid.Row="1" Grid.Column="1">3</TextBlock>     </Grid>      Solution 2:               <Grid>       <Grid.RowDefinitions>         <RowDefinition />         <RowDefinition />       </Grid.RowDefinitions>            <TextBlock Grid.Row="0">1</TextBlock>            <Grid Grid.Row="1">         <Grid.ColumnDefinitions>           <ColumnDefinition />           <ColumnDefinition />         </Grid.ColumnDefinitions>            <TextBlock Grid.Column="0">2</TextBlock>            <TextBlock Grid.Column="1">3</TextBlock>            </Grid>     </Grid>      I realize that there probably is no "correct" answer. Both solutions work, and are not greatly different. My hope is to gauge which one is more often done in the community at large. If there is a convention that is often followed I hope to learn it.