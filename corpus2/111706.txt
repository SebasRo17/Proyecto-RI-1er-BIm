I was thinking of this because I was trying to write an extension for an existing 3rd party software, and their database is horribly denormalized. I needed to use their existing tables and add a bunch of new fields. I had the option of either creating new tables in their design style (which consists of almost all the propeties being in one big table), or creating a new set of tables alltogether and using something extra such as Triggers to synchronize data between the new and old tables. I ended up going with the first option of using the existing poor design style, but I was left with this question: **Is it better to go with pre- existing bad practices, or to implement good practices that do not play nicely with existing code? Is there some situations where I should choose one over the other?** NOTE: Many answers so far have to do with slowly refactoring the bad code, however I am unable to do that. The code is not ours, and it frequently gets updated by the vendor. I can only build onto it.