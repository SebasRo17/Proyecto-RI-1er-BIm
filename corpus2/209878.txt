As an example of what I need and why I want it, I am trying to determine how a certain value (CurTotal) is getting set (wrongly). I've come up with these notes to myself to try to understand just what is happening: **CurTotal is declared in frmEntry.SetTotalControlsProperties(). CurTotal gets its value within that method from wrkFile.getAmount(), and txtCurTot is eventually assigned that value. SetTotalControlsProperties() is called:**               0) From the main (frmCentral) form's openfrmUPC() method     1) From frmEntry's overloaded constructor: public frmEntry(string DSDtablename, string recType, int QOne, int sDesc, int sList)     2) Conditionally from within DoSave(), which is called from btnSave_Click() and PrepareForPrinting()     3) From frmEntry's saveDSD(), which is called from DoSave(), which is called by btnSave_Click and PrepareForPrinting()     4) From frmEntry's saveINV(), which is called from DoSave(), which is called by btnSave_Click and PrepareForPrinting()     5) From frmEntry's btnClear_Click()      **So the most "interesting" ones are 0, 2, and 3 (I don't think the observed bogus activity takes place in saveINV(), I'm almost positive it's not in the constructor, and I know it's not in btnclearclick()).** So my head is swimming better than Mark Spitz (or, for you young whippersnappers out there, Michael Phelps) ever dreamed of slicing pell-mell through the chlorinated aqua. Making matters more malevolent for me, I can't step through this code (Windows CE, running in Windows XP mode, no emulator), except in my waterlogged brain*. So I ask: Is there a tool that visually represents all the potential routes from which SetTotalControlsProperties() is called/CurTotal is set? Best of all would be a tool that provided a listing of just what route the code took to get to a designated spot. Side question: Why is there no "spaghetti" tag? People got arrested for less than this in communist Russia.   * Cue (or is it "queue"?) TYA's "Over the Hill" here. ## UPDATE Fresh evidence that there truly is a need for such a tool: The method that sets the CurTot amount, namely _wrkFile.getAmount()_ , does this:               public double getAmount()     {         if (tAmount < 0)         {             SetTotalItemsAndTotalAmt();         }         return tAmount;     }      SetTotalItemsAndTotalAmt() assigns vals based on this query:               string dynSQL = "SELECT * FROM workTables WHERE name = '" + name + "'";      ..and "name" here is not passed in to SetTotalItemsAndTotalAmt, nor is it a local var. Arggghhhhhhhhh!!!