I currently have four projects in my website's solution: **Project.Data**   This holds the EntityFramework DbContext object and also the Repositories that interact with it. It references _Project.Models_. **Project.Models**   This holds the business objects and doesn't reference any other project **Project.Web**   This holds all ViewModels, Views, Controllers and static website content. It references _Project.Data_ (for the Repositories), _Project.Models_ and _Project.Service_ And now I get to the problem project... **Project.Service**   I want this to be the project that _Project.Web_ uses to make its controllers thin, as I understand this is desirable. Each of the classes in this project will probably have a repository injected into it so they can access any data they need to. One of their responsibilities will be to create a ViewModel for the controllers in _Project.Web_ to use. This means that it will reference _Project.Data_ for a reference to those repositories, _Project.Models_ for the models and _Project.Web_ for access to the ViewModels. * * * So just as I'm getting the feeling I'm doing something really wrong by all this, I go to add my last reference to _Project.Web_ from _Project.Service_ and it errors out telling me that I now have a circular dependency... What exactly am I doing wrong here? Are there patterns I can use that will clean up some dependencies on other projects or am I trying to do something that isn't useful anyway?