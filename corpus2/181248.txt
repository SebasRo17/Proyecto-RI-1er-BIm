I had recently read a paper 'Aspect-Oriented Programming' by Gregor Kiczales and others, and found there _the loop fusion_ example. Here is a definition of the loop fusion from the paper > …the loop fusion composes by fusing the loops of those primitive filters > that have the same loop structure and that are direct neighbors in the data > flow graph. Each of these composition rules is easy to understand when > looking at its own appropriate picture. But the two composition relation- > ships cut each other so fundamentally that each is very difficult to see in > the other’s picture. Later in the paper _loop fusion_ mentioned to be implemented using metaobject protocol at Lisp: > …the loop fusion aspect … can be implemented, with some degree of > efficiency, using the method combination facility in the CLOS metaobject > protocol What does _loop fusion_ look like using any modern aspect-oriented frameworks in either static or dynamic typed languages? I'm looking for examples of aspect language and advices that could do _loop fusion_. ### Status for mid-January'13 As long as there is no any other answer, I have marked my own answer as an answer. Anyway I'm still looking forward for examples from other languages/frameworks. **ps** : _loop fusion_ discusion at "AOP in .NET" book's forum @manning forum