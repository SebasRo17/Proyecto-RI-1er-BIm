I want to build a generic rule parser for pen and paper style RPG systems. A rule can involve usually 1 to N entities 1 to N roles of a dice and calculating values based on multiple attributes of an entity. For example: Player has STR 18, his currently equipped weapon gives him a bonus of +1 STR but a malus of DEX -1. He attacks a monster entity and the game logic now is required to run a set of rules or actions: Player rolls the dice, if he gets for example 8 or more (base attack value he needs to pass is one of his base attributes!) his attack is successfull. The monster then rolls the dice to calculate if the attack goes through it's armor. If yes the damage is taken if not the attack was blocked. Besides simple math rules can also have constraints like applying only to a certain class of user (warrior vs wizard for example) or any other attribute. So this is not just limited to mathematical operations. If you're familiar with RPG systems like Dungeon and Dragons you'll know what I'm up to. My issue is now that I have no clue how to exactly build this the best possible way. I want people to be able to set up any kind of rule and later simply do an action like selecting a player and a monster and run an action (set of rules like an attack). I'm asking less for help with the database side of things but more about how to come up with a structure and a parser for it to keep my rules flexible. The language of choice for this is php by the way. **Edit I:** Let me refine my goal: I want to create a user friendly interface (that does not require somebody to learn a programming language) to build more or less complex game rules. The simple reason: Personal use to not need to remember all the rules all the time, we simply do not play that often and it's a stopper to look them up each time. Also: Looks like a fun task to do and learn something. :) **What I've tried so far:** Just thinking about a concept instead of wasting time building a wrong architecture. So far I have the idea to allow a user to create as many attributes as they want and then assign as many attributes as they want to any kind of entity. An entity can be a player, a monster, an item, anything. Now when calculating something the data is made available to the rule parser so that the rule parser should be able to do things like if Player.base_attack + dice(1x6) > Monster.armor_check then Monster.health - 1; The question here is about how to create that parser. **Edit II:** Here is an example of pretty basic value but to calculate it properly there are lots of different things and variables to take into account: > Base Attack Bonus (Term) Your base attack bonus (commonly referred to as BAB > by the d20 community) is an attack roll bonus derived from character class > and level. Base attack bonuses increase at different rates for different > character classes. A character gains a second attack per round when his base > attack bonus reaches +6, a third with a base attack bonus of +11 or higher, > and a fourth with a base attack bonus of +16 or higher. Base attack bonuses > gained from different classes, such as for a multiclass character, stack. A > characterâ€™s base attack bonus does not grant any more attacks after reaching > +16, cannot be less than +0, and does not increase due to class levels after > character level reaches 20th. A minimum base attack bonus is required for > certain feats. You can read it here http://www.dandwiki.com/wiki/Base_Attack_Bonus_(Term) including the links to classes and feats which have again their own rules to calculate the values that are required for the base attack. I began to think that keeping it as generic as possible will also make it pretty hard to get a good rule parser done.