(if anything!) I picked up Erlang last night again because I ran into a problem in Project Euler that I thought would be a perfect fit. After about a short time of coding, I had a solution that was extremely simple and elegant (for something I created) -- the main function being only a few lines. My question is what is keeping people from adopting Erlang more?   * For current developers, what do you feel is missing to increase adoption (libraries, language features, IDE/toolsets)?   * For people who tried but were turned off by the language -- what aspects were difficult to understand or missing, or did you find a functional language that was better suited for your tasks?