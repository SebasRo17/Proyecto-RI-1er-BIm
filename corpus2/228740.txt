This is a C specific question. I am trying to keep everything possible inside the translation unit boundaries, exposing only a few functions through the `.h` file. That is, I am giving `static` linkage to file-level objects. Now, a couple of functions need to be called by other modules, but not directly. My module/file/translation unit subscribes to the other modules, passing a pointer to a function. Then, upon a specific event, the pointer is called with some arguments. So I am wondering how to make it very obvious that those functions are called from some obscure location.   * Should they be `static` or `extern` (and expose them in the `.h`) ?   * Should I include some hint in the name of the functions?   * Or is it enough to put a comment "called by X"?