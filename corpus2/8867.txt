I defined a function that takes some time to compute using memoization:               y[a_, b_, c_] := y[a, b, c] = First[$y /. NDSolve[.........]       so that if I call y[a,b,c] a second time it doesn't do the `NDSolve` computation all over again if it has already done it. How can I save the result of this to file? I tried `DumpSave["test.mx", y[3/10, 2, 0]]` after calling `y[3/10, 2, 0]` (i.e. it is now an `InterpolatingFunction`; the result of `NDSolve`), but I get the error               "DumpSave::bsnosym: y[3/10,2,0] is not defined as a symbol or a context. >>"      If I call `y[3/10,2,0][2]` etc I get the correct numeric result. Is there some reason this is not working?