I've been working as a software developer for about 2 years by now. It seems obvious that in a field so rapidly evolving as software development, you need to spend time on learning new technologies, frameworks, etc. I always thought I could take it for granted that if I need to learn something to solve a problem at work, I am free to spend the hours needed learning that at work as well. However, I have had discussions about this topic with various colleagues, and we were holding very different opinions, apparently on the span of two extremes: > Your employer pays you for knowing stuff. You got hired for having knowledge > on the field of expertise required for doing this job, and if the field > emerges so that you need to aquire more knowledge, it is only natural that > you do so in your free time. And the other extreme being > Whatever makes me more productive at work in the long run, is worth spending > the time on at work, because the employer will eventually profit from that. > This does of course apply to learning new techniques, but also, e.g. > learning VIM to get faster, etc. But even when discussing how long to spend time on something with the guys tending to the second extreme, we were of vastly different opinions, ranging from "an hour every now and then is okay" to "however long it takes". Does your workplace encourage learning new skills and if so what processes do they have to encourage this? How much time do you spend learning new things (and not writing production code) during your day as a programmer?