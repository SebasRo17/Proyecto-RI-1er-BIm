I'm trying to implement the version of Appel's algorithm for vector hidden line removal (i.e. I'd like to avoid any form of rasterization). I found the description of this algorithm here - http://wheger.tripod.com/vhl/vhl.htm but it doesn't mention how to actually deal with implementation and I'm having a difficulty with this... To be more precise - how can I write a code (well, even at least pseudocode) that in result will yield that "All the faces are subdivided into subfaces such that all points in the interior of this subface are either front facing or back facing"? And - "Hence when traversing an edge segment, the visibility increments when going under a body and decrements when coming out from underneath" - do I have to simulate "traversing" an edge? What is the idea in implementation that lays behind it? And, basically, this description is a bit overwhelming for me since it has scant images and pseudocodes so if you can share with me any of those, I'll be very grateful.