I have a continuous, differentiable, monotonic, bounded function called `F[t]`. If `t -> Infinity` then `F[t] -> c`. I know `c`, and I want to find the smallest `t` value called `t*`, that suffices `F[t]=c` (I am sure there is one). Could somebody give me some hints about which functions to use for this task? Since I am afraid that `FindRoot` does not work in this case, because even if I know that there is a given `T` that `T` is smaller than `t*`, starting `FindRoot` from `T` as center won't give me the nearest solution, only a solution somewhere near `T` (Or am I wrong?). And neither does Solve work, because `F[t]` is not injective.