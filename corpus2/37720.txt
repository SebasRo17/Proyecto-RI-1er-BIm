I have $2$ equations in $2$ parameters which involve integrations. The limits of the integrals can not be defined analytically. They also require equation solving and eventually I couldnt incorporate everything in a nice way to solve. Here is my code **density functions**               f0[y_] :=1/(E^((1 + y)^2/2)*Sqrt[2*Pi])     f1[y_] :=1/(E^((-1 + y)^2/2)*Sqrt[2*Pi])        **likelihood function**               l[y]=E^(-(-1 + y)^2/2 + (1 + y)^2/2)      **inverse of the likelihood function**               ll[y_] :=Log[y]/2      The integral limits $yu$ and $yl$ which I have problems with, where $λ0$ and $μ0$ are some parameters.               FindRoot[l[yu] == Sqrt[(λ0*(λ0 + μ0*f1[yu]))/(λ0*(λ0 + (μ0 - 1)*f0[yu]))], {yu, 3}]     FindRoot[l[yl] == Sqrt[(λ0*(λ0 + (μ0 - 1)*f1[yl]))/(λ0*(λ0 + μ0*f0[yl]))], {yl, 3}]      Whenever $λ0$ and $μ0$ are known it is easy to find a solution for $yu$ and $yl$ %% my $2$ equations are as follows               h1[y_] :=Integrate[-2 + Sqrt[λ0/(λ0 + (-1 + μ0)*f0[y])] + Sqrt[(λ0 +(-1 + μ0)*f0[y])/λ0], {y, yu, Infinity}] +Integrate[-2 + Sqrt[λ0/(λ0 + μ0*f0[y])] + Sqrt[(λ0 + μ0*f0[y])/λ0], {y, -Infinity, yl}] + Integrate[-2 + Sqrt[(f1[y]*(λ0*f0[y] + λ0*f1[y]))/(f0[y]*(λ0*f1[y] + f0[y]*(λ0 + (-1 + μ0 + μ0)*f1[y])))] + Sqrt[(f0[y]*(λ0*f1[y] + f0[y]*(λ0 + (-1 + μ0 + μ0)*f1[y])))/(f1[y]*(λ0*f0[y] + λ0*f1[y]))], {y, yl, yu}]          h3[y_]:=Integrate[Sqrt[(λ0*f0[y]^2)/(λ0 + (-1 + μ0)*f0[y])], {y, yu, Infinity}] + Integrate[Sqrt[(λ0*f0[y]^2)/(λ0 + μ0*f0[y])], {y, -Infinity, yl}] + Integrate[Sqrt[(f0[y]*f1[y]*(λ0*f0[y] + λ0*f1[y]))/(λ0*f1[y] + f0[y]*(λ0 + (-1 + μ0 + μ0)*f1[y]))], {y, yl, yu}]      I am using `Findroot` to solve them as follows:               FindRoot[{h1[y] == 0.08, h3[y] == 1}, {{μ0, 0.4}, {λ0, 0.8}},               StepMonitor :> Print["Step to μ0 = ", μ0]]      as one can see $h1$ and $h3$ involve $yl$ and $yu$ which are the solution of another equations. These equations can only be numerically evaluated. At this point my eventual aim is to solve the last `FindRoot` of my code. In simple words if I would be _Mathematica_ I would guess some $λ0$ and $μ0$ then I would go to the first $2$ `FindRoots` of my code solve them and get $yl$ and $yu$ numerically. Then using these values I would obtain $h1$ and $h3$ and eventually I would go to last `FindRoot` of my code to see if $h1=0.08$ and $h3=1$ are satisfied or not. If not I would change $λ0$ and $μ0$ until the equations are satisfied. This is of course the worst way of solving the equations but _Mathematica_ would have a better way I suppose. How should I modify my code such that _Mathematica_ could start solving them? The equations are horrible and will take at any case alot of time. Thanks for reading my problems and for any help.