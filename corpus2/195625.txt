I'm a self-taught intermediate Python programmer; I frequently come across popular books on software development and programming written in other languages (often Java). Typical examples:   * Refactoring: Improving the Design of Existing Code   * Design Patterns, Gang of Four   * Test Driven Development: By Example   * The Art of Unit Testing: With Examples in .NET Generally speaking, how useful is it to read a book written for another language? Specifically, what about Python? Should one stick to language specific books? For example, a lot of people praise _Design Patterns_ by the GOF, I've never read it because the model applies to other languages (after all Python is about anti-patterns, right?) yet I feel the urge to because of it's place in the CS literature cannon. Likewise, would _The Art of Unit Testing: With Examples in .NET_ help a Python programmer learn unit testing even though the examples are in .Net?