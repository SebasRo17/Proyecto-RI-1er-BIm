I'm starting to tinker with process forking, just to get a feel for it. I thought I'd write an example where work is distributed among child processes and the results handed back to the parent; this way, it could be run in parallel on several processors. In my first attempt, I'm forking in a loop, which means that each time through, all the existing processes (the original, children, grandchildren, etc) produce another fork. This is causing me problems (memory consumption, rapid growth of the number of processes, keeping track of the pipes to hand data back up the chain, etc), and I'm wondering if I've stumbled on an anti-pattern. I **could** simply fork N children directly from the parent. I realize that it's common to fork and exec multiple times; for instance, terminal forks a shell, and the shell forks an editor. But **is it considered bad practice to fork "recursively" when the children are all of the same type?**