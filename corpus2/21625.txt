This is a very basic question, but I don't understand the following behavior. The usage to `Refresh` reads > represents an object whose value in a Dynamic should be refreshed at times > specified by the options opts. Although the word _times_ was mentioned explicitly the examples suggest, that `Refresh` can also be used to restrict the `TrackedSymbols` in an expression inside `Dynamic`. Here is a basic example from the help, which works like a charm               Manipulate[      {x, Refresh[y, TrackedSymbols :> {x}]},      {x, 0, 1},      {y, 0, 1}     ]      ![Mathematica graphics](http://i.stack.imgur.com/kgYGd.png) When you move the `y`-slider, nothing happens because the second expression containing `y` is restricted to keep only track of `x`. When you then move `x`, the `y` values jumps to it's current value. Now, let's extend this example a bit               Manipulate[      {Refresh[{x, y}, TrackedSymbols :> {y}],        Refresh[{x, y}, TrackedSymbols :> {x}]},      {x, 0, 1},      {y, 0, 1}     ]      What I had hoped for was, that when I move the `x`-slider, only the `x`-value in the second `{x,y}` is updated because the first `{x,y}` tracks only `y`. Equivalent for the `y`-slider. Unfortunately, all values are always updated. Solutions to this is can be found at the end of the post, but first my question: **Can someone explain what I have missed in the documentation of`Refresh` and how this is supposed to be used?** Several solutions to the toy-example can be found. The most prominent one is to wrap each `Refresh` in `Dynamic`               Manipulate[{       Dynamic@Refresh[{x, y}, TrackedSymbols :> {y}],        Dynamic@Refresh[{x, y}, TrackedSymbols :> {x}]},        {x, 0, 1},        {y, 0, 1}     ]      This goes along with the suggestion of andre's answer, when I understood him right. Further solutions are               Manipulate[      {Dynamic[{x, y}, TrackedSymbols :> {y}],        Dynamic[{x, y}, TrackedSymbols :> {x}]},      {x, 0, 1},      {y, 0, 1}     ]          DynamicModule[{},      Column@{Dynamic[{x, y}, TrackedSymbols :> {y}],         Dynamic[{x, y}, TrackedSymbols :> {x}],        Slider[Dynamic[x]],        Slider[Dynamic[y]]     }]               DynamicModule[{},      Column@{Dynamic@Refresh[{x, y}, TrackedSymbols :> {y}],         Dynamic@Refresh[{x, y}, TrackedSymbols :> {x}],        Slider[Dynamic[x]],        Slider[Dynamic[y]]     }]      This leaves the question, when I have to use `Dynamic` anyway, why does the documentation suggest `Refresh` can do this alone. I still think I'm missing something.