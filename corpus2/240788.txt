I have recently joined a startup as CTO/co-founder. The startup and I have been thinking about moving the existing codebase (which is in PHP5.5, laravel framework) to node.js . Main reason for this being that at the stage we are in right now, I'll need to hire talented, but inexperienced developers and train them to work on different parts of the project. JS is already being used in a very big angular app, and will also be used in the mobile app (we are planning to go the phone gap route). The api only exists in PHP. I personally can re-implement the existing api in node.js in 3-6 weeks optimistically (I am confident of that time because I myself built the laravel api backend) and have a pretty good idea of the feature set required. Also, that's a time that the startup can afford at this stage. I think that having one language across our tech stack can increase our ability to get the maximum out of new developers who join the company as we can train them only in JS and in use their skills across the tech stack, by giving them proper training before exposing them to a new area of the stack. My question is, what are the benefits of training inexperienced devs in a single technology stack? Are my assumptions correct based on this list of benefits? Does an affordable 3-6 week turnaround become more realistic if inexperienced devs can focus on a single technology stack?