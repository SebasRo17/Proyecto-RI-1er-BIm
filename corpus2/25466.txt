I have an `Install`able MathLink program written in C. I would like to use a custom message handler. At which point in the C source code should I call `MLSetMessageHandler()`? The standard structure for such an installable MathLink program is this:               int main(int argc, char* argv[]) {         return MLMain(argc, argv);     }      First I tried something like this:               /* does this look OK? */     void msghandler(MLINK link, int msg, int arg) {         switch (msg) {         case MLInterruptMessage:         case MLAbortMessage:             myabort();             break;         default:             stdhandler(link, msg, arg);         }     }          int main(int argc, char* argv[]) {         MLSetMessageHandler(stdlink, (MLMessageHandlerObject) msghandler); /* <- wrong place to set it */         return MLMain(argc, argv);     }      (I'm showing this code in full to also get some feedback on the structure of the message handler function.) This doesn't work for two reasons:   1. `MLSetMessageHandler()` fails and returns the code `MLEDEAD`, which I assume means that the link is not yet initialized. I suppose that's done in `MLMain()`.   2. `MLMain()` itself will call `MLSetMessageHandler()` and overwrite any previous one. **Question:** Is there a simpler way to fix this than writing my own `MLMain` replacement (`MLMain` is generated by `mprep`)?