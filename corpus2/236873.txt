Where I work we have a number of teams that are converting over to having a team dev environment. Basically a couple members of the team are putting together an image that is then installed on everyones computer. It includes an OS, an IDE (with source control managed from it), a couple of server systems they need for testing and a test server image. Ostensibly the imagine is being compiled based on everyones input, so everyone is, again, ostensibly, happy with the environment in question. The team leaders claim that this will be more efficient because whenever anyone has a problem everyone else on the team can help fix it (as opposed to, say, the other 2 who are still using `vim`.) But, at the same time, it seems like this approach would have a negative effect on people who don't excel at working in the majorities paradigm. So my question is this: is the trade off worthwhile? Are the "team support" gains likely to overcome the "individual efficiency" loses? Tangentially, is there a halfway point? Perhaps if everyone had the same OS and the same server image but were allowed different IDEs, that might be better?