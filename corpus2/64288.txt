(hopefully I landed on the right stack exchange site) I was hoping to brainstorm a little bit on the subject of storing n-gram data. In my project, I am trying to solve linguistic problems where I know all ( _n_ -1) data items and want to statistically guess my _n_ using linear interpolation over all applicable n-grams. (Yes, there is a tagger that assigns tags to known words according to its lexicon and a suffix tree that tries to guess the word kind for unknown words; the n-gram component discussed here will be tasked with resolving ambuguity.) My initial approach would be to simply store all observed n-grams (for _n_ = 1..3, i.e. monogram, bigram, trigram) data in respective SQL databases and call it a day. But the requirements of my project may change to include other vector lengths ( _n_ ), and I would like my application to adapt to 4-gram without a lot of work (updating schema, updating application code, etc.); ideally, I would simply tell my application to work with 4-grams now without having to change code much (or at all) and train its data from a given data source. To sum up all requirements:   * Ability to store _n_ -gram data (initially for _n_ = {1, 2, 3}   * Ability to change what kinds of n-grams should be used (between application runs)   * Ability to (re-)train n-gram data (between application runs)   * Ability to query the data store (e.g. if I have observed A, B, C, I'd like to know the most frequently observed item for what might follow using my trained 4-, 3-, 2-, 1-gram data sets) The application will most likely be read-heavy, data sets most likely won't be retrained that often   * The solution employs the .NET Framework (up to 4.0) Now what design would be better fit for such a task?   * A fixed table managed by a SQL server (MSSQL, MySQL, ...) for each _n_ (eg. dedicated tables for bi-grams, tri-grams, etc.)   * Or a NoSQL document database solution that stores the first _n_ -1 as the key of the document, and the document itself contains the _n_ -th value and observed frequencies?   * Or something different?