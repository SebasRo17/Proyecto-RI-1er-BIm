I am teaching a course which involves introducing the students to the concept of threads and concurrent programming. I am in search of programming assignments that can gently get them to accept the technique as a part of a programmer's essential toolkit. A good assignment would be to implement a program that   * is impossible to implement sequentially, or shows great increase in efficiency when parallel processing is introduced.   * does not overly rely on the introduction of complicated unrelated concepts. This rules out most of the Wikipedia example list of Embarrassingly parallel problems \- even the Mandelbrot set requires the students to know about imaginary numbers, which I can not assume.   * does not seem contrived. Optimally, the assignment would not seem like a stretch useful only for the introduction of the concept. What would an example of such a program/algorithm be? In case it matters, the assignment will be in Java. The students are around the age of 18, with at least a year of solving simple programming assignments behind them (they are familiar with control flow, loops, most common datatypes, OOP, simple GUIs) but so far have little experience with large software projects or usual computer science subjects (such as recursion and algorithm analysis).