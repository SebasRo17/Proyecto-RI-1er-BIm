I'm currently doing a code review and one of the things I'm noticing are the number of exceptions where the exception message just seems to reiterate _where_ the exception occurred. e.g.               throw new Exception("BulletListControl: CreateChildControls failed.");      All three items in this message I can work out from the rest of the exception. I know the class and method from the stack trace and I know it failed (because I've got an exception). It got me thinking about what message I put in exception messages. First I create an exception class, if one does not already exist, for the general reason (e.g. `PropertyNotFoundException` \- the _why_ ), and then when I throw it the message indicates what went wrong (e.g. "Unable to find property 'IDontExist' on Node 1234" - the _what_ ). The where is in the `StackTrace`. The _when_ may end up in the log (if applicable). The _how_ is for the developer to work out (and fix) Do you have any other tips for throwing exceptions? Specifically with regard to the creating new types and the exception message.