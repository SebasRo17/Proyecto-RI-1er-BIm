I have a bit of a dilemma. We are choosing our DBContext using a dynamic builder. This is done because in the current database structure we have a separate server for every "Customer". All of these Customer Databases use the same model so they are all exactly the same structure. Enter picking the context to use with each call. We are using WebApi 2 and angular. What we do is on the first "page" you pick your customer and we pass the customerId down and I need to store this value until the user decides to swap. That being said Session and WebApi2 are not friends. I have a base repository that needs the customerId every time a call is made to one of the repositories. We have to verify that we are using the right context for that customer. So.... That's where I am. Should I break the rules and use Session to store the customerId? I could use my DI container to inject an instance of HttpContext.Current into every call so that I would ignore the fact that session is null on a WebApiController. Is there another way to handle this?