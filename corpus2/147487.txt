Is it logical to estimate cost of project depends on source lines of code? Like those calculated reports from tools such as   * sloccount   * ohloh estimating   * * How to convince [somebody|employer|client] to pay depends on those reports ? The weird things come to scene when I see something like $83,862 based on my project. Sometimes the developer [him|her]self would write more lines of code because of this estimating. So if the count of the source lines isn't worthy, Why should be [sometimes|somehow] interesting part of development, Specially for employer, It does amaze them but why doesn't have any effect on pricing ? Hey _Employer_ I've developed this project that worth $1 million dollars, This source code counter program will prove it. Maybe I don't know the real worth of my work, Should I public it for people and collect some comments about it or show it to some [experts|consultants] to find-out or just estimate myself upon my knowledge, And all of these solutions aren't right or at least logical. And what happens to those codes I didn't wrote by myself, I mean sometimes we just copy a piece of code and [pasted|modified] into project. And if estimating in this way is wrong, What is the purpose of these tools to generate such a report about source lines of code, Average hourly work and other facts. Ohloh : > **Estimated Cost** > > We calculate the estimated cost of the project using the Basic COCOMO model. > For those familiar with the details, we are using coeffcients a=2.4 and > b=105. > > Estimate still seems way off? > > Software cost estimation is tricky business even when all the variables are > known (which we certainly don't have). One thing to remember is that COCOMO > was created to model large institutional projects, which often don't compare > well with distributed open-source projects. Beyond just development time, > COCOMO is meant to include the design, specification drafting, reviewing and > management overhead that goes along with producing quality software. > > This model seems to be most accurate with mature, large projects. Young > projects with little activity are typically overvalued. _I know quote from ohloh isn't just about SLOC_