**Background:**   I am familiar with xUnit family frameworks and have had experience with (shunit2, PhpUnit and simpletest). I am currently trying to find a testing framework for C++. I did a quick search for frameworks using Wikipedia's list of documented frameworks; however, the framework I would like to use is very difficult to setup and is poorly documented. There is another framework that I have tried that was (IMHO) extremely easy to setup and integrate into my production workflow. The difference between my framework of choice (the one that is difficult to setup) and the one that I'm currently using (the one that was easy to setup) is compliance with xUnit methodology. **Questions:**   1\. I have read quite a few articles about xUnit testing frameworks. I believe that they use similar naming conventions and testing methods for their test. Is this true and what are the naming methods utilized?   2\. Does staying with xUnit testing frameworks make it easier to run integration tests when using multiple languages?   3\. From a training perspective is it more cost effective to teach new programmers a set of tools based on the same concept or different individual tools that do the same thing? _I kept the frameworks that I am looking at anonymous because I am more interested in industry best practices than a comparison of the two said frameworks_