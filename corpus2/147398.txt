I am contemplating a direction to take an application. The application is written in PHP which implements a MVC framework. Some of my clients will require web services. I was thinking even building the basic PHP web interface on top of these web services (SOAP) and stopping the PHP application from accessing the database. I want to do this so that I will only have to maintain one set of code for the main PHP apllication to access data and also any other applications developed on top of this web service. Is this a common setup? Will it slow the application a lot? I looked at using Django framework to setup the SOAP web service but then realized it will have trouble dealing with multiple identical databases based on which client is using it. I looked at Symfony, but worry that PHP as a backend might be seen as insecure or unprofessional by some larger future clients and not enterprise usable. I am thinking Axis2 right now. Java might be faster as the backend and it will be marketable to potential clients. What other Web Service framework should I consider? Is this Web Services Backend / PHP/HTML front end a usable solution?