I am developing a web application. The frontend is a mix between JavaScript and server-side generated html. The backend is written in Golang. Might not be very important, but if somebody made a similar experience with that language, it could be of help. As of now, everything was written in vim, and "debugged" in the browser (mostly Chrome). As the project gets larger I run into difficulties using my vim-chrome development stack. The backend development is not so hard, because Golang has a nice testing suite, which doesn't need much boilerplate to run. However, the mix between data-driven structs in the Golang templates, the Html and the JavaScript logic are getting somewhat complex:   * I find myself recompiling templates almost all the time when doing frontend development.   * I switch all the time between browser, vim (cygwin), web developer tools of the browser, and reloading pages, making sure caches are cleaned. So, my question is, how could I make myself more efficient? How should I change my development-testing cycle to make the work more pleasant, especially the switching between server (development) and client (debugging). (I am not looking for ONE SPECIFIC TOOL. I know this results in stupid answers. I am looking for development approaches, which happen to be accompanied by tools. So, offtopic, but might be interesting: Which tool combination has worked for you, if you ever encountered such a problem, and how did you use those tools?)