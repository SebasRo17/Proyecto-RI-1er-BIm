I'm a software engineer in a small company and we are currently recruiting our first QA engineer. The guy will have to write as many as possible automated tests on our web-based tools suite. As I've participated in the recruitment of almost all the developers of our engineering team, the QA manager has asked me to interview the candidates. Most of them sound really smart. When they explain their past experiences, they give the feeling that they know what they were talking about, even when they give a lot of details on the framework or tools they are familiar with (like selenium or ohter stuff). However at the end of the interview I like to challenge them with a small coding test. I know we aren't recruiting a developer but as he'll have to _code_ tests, I believe that he has to be a bit skilled in that domain. I systematically ask the same question: "In the language of your choice, could you write a the body of the function that takes in input a integer and return its string representation.   For instance in C#, the prototype of the method could be something like `public string itoa(int n)`" And unfortunately, until now, 100% of the candidates have failed... So, is it because the question is somehow out of scope for a QA engineer? and in this case could you propose a better exercise?   Or is it just unacceptable and we still have to look for someone that would be at least able to pass the test? Thank you for you answers.