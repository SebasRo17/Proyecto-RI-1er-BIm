I would like to build up a 2D-Table using `ParallelTable` as follows               tab = Flatten[ParallelTable[{i,j,f[i,j]},{i,1,ni},{j,1,nj}],1];      This instruction works perfectly. However, I would like to speed it up. Indeed, the function `f[i,j]` is defined as `f[i_,j_] := f1[i] f2[i,j]` The particularity here is that `f1[i]` is expensive to compute, so that I would like to compute it only one time for each `i`. How would it be possible to tune the `ParallelTable` so that `f1[i]` is only evaluated when it has never been done before ? A kind of _nested_ `ParallelTable` ? Using _memoization_ ? (As the construction of the table remains long, it is key for me to necessarily use parallelized evaluations on multiples cores)