I'm not sure how I should have worded the question. If I have a Student and Classes database, and I have queries that involve both. Where do I put my queries? In one case, someone wants student information, and I query Students and Classes in my Student class, if I put it in Classes, I cross over to the Students, [edit] violating single responsibility. I thought I should only have queries for Students and queries for Classes in each class of this part of the Model layer, each utilized by services. Also, What do I do when I need new queries? I have this set of queries, then someone comes along and wants some special query. I then copy and paste and change one thing or add an if then or a switch, this gets multiplied across the class in my model _layer_ in multiple objects, giant switch statements, etc. That does not seem to be what Model layers should be composed of, giant Models with code everywhere, violating DRY. I have a service in one object in Students, `findAllClassesByStudent($student_id)` I call in my View perhaps, and another in Classes, `findAllStudentsInAParticularClass($class_id)`. Those are pretty close. I realize I can abstract yet more layers and isolate logic in some other layer, but I can't abstract forever, sooner or later I have what appears as some violation of OOP's encapsulation. ViewModel View, Abstracted Data Access Layer, the services, etc. and so on. If I do too little, then my objects are anemic. I've been reading a lot and while there is a lot of interpretations, I'm assuming I'm leaving all the business logic in the Model layer, not on the controller or the View. * * * Pseudo examples:               class Student extends Model {          private $student          public function __construct() {          }          public function getStudentByID($student_id){     ...SQL     }          public function getStudentClasses($student_id){  //first time          }                    }          class Classes extends Model {          public function __construct(){          }          public function findAllStudentsInAParticularClass($class_id){  //feels like bloat     ...SQL     }          }      This seems like duplication to me. Perhaps I haven't thought it through enough. I just know from experience there's always someone that wants slightly different queries, and I end up copying and pasting.