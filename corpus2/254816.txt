Here is my code:               std::ifstream file2(imageToAdd.c_str(), std::ios::in | std::ios::binary);     if(file2){         file2.seekg(0,std::ios::end);         length = file2.tellg();         file2.seekg(0,std::ios::beg);         vector<char> tempImageVec(length);         file2.read(&tempImageVec[0],length);         int totalFileUpload=0;         std::ofstream f("test.data");         f << (char)1;         totalFileUpload+=1;         vector<char> AddImagesize=print4Bytes(length);         for(int i=0; i<AddImagesize.size(); i+=1){             f << (char)AddImagesize[i];         }         totalFileUpload+=AddImagesize.size();         for(int i=0; i<tempImageVec.size(); i++)             f << tempImageVec[i];         totalFileUpload+=tempImageVec.size();         cout << totalFileUpload << endl;     }      As you can see, totalFileUpload should be count the amount of data that gets put into the file, however in this case, i add a file (Around 1.33mb), the cout statement outputs: 1,405,202 bytes However opening the fine in a program such as notepad++, or just viewing the properties of the file, shows that the file is now 1,409,439 So where did this extra 4,237 bytes come from? The only obvious thing i could spot was the possibility of the length of the file being read being incorrect, however it is correct, as it was the same as when i viewed the properties.