The way I usually do it is I make some namespace Platform in Platform.h and every OS call is encapsulated by a static function in this namespace. So the only place in the entire code base that knows what OS is being used is Platform.cpp. Is this a good way of making things easier? For instance when I call Platform::MessageBox(...), what actually happens is:               void Platform::MessageBox(...)     {     #ifdef(_WINDOWS)     ....     #elif(_LINUX)     ....     #elif(_MAC)     ....     #endif     }