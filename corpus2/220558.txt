By loop constructs I mean for… and while… constructs with nested statements. Currently I am coding a tool in Python and decided out of curiosity not to use the regular loops - and rely on filter/map/reduce instead. E.g. now I have code like:               fields = filter(None, map(parse_field, struct_decl.get_children()))      So far it works out fairly well and I like the way I am now designing the code - I have a clean-cut functions (though sometimes I need to use a lambda) and I do think that the resulting code might be more efficient (e.g. the iterations are more naturally independent making them more parallelizable). And I only have to increase indentation for conditionals (though I am thinking about avoiding them as well) These new functions are not unique to Python - e.g. C++ had std::foreach for ages. I wonder if traditional loops will eventually be frown upon in mainstream languages, similar to `goto`?