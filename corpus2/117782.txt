I'll be completely honest, one reason I love C# and .NET is that it has for ALL of my development career abstracted me from the well crafted under the hood stuff, I believe as a .NET developer I shouldn't need to know much about. This might seem like blasphemy for me to say I really do not care much about CLR, CIL, JIT, or MSIL and all the other internal technologies which up until now to be completely honest are more or less acronyms that mean very little to every day problems I find myself facing as a .NET developer, and solving with the bread and butter of .NET. My experience is varied like most of you guys with 2 years + experience. I've been using .NET since it was launched, and even back in the days when ASP.NET was called ASP+. I have yet to come across a situation where knowing how .NET does what it does provides me any practical value. I also fully believe that the authors of .NET very carefully planned .NET to provide this fantastic level of abstraction from specific hardware and OS version for this reason - simply put write your code and get on with your job! Long story short: Going for an interview next week, and I'm sure these theoretical questions will come up, and so I would like to put in about 4-5 hours to study the internals so I can (with confidence) satisfy an interview test. Is there a good book or site which details all the .NET internals in a way that is easy to understand? EDIT: To clear things up a bit, when I refer to .net internals - what I mean is not reflecting and inspecting framework code, mainly knowing how .net code from writing it ends up as executable byte code.