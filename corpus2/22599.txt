First, a bit of a long introduction to my problem: I only have a few weeks of Mathematica experience. I am creating a mathematica application that calculates some material properties of steel based on metallurgical functions that include multiple chemical elements. I currently have the chemistry stored in a vector, and the list of elements stored in a second vector of the same length. Here's an example:               elements={"C","Mn","S","P","Si","Cu","Ni","Cr","V","Cb","Mo","Sn","Al","Ca","B","Ti","N","O","Ce","Pb","Bi","W","As","Zn","Sb"};     chemistry={0.032`,1.2`,0.0259`,0.006`,0.04`,0.15`,0.06`,0.04`,0.001`,0.051`,0.167`,0.007`,0.035`,0.0001`,0.`,0.001`,0.0087`,0.0176`,0.0002`,0.0001`,0.`,0.`,0.004`,0.036`,0.`};      I created a function called _elem_ to look up the element name in _elements_ , and find the corresponding entry in _chemistry_ (or any other chemistry list of proper format):               elem[chem_,element_] := chem[[Flatten[Position[elements,element]]]][[1]];      For example, if I want to look up Nickel ("Ni") from the _chemistry_ list, I use the following to get 0.06:               elem[chemistry, "Ni"]      The neat thing about this is when you write a formula using the elem function, the list _elements_ can be used to print the formula in a more user-friendly way for verification. For example, the Titanium to Nitrogen ratio is one of the simpler formulas of interest:               TiByN[chem_] := elem[chem, "Ti"]/elem[chem,"N"]      When called with _chemistry_ , it returns a number (0.114943), but when you call _TiByN_ with _elements_ , it returns the formula **Ti/N**. This way, I can print a list of formulas in a format that the metallurgists can read when they audit my application. **My question is one of performance.** I need to do an optimization involving these formulas, and I think this method of indexing the chemistry is one of my big bottlenecks. Is there any way to precompile a function like _elem_ for the list _elements_ so that the position doesn't have to be looked up for every element in every formula on every iteration of the optimization? Thanks