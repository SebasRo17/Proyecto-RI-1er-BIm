Sometimes we have code like this:               private static final List<Goat> INEDIBLE_GOATS = [GOAT_A, GOAT_B, GOAT_C]           void eatGoat(Goat goat) {        if(INEDIBLE_GOATS.contains(goat)) {            throw new CantEatGoatException();        }        ...     }      Should it best tested (along with whatever tests for the actual eating) as:               for(Goat goat: INEDIBLE_GOATS) {        // forgive abuse of syntax        assertThrows(CantEatGoatException, eatGoat(goat));     }      Or more like?               assertThrows(CantEatGoatException, eatGoat(GOAT_A));      Should tests verify each and every sort of inedible goat? Or should they test a representative goat from the list and trust that it works for the other goats?