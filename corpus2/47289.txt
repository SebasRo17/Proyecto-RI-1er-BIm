I write a function to simulate a trajectory,code as below:               PlaneSimulation[px_, py_] := Manipulate[     Module[     {L1, L2, θ1, θ2, c2, s2, c1, s1, RobotInverse,      RobotAera, RobotTrajectory},     L1 = 35; L2 = 16;     c2 = (-L1^2 - L2^2 + px^2 + py^2)/(2 L1 L2);           s2 = -Sqrt[1 - (c2^2) ];     c1 = -((-L1 px - c2 L2 px - s2 L2 py)/(px^2 + py^2));      s1 = -((s2 L2 px - L1 py - c2 L2 py)/(px^2 + py^2));     θ2 = ArcTan[c2, s2] // Simplify;     θ1 = ArcTan[c1, s1] // Simplify;     RobotInverse = Graphics[      {Line[{{0, 0}, {L1 Cos[θ1],           L1 Sin[θ1]}, {L1 Cos[θ1] +            L2 Cos[θ1 + θ2],           L1 Sin[θ1] + L2 Sin[θ1 + θ2]}}],       Blue, PointSize[Medium],       Point[{L1 Cos[θ1], L1 Sin[θ1]}],       Green, PointSize[Medium],        Point[{L1 Cos[θ1] + L2 Cos[θ1 + θ2],          L1 Sin[θ1] + L2 Sin[θ1 + θ2]}]},       Axes -> True, PlotRange -> {{-60, 60}, {-60, 60}},       AspectRatio -> Automatic];     RobotAera =      ParametricPlot[{L1 Cos[θ1] + L2 Cos[θ1 + θ2],        L1 Sin[θ1] +         L2 Sin[θ1 + θ2]}, {θ1, -(5/9) \[Pi],        5/9 \[Pi]}, {θ2, -(5/6) \[Pi], 5/6 \[Pi]},       AspectRatio -> Automatic, ImageSize -> 450];     RobotTrajectory =      ParametricPlot[{px /. t -> u, py /. t -> u}, {u, 0.01, t}];     Show[{RobotInverse, RobotAera, RobotTrajectory}]],     {t, 0, 18}]      **_Call the function:_** Circle:               PlaneSimulation[30 + 10 Cos[20 \[Degree] t],      25 + 10 Sin[20 \[Degree] t]]      Sine:               PlaneSimulation[30 + 10 Sin[20 \[Degree] t], t + 10]      **_However,the graphic of`RobotTrajectory` cannot show correctly?_**