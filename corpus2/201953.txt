I'm reading through a programming book and am having trouble understanding a few parts of this code. The program draws a checkerboard, and colors the odd squares black.               import acm.graphics.*;     import acm.program.*;          public class CheckerBoard extends GraphicsProgram   {          public void run()   {         double squareSize = (double) getHeight() / numRows;         for(int i = 0; i <= numRows; i++){             for(int j = 0; j <= numColumns; j++)    {                 double x = j * squareSize;                 double y = i * squareSize;                 GRect square = new GRect(x,y,squareSize,squareSize);                 square.setFilled((i + j) % 2 != 0);                 add(square);             }         }     }          private static final int numRows = 8;     private static final int numColumns = 8;      I understand most of the code, but I am still a little confused. My first question is: How exactly does the program go through the for loops? They are nested, so would it create all of the columns (the j for loop) first? Or does it increment both i and j after the block of code finishes? Secondly, why do I set x = j, and y = i? x is horizontal and j is vertical, shouldn't I set x = i and y = j? Both seem to yield the same results. Mostly, I would just like to know how the for loop runs each time around. a basic run or two through the program. Any help would be appreciated, thanks!