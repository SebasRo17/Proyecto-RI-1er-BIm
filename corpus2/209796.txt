[Context - I'm a Java developer, having a discussion with a designer who works in the html/css space] I was having a discussion with a co-worker today about the merits of 'semantic css'. His response was, "Oh we're not interested in semantic css, we use object oriented css" I understand what he means, ie that they're using the 'inheritance' properties of css and SASS mixins to describe styles. But I feel like he has not tried to understand 'semantic css'. I'm trying to construct a cogent argument about why 'object oriented css over semantic css' is flawed. This is my reasoning so far:   * “css isn’t object oriented” http://stackoverflow.com/a/7431746/15441   * Write html code with semantic components http://css.dzone.com/articles/object-oriented-css-crap-long   * Examples of layout out your page with semantic components http://woork.blogspot.com.au/2008/11/css-coding-semantic-approach-in-naming.html   * Examples of non-semantic naming http://css-tricks.com/semantic-class-names/ My question is "what are some cogent arguments explain semantic css to someone who thinks that 'inheritance', 'classes' and 'mixins' make something object oriented and that he doesn't need to worry about good naming?"