Among the reasons for a developer to publish a self-written library as open source library, there is definitely fame. Now when it comes to Boost Libraries, they are available and promoted in a very anonymous and impersonalized form. The name of the author will be readable in the documentation and source files, but be honest: How many of you could tell me the names of the authors of `boost::shared_ptr`, ... without looking? And its not just about the names. Even if you do not know the name of the author of something your using, you still somehow identify it with "the author" and other stuff he did or maybe his website, where you found it. All these authors' identities are eradicated by the acceptance to Boost. (At this point I really want to thank all boost authors for their selfless and extremely professional efforts.) I know, they had there reasons, but what about the following case: Suppose, I had a marvelous and elegant solution to a C++ problem, that had bugged whole generations of programers. The implementation: \- standard compliant   * No use of Macros   * type-safe   * requires the user to write the minimum possible boilerplate code with no - I repeat: NO - code repetion   * zero memory footprint    * NO runtime overhead   * fits in a header file of about 100 lines of code. What should I do with it? Should I bother going the burdensome path of the Boost acceptance process? If yes, what's in there for me? While this sounds selfish, in the end everything you do should have some positive cost/benefit ratio.