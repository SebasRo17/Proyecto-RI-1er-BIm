There isn't any cool LINQ sugar for creating unions. The `Enumerable.Union()` method is usually called like this:               var bigList = list1.Union(list2);      The alternative is to call `Enumerable.Union()` which can be more readable:               var bigList = Enumerable.Union(list1, list2);      However neither of these methods are very stylish (more importantly, readable) when scaling out The following is probably the best method:               var reallyBigList = list1.Union(list2).Union(list3);      Which can result in some messy method chaining. Alternatives need incidental variables:               var list1and2 = list1.Union(list2);     var reallyBigList = list1and2.Union(list3);      or               var list1and2 = Enumerable.Union(list1, list2);     var reallyBigList = Enumerable.Union(list1and2, list2);      Is there a clean way of setting up these more complex unions? Would an extension like `Enumerable.Union(params IEnumerable<T> collections)` (used like `var reallyBigList = Enumerable.Union(list1, list2, list3)`) be better?