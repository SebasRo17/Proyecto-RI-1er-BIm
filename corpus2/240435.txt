I have written code using C++ (OpenMP for parallelizing loops) which does lots of matrix operations. A single instance of the code runs very fast and completes in 0.2 seconds. For the same processing, code written in Scala (using Actors) takes around 3 seconds. The problem that I am facing is that when I run multiple instances of the C++ code in parallel, the running time increases very rapidly. The Scala code does not exhibit such behavior. Running parallel instances of the Scala code increases the time linearly. Using the Zoom profiler, I found that my C++ code starts incurring cache misses. A single instance of the code uses around 2 MB of memory. And the L3 cache in my machine is 3 MB. So it makes sense that multiple instances running in parallel will lead to cache misses. I don't understand why the running time of the Scala code does not get affected when multiple instances are running in parallel. All the matrices are dense matrices in both the C++ and Scala code.