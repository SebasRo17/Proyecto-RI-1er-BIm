How can I select items from a list where the selection criterion depends on the neighbouring items? For example select all indices where a change has occurred with respect to the previous element in the list:               u = {0,0,1,1,1,1,0,0,0,1,1,0,0,0,1};      Desired output:               r = {{3,+1},{7,-1},{10,+1},{12,-1},{15,+1}}      My current implementation looks like that:               process[u_] := Select[Table[If[u[[i]] != u[[i - 1]], {i, u[[i]] - u[[i - 1]]}, {}], {i, 2, Length@u}], Length@# != 0 &]      which is probably neither fast nor elegant and scales poorly when using multiple neighbours... In this example I only need one neighbour (the previous item), but I would be interested in a solution where I can check a bigger neighbourhood too.