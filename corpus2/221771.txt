I intuitively think that an application should be exactly the same in DEV, QA, and PROD environments. However, I have been asked to add a feature to an application that will only be available in DEV environment. The tool modifies DEV database values and produces an output script that will be tested in QA and afterwards will be used to modify production data. The authentication that allows access to the feature will not be available in QA and PROD environments. I understand that this will work, but is this correct for Java EE standards? **Additional details:** -I removed "best practice" because of the comments below.  -I have a development server and development database, a testing server and testing database, and a production server and production database. I want to know if there would be any possible issues that could arise (and "best practice" for avoiding them) from having a feature of a large application only available on development server. The feature would modify values in the development database then export a SQL script that has the current state of the development database. The SQL script would then be run on testing database and if every function worked properly afterwards it would also be run on production database. The code that would modify the testing and production databases is not available in either of those environments. I apologize, I know that says basically the same thing as above. If it is still unclear, I will remove the question. Thanks.