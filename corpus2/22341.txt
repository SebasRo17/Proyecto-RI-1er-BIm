I discovered some strange behaviour of the `PolyLog[]` Function in _Mathematica_ which seems to me like a bug in the function implementation. It looks like `PolyLog` is breaking down for big arguments and non-integer orders               In[1]:=  -PolyLog[5/2, -E^500] // N     Out[1]:= 2.691151407447062*10^8626 + 9.87331945684138*10^8623 I      which is for sure incorrect. For such big arguments the `PolyLog` function has nice asymptotic approximations (which are e.g. used for complete Fermi-Dirac Integrals which are related to `PolyLog`'s) through $F_n(x)=-\mathrm{Li}_{n+1}(-e^x)$. This can be demonstrated by using even orders for the `PolyLog[]` with similar big arguments               In[2]:=  -PolyLog[4, -E^500] // N     Out[2]:= 2.60437*10^9      if compared to the asymptotic approximation $\frac{u^n}{\Gamma(n+1)}$ of $-\mathrm{Li}_n(-e^u)$               In[3]:=  u^4/Gamma[5] /. u->500 //N     Out[3]:= 2.60417*10^9      the results look o.k. The expected result of above given argument `E^500` and order `5/2` should be               In[4]:=  u^(5/2)/Gamma[5/2 + 1] /. u -> 500 // N     Out[4]:= 1.68209*10^6      I assume that the function algorithm somehow gets troubles with internal accuracy. Any ideas to "tell" _Mathematica_ to increase the accuracy for the numerical calculation?