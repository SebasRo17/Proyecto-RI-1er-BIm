I am writing a Finite Element Analysis program in Mathematica. The code involves handling a large matrix with large entries. I get an error when I try to use Mathematica's "LinearSolve" to solve a problem that requires numbers larger than approximately 1e7 in the matrix; the error states that I have a "badly conditioned matrix". As a test, I generated an arbitrarily sized lower triangular matrix with random entries between a prescribed min and max value. Then I form an invertible matrix by multiplying the lower triangular matrix by its transpose (it can be shown that a lower triangular matrix multiplied by its transpose is invertible). Then, I multiply the newly formed matrix by its inverse. The result should be the identity matrix. Just as I suspected, when the matrix is either large or contains large entries (i.e. 50x50 with numbers between 1e7 and 1e8), I get the "badly conditioned matrix", and "may contain numerical errors" warnings. Here is the code:               ClearAll["Global`*"];     size = 50;     min = 10*^7;     max = 10*^8;     ltm = Array[0 &, {size, size}];     matrix = Array[0 &, {size, size}];     For[i = 1, i <= size, i++,         For[j = 1, j <= i, j++,             ltm[[i, j]] = RandomReal[{min, max}];         ]     ]     matrix = ltm.Transpose[ltm];     inv = Inverse[matrix];     Print[matrix.inv // MatrixForm];      I can fix the error by forcing the random entries to have a set precision of 30:               ClearAll["Global`*"];     size = 50;     min = 10*^7;     max = 10*^8;     ltm = Array[0 &, {size, size}];     matrix = Array[0 &, {size, size}];     For[i = 1, i <= size, i++,         For[j = 1, j <= i, j++,             ltm[[i, j]] = SetPrecision[RandomReal[{min, max}],30];         ]     ]     matrix = ltm.Transpose[ltm];     inv = Inverse[matrix];     Print[matrix.inv // MatrixForm];      The problem is that there is no easy place in my actual program to use the SetPrecision[] command. I tried to use               $MinPrecision=30;      at the top of the sample code, but it does not work. Any thoughts?