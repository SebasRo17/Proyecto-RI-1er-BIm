I'm trying to find the 2 parameters of a truncated Weibull distribution using version 10 and FindRoot. I would like to truncate the distribution between t =0 and t = 3600 with the probability of survival,POS(360)=0.7 and POS(1080)=0.6 If this is not possible using WeibullDistribution, any other smooth distribution will work. My code is below for the non-truncated, tmax = Infinity case which is easier to solve.               Remove["Global`*"]     {ta = 360., ra = 0.70};     {tb = 1080., rb = 0.60};     tmin = 0;     tmax = \[Infinity];     plotmax = 4320;     dist = TruncatedDistribution[{tmin, tmax},      WeibullDistribution[\[Beta], \[Eta]]];     soln = FindRoot[{SurvivalFunction[dist, ta] == ra,      SurvivalFunction[dist, tb] == rb}, {{\[Beta], .32}, {\[Eta],       8427.}}, Method -> "Newton"];     {\[Beta] = soln[[1, 2]], \[Eta] = soln[[2, 2]]}     dist = TruncatedDistribution[{tmin, tmax},      WeibullDistribution[\[Beta], \[Eta]]];     pdf[t_] := PDF[dist, t]     cdf[t_] := CDF[dist, t]     ps[t_] := SurvivalFunction[dist, t]     plot1 = Plot[pdf[t], {t, 0, plotmax}, Frame -> True,      FrameLabel -> {"Time", "PDF"},      FrameTicks -> {Range[0, plotmax, 720], Automatic, None, None},      PlotRange -> All, PlotLabel -> "PDF"];     plot2 = Plot[cdf[t], {t, 0, plotmax}, Frame -> True,      FrameLabel -> {"Time", "CDF"},      FrameTicks -> {Range[0, plotmax, 720], Automatic, None, None},      PlotRange -> {All, {0, 1.05}}, PlotLabel -> "CDF"];     plot3 = Plot[ps[t], {t, 0, plotmax}, Frame -> True,      FrameLabel -> {"Time", "Probability  of Survival"},      FrameTicks -> {Range[0, plotmax, 720], Automatic, None, None},      PlotRange -> All, PlotLabel -> "Probability of Survival"];     GraphicsRow[{plot1, plot2, plot3}, ImageSize -> 800]     check1 = {ta, ps[ta]}     check2 = {tb, ps[tb]}     sse = (ra - ps[ta])^2 + (rb - ps[tb])^2      The solution to this non-truncated case is Beta = 0.326961 Eta = 8426.8 and these are the plots, so far so good. ![enter image description here](http://i.stack.imgur.com/ectFp.jpg) Next I truncate to a tmax = 50000 and it found a solution, Beta = 0.284 Eta = 394334 Next I truncate to tmax = 37500 (note I really need 3600) and I get a this error: FindRoot::jsing: "Encountered a singular Jacobian at the point {[Beta],[Eta]} = {0.2,1.4*10^13}. Try perturbing the initial point(s)" I've tried different initial points to no avail. Does anyone have a suggestion ? If this can be made to work using another smooth distribution that would be fine. I chose the Weibull for its flexibility. Thanks for any suggestions.