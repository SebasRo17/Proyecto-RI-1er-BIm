I have a list of strings that I am sorting. There are 12 different key strings within the list that I am using to sort by. So instead of writing 12 separate list comprehensions I would like to use a list of empty lists and a list of key strings to sort, then use izip to perform list comprehensions. Here is what I am doing:               >>> from itertools import izip     >>> tran_types = ['DDA Debit', 'DDA Credit']     >>> tran_list = [[] for item in tran_types]     >>> trans = get_info_for_branch('sco_monday.txt',RT_NUMBER)     >>> for x,y in izip(tran_list, TRANSACTION_TYPES):         x = [[item.strip() for item in line.split('    ') if not item == ''] for line in trans if y in line]     >>> tran_list[0]     []      I would like to see an output more like the following:               >>> tran_list[0]     [['DDA Debit','0120','18','3','83.33'],['DDA Debit','0120','9','1','88.88']]      The output doesn't make sense to me; the objects that izip returns are lists and strings               >>> for x,y in itertools.izip(tran_list, TRANSACTION_TYPES):     type(x), type(y)     (<type 'list'>, <type 'str'>)     (<type 'list'>, <type 'str'>)      Why is this process returning empty lists?