Inspired by the cool Tumblr Haiku Times that searches for accidental haiku in New York Times articles, I tried my hand at implementing such a search in Mathematica for my own text samples. I'm still not a one-liner writer, so I'd welcome any input on more efficient approaches than mine below (especially the Table in Step 4!), but to follow the rules my question is how to implement my Step 6 automatically as I'm doing it manually now: Step 1. Read in text               sampleText =  "Haikus are easy but sometimes they don't make sense refrigerator. Make a man a king today and tomorrow he will be a brigand. Dragonflies, by contrast, look dainty, glittery and fun, like a bubble bath or costume jewelry, and they're often grouped with butterflies and ladybugs on the very short list of Insects People Like.";      Step 2. Break up paragraphs into sentences at periods               sampleSentences = StringSplit[sampleText,"."]       Step 3. Break up sentences into words               sampleWords = StringSplit[sampleSentences]       Step 4. Count each sentence's syllables               syllableCount[x_] := Length[WordData[x, "Hyphenation"]]     sampleSyllables =       Table[Apply[Plus,         Map[syllableCount, ToLowerCase[sampleWords[[i]]]]], {i, 1,         Length[sampleWords]}]          {16, 17, 41}      Step 5. Select the sentences with 17 syllables               sampleHaiku =       sampleSentences[[Flatten[Position[sampleSyllables, 17]]]]          {" Make a man a king today and tomorrow he will be a brigand"}      Ironically:               syllableCount["haikus"]          1      Step 6. Break the 17-syllabic ones up at 5, 7, 5 and display the result   (I ran out of ideas here...) Thanks in advance and apologies for protocol/formatting gaffes on my first post!