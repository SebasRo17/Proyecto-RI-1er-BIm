We are developing an ERP web application using Vaadin framework where each of the potential client companies will have their own data and file storage. Current implementation only allows having one client company per application instance, what consequently requires separate database schema and file storage. Some of the clients may want specific customizations based on their needs. Having few clients doesn't cause much trouble, but if number of clients would grow, then maintaining dozens of application instances will be a real challenge. We are reaching that point where we have to choose one these options:   1. Improve our architecture to allow all client companies manage their data on a single application instance and restrict personal customizations to the application;   2. Stick with the current implementation and just keep increasing number of running application instances on the server. Which of these options is considered better practice and would make the system easier to maintain? Is there a different solution for this kind of situation? Edit: Application is currently in development stage. The server with all the potential application instances will be run by ourselves. Each instance will be deployed in a WAR package via Apache Tomcat server.