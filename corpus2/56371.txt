Given a non-periodic point set, one can easily tetrahedralize it using the new (in **V10** ) `DelaunayMesh` function. e.g.:               SeedRandom[0]     pts3d = RandomReal[4, {200, 3}];     del = DelaunayMesh[pts3d];     style = MapThread[Style[#1, Directive[#2]] &, {{1, 0, 2}, {{Thin, Purple},                              {PointSize[0.02], Red}, {Opacity[0.5], Green}}}];     HighlightMesh[del, style]      ![Mathematica graphics](http://i.stack.imgur.com/1Lgww.png) Now consider the following periodic point set in 3D:               cavs = {{0., 1.199, 2.53}, {0., 1.265, 2.53}, {0.067, 1.199, 2.53}, {3.263,            1.199, 2.53}, {0.067, 1.265, 2.53}, {3.263, 1.265, 2.53}, {0.133,            1.199, 2.53}, {3.196, 1.199, 2.53}, {0.133, 1.265, 2.53}, {3.196,            1.265, 2.53}, {0.2, 1.199, 2.53}, {3.13, 1.199, 2.53}, {3.196,            1.199, 2.464}, {0.133, 1.265, 2.597}, {0.133, 1.332, 2.53}, {0.2,            1.265, 2.53}, {3.13, 1.265, 2.53}, {0.2, 1.199, 2.597}, {0.266,            1.199, 2.53}, {3.13, 1.199, 2.464}, {0.2, 1.265, 2.597}, {0.2,            1.332, 2.53}, {0.266, 1.265, 2.53}, {3.063, 1.265, 2.53}, {3.13,            1.265, 2.464}, {0.266, 1.132, 2.53}, {3.063, 1.199, 2.464}, {0.2,            1.265, 2.664}, {0.2, 1.332, 2.597}, {0.2, 1.398, 2.53}, {0.266,            1.332, 2.53}, {0.333, 1.265, 2.53}, {3.063, 1.265, 2.464}, {3.063,            1.332, 2.53}, {3.063, 1.199, 2.397}, {0.2, 1.398, 2.597}, {0.266,            1.332, 2.597}, {0.266, 1.398, 2.53}, {0.266, 1.332, 2.464}, {0.333,            1.332, 2.53}, {0.333, 1.265, 2.464}, {0.4, 1.265, 2.53}, {2.997,            1.265, 2.464}, {3.063, 1.265, 2.397}, {3.063, 1.332, 2.464}, {2.997,            1.332, 2.53}, {2.997, 1.199, 2.397}, {3.063, 1.132, 2.397}, {3.063,            1.199, 2.331}, {0.2, 1.465, 2.597}, {0.266, 1.398, 2.597}, {0.266,            1.332, 2.664}, {0.333, 1.332, 2.597}, {0.266, 1.465, 2.53}, {0.333,            1.398, 2.53}, {0.333, 1.332, 2.464}, {0.4, 1.332, 2.53}, {0.333,            1.199, 2.464}, {0.4, 1.265, 2.464}, {0.466, 1.265, 2.53}, {2.997,            1.265, 2.397}, {2.997, 1.332, 2.464}, {3.063, 1.265, 2.331}, {2.997,            1.332, 2.597}, {2.997, 1.398, 2.53}, {2.997, 1.199, 2.331}, {0.266,            1.465, 2.597}, {0.266, 1.398, 2.664}, {0.333, 1.398, 2.597}, {0.4,            1.398, 2.53}, {0.4, 1.332, 2.464}, {0.466, 1.332, 2.53}, {0.333,            1.132, 2.464}, {0.4, 1.199, 2.464}, {0.466, 1.265, 2.464}, {2.93,            1.265, 2.397}, {2.997, 1.332, 2.397}, {2.93, 1.332, 2.464}, {2.997,            1.398, 2.464}, {2.997, 1.398, 2.597}, {2.997, 1.132, 2.331}, {0.266,            1.465, 2.664}, {0.333, 1.465, 2.597}, {0.333, 1.398,            2.664}, {0.466, 1.332, 2.464}, {0.533, 1.332, 2.53}, {0.333, 1.065,            2.464}, {0.466, 1.265, 2.397}, {2.93, 1.332, 2.397}, {2.997, 1.332,            2.331}, {2.863, 1.332, 2.464}, {2.93, 1.132, 2.331}, {0.266, 1.465,            2.73}, {0.533, 1.332, 2.464}, {2.863, 1.332, 2.397}, {2.997, 1.398,            2.331}, {2.863, 1.132, 2.331}, {0.266, 1.465, 2.797}, {0.333, 1.465,            2.73}, {0.533, 1.332, 2.397}, {0.599, 1.332, 2.464}, {2.93, 1.398,            2.331}, {2.863, 1.199, 2.331}, {0.266, 1.465, 2.863}, {0.266, 1.532,            2.797}, {0.599, 1.332, 2.397}, {0.666, 1.332, 2.464}, {2.797,            1.199, 2.331}, {0.266, 1.532, 2.863}, {0.333, 1.532, 2.797}, {0.666,            1.332, 2.397}, {0.666, 1.332, 2.53}, {0.732, 1.332, 2.464}, {2.73,            1.199, 2.331}, {2.797, 1.265, 2.331}, {0.266, 1.598, 2.863}, {0.333,            1.532, 2.863}, {0.666, 1.398, 2.397}, {0.732, 1.332,            2.397}, {0.732, 1.332, 2.53}, {0.732, 1.398, 2.464}, {0.799, 1.332,            2.464}, {2.664, 1.199, 2.331}, {2.73, 1.132, 2.331}, {2.73, 1.265,            2.331}, {0.333, 1.598, 2.863}, {0.732, 1.398, 2.397}, {0.799, 1.332,            2.397}, {0.732, 1.332, 2.597}, {0.799, 1.398, 2.464}, {2.597,            1.199, 2.331}, {2.664, 1.199, 2.264}, {2.664, 1.199, 2.397}, {2.664,            1.265, 2.331}, {2.73, 1.132, 2.264}, {2.73, 1.265, 2.397}, {0.799,            1.398, 2.397}, {0.799, 1.398, 2.53}, {0.799, 1.465, 2.464}, {0.866,            1.398, 2.464}, {2.597, 1.199, 2.397}, {2.664, 1.199, 2.197}, {2.664,            1.265, 2.264}, {2.664, 1.265, 2.397}, {0.799, 1.398,            2.331}, {0.799, 1.465, 2.397}, {0.866, 1.398, 2.397}, {2.597, 1.132,            2.397}, {2.597, 1.265, 2.397}, {2.664, 1.332, 2.264}, {0.799,            1.465, 2.331}, {0.866, 1.398, 2.331}}      Here's what it looks like:               Graphics3D[{Red, PointSize[0.02], Point[cavs]}, BoxRatios -> {1, 1, 1}]      ![Mathematica graphics](http://i.stack.imgur.com/qPNx4.png) We tetrahedralize it naively:               cavdel = DelaunayMesh[cavs];      Visualize using the same `style` from before:               Show[HighlightMesh[cavdel, style], BoxRatios -> {1, 1, 1}]      ![Mathematica graphics](http://i.stack.imgur.com/tzMP5.png) Obviously, this is wrong as it's assuming the end of the box to be the end region and will lead to a larger volume than the true volume. One can re-align the points in a box that gives them the minimum distance. When this is done the true arrangement of the points looks like this: ![Mathematica graphics](http://i.stack.imgur.com/Z0YnL.png) One can then easily use `DelaunayMesh` to tetrahedralize and obtain the following: ![Mathematica graphics](http://i.stack.imgur.com/ZzeH2.png) Which is the true Delaunay triangulation. The Delaunay tetrahedralization of the original periodic point set should look something like this: ![Mathematica graphics](http://i.stack.imgur.com/bvHf1.png) Clearly, this is not quite right, since there are regions below and above the points that should fill up to the box edges and continue on the other side (wrap-around effect). Since we can't give `DelaunayMesh` a `Distance` function AFAIK, my question is, given a set of periodic points in 3D how can one tetrahedralize it using `DelaunayMesh`? **Note** : The length of the box is `3.2629` in each of `x`, `y` and `z` direction. Origin is `(0, 0, 0)` and Minimum image periodic boundary conditions were applied in all directions.