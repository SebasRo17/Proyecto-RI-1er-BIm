I want it will be   * native code generation // Able to compile with something like GHC   * cross-platform (win / linux)   * Functional and a bit object-oriented   * lambdas, pattern matching, tuples and other functional stuff   * Great metaprogramming support   * Indent and minimum borders   * static typing   * also I want Mixin support :)   * possibility to build web sites based on some frameworks is also good plus.   * so and yes, performance and stability matters. I started **Haskell** , but still being not sure about it, because there is OCaml. And I've got F# experience. But as far as I know **OCalm** is a bit OOP and sometimes even faster (not sure about it) I never tried it. There is also erlang, I know nothing about **erlang**. And maybe I'm missing something more..? **Python** , I have no idea about python here, it's functional and it's oop and it supports mixin and popular and fast, but I don'r really think that python is able for all the functional magic, I think it can not. I know that this thread/topic is a like a talking about nothing or like a language war, but I seriously and really want to hear your vision of it.