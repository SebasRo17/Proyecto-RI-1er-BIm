I have a ListUser.java class with a datatable, displaying UserData information, displays 4 columns, the last column is an AbstractColumn that has on it's populateItm method has added a inner class LinkedPanel that fills the column with buttons, one of these buttons is an Link,Model... this link has a @Override onClick() method, that calls a Injected userDataDAO, using the Model, I obtain the UserData object, I update this object and pass it directly to the userDataDAO and merge the object into database, without using any form, is updating directlly safe? (or a good practice) * * *               ListUsers.java is a List that has a LinkPanel that displays buttons on the last column of the          List<IColumn<UserData, String>> cols = new ArrayList<>(4);         cols.add(new PropertyColumn<UserData, String>(new Model<>("Usuario"),"username"));         cols.add(new PropertyColumn<UserData, String>(new Model<>("Creacion"),"dateCreation"));         cols.add(new PropertyColumn<UserData, String>(new Model<>("Ultimo Ingreso"),"lastLogin"));     cols.add(new AbstractColumn<UserData, String>(new Model<>("Operaci√≥n"), "Desactivar") {                  @Override             public void populateItem(final Item<ICellPopulator<UserData>> item, String string, final IModel<UserData> imodel) {     item.add( new LinkPanel(string, imodel, "deshabilitar")                 );             }         });      * * *               ListUsers.html     ...       <table class="table table-hover table-condensed table-responsive" wicket:id="users"></table>     ...      * * *               public class LinkPanel extends Panel {              public LinkPanel(String id, final IModel<UserData> imodel, String label) {             super(id, imodel);             add(                     //Boton habilitar/deshabilitar                     new Link<UserData>("deshabilitar", imodel) {                         @Override                         public void onClick() {                                  usData.setEnabled(!usData.isEnabled());                             userDAO.edit(usData);                             imodel.setObject(usData);                             getSession().info(Msg.OPERATION_SUCCESSFUL);                         }     ...