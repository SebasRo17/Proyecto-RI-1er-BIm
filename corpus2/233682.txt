I work on a fairly large web application. The main solution containing the web application project has over 100 projects. The average build time of that solution is 2 minutes on a 12 GB quad-core machine with an SSD. We are looking into ways we can improve our deployment process. I am going to work on a proof-of-concept to move code out of the main source repository into separate repositories, to be built and packaged as NuGet packages. These will be hosted on an internal feed and installed into the main solution from there. For the proof-of-concept I want to focus on the most important/challenging aspects. I have some experience building stand-alone libraries, and of course the experience of working on this monolithic codebase. I would like to ask you: What should I focus on for the proof-of-concept? * * * Some areas I think I should experiment with:   * Versioning   * Assembly binding   * Unit testing   * ILMerge to merge dependencies   * Debugging   * Performance PS. Automating the building and publishing of packages to the NuGet repository is not my responsibility.