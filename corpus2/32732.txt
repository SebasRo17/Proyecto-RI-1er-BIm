I'm trying to use `NDSolve` for a chemical kinetics equation where the rate of conversion is given by this relationship as typed in _Mathematica_ :               NDSolve[{X'[t] == k*(X[t])^m*(1 - X[t])^n, X[0] == 0}, {X}, {t, 0, 10000}]      The problem is that at the initial condition (`t=0`) the conversion should be zero (`X=0`), but this just returns the empty set `X[t]=0` for all times rather than a solution for conversion vs. time. Is there a way to get `NDSolve` to solve this differential equation while avoiding the empty set solution? Additional info: I've determined the values for `k`, `m`, and `n` experimentally. `k` will be a function of temperature, but I'm just setting it equal to `1` for now for simplicity, `m = 1.8`, and `n= 1.2`. I can get `NDSolve` to give me a solution if I set the initial conditions such that the conversion at time `t=0` is a small number rather than zero (i.e. `X[0]==0.01`), however the solution I get for the conversion vs. time is highly dependent on just how small I make the conversion value at time `t=0` and I'm not sure what the most realistic value would be. I hope this makes sense. Update from original poster (I now have a registered account): I just wanted to say thanks for all the helpful responses to my question. The answers below make sense, mathematically the solution from NDsolve is correct. It's just a matter of what initial value other than zero makes the most sense for this situation, which I was getting hung up on. By the way, the reaction model is for an autocatalyzed reaction, more specifically a free-radical polymerization, where the initial rate is slow, but then shoots up rapidly at a certain conversion.