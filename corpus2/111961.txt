**Short Question**   Is it necessary to add the function header comments for **simple** accessors and mutators? **Example**               u8   OBJ_get_state_x(void) {return obj.state_x;}       void OBJ_set_state_x(u8 x) {obj.state_x = x;}      **Addition Thoughts**   The object (OBJ) overall contains very minimal logic (if any). Its sole purpose is to maintain the state of a system. Additional modules (such as IO, COMM, DISPLAY, etc...) all know _what_ the object is and contain all of the business logic required to drive the states in OBJ. I would _like_ to keep all of the accessors / mutators on a single line to make the file a bit more readable and just put a generic block header above all of them. I just don't know if this is a common (or good) practice. Note that all of the ranges are the bound by their type. If there is a special state that has a range of 0 to 3, I create an typedef'ed enum to use as the type (thus forcing the range and making the code more readable IMO).