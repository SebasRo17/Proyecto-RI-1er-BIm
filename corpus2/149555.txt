I've often seen the terms `immutable` and `const` used interchangeably. However, from my (little) experience, the two differ a lot in the 'contract' they make in code: Immutable makes the contract that this object _will not_ change, whatsoever (e.g. Python tuples, Java strings). Const makes the contract that in the scope of this _variable_ it will not be modified (no promise whatsoever about what other threads might do to the object pointed to during this period, e.g. the C/C++ keyword). Obviously, the two are not equivalent, unless the language is single-threaded (PHP), or has either linear or uniquness typing system (Clean, Mercury, ATS). First, is my understanding of these two concepts correct? Second, if there is a difference, why are they almost exclusively used interchangeably?