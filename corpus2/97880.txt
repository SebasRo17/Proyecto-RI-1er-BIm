I am trying to re-architect a web application I developed to use the MVC pattern, but I'm not sure if validation should be handled in the model or not. For example, I'm setting up one of my models like this:               class AM_Products extends AM_Object      {         public function save( $new_data = array() )          {             // Save code         }     }      **First Question:** So I'm wondering if my save method should call a validation function on $new_data or assume that the data has already been validated? Also, if it were to offer validation, I'm thinking some of the model code to define data types would look like this:               class AM_Products extends AM_Object     {         protected function init() // Called by __construct in AM_Object         {             // This would match up to the database column `age`             register_property( 'age', 'Age', array( 'type' => 'int', 'min' => 10, 'max' => 30 ) );          }     }      **Second Question:** Every child class of AM_Object would run register_property for each column in the database of that specific object. I'm not sure if this is a good way of doing it or not. **Third Question:** If validation should be handled by the model, should it return an error message or an error code and have the view use the code to display an appropriate message?