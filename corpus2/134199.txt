The definition of an Information Architect's responsibilities seems to fit neatly with the definition of 'model' in the MVC pattern. But I've never heard the two concepts discussed together. In a large project that has a dedicated Information Architect as well as a team of developers, does the Information Architect actually say "Model A has properties x, y, and z and has foreign keys to Models B and C..." etc, or do they just express the concepts more vaguely and let the development team translate this into MVC models? Just wondering what is the most common practice.