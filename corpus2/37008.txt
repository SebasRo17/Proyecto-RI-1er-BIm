I'd like to write a function operating on a list, returning a list, but also changing a replacement rule. Let's say I have a list of replacement rules:               data={     ...     a->3,     ...     };      Now I write a function:               f1[{b_,c_}]:={b+1,c+1};      What I would also like this function to do is to change the replacement rule of `data` list, so that after the function is evaluated (with any list as an input), the variable `a` would take the value of the evaluated `c+1` expression, or `f1[[2]]` if You will. Seems like an easy task, but somehow confuses me. **Edit:** As an input I would like a list `l={2,3}`, and `{3,4}` as an output, and a replacement rule `a->3` changed into `a->f1[[2]]`. In general, my problem is that I want another function later on to access a value produced by `f1`, but I would like that other function to call this value from external list and not explicitly from `f1`.