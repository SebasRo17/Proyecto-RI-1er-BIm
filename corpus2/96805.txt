In building a language history for Pascal I noticed that at some point languages changed from a strong line between the language and its common libraries to more of a blurry one. In the first few versions of Turbo Pascal there was no capability for reusable modules until version 4 introduced units. Later versions of Pascal had a very powerful collection of common libraries. With the introduction of Delphi it came with the **RTL** and **VCL**. Especially for the RTL, it is often considered part of the language. For example, Exceptions are part of the language, but you need to use the `SysUtils` unit to get proper handling. Additionally there is the built in `System` unit that always gets used in all Delphi projects. Then with Java you have the Java language with the Java run-time and the Java platform. You can't use the Java language outside of the Java platform. Now with .NET we have VB.NET and C# which are languages that don't exist without their framework either, while Phyton, Ruby and others exist both within .NET and without. So my question is, is a Language just the syntax and compiler, or is the platform and framework part of the language too? Where is the line? Why or why not?