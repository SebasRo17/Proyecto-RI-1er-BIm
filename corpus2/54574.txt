Using Mathematica's Front End on the Raspberry Pi is truly a test of one's patience. The most basic of notebooks become unresponsive after seemingly trivial additions to the notebook. Consider the following Cell               Manipulate[       StringJoin["!raspistill -n -t 5", Sequence @@ {         " -w ", ToString@width,          " -h ", ToString@height,         " -ISO ", ToString@ISO              }, " -o -"],      {{width, 600}, 200, 2592, 1},      {{height, 400}, 200, 1944, 1},      {{ISO, 200}, {100, 200, 400, 800}},           ]      As I type this cell, the first several lines get displayed more-or-less as I type. By the time I get to the `{{ISO, 200} ...` portion of the cell, the notebook is fairly unresponsive, the CPU usage has jumped to 100% and I can get ahead of the display by a line or more. I've noticed some marginal increase in responsiveness with these options:               SetOptions[EvaluationNotebook[], "ShowSyntaxStyles" -> False]     SetOptions[EvaluationNotebook[], "ShowCodeAssist" -> False]     $HistoryLength = 0;      If I start a new Cell, the responsiveness goes back to "normal". If I input the same text into a `TextCell`, the display keeps up with my typing. As surreal as it sounds, _writing code into a TextCell and then converting the cell to Input_ is faster than trying to do everything in an Input cell. Does anyone have any suggestions on what other Options may be influencing the performance of Input Cells?