I have a couple abstract indexed quantities, both differential elements $dx = dx^\mu e_\mu + x^\mu de_\mu$ $du = du^\mu e_\mu + u^\mu de_\mu$ I can compute the expression $(dx + du) \cdot (dx + du) - dx \cdot dx$ manually on paper, contracting the products appropriately and taking the differences. However, evaluating that end result for specific parameterizations and basis representations becomes messy (I've done only the 3D Euclidian cartesian and cylindrical coordinate cases). This seems to be a perfect opportunity for a symbolic computation engine, but I'm having trouble starting. The mathematica book hints that tensor expressions can be represented by lists, but an expression of the above form does not require any specific dimensionality, and can still be symbolically manipulated (on paper). If I use a list, does that list not have to have specific dimension? For example, I'm guessing that I could use an explicit 3D representation for the upper index coordinates like so:               x = { x1, x2, x3 }     u = { u1, u2, u3 }      then define a metric tensor for the lower index coordinates. I don't know how I'd represent the basis vectors $e_\mu$ in Mathematica though, even if I restricted myself to 3D Euclidean spaces. Is this sort of computation within the scope of Mathematica, and if so, how does one setup the variables?