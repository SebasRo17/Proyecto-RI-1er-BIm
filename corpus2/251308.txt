I want to build a system which uses dictionary of many different language. There are 2 options: Build 1 central dictionary `Table` & each language is identified by `langType` (ex 1 for German & 0 for English):               CentralDict     word - meaning - langType     car  - ....    - 0     auto - ....    - 1      or 2 separated Tables               EngDict     word - meaning     car  - ....           GerDict     word - meaning     auto - ....      If the option is 2, then when do the coding               String DictTable="";     String locale=getLocale();     if ("gm".locale){        DictTable="GerDict";     }     else if("en".locale){        DictTable="EngDict";     }      Then when we query from               String sql="select * from "+DictTable;     //access data from table here      If option 1 is selected,                   int langType=0;         String locale=getLocale();         if ("gm".locale){            langType=1;         }         else if("en".locale){            langType=0;         }         String sql="select * from CentralDict where langType="+langType;         //access data from table here      I am guessing the 2 option is more elegant, but not sure I am right? With option 2 we can create a 1 to 1 relationship between 2 languages easily. Note: It is not the internationalization issue as my system can handle internationalization very well. While internalization deals with text of the Gui like the text of the button or the message info, it does not deal with the data that was pulled out from DB. My Dictionary System helps user to see the explanation terms such as "car", "phone".... for teaching purpose. Currently, it works fine in English language, but I want to support German & many be French or any other languages in the future. I don't know whether I should create a complete separated table for each language or I just need 1 centralized dictionary for all languages & has a `langType` field for identifying the language that need to be used based on the user requirement. Ex: WHen user enters `mydomain.com/locale=de` then the system will show the exact Gui ( as in English) but all the text of the Gui will be in German. Also when user searches for data , it should pull out the German data from DB. not English data.