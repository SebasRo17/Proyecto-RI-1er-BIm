One app to rule them all, and in the darkness, bind them. I'm speccing out a client app at the moment. The same service is to be delivered to two separate counties and the the content within: users, line items, etc. should NOT cross over between the marketplaces. This leads me to think that having two separate instances of the app, with separate databases is the best approach. However... That sounds like a LOT of extra work, and duplication, for two systems that would be, for the MOST part, identical Has anyone dealt with this architecture conundrum before and can you perhaps share some of the pros and cons of each approach, with an answer on your preference? FWIW it's a rails 4 app being deployed with Capistrano