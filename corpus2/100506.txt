Which is more efficient; which is faster? Trade-offs? Goal is for fast look-ups in a web application. UUIDs are the keys, so global will work.   Approx 50 million values. A global cache is definitely more manageable than many smaller ones, even using JMX. But, I had a hunch that maybe the total overhead of the hashtable's internals would somehow be less with a global hashtable vs many spread out through various classes. However, I cannot find any evidence of this. Edit: Please, you must back-up your claim if it is that the overhead is minimal or even if it is significant. Maybe this should be moved to the Computer Science forum?