I am using Mathematica 8 to generate a very large multidimensional array of floating-point numbers and then store it in a file. Typical array sizes are 10000 x 50 x 15 x 40, resulting in a 3-4 GB file. The entries of the array are generated recursively, after computing a few starting values. After computations finish (about 12 hours), **Mathematica appears to hang while writing the array, for 8 or more hours.** Sometimes the program doesn't finish within a 24 hour time limit (imposed by the systems I'm using), and no file is produced (not even a partial one). I am wondering: what are some strategies for dealing with these large arrays in Mathematica, and ensuring writing to a file happens successfully? Some background: the array is allocated in memory, and then populated using some initial values and a recursion relation               prec = 50;     GenerateMyArray[iMax_,jMax_,kMax_,lMax_] := Module[{myArray},       myArray = ConstantArray[SetPrecision[0.0, prec], {iMax, jMax, kMax, lMax}];            (* do something to populate initial entries *)       ...            (* populate the rest with a recursion relation *)       Do[         myArray[[i,j,k,l]] = Evaluate[myRecursionRelation],         {i,1,iMax},         {j,1,jMax},         {k,1,kMax},         {l,1,lMax}       ];       myArray     ];      (The calculations must be done at high precision, although the array is eventually stored at lower precision). Finally, I write the entries to a file               mp[x_] := NumberForm[SetPrecision[x, 16], 16, ExponentFunction -> (Null &)];              myArray = GenerateMyArray[10000, 50, 15, 40];     w = OpenWrite[myFileName];     writeHeader[w];     Do[WriteString[w, mp[x], "\n"],         {irow,myArray},         {jrow,irow},         {krow,jrow},         {x,krow}];     Close[w];      My understanding of when things are being passed by value and when they're being passed by reference in Mathematica is pretty poor. Perhaps large amounts of data are being copied unnecessarily? I would appreciate help making this process more efficient and robust. Additional note: The output will be read by a non-Mathematica program, so using .mx files is not an option.