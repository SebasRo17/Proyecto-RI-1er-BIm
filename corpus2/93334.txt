Is there some kind of generalization to the effect called Heisenbug? Because I would like to describe in my documentation how instrumenting a program changes the execution no matter what. In The New Hacker's Dictionary it is defined as following: > **heisenbug** /hi:'zen-buhg/ /n./ [from Heisenberg's Uncertainty Principle > in quantum physics] > > **A bug that disappears or alters its behavior when one attempts to probe or > isolate it.** (This usage is not even particularly fanciful; the use of a > debugger sometimes alters a program's operating environment significantly > enough that buggy code, such as that which relies on the values of > uninitialized memory, behaves quite differently.) Antonym of Bohr bug; see > also mandelbug, schroedinbug. In C, nine out of ten heisenbugs result from > uninitialized auto variables, fandango on core phenomena (esp. lossage > related to corruption of the malloc arena) or errors that smash the stack. Actually this is a general problem, when trying to observe the programs state by instrumentatation (tracing, debugging, etc.) the program execution is changed no matter what. But the definition for Heisenbug clearly says, it is a bug which is masked due to debugging and which disappears. What about bugs, which appear due to debugging - there is no word for that. Is there some kind of generalization, like _Heisenbug principle_?