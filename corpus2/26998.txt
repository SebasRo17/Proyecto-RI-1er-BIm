Consider the following system \begin{align} \dot{x}(t)&=\sum_{i=1}^{2}\rho_{i}(x(t))\left[A_{i}x(t)+B_{i}u(t)\right]\\\ y(t)&=Cx(t) \end{align} with:               a1 = {{-3, 2}, {-0.25, 1}}     a2 = {{-1.9, -0.4}, {-2.24, -4.7}}          b1 = {{0.25}, {1}}     b2 = {{-2.5}, {1}}          c = {{1, 0.5}, {0, 1}}      where $$\rho_1(x_1(t))=\frac{1-\tanh(x_1(t))}{2},\quad\rho_2(x_1(t))=1-\rho_1(x_1(t))$$ How do I build the state-space LPV system? The response, for example, to a sinusoidal input? I want to translate this code from MATLAB to _Mathematica_               A(:,:,1)=[-3 2; -0.25 1];     A(:,:,2)=[-1.9 -0.4 ; -2.24 -4.7];     B(:,:,1)=[0.25;1] ; B(:,:,2)=[-0.25; 1];     C=[1 0.05; 0 1];%     xx=[0.1; 0]; %initial conditions     mus(1,:)=[0.5 0.5 1]; %initial rhos          %%simulation loop          for k=1:tmax/Te              %% System             t(k+1)=t(k)+Te; %%time vector;              mus(1)=(1-tanh(xx(1,k)))/10  ;  % weigting functions         mus(2)=1-mus(1);              u(k+1)=10*sin(t(k)); %%input         Aa=mus(1)*A(:,:,1)+mus(2)*A(:,:,2);         Ba=mus(1)*B(:,:,1)+mus(2)*B(:,:,2);              %%Euler to solve the ODES         xx(:,k+1)=xx(:,k)+Te*(Aa*xx(:,k)+Ba*u(k) );         y(:,k+1)=C*xx(:,k+1);  %output     end          plot(t,mus,t,mus(:,1)+mus(:,2) );     plot(t,y);