so here I am with a time series of data (hours (t) and corresponding measurements (a)).               a = {0, 2, 5, 6, 3, 6, 5, 8, 2, 1, 10};     t = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};      The plot looks like this:               ListLinePlot[Partition[Riffle[timepoints, a], 2],  GridLines -> {{}, {4}}]      ![enter image description here](http://i.stack.imgur.com/DiGYC.jpg) Using a trapezoidal rule function, I get an AUC of 43.               auc[data_, times_] := (     merged = Inner[List, times, data, List];     merged = DeleteCases[merged, {x_, y_} /; Not[NumericQ[y]]];      N@Total[Partition[merged, 2, 1] /. {{x1_, y1_}, {x2_, y2_}} -> (x2 - x1) ((y1 + y2)/2)] )      What I am trying to do now is modify the function to get the AUC for values above a certain threshold, let's say 4. This is indicated by the horizontal grid line in the graph. First thought was replacing the values exceeding 4 by 4, calculating a second AUC and substracting. Of course this changes the shape of the curve.               a2  = a /. x_ /; x > 4 -> 4;     GraphicsGrid[{     {ListLinePlot[Partition[Riffle[timepoints, a], 2],        PlotRange -> {All, {0, 10}}, GridLines -> {{}, {4}}],     ListLinePlot[Partition[Riffle[timepoints, a2], 2],        PlotRange -> {All, {0, 10}}, GridLines -> {{}, {4}}]Â }     }]      ![enter image description here](http://i.stack.imgur.com/Mxq2i.png) I figure the solution is along the lines of linear interpolation of where the curve intersects the threshold and adding intermediate points and I really have no idea where to start implementing this. Any pointers? Or are there biomedical packages that will calculate this stuff from raw data? Thx!