I create many small Qt Creator projects (.pro file based, not CMake) and sometimes need to use external libraries in them. Up until now I used to have a project structure like below:               project folder     |- project.pro     |- (project .cpp and .h files, possibly in subfolders)     |- lib        |- include        |  |- library1        |  |  |- (all library1 header files)        |  |- library2        |     |- ...        |- win32        |  |- library1.dll        |  |- library2.a        |  |- ...        |- unix           |- library1.so           |- library2.a           |- ...      The whole `lib` folder (with binaries) was included in my repository (git). This approach was okay when using small libraries, but since I started using some large libraries, I put them into separate repositories (per library) and used git submodules. Still, that solution is imperfect, since I'd use up a lot of additional space after updating my libraries and generally putting them in a repository is considered a bad idea. I was thinking about a solution where you could have a system variable for manually installed libraries or have it defined in qmake, but that would require additional work and reading documentation to configure the project. Another approach would be to simply download/compile libraries and put them into an ignored (in git) `lib` folder, but then we'd end up with duplicate libraries everywhere (and a problem to update them to newer versions across projects). How can I organize my Qt project to minimize amount of work and documentation reading needed to set it up and to maximize its maintainability?