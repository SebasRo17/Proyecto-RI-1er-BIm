In my answers to Plotting Error Bars on a Log Scale I used a so called "torn edge" effect from on one of the images. @SjoerdC.deVries commented: "BTW I liked the ripped-out look of your InputForm picture; Mathematica? It's ideal for pictures that have to convey the message "There's more of this, but that's not important". Though it was a software called Snagit, I think _Mathematica_ can easily do it. For example, this train of thought: Imagine you have an image which you'd like to limit with torn edge:               a = Image[Rasterize[RandomReal[1, 50], RasterSize -> 700]]      ![enter image description here](http://i.stack.imgur.com/MyHN2.png) Generate random walk:               b = ListLinePlot[SeedRandom[4]; Accumulate[RandomReal[{-1, 1}, 2000]],        Axes -> False, Filling -> Bottom, FillingStyle -> White,        AspectRatio -> 1/13,  PlotStyle -> {Thickness[0.0015], GrayLevel[.0],        Opacity[.5]}, PlotRangePadding -> {0, 5, 0, 5}, ImageSize -> 1000]      ![enter image description here](http://i.stack.imgur.com/U2gki.png) Make shadow:               c = ListLinePlot[SeedRandom[4]; Accumulate[RandomReal[{-1, 1}, 2000]],        Axes -> False, Filling -> Bottom, FillingStyle -> White,        AspectRatio -> 1/13, PlotStyle -> {Thickness[0.005], Opacity[.3],        GrayLevel[.2]}, PlotRangePadding -> {0, 5, 0, 5}, ImageSize -> 1000]      ![enter image description here](http://i.stack.imgur.com/KD3ff.png) And compose everything:               d = ImageCompose[b, c, {Left, Bottom}, {Left, 5}];     e = ImageCompose[a, d, {Left, Bottom}, {Left, Bottom}];     ImageCompose[e, ImageRotate[d, Pi/2], {Right, Bottom}, {Right, Bottom}]      ![enter image description here](http://i.stack.imgur.com/EpqNc.png) This kind of works - but is obviously very raw. Right bottom corner is problematic for example. So can we make it work? Some perhaps good things to think of:   * Single function where we feed image and pointers which edges to torn.   * All image sizes would work   * All methods are good, no need to use random walks This question maybe helpful: How can I make a 2D line plot with a drop shadow under the line?