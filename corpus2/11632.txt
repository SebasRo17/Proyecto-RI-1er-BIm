Is it possible to generate a random tree without explicitly constructing a random adjacency matrix that satisfies tree properties? How about a random directed tree? * * * Edit: incredible answer by Vitaliy! What I wanted was somewhat simpler and rm -rf's answer largely pointed me in the right direction. One thing to note is that the `TreeGraph` functions (new in version 8), while easy to use, seem to be lacking some functionality compared to the older `TreePlot` family of functions. In particular, I wanted to make sure that the root of my tree is displayed at the top, and I could not find a way to do it with `TreeGraph` -- please correct me if I missed something! Here is the illustration (notice how `TreeGraph` puts node `1` at the top):               Block[{edges, p1, p2},      edges = Table[DirectedEdge[RandomInteger[{0, i - 1}], i], {i, 1, 8}];      p1 = TreeGraph[edges, GraphStyle -> "DiagramBlack"] ;      p2 = TreePlot[edges /. {DirectedEdge -> Rule}, Top, 0,         DirectedEdges -> True,         VertexRenderingFunction -> ({White, EdgeForm[Black], Disk[#, .1],             Black, Text[#2, #1]} &)];      GraphicsGrid[{{p1, p2}}, ImageSize -> 800]      ]      ![tree visualization](http://i.stack.imgur.com/7Sjij.jpg)