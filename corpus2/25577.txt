I'm trying to solve a quadratic optimization problem in 35 variables, $\vec{α} = \left< α_1, \ldots, α_{35}\right>$: $$ \begin{aligned} &\operatorname*{maximize}_\vec{α}&&1.0\cdot α_1 - 2.7\cdot {α_1}^2 + 1.0\cdot α_2 + \cdots + 0.6\cdot α_{34} \cdot α_{35} -1.6 \cdot {α_{35}}^2 \\\ &\operatorname*{subject to}&&0 = α_1 + α_2 + \cdots - α_{34} + α_{35} \\\ &&& \forall_i(α_i \geq 0) \end{aligned} $$ where the expression to be maximized has 665 terms, all linear or quadratic. The obvious command:               nn = 35;     objective = 1.0*Subscript[α,1] - 2.7*Subscript[α,1]^2 + [...];     equalityConstraint = 0 == Subscript[α,1] + Subscript[α,2] + [...];     NMaximize[{objective, equalityConstraint} ~Join~ Table[Subscript[α, n] >= 0, {n, 1, nn}],         Table[Subscript[α, n], {n, 1, nn}]]      runs too slowly. I suspect that Mathematica's full nonlinear-optimization machinery, unneeded for this type of problem, may be slowing it down. What can I do to increase performance?