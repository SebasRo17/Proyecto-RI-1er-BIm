# Question and Context I am currently working on a project where the main question is, how do we insert an API between the database and end-users who may develop applications/scripts of their own that will work with or on top of the database? The database type I am working with is Postgresql, and this project is in- house, so the end-users are users in other development groups. # Aims What I am looking to satisfy are the following:   * Avoid a wide-interface.   * Require authentication from the application that is to use the API - provide end-user a single unique token or key to access the application. No user/password management.      * Have the option to make it open - no authentication required.   * Allow users to create and read records.   * Restrict users from deleting and updating existing records.   * (Optional) Track who is using the API - number of requests, records, etc.   * (Optional) Track amount of time spent completing a request. # Some Thoughts My initial thought is to establish a RESTful API by building my own servlet to handle the requests, and of course, customize it to meet my aims. However, I have a feeling there are already many versions of this wheel out there so I would like to avoid reinventing it. An additional question to this would be, what is this kind of API/layer called (aside from DAL)? # Update How would the advantages of putting a common API in place be if there are multiple databases of varying types e.g. postgres, ms sql, oracle, etc.?