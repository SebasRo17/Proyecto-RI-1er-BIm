I'm writting a German specification (I'm not German). Differences may appear for this process in different cultures, especially in the terminology, but usually here's the idea:   * The **client** writes his **needs and wishes** in a document, called a scope statement or **requirements document**.   * The **supplier** tries to understand the **actual need** of the client (which might be different to what was written _and_ to what the client meant to say _and_ to what the client _thinks_ he needs, etc.)   * The supplier writes a **specification** for the **product** , which should fill the client's need.   * The specification needs to be **precise enough for the product to be made** (ambiguity problems occur).   * The client and the supplier can check whether they have understood each other, and discuss details of the product.   * The client **agrees** with the specification (or at least its current iteration) and the supplier is ready to start the **work**. (it may of course be expected of you to disagree with this process, but this is irrelevant to my problem): I'm now somewhere around the last two steps and I've been criticized because I wrote what the product _must_ do, and not what it _will do_ ideally. Usually along the lines of > The product must be able to perform task A And I was expected to write > The product performs task A This is a simple word play, but I feel saying what the product _does_ , while the product isn't even on the way to be made yet, is wrong. I would tend to consider a specification as a contract of what the product is expected to do (what it must do and how it should do it), and not what it _does_. Said differently, I feel this is the specification and not the manual of the end product…… Should I say what the product _must do_ or what it _does_?