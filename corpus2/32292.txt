I am solving an ODE system with _Mathematica_. Let's say the system is of the form (to simplify).               sol = NDSolve[{x'[t] == f[t] x[t] + g[t], x[0] == 0}, x, {t, 0, 1}]      The functions `f[t]` and `g[t]` are obtained from a different program. I either use a simple fit for `f[t]` and `g[t]` (say polynomial) or define them as `InterpolationFunctions` from data tables I have, i.e.               f = Interpolation[data]      In the latter case (which is more desirable as more accurate), the system takes 10 times longer to solve! In detail, I actually loop over `NDSolve` for several additional parameters, and my ODE is with complex coefficients and 6-dimensional. So the system is already kind of long to solve, and 10 times longer is killing me... Anyone has any advice on how to speed this up? Interpolating functions should be super fast, shouldn't they?