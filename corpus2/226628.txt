I don't work too often with Java/C# iterators directly but when I do I always wonder what was the reason to design iterators in "next" fashion. In order to start you have to move iterator, in order to check if there is some data you have to check if there is next element. More appealing concept for me is this-iterator -- it "starts" from the beginning, and you can check this state, let's say `isValid`. So the loop over entire collection would look like this:               while (iter.isValid())     {       println(iter.current());       iter.next();     }      As you here in order to check if there is next element, you go there, and then you check if the state is valid. YMMV but anyway -- is there any advantage of next-iterator (as in Java/C#) over this-iterator? **Note:** this is conceptual question, about the **design** of the language.