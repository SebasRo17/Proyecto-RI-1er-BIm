What pitfalls should I avoid?   * What Java language paradigms do Objective-C developers consistently misunderstand? I learned to program in Java, but I have worked in nothing but Objective-C for years now.   * How are the design patterns different between Android and iOS?   * If you've made the transition yourself, what parts of Android confused you or took you longer to learn than it should have?   * Is Eclipse the best OS X IDE for Android? For the record, my app is very strongly tied to UIKit and Foundation, so the word "porting" may be a misnomer; I'll actually be completely rewriting it for Android. No code reuse. Also, I'm doing this to learn Android, so I'd rather fail at the port and learn Android than take a shortcut. * * * As a bit of background, this question was prompted by the types of questions I see on Stackoverflow. Frequently you can tell what someone's background was (C# or Java) by what silly mistakes they make when they're trying to write Obj-C. I'd like to avoid the kinds of mistakes that make Java developers roll their eyes and say, "Silly Objective-C developers, won't they ever learn?"