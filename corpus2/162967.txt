My father is a doctor/physician. About 15 years ago he started writing an application to handle his patient's medical records in his clinic at home. The app has the ability to input patient's medical records (obviously), search patients by some criteria, manage medicine stocks, output receipt to printer, and some more CRUDs. He wrote it in dBase III+. A few years later he migrated to FoxPro 2.6 for DOS and finally in a few more years he rewrote his app in Visual FoxPro 9. And now (actually two years ago) he wants to rewrite it in PHP, but he doesn't know how. The Visual FoxPro version of this app is still running and has no serious problem except sometimes it performs slowly. Usually there are 1-5 concurrent users. The binary and database files are shared via windows share. He did all the coding as a hobby and for free (it is for his own clinic after all). He also use this app in two other offices he managed. Some reasons of why he wants to rewrite in PHP-MySQL:   * He wants to learn   * Easier to deploy (?)   * Easier client setup, need only a browser What should I do to help my father? How should he start? I explored some options:   1. I let my father learn PHP and MySQL (and HTML (and JavaScript?)) from scratch.   2. I create/bundle framework. I'm thinking on bundling CodeIgniter and a web UI framework (any suggestion?) especially to reduce effort on writing presentation codes. What do you think? * * * ## tl;dr My father (a doctor) wants to rewrite his Visual FoxPro app in PHP-MySQL. He knows very little of PHP and MySQL but he wants to learn. What should I do to help? How should he start? * * * Some facts:   * My father is 50 years old.   * His first encounter with a PC is in early 1980s. It was IBM PC with Intel 8088.   * He knows BASIC.   * He taught me how to use DOS and how to program with BASIC.   * The other language he knows fairly well is dBase/FoxPro.   * I got my bachelor CS degree last year.   * I know the internals of my father's app because sometime he wants me to help him writing his app. * * * Update After reading early responses, there seem to be better alternatives to PHP for this case. I'm open for other language/technology suggestions.