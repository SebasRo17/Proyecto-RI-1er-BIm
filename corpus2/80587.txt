Any non-trivial commercial application/program/system/what-have-you requires testing (QA/QC). Not counting things like automated tests, how much time/money relative to the development investment in the project should be spent testing (e.g. with live people)? I know there's no magic percentage of time or budget, and individual projects will differ in size and scope of testing, but is there something that's considered good practice? An application may be perfect in every way, but still the only means of ensuring that is to test it. Basically my employer wants to cut down on testing of over-seas-developed software, but I have strong reservations against that (being in charge of QA and having worked with the vendor before, I don't think that our directive of telling them to "make fewer bugs" is exactly going to get us results, no matter what is stipulated in the contract). Is there any kind of best-practice or guideline that I can look to?