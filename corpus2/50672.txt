Is there an alternative way to do `AppendTo` and `Delete` and also replace `k0` during every update? I want to avoid the 3- `CopyTensor`s in the following code which probably are the reason behind the memory and performance problems for large values of `n`.               f = Compile[{{n, _Integer}},        Module[{Fk = Table[RandomReal[{0, 1}], {5}, {n}], k0 = Table[RandomReal[{0, 1}], {n}], TT = 0.1, ksum, i = 0},         While[TT > 0 ,          ksum = Total@Fk;          k0 = MapThread[Min[#1, #2 RandomReal[{0, 1}]] &, {k0, ksum}];          TT = Round[Total@k0, 0.01]; i++;          Fk = Delete[Fk, {1}];          AppendTo[Fk, k0];         ]; i        ]       ]