Both Windows Phone/Xbox and Android lack support for generational garbage collection. This is frustrating for a lot of programmers. There seems to be a legitimate engineering reason to it, but I can't figure it out. Current phones have more memory and probably better CPUs than the desktops/laptops running .NET 1.1 with generational GC back in 2001, and I can't think of any reasons that ARM processors would be worse at generational GC than x86 would. There's also less need for multitasking on phones and consoles, so there's relatively more free heap space. So what gives? **Edit:** A few points to clarify:   * These platforms use garbage collection for apps exclusively, so my question isn't about why GC isn't supported; my question is about why _generational_ garbage collection isn't.   * The reason that people are frustrated about the lack of generational GC is that non-genrational GC is extremely inefficient. (That means that battery life isn't the reason.)   * I do believe that there's an honest technical reason for the lack of generational GC support. This isn't a rhetorical question.