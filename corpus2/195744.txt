As many know, mobile development is skyrocketing these days and, I believe, it affects what we code. To be specific, I am interested in developing web services for a mobile application. I see two possible architectures - RPC and REST. I have developed both, REST and RPC services and what I have observed is that RPC services are way easier to code, especially in languages like PHP. The problem with it seems to be scalability - server-side can easily turn into a mess when many procedures are present. REST, on the other hand seems to be a lot more structured, server-side becomes relatively easy to maintain but it has a potential to break data into multiple resources which is bad for mobile applications (for multiple reasons). From what I have experienced, RPC seems a bit better in most cases:   * Both, client- and server- sides, are concerned to minimize number of procedures available and calls made.   * Following architectural rules does not counter with optimizations otherwise possible. I don't really expect someone to explain me what REST and RPC are, the web is full of that. **I want people who has experience developing mobile apps express their opinions about using these two architectures on the server- side.** Tips are also welcomed (who doesn't love tips, huh?).