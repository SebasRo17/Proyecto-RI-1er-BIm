I m trying to get the possible combinations of a given set of numbers say for example 123 The possible combinations would be 123 132 213 231 312 321 For this i have written a code as below -               import java.util.ArrayList;          /* Name of the class has to be "Main" only if the class is public. */     public class Main {          /**      * @param args the command line arguments      */     static ArrayList list;          public static void main(String[] args) {         // TODO code application logic here         Main nm = new Main();         nm.list = new ArrayList();         /*         for(int i=1; i<= 4; i++) {             list.add(i);         }              list.remove(list.indexOf(1));              for(int i=0; i<= 2; i++) {             System.out.print(list.get(i));         }         */         nm.test1();             }          public void test1() {                 for(int i=1; i<= 4; i++) {             if(!list.contains(i)) {                 list.add(i);                 test1();                 list.remove(list.indexOf(i));             }         }                    if(list.size() == 4)          {             for(int i=0; i< 4; i++) {                 System.out.print(list.get(i));             }             System.out.println("");         }     }      } This gives the correct output as shown here in the link I was thinking about if this the right approach or if there can be any optimizations done so that this code may be used to get combinations of numbers of 10 to 20 digits or more. Regards