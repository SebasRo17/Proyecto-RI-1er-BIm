My applogies for probably the worst written body of text I have produced in my life and many thanks to those willing to plough through it all. I was (and still am) not able to clearly express what I was asking for, since by the nature of my question I cannot be clear about what exactly it is I am after. Fundementally I strongly suspect something in my knowledge of software development is missing, but because "I don't know, what I don't know", I cannot specify what exactly I am looking for (and indeed can't be sure whether such a thing exists) - hence I suppose I am asking for some direction in this matter. I kind of thought if proffessional developers did not know of/ did not use such a thing in the process of desingin code - then there is nothing to know in this respect (and I can stop worrying). Essentially I fear something akin to having learned to program, but having remained unaware of the subject of proper OO software design. I have studied standard data strucutres and algorithms (to the extent of coverage found in typical undergraduate text books), but can't help feeling that there should be something more. I hence can't help feeling like I've learned the very basics, but not become aware of the data structures and algs. equivelant of OO design. In essence I sort of imagine there is some "process" to solution design (in the context of the d.s.s and algs. side of programming - like there is to the OO design side of coding software - I see them both as being part of the same whole in programming) that informs one about how to go about the task of writing "good" code (in the d.s. and algs aspect of the program code written). I fear in absence of knowledge of such a process/ subject, I would be incompetent as a graduate developer (rather like I would consider a new employee, if his code turned out to be uninformed by the OO design process/ principles). I would consider the code produduced by someone lacking in knowledge of OO design principles/ processes to be "bad code" - and hence him to be incompetent. At the moment I fear my knwolege with respect to the d.s. + algs. side of coding puts me in a similar position. Thus, can anyone tell me what I might yet need to be aware of in this respect? (Another way of putting my question might be if I were to say: "Object Oriented design principles and patterns, is to programming, what "...", is to data strucutres and algorithms". Could anyone tell me what one might complete this sentence with, or whether there is nothing to consider here)