I've often run on this problem. Now I am working on a team of 4 and we built a lot of stuff. We are still finishing somethings and making **changes**. The problem is that those changes can (and most probably will) cause interface/business to crash. We do not have any kind of map that show us something like "If you change the DataSource of this table the code X on that table will have to change. And on the screen X the list will have to be changed". Unit tests can help validate business rules, what about interface business? Can it also validate code bound to the interface? Should we rely only on unit tests? And how deep does it have to be to prevent the code breaking because of changes? Should we use some other approach as well?