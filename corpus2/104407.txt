So, I have this big project, which is in the process of being refactored by me. I am changing a lot of stuff, so there is no chance to get it to compile some time soon. I am living in a special git branch which I named `cleanup` (which is going to get merged into `master` eventually, of course). The problem is, that I/we have the policy to never commit non-compiling code (ideally it should also work, but it must compile and link, at the very least). So, until I am finished with this huge task, I am unable to commit anything (for review or for bookkeeping).   This is not the way I like to work (I believe most people commit at least once a day or so). What do you think? Is there a solution I am overlooking?   Can I later tell git to aggregate commits or something? I could live with non- compiling commit as long as they _stay_ in the `cleanup` branch. ## Edit To the subject of pushing/committing: I am aware that it is a huge difference, but later, there will be broken revisions, when I merge my stuff into `master`. So if you browse through the history (or `git bisect` ...) then the "local" revisions will be world accessible. So only committing locally and not pushing is not the best solution, because it will cause you trouble later on (when the subject is closed and forgotten for some time). In short: Local commits will be pushed eventually. The global history should not show non-compiling commits.