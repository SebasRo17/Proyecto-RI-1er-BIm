Does an in-code enumeration provide a stronger domain model than a static database table? As an example, say I have an `Marble` entity, with a `Color` attribute. The color attribute has a finite set of possible values--say red, green, blue. Say the database team recommends having a static `S_ValidColors` table, to the effect of:               -----------------------     | ColorId | ColorName |     -----------------------     |    0    |    Red    |     -----------------------     |    1    |   Green   |     -----------------------     |    2    |    Blue   |     -----------------------      Whereas I'm thinking more along the lines of (this is just a sketch for the general concept):               public class Color {         public static const Color Red = Color(0);         public static const Color Green = Color(1);         public static const Color Blue = Color(2);              private Color(uint typeCode) {             ...         }         ...     }      Aside from the question of which is better (which probably depends on any number of other factors not represented here), is this a question that touches how strong the domain model is? Is one way more anemic than the other?