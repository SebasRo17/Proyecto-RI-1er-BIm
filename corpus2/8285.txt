I have the following expression, only slightly complicated, and I'd like to do two things:   1. `Plot` the elements of the lists (though messy, all are in the same range) in terms of the range of the random variable in `Expectation`. (0.1 in the working example)   2. Let the `Plot` work with `Manipulate` so that the user can experiment with different underlying values. With all these `SetDelayed` used, I could not get `Manipulate` to work (`Plot` is simply slow). Basically, I am not sure if I can simply feed a new value for `underlying` into the last line (`Expectation`), or I need `Replace`, or some rule, a `Block`, or `With`?               underlying := {0.8,0.7,0.5,0.4,0.8,0.7}     answers := MapThread[(Min[1,Max[#1 + #2 ,0]])&,{underlying, {e1,e2,e3,e4,e5,e6}}]     disc :={answers[[5]],answers[[6]],answers[[3]]/answers[[1]],answers[[4]]/answers[[2]]}      DB :={disc[[2]]/disc[[1]],disc[[1]]^2/disc[[2]]}      db :={disc[[4]]/disc[[3]],disc[[3]]^2/disc[[4]]}      deltasbetas = Expectation[{disc,DB,db},{e1,e2,e3,e4,e5,e6}           \[Distributed]UniformDistribution[Table[{0,0.1},{6}]]]          (* {{0.85,0.75,0.647807,0.600891},{0.883373,0.965877},{0.931221,0.705072}} *)