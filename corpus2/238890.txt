I've the following Interface.               public interface ValueInterface     {       long  getValue();     }      And the class:               public class ValueCreator implements ValueInterface     {       private static long value  = 0;            public void setValue(long valueInDollar)       {         value= valueInDollar;       }            @Override       public long getValue()       {         return value;       }     }      The static code analyzer findbugs warned me not to set a static field in a non-static method. If I make the set method static, I can't make the getter static as it is an interface overridden method. So, is it okay to have a static setter and non-static getter or what could be a better approach?