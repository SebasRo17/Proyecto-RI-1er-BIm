I have a good grasp on how the C compiler was boostrapped from itself and how that must have been very efficient, since the first pre-bootstrapping version was written in assembler, which is as low level as you can get. BUT today we have a very different situation, with languages first written on other relatively high-level languages (e.g. Clojure). Question 1: I have a hard time imagining that the **bootstrapped compiler could be _faster_ in anything than its non-bootstrapped counterpart. Is this possible?** Question 2: Especially once you take the step in which you write then new version of your compiler in your new language: **Can any inefficiencies that existed in the non-bootstrapped code be fixed or is the code generation of the new compiler haunted by those forever?** That matters even more since you canâ€™t easily go back and fix those afterwards!