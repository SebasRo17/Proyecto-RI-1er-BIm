So I have a good handle on how to rapidly develop a GUI controlled application in .NET (not so much in Python, I've only used Tkinter). I want my code to be easily deployed with very few dependencies. It does however have to interface with a particular 3rd party software package that exposes a very difficult COM API or a much simpler Python API. I'm thinking about writing a few python scripts to do the processing I need. These scripts will be called as a subprocess from the .NET application. I would complete the project much faster this way instead of spending days working through the COM API. I feel that the resulting code would also be much simpler and shorter avoiding the COM API, but I will be mixing two languages if I code the application this way. Also I'm not shipping my own python interpreter with it, it will use the one provided with the vendor software. Is this a terrible idea? I looked up IronPython, but this 3rd party software apparently requires cpython to leverage it's API, so I'm not sure that will work unless I go the COM route.