Would love to know your thoughts on a curriculum that will be developed for people that want to get started in the programming field. The goal of the course is to help it's students to ensure that students have an understanding of the theory and skills required to be a programmer, and have enough skills to get entry-level jobs upon graduation. Curriculum is:   * 400 hours of instruction plus self-study.   * 40 hours of practicum **1\. Foundation** a. Clarity b. Detail orientation c. Communication d. Compartmentalization/abstraction e. Typing f. Memory **2\. Theory** a. Lexical analysis b. Parsing c. Optimization d. Hierarchical thinking e. Scope f. Type systems **3\. Computer Science** a. Data structure (ex. sorting, searching, data structure transversal) b. Recursion c. Language structures (ex. arrays, linked lists, dictionaries, etc) **4\. Systems Architecture** **5\. Operating System Theory** a. POSIX b. IO c. Memory allocation **6\. Object Oriented Programming** a. Java b. PL/SQL * * * Would love to know:   1. Is the above curriculum laid out clearly? If not, how would it be best to change it?   2. Are there any crucial components being missed from the above outline?   3. Should any components be removed from the above outline (considering the timeline)? Perhaps it's too detailed at certain points and is not in balance with the rest of the content?