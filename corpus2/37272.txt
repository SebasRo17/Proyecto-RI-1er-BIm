I am trying to write a simple program - perform `f1` as long as `t` is smaller than 800. `t` is declared in `a` list. The problem is easy, but difficult to explain, so I'll give You my code:               a = {t -> 120};     f1[{x_, y_}] := {x + t, y + t} /. a;     NestWhile[f1[#] &; a = a /. Rule[t, _] :> Rule[t, f1[#][[1]] &], {100, 100}, (t /. a) <= 800]      > ReplaceAll::reps: {{t->(f1[Slot[<<1>>]][[1]]&)}>=800} is neither a list of > replacement rules nor a valid dispatch table, and so cannot be used for > replacing. >> After each calculation step I want to change replacement rule in `a` list. Desired output should be `{880, 880}`. Any idea how to make it work? I know it sounds like a stupid example, but if can fix that, I can also fix problem with my original functions.