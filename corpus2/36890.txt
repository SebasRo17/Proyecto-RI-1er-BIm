After not _really_ working on my pet project for a while, I discovered Stackoverflow and upon perusing it more intensely I was quite amazed.   I'm a bit of a perfectionist, so when I found eye-openers here highlighting many of the mistakes I made, I first wanted to fix everything.   However, it's a **pet** project for a reason: I'm self-taught and I'm studying psychology, so programming skills can never become priority one (though it often helps, even in this field). Issues that stuck out were   * numerous security issues (e.g. CSRF-prevention and bcrypt eluded me)   * not object-oriented (at least the PHP part, the JS-part _mostly_ is)   * no PHP framework used, so many of my DIY takes on commonly-tackled components (auth, ...) are either bad or inefficient   * **really** poor MySQL usage (no prepared statements, mysql extension, heard about setting proper indices two days ago)   * using mootools even though JQuery seems to be _fashionable_ , so there's more probably always going to be better integration with services I'd like to use (like google visualization) So, my SO-induced frenzy turned into **passivity**. I can't do it all (soon) in the rather small amount of spare time I can spend on working on my project.   I can leave some of the issues be in good conscience (speed stuff: an unfinished & unpublished project will never become popular, right?).   No clear conscience without good security though and if I don't use a framework for _auth_ and other complex stuff I'll regret having to do it myself. One obvious answer would probably be going open-source, but I think the project would need to become more impressive before others would commit to it. I can't afford to employ someone either. I do think the project deserves being worked on, though. How should I tackle it **anyway**? What's the best practice for little-practice people? * * * I couldn't edit my question, because it was transferred. I would have emphasised, that I have a working product, but like so many pet projects it will _never be finished_ , so I intended to make things easier for myself in the future too. Some of you mis-guessed my problem as being afraid to get started, but I couldn't react up here, sorry. I'm surprised that no one seems to think that using a framework would be a good way to relieve myself of some responsibilities (such as implementing an authorization module that conforms to these specs.   Or is it just too hard to turn to something like an MVC when you have been working process-oriented before?