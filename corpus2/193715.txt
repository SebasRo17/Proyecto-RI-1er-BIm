Reading about ARM architecture I found many similarities to PDP-11 architecture which did not exist between ARM and x86. For example,   * General-purpose registers named Rx compared to AX, BX,... for x86   * Uniform registry file (all registers permit all kinds of operations)   * Similar names for program counter (PC both on ARM and PDP), compared to IP in x86.    * Inclusion of Program Counter into general registry file (in PDP it also can be refereed to as R7, in ARM - as R15, both the last registers in the file).   * Inclusion of I/O ports into general address space (i.e. addressing them as memory) compared to a separated I/O address space in x85 (and special I/O instructions).   * Using 3-letter basic assembler mnemonics (TST compared to "test" in x86) with suffixes specifying data type (such as "B" for byte, compared to constructions like "byte ptr" in x86)   * Using BNE, BEQ and other B _condition_ instructions for branches.   * Use of "#" symbol before a number to specify an immediate value (compared to "." in x86) etc. So is there any historical relationship between ARM and PDP that makes them closer to each other than to x86?