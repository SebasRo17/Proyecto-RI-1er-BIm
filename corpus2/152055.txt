I've got a question similar to this one: Is constantly looking for code examples a sign of a bad developer? though not entirely. I got off college 2 years ago and I'm currently struggling with a University study. Most likely I'll have to drop out and start working within the next couple of months. Now here's the pickle. I have no speciality what so ever. When I got out of college I had worked with **C** , **C++** and **Java**. I had had an internship at NEC-Philips and got familiar with **C# (.NET)** and I taught myself how it worked. After college I started working with **PHP, HTML, SQL, MySQL, Javascript** and **Jquery**. I'm currently teaching myself **Ruby on Rails** and thus **Ruby**. At my university I also got familiar with **MATLAB**. As you can see I've got a broad scope of languages and frameworks I'm familiar with, but none I know inside-out. So I guess this kinda applies to me: _"Jack of all trades, master of none."._ I've been looking for jobs and I've noticed that most of them require some years of experience with a certain language and some specifications that apply to that language. My question is: **How do I pick a speciality? And how do I know if I'll actually enjoy it?** As I've worked with loads of languages how would I be able to tell this is right for me? I don't like being tied down to a specific role and I quite like being a generalist. But in order to make more money I would need a specialisation. How would I pick something that goes against my nature? Thanks in advance, Rope.