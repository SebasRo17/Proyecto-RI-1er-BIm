Do long (very long) variable names slow down the compilation of source code? I'm aware that the length of variables has 0% impact on interpretation as the compiler changes them to machine code which is always the same length. But my question is, does the speed at which the compiler vary depending on the length of variables? For example, if I have a variable name which is a million characters long, surely the compiler would struggle as for it to recognise the variable **is** a variable, it would need to read the entire thing first which would surely take longer depending on its size? To clarify, what process do typical (the majority) of high level language compilers use when changing a source-code's variable name to a machine code name? Do they find the start of the variable working from the left and then find the end working from the right, do they read through the entire variable name (one character at a time) until the end is found or do they not even look at the variable name at all and just know that the code requires a variable of type int (for example) and assign it a machine-level name instantly and then completely ignore any user-defined variable names? Note that I am a complete novice (still a student) so excuse my ignorance if I get my terms mixed up.