Quoting from Selenium Architecture > A natural implementation would have been to provide a database connection to > the underlying data store, using something like JDBC. Eventually, we settled > on an API that closely models the underlying Javascript implementation > because something that modeled typical database access APIs wasn't > sympathetic to a Javascript implementation I have used both Java+JDBC and JavaScript. And I know that JDBC uses a (connection, query, disconnect) model, but could not understand what is special about JDBC that makes it unlikeable for JavaScript?