I have two classes (named `MyFoo1` and `MyFoo2`) that share some common functionality. So far, it does not seem like I need any polymorphic inheritance but, at this point, I am considering the following options:   1. Have the common functionality in a utility class. Both of these classes call these methods from that utility class.    2. Have an abstract class and implement common methods in that abstract class. Then, the `MyFoo1` and `MyFoo2` classes will derive from that abstract class. Any suggestion on what would be the best design decision?