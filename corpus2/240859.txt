I code in Python and I'm starting to use the Mock library. Although I've read through all of the documentation, something that I'm finding hard to understand is 'What makes a good mock'. For example, say I've got a function that makes a HTTP request:               def fetch_url(url, method=urlfetch.GET, data=''):         """Send a HTTP request"""              result = urlfetch.fetch(url=url, method=method, payload=data,                                 headers={'Access-Control-Allow-Origin': '*'})              return result.content      What would a good mock for this function look like? Furthermore, what would then be tested? From my understanding, the characteristics of a good test are that the test checks:   1. That the code isn't broken   2. That the code acts as expected   3. That the code returns the expected output if it returns something That said, what would be the characteristics of a good mock?