I have a large project with a driver part and about 5 libraries doing various associated tasks. Many of the libraries require access to 'global' configuration data which is read from a database at startup by the driver code. By driver I just mean the part which contains the main function. My idea on how to handle this was to create a config class with a static method to get the config items. Is this the best approach? How else could this be achieved? eg:               class config {      public:        static get_item(key);           private:        static values;     };      Is singleton design appropriate here?