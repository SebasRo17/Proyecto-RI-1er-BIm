I have to transform in a nonlinear way the x-scale of some data for a `MatrixPlot` (or `ReliefImage` or `ListDensityPlot` etc.). Let me give an example to explain what I try to do. I have following fake data:               fakeData=Table[BinCounts[RandomVariate[NormalDistribution[71,1.5],1000],{0,85,0.5}],{j,1,100}];      Which I can plot easily with e.g. `MatrixPlot[fakeData]`, which gives ![Output of MatrixPlot for fakeData](http://i.stack.imgur.com/orbzy.png) Or I can plot just one line of the fake data with `ListPlot[fakeData[[3]]]`, which gives ![Output of ListPlot for fakeData](http://i.stack.imgur.com/o59c5.png) But the xscale of the data is not correct and should be transformed. The initial scale is linear:               xScaleInitially=Range[Length[fakeData[[1,All]]]];      and the transformed scale should be something like, e.g.:               xScaleTransformed=1‚ÅÑ((10+Sqrt[xScaleInitially]));      Then I can try to transform all my data with e.g.:               fakeDataTransformed=Table[Transpose[{xScaleTransformed,fakeData[[j]]}],{j,1,100}];      If I use `ListPlot[fakeDataTransformed[[3]]]`, I get for these data the result I want to have: ![Output of ListPlot for transformed fakeData](http://i.stack.imgur.com/Yekx6.png) But I cannot manage to use `MatrixPlot` or `ReliefImage` on these transformed data to get a picture similar to the first one above. Could somebody of you tell me how I can transform my data correctly, so that I still can have plots as with `MatrixPlot` or `ReliefImage` etc.? I would be very happy about every hint and help!