Iâ€™ve been hearing about the London style vs. Chicago style (sometimes called Detroit style) of Test Driven Development (TDD). Workshop of Utah Extreme Programming User's Group: > _Interaction-style_ TDD is also called _mockist-style_ , or _London-style_ > after London's Extreme Tuesday club where it became popular. It is usually > contrasted with _Detroit-style_ or _classic_ TDD which is more state-based. Jason Gorman's workshop: > The workshop covers both the _Chicago school_ of TDD (state-based behaviour > testing and triangulation), and the _London school_ , which focuses more on > interaction testing, mocking and end-to-end TDD, with particular emphasis on > _Responsibility-Driven Design_ and the _Tell, Don't Ask_ approach to _OO_ > recently re-popularized by Steve Freeman's and Nat Pryce's excellent > _Growing Object Oriented Software Guided By Tests_ book. The post **Classic TDD or "London School"?** by Jason Gorman was helpful, but his examples confused me, because he uses two different examples instead of one example with both approaches. What are the differences? When do you use each style?