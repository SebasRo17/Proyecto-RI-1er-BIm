I am doing the following steps (code at the end of the post):   1. I start with a 2x2 matrix (smatrix), which is a function of a single variable (u2). I want to set the determinant of this matrix (smatrix) to zero, therefore solving for u2.    2. There are two real solutions (sols), which Solve (or NSolve) delivers. These are exact, as the determinant is the order 2 polynomial in the variable (u2). It might be important that the coefficients of this polynomial are on the order of 10^-10.   3. I make a 4x4 matrix (matrix2) which is just the earlier 2x2 matrix two times on the diagonal (KroeneckerProduct). Its determinant is then the determinant of the first matrix squared.   4. I solve the new determinant to be zero, now getting different solutions. They are complex. Moreover, when plugging in the old and the new solutions into the new determinant, I see that the new solutions apparently are more accurate (by 10^4!). I have tried playing around with global `WorkingPrecision`, but it does not seem to change anything. Can somebody explain to me what goes wrong here? Moreover, what should I change in my code to retain the exact results? Thanks a lot!               smatrix = {{1. - 2.96392/u2,  0.0000196744/ u2},                {1. - 2.96392/u2, -2.11737*10^-10 + 0.0000196746/u2}};     sols = (smatrix // Det) // Solve[# == 0, u2] &      > {{u2 -> 0.987752}, {u2 -> 2.96981}}               (smatrix // Det) /. sols[[1]]      > 0.               matrix2 = KroneckerProduct[({          {1, 0},          {0, 1}         }), smatrix];     (matrix2 // Det) // Solve[# == 0, u2] &      > {{u2 -> 0.987752 - 4.12625*10^-6 I} , {u2 -> 0.987752 + 4.12625*10^-6 I} , > {u2 -> 2.96981 - 0.000012998 I} , {u2 -> 2.96981 + 0.000012998 I} }               (matrix2 // Det) /. %[[1]]      > 3.85186*10^-34 - 1.84553*10^-36 I               (matrix2 // Det) /. sols[[1]]      > 3.15024*10^-30