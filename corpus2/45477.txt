I'm trying to use ReplaceList to match subexpressions. I expected the command:               ReplaceList[{p, {p, p}}, {x_, y_} -> x y]      to output two results, equivalent to: `p {p, p}` and `{p, p p}`. That's because I expect the rule `{x_,y_}` to match both `{p,{p,p}}` and `{p,p}`. Only one result is output, equivalent to `p {p,p}`. I suppose that this is because `ReplaceAll`'s behavior of replacing all subexpressions is special, whereas the default `Replace` that `ReplaceList` must use, only matches against the first level of the rule. That's great, but how can I get the functionality I expect? I need this to apply to arbitrary levels of nesting. For example, I would expect it to turn `{p, {p, {p, p}}}` into               { p {p, {p, p}}, {p, p {p, p}}, {p, {p, p p}} }      (I'm trying to reproduce the work on page 781 of the New Kind of Science book, in which subexpressions of Nand tautologies are matched/replaced according to the rules on page 775).